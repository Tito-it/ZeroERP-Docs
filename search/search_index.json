{"config":{"lang":["it","en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"signature-core/","title":"Signature core","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"","title":"Zero ERP","text":"<p>Benvenuto nella documentazione del progetto Zero ERP!</p> <p>Questa guida copre:</p> <ul> <li>Come installare e configurare l\u2019ambiente di sviluppo</li> <li>Panoramica dell\u2019architettura e del modello dati</li> <li>Dettagli sulle API disponibili</li> <li>Esempi di utilizzo e best practice</li> </ul>"},{"location":"LICENSE/","title":"Licenza","text":"<pre><code>                  GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007\n</code></pre> <p>Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.</p> <pre><code>                        Preamble\n</code></pre> <p>The GNU General Public License is a free, copyleft license for software and other kinds of works.</p> <p>The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.  We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors.  You can apply it to your programs, too.</p> <p>When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.</p> <p>To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights.  Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.</p> <p>For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.</p> <p>Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.</p> <p>For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software.  For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.</p> <p>Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so.  This is fundamentally incompatible with the aim of protecting users' freedom to change the software.  The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable.  Therefore, we have designed this version of the GPL to prohibit the practice for those products.  If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.</p> <p>Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary.  To prevent this, the GPL assures that patents cannot be used to render the program non-free.</p> <p>The precise terms and conditions for copying, distribution and modification follow.</p> <pre><code>                   TERMS AND CONDITIONS\n</code></pre> <ol> <li>Definitions.</li> </ol> <p>\"This License\" refers to version 3 of the GNU General Public License.</p> <p>\"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.</p> <p>\"The Program\" refers to any copyrightable work licensed under this License.  Each licensee is addressed as \"you\".  \"Licensees\" and \"recipients\" may be individuals or organizations.</p> <p>To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work.</p> <p>A \"covered work\" means either the unmodified Program or a work based on the Program.</p> <p>To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.</p> <p>To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.</p> <p>An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.</p> <ol> <li>Source Code.</li> </ol> <p>The \"source code\" for a work means the preferred form of the work for making modifications to it.  \"Object code\" means any non-source form of a work.</p> <p>A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.</p> <p>The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.</p> <p>The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.</p> <p>The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.</p> <p>The Corresponding Source for a work in source code form is that same work.</p> <ol> <li>Basic Permissions.</li> </ol> <p>All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.</p> <p>You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.</p> <p>Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.</p> <ol> <li>Protecting Users' Legal Rights From Anti-Circumvention Law.</li> </ol> <p>No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.</p> <p>When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.</p> <ol> <li>Conveying Verbatim Copies.</li> </ol> <p>You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.</p> <p>You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.</p> <ol> <li>Conveying Modified Source Versions.</li> </ol> <p>You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:</p> <pre><code>a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\n</code></pre> <p>A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.</p> <ol> <li>Conveying Non-Source Forms.</li> </ol> <p>You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:</p> <pre><code>a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\n</code></pre> <p>A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.</p> <p>A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.</p> <p>\"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.</p> <p>If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).</p> <p>The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.</p> <p>Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.</p> <ol> <li>Additional Terms.</li> </ol> <p>\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.</p> <p>When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.</p> <p>Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:</p> <pre><code>a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\n</code></pre> <p>All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.</p> <p>If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.</p> <p>Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.</p> <ol> <li>Termination.</li> </ol> <p>You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).</p> <p>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</p> <p>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</p> <p>Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.</p> <ol> <li>Acceptance Not Required for Having Copies.</li> </ol> <p>You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.</p> <ol> <li>Automatic Licensing of Downstream Recipients.</li> </ol> <p>Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.</p> <p>An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.</p> <p>You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.</p> <ol> <li>Patents.</li> </ol> <p>A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor's \"contributor version\".</p> <p>A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.</p> <p>Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.</p> <p>In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.</p> <p>If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.</p> <p>If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.</p> <p>A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.</p> <p>Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.</p> <ol> <li>No Surrender of Others' Freedom.</li> </ol> <p>If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.</p> <ol> <li>Use with the GNU Affero General Public License.</li> </ol> <p>Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.</p> <ol> <li>Revised Versions of this License.</li> </ol> <p>The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p> <p>Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.</p> <p>If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.</p> <p>Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.</p> <ol> <li>Disclaimer of Warranty.</li> </ol> <p>THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p> <ol> <li>Limitation of Liability.</li> </ol> <p>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p> <ol> <li>Interpretation of Sections 15 and 16.</li> </ol> <p>If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.</p> <pre><code>                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs\n</code></pre> <p>If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.</p> <p>To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.</p> <pre><code>&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.\n</code></pre> <p>Also add information on how to contact you by electronic and paper mail.</p> <p>If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:</p> <pre><code>&lt;program&gt;  Copyright (C) &lt;year&gt;  &lt;name of author&gt;\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.\n</code></pre> <p>The hypothetical commands <code>show w' and</code>show c' should show the appropriate parts of the General Public License.  Of course, your program's commands might be different; for a GUI interface, you would use an \"about box\".</p> <p>You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see https://www.gnu.org/licenses/.</p> <p>The GNU General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.  But first, please read https://www.gnu.org/licenses/why-not-lgpl.html.</p>"},{"location":"api/","title":"Api","text":""},{"location":"api/#da-fare","title":"Da fare","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"architettura/","title":"Architettura","text":"<p>In questa sezione descriviamo l'architettura del progetto Zero ERP, evidenziando i principali componenti software, i flussi di comunicazione e le integrazioni con il database e gli strumenti di migrazione.</p>"},{"location":"architettura/#componenti-principali","title":"Componenti principali","text":"<ul> <li> <p>Backend: Django (Python) \u2013 API REST e logica di business</p> </li> <li> <p>Frontend: Vue 3 \u2013 interfaccia utente single-page</p> </li> <li> <p>Database: PostgreSQL (schema-first, zero-erp schema)</p> </li> <li> <p>Migrazioni: Liquibase per versionare e applicare le modifiche allo schema</p> </li> <li> <p>Cache / Broker: Redis / RabbitMQ (opzionali, per code e sessioni)</p> </li> </ul>"},{"location":"architettura/#versioni-supportate","title":"Versioni supportate","text":"<p>Tutti i componenti sono testati con le versioni indicate in: Versioni supportate.</p>"},{"location":"architettura/#flusso-di-richieste","title":"Flusso di richieste","text":"<ul> <li> <p>L'utente interagisce con il client Vue3</p> </li> <li> <p>Le chiamate HTTP arrivano alle API Django</p> </li> <li> <p>Le transazioni DB vengono gestite da Liquibase per le modifiche di schema</p> </li> <li> <p>Le query e gli aggiornamenti vengono eseguiti in PostgreSQL</p> </li> </ul> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dblink/","title":"\ud83d\udcd8 Estensione PostgreSQL: <code>dblink</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento funzioni :   - script.fn_ensure_logconn </p> <p>L\u2019estensione <code>dblink</code> di PostgreSQL permette l'esecuzione di query tra database PostgreSQL diversi o all\u2019interno dello stesso server su database separati. \u00c8 particolarmente utile per logging remoto, integrazioni di dati distribuiti e operazioni di sincronizzazione asincrone.</p>"},{"location":"dblink/#scopo-principale","title":"\ud83c\udfaf Scopo principale","text":"<ul> <li>Eseguire query remote su altri database PostgreSQL.</li> <li>Effettuare operazioni di logging indipendenti dalla transazione corrente.</li> <li>Realizzare integrazioni e sincronizzazioni cross-database.</li> </ul>"},{"location":"dblink/#installazione","title":"\u2699\ufe0f Installazione","text":"<p>Per installare l'estensione, utilizzare:</p> <pre><code>CREATE EXTENSION IF NOT EXISTS dblink;\n</code></pre>"},{"location":"dblink/#funzioni-principali","title":"\ud83d\udee0\ufe0f Funzioni principali","text":"<ul> <li> <p><code>dblink_connect(text connname, text connstr)</code>   Stabilisce una connessione con nome (<code>connname</code>) usando una stringa di connessione.</p> </li> <li> <p><code>dblink_exec(text connname, text sql)</code>   Esegue un comando SQL remoto sulla connessione identificata.</p> </li> <li> <p><code>dblink_disconnect(text connname)</code>   Chiude la connessione identificata.</p> </li> </ul>"},{"location":"dblink/#esempio-duso-in-zero-erp","title":"\ud83d\udccb Esempio d\u2019uso in Zero ERP","text":"<p>Utilizzo comune per inserire un log di errore remoto isolato dalla transazione locale:</p> <pre><code>PERFORM script.fn_ensure_logconn(); -- Assicura connessione\n\nsql_text :=\n  'INSERT INTO dbops.error_log(occurred_at, area, function_name, messaggio_errore_id, context, tx_id) VALUES (' ||\n  'now(), ' || quote_literal(p_area) || ', ' || quote_literal(p_function_name) || ', ' ||\n  coalesce(v_id::text,'NULL') || ', ' || quote_literal(v_context::text) || '::jsonb, ' ||\n  quote_literal(md5(txid_current()::text)) || '::uuid' || ');';\n\nPERFORM dblink_exec('logconn', sql_text);\n</code></pre> <p>Questo approccio permette al log dell'errore di essere salvato immediatamente e permanentemente anche se la transazione principale subisce un rollback.</p>"},{"location":"dblink/#buone-pratiche","title":"\ud83d\udd12 Buone pratiche","text":"<ul> <li>Gestire sempre le connessioni con nomi chiari e riutilizzabili.</li> <li>Assicurarsi che le stringhe di connessione siano configurate in modo sicuro tramite parametri personalizzati (GUC).</li> <li>Evitare query troppo complesse o massive via dblink per non compromettere le performance.</li> </ul>"},{"location":"dblink/#utilizzare-dblink-consente-una-gestione-robusta-del-logging-distribuito-e-dellintegrazione-di-dati-garantendo-operazioni-isolate-e-indipendenti-dalla-transazione-principale","title":"&gt; \ud83e\udde0 \u201cUtilizzare <code>dblink</code> consente una gestione robusta del logging distribuito e dell'integrazione di dati, garantendo operazioni isolate e indipendenti dalla transazione principale.\u201d","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"installazione/","title":"Installazione","text":""},{"location":"installazione/#prerequisiti","title":"Prerequisiti","text":"<ul> <li>Python   </li> <li>Django   </li> <li>PostgreSQL</li> <li>Liquibase</li> <li>Vue3  </li> <li>Node.js  </li> </ul> <p>\u2192 Per le versioni consigliate, vedi Versioni supportate.</p>"},{"location":"installazione/#setup-ambiente","title":"Setup ambiente","text":"<pre><code>git clone git@github.com:Tito-it/ZeroErp.git\ncd ZeroErp\n</code></pre>"},{"location":"installazione/#crea-e-attiva-virtualenv","title":"Crea e attiva virtualenv","text":"<p>python -m venv .venv source .venv/bin/activate</p>"},{"location":"installazione/#installa-le-dipendenze-python-incluso-django","title":"Installa le dipendenze Python (incluso Django)","text":"<p>pip install -r requirements.txt</p>"},{"location":"installazione/#vue3-vite","title":"Vue3 + Vite","text":"<p>cd frontend npm install npm run dev</p>"},{"location":"installazione/#avvia-la-doc-locale","title":"Avvia la doc locale","text":"<p>cd .. mkdocs serve</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"introduzione/","title":"Cos\u2019\u00e8 Zero ERP","text":""},{"location":"introduzione/#zero-erp-open-source-erp-framework","title":"\ud83d\udce6 Zero ERP - Open Source ERP Framework","text":"<p>Licenza: GPL v3</p>"},{"location":"introduzione/#concetti-generali-e-motivazioni","title":"\ud83d\udca1 Concetti Generali e Motivazioni","text":"<ul> <li>Nome del Progetto: \"Zero\" rappresenta una ripartenza personale e professionale.</li> <li>Finalit\u00e0: ERP multiservizi, modulare e flessibile, orientato alla precisione, all\u2019evoluzione e alla centralizzazione dei dati.</li> </ul>"},{"location":"introduzione/#cose-zero-erp","title":"\u2705 Cos'\u00e8 Zero ERP","text":"<p>Zero ERP \u00e8 un sistema ERP modulare, scalabile e open source, pensato per:</p> <ul> <li>Multi-servizi</li> <li>Fatturazione, contratti e anagrafiche, Magazzino, Ordini</li> <li>Piccole, medie e grandi imprese</li> <li>Utility (Gas, Energia, Acqua, Fonia)</li> </ul>"},{"location":"introduzione/#obiettivi-principali","title":"\ud83c\udfaf Obiettivi principali","text":"<ul> <li>Creare una base ERP solida e configurabile</li> <li>Fornire un framework moderno per progetti verticali</li> <li>Supportare sia esigenze standard che settoriali (ARERA ecc.)</li> <li>Gestione multi-servizio e storicizzazione completa dei dati</li> </ul>"},{"location":"introduzione/#tecnologie-utilizzate","title":"\ud83d\udee0\ufe0f Tecnologie utilizzate","text":"<ul> <li>\ud83d\udc0d Python (Django)</li> <li>\ud83d\udc18 PostgreSQL (con supporto JSONB, GIS)</li> <li>\u26a1 Vue.js (SPA, build con Vite)</li> <li>\ud83d\udc33 Docker + CI/CD</li> <li>\ud83d\udd10 Autenticazione JWT e crittografia avanzata</li> </ul>"},{"location":"introduzione/#funzionalita-previste","title":"\u2728 Funzionalit\u00e0 previste","text":"<ul> <li>\ud83d\udcc7 Anagrafiche generali centralizzate</li> <li>\ud83d\udccd Gestione multi-indirizzo con classificazione</li> <li>\ud83d\udd0c Integrazione multi-servizio (Base, Gas, Energia, Acqua, ecc.) </li> <li>\ud83d\udcc4 Moduli: Fatturazione, Contratti, Forniture, Magazzino, Ordini</li> <li>\ud83d\udd10 Sistema permessi e menu dinamico per ruolo</li> <li>\u2699\ufe0f Configurazione multilivello: Globale, Cliente, Utente</li> </ul>"},{"location":"introduzione/#come-contribuire","title":"\ud83e\udd1d Come contribuire","text":""},{"location":"introduzione/#requisiti","title":"\ud83d\udd27 Requisiti","text":"<ul> <li>Conoscenza base di Python/Django</li> <li>Familiarit\u00e0 con PostgreSQL</li> <li>Esperienza (o curiosit\u00e0) su Vue.js</li> </ul>"},{"location":"introduzione/#modalita","title":"\ud83d\udccc Modalit\u00e0","text":"<ol> <li>Lavora su un tuo branch personale</li> <li>Crea una pull request</li> <li>Discussione e revisione da parte del team</li> </ol> <p>\u2709\ufe0f Per dubbi o suggerimenti, apri una Issue.</p>"},{"location":"introduzione/#documentazione","title":"\ud83d\udcda Documentazione","text":"<ul> <li>Documentazione tecnica: in corso di pubblicazione su GitBook</li> <li>Roadmap e changelog disponibili nel repository</li> </ul>"},{"location":"introduzione/#codice-di-condotta","title":"\u2705 Codice di Condotta","text":"<p>Tutti i contributori sono tenuti a rispettare principi di collaborazione, rispetto e condivisione open-source.</p>"},{"location":"introduzione/#contatti","title":"\u2709\ufe0f Contatti","text":"<ul> <li>Referente tecnico: [Michele Carlo Titini]</li> <li>Email: [mc.titini@gmail.com]</li> <li>Community in fase di attivazione</li> </ul> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"linee-guida-sql/","title":"Linee Guida SQL","text":"<p>Best Practice e Convenzioni in Zero ERP</p> <p>\ud83d\udc40 Vedi anche:  Per come applicare queste best practice nelle migrazioni, consulta il documento  </p> <ul> <li>Liquibase Setup &amp; Workflow </li> <li>Storicizzazione Tabelle </li> <li>Transaction ID </li> <li>Configurazione e Gestione Parametri </li> <li>Messaggi di errore e Gestione Log </li> </ul> <p>Approfondimento Tabelle:   </p> <ul> <li>dbops.fk_index_policy </li> </ul> <p>Approfondimento funzioni:   </p> <ul> <li>dbops.vw_fk_senza_indice </li> <li>dbops.fn_populate_fk_index_policy </li> <li>dbops.vw_fk_con_indice_missing_policy </li> <li>dbops.fn_seed_fk_index_policy </li> <li>dbops.vw_duplicate_indexes </li> </ul>"},{"location":"linee-guida-sql/#1-schemi-principali","title":"1. Schemi Principali","text":""},{"location":"linee-guida-sql/#organizzati-per-funzionalita-e-responsabilita","title":"Organizzati per funzionalit\u00e0 e responsabilit\u00e0:","text":"Schema Descrizione anagrafiche          Contiene tutte le tabelle legate all'anagrafica soggetti (persone fisiche e giuridiche).         <ul> <li>Esempi: <code>soggetti</code>, <code>indirizzi</code>, <code>contatti</code></li> <li>Usa identificatori UUID e naming coerente</li> </ul> config          Contiene tabelle di configurazione parametrica e lookup.         <ul> <li>Esempi: <code>stati</code>, <code>nazioni</code>, <code>contatti_ruoli</code></li> <li>Normalizzazione forte, spesso referenziate da altri schemi</li> </ul> script          Logica applicativa (viste e funzioni) legate ai processi ERP.         Favorisce riuso, mantenibilit\u00e0 e isolamento della logica.         <ul> <li>Esempi: <code>vw_clienti_attivi</code>, <code>fn_calcolo_fattura()</code></li> <li>Include anche: <code>fn_get_stradario_by_indirizzo()</code>, etc.</li> </ul> dbops          Strumenti DB per DBA (vista/funzioni tecniche, metadata, monitoring).         <ul> <li>Esempi: <code>vw_function_list</code>, <code>fn_foreign_keys_info(text)</code></li> <li>Nessuna logica applicativa, solo strumenti per DBA e manutentori</li> </ul> storico          Tabelle di audit/storico con versioning temporale dei dati.          Tutte le tabelle che richiedono \"storicizzazione\" saranno replicate qui         <ul> <li>Esempi: <code>soggetti_storico</code>, <code>contratti_storico</code></li> <li>Usato per audit, confronto tra versioni, report du dati storici</li> </ul> public          Mostra solo tabelle pubbliche (non pubbliche), ad esempio version_info            <ul> <li>Esempi: <code>version_info</code>, <code>ecc...</code></li> <li>Solo tabelle o funzioni non pubbliche</li> </ul>"},{"location":"linee-guida-sql/#navigazione-per-schema","title":"Navigazione per schema","text":"<ul> <li>anagrafiche </li> <li>config </li> <li>script </li> <li>dbops </li> <li>storico </li> </ul>"},{"location":"linee-guida-sql/#in-ciascuna-pagina-di-schema-troverai-un-unico-indice-con-le-tabelle-le-funzioni-e-le-view-corrispondenti","title":"&gt; In ciascuna pagina di schema troverai un unico indice con le tabelle, le funzioni e le view corrispondenti.","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"linee-guida-sql/#2-convenzioni-di-naming","title":"2. Convenzioni di Naming","text":"<p>Uniformit\u00e0 e chiarezza nel codice DDL:</p> Oggetto Convenzione Esempio Schema minuscolo, plurale <code>anagrafiche</code>, <code>config</code>, <code>dbops</code> Tabella nome plurale, snake_case <code>soggetti</code>, <code>gestori_utilities_ruoli</code> Colonna PK <code>id</code> <code>id UUID</code>, <code>id SERIAL</code> Sequenza <code>&lt;table&gt;_id_seq</code> <code>storico.comuni_id_seq</code> FK <code>&lt;referenced_table&gt;_id</code> <code>soggetto_id</code>, <code>utility_id</code> Indice <code>ix_&lt;table&gt;_&lt;column&gt;</code> <code>ix_contatti_soggetto</code> Vista prefisso <code>vw_</code> <code>vw_clienti_attivi</code> Funzione prefisso <code>fn_</code> <code>fn_calcolo_fattura()</code> Trigger Func. prefisso <code>trgfn_</code> <code>trgfn_contatti_set_default()</code> Trigger prefisso <code>trg_</code>, <code>&lt;table&gt;_&lt;event&gt;</code> <code>trg_contatti_insert_update</code> Constraint PK <code>pk_&lt;table&gt;</code> <code>pk_soggetti_ruoli</code> Constraint FK <code>fk_&lt;base&gt;_&lt;ref&gt;</code> <code>fk_contatti_soggetti</code> Constraint UQ <code>uq_&lt;table&gt;_&lt;columns&gt;</code> <code>uq_contatti_default</code> <p>\u2139\ufe0f Le convenzioni sono tratte dalla struttura condivisa in Zero ERP</p>"},{"location":"linee-guida-sql/#3-gestione-delle-chiavi-primarie","title":"3. Gestione delle Chiavi Primarie","text":"<ol> <li>UUID per entit\u00e0 master (anagrafiche.soggetti):</li> </ol> <p><pre><code>id UUID PRIMARY KEY\n  DEFAULT gen_random_uuid()\n</code></pre> 2. Serial/Identity per tabelle tecniche e di relazione:</p> <p><pre><code>id SERIAL PRIMARY KEY\n-- o\nid INTEGER GENERATED BY DEFAULT AS IDENTITY\n</code></pre> 3. Sequenze esplicite quando serve:</p> <ul> <li>Creazione: <code>CREATE SEQUENCE schema.table_id_seq START 1;</code></li> <li>Colonna: <code>defaultValueComputed: \"nextval('schema.table_id_seq'::regclass)\"</code></li> <li>Oppure <code>autoIncrement: true</code> per delegare a Liquibase/DB</li> </ul>"},{"location":"linee-guida-sql/#4-eccezioni-e-alternative","title":"4. Eccezioni e Alternative","text":"<ul> <li>UUID vs SERIAL: usare UUID quando serve unicit\u00e0 globale o sharding; SERIAL su tabelle di log e storicizzazione.</li> <li>Foreign Key con composti: preferire surrogate key (<code>id</code>) e colonne FK (<code>&lt;table&gt;_id</code>) piuttosto che chiavi composte.</li> <li>Campi tecnici: evitare prefissi in <code>dbops</code>; usare solo <code>vw_...</code> e <code>fn_...</code> per uniformit\u00e0</li> </ul>"},{"location":"linee-guida-sql/#5-trigger-e-funzioni","title":"5. Trigger e Funzioni","text":"<ul> <li> <p>Trigger Functions (PL/pgSQL, <code>schema.trgfn_&lt;table&gt;_&lt;descr&gt;</code>):</p> </li> <li> <p>Esempio: <code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_contatti_set_default()</code></p> </li> <li>Trigger (DDL):</li> </ul> <p><pre><code>CREATE TRIGGER trg_contatti_set_default\n  BEFORE INSERT OR UPDATE\n  ON anagrafiche.contatti\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_contatti_set_default();\n</code></pre> * Nomi:</p> <ul> <li>Funzioni: <code>trgfn_&lt;table&gt;_&lt;action&gt;</code></li> <li>Trigger: <code>trg_&lt;table&gt;_&lt;action&gt;</code></li> <li> <p>Best practice:</p> </li> <li> <p>Mettere funzioni e trigger nello stesso schema della tabella (se dedicate), o in <code>script</code>/<code>dbops</code> per utilizzabilit\u00e0 multipla.</p> </li> <li> <p>Documentare sempre parametri e comportamento</p> </li> <li> <p>Funzioni di Cleanup (PL/pgSQL, <code>schema.trgfn_&lt;table&gt;_ins_upd_clean_fields</code>):</p> </li> <li>Usate per pulire, normalizzare o impostare valori di default sui campi mancanti prima di <code>INSERT</code> o <code>UPDATE</code>.</li> <li>Convenzione di naming:<ul> <li>Funzione: <code>trgfn_&lt;table&gt;_ins_upd_clean_fields</code></li> <li>Trigger:   <code>trg_&lt;table&gt;_ins_upd_clean_fields</code></li> </ul> </li> <li>Esempio:     <pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_clean_fields()\n  RETURNS trigger LANGUAGE plpgsql AS $$\nBEGIN\n  IF NEW.stato_id IS NULL THEN\n    NEW.stato_id := script.fn_get_default_by_param(\n      'config', 'stati', 'codice_iso3', 'state_code_iso3', TG_NAME\n    )::integer;\n  END IF;\n  RETURN NEW;\nEND;\n$$;\n\nCREATE TRIGGER trg_soggetti_ins_upd_clean_fields\n  BEFORE INSERT OR UPDATE ON anagrafiche.soggetti\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_clean_fields();\n</code></pre></li> </ul>"},{"location":"linee-guida-sql/#6-viste-views","title":"6. Viste (Views)","text":"<ul> <li>Applicative: <code>vw_&lt;descrittivo&gt;</code> in schema <code>script</code>, es. <code>vw_clienti_attivi</code></li> <li>Tecniche: in schema <code>dbops</code>, senza prefisso extra, es. <code>vw_function_list</code></li> </ul>"},{"location":"linee-guida-sql/#7-colonne-di-audit-e-log","title":"7. Colonne di Audit e Log","text":"<p>Standardizzare i campi di auditing:</p> <pre><code>date_insert    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP WITH TIME ZONE\nuser_insert    TEXT      NOT NULL DEFAULT CURRENT_USER\ndata_update    TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP WITH TIME ZONE\nuser_update    TEXT      NOT NULL DEFAULT CURRENT_USER\n</code></pre> <p>I trigger o constraint di sistema possono aggiornare <code>date_update/user_update</code> su UPDATE manuale o con <code>trigger</code> dedicato.</p>"},{"location":"linee-guida-sql/#8-indici","title":"8. Indici","text":"<ul> <li>Naming: <code>ix_&lt;table&gt;_&lt;column&gt;</code></li> <li>Tipologia: B-Tree per default; GIN/GIST per JSONB/Geometrie.</li> <li>Parziali: <code>CREATE UNIQUE INDEX ix_contatti_default ON contatti(soggetto_id) WHERE is_default;</code> per default logic</li> </ul>"},{"location":"linee-guida-sql/#9-automazione-indici-fk","title":"9. Automazione Indici FK","text":"<p>All\u2019interno della cartella <code>90_end/</code> delle migrazioni Liquibase, inserire sempre per ultimi uno script YAML con <code>runAlways</code> o <code>runAlways: false</code> per richiamare la procedura che crea/rimuove indici sulle foreign key:</p> <pre><code>- changeSet:\n    id: 90-end-apply-fk-policy\n    author: mctit\n    runAlways: true\n    sql:\n      splitStatements: false\n      sql: |\n        CALL dbops.apply_fk_index_policy();\n</code></pre> <ul> <li> <p>La tabella <code>dbops.fk_index_policy</code> deve essere mantenuta aggiornata:</p> </li> <li> <p>individuare nuove FK senza indice con <code>dbops.vw_fk_senza_indice</code></p> </li> <li>popolare policy con <code>SELECT dbops.fn_populate_fk_index_policy();</code></li> <li>La policy consente di generare o eliminare indici non necessari.</li> </ul>"},{"location":"linee-guida-sql/#10-gestione-indici-duplicati","title":"10. Gestione Indici Duplicati","text":"<p>Utilizzare la view <code>dbops.vw_duplicate_indexes</code> per visualizzare gli indici che condividono lo stesso insieme di colonne e razionalizzare la struttura:</p> <pre><code>SELECT *\n  FROM dbops.vw_duplicate_indexes;\n</code></pre>"},{"location":"linee-guida-sql/#11-transaction-id-centralizzato","title":"11. Transaction ID Centralizzato","text":"<p>Per garantire coerenza transazionale fra tutte le tabelle che registrano modifiche, ogni entit\u00e0 deve avere la colonna <code>tx_id UUID</code> che accetta anche valori nulli:</p> <ul> <li>Trigger (opzione DB): applicare <code>trg_assign_tx_id</code> (su ogni tabella) che utilizza la function <code>dbops.trgfn_tx_id_managed()</code> per generare o recuperare il <code>tx_id</code> di sessione.</li> <li>Function (opzione backend): invocare <code>dbops.fn_get_or_create_session_tx_id()</code> prima delle operazioni e passare il <code>tx_id</code> in tutti gli <code>INSERT/UPDATE</code>.</li> </ul> <p>Per maggiori dettagli e implementazione, consulta la guida (\u00e8 fondamentale la consultazione): Guida Tecnica \u2013 Implementazione di un Unico Transaction ID</p> <p>Documento riassuntivo delle best practice SQL per lo sviluppo e la manutenzione di Zero ERP.</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"liquibase-setup-workflow/","title":"Liquibase Setup & Workflow","text":"<p>Documento di Avvio e Struttura di Liquibase</p> <p>\ud83d\udc40 Vedi anche  Approfondimento SQL Tutte le attivit\u00e0 SQL generate tramite Liquibase devono rispettare le convenzioni definite nel documento: Linee Guida SQL.</p> <p>\u26a0\ufe0f Importante (Visione Futura)  Data la scelta di utilizzare <code>includeAll</code> nel master changelog e la struttura a cartelle, tutti gli sviluppi di oggetti che precedono altri (es. tabelle) devono essere inseriti nella cartella <code>00_bootstrap</code>. In questo modo le trigger e le trigger function verranno applicate dopo la creazione delle tabelle, garantendo coerenza e permettendo future evoluzioni senza conflitti.</p>"},{"location":"liquibase-setup-workflow/#1-obiettivo","title":"1. Obiettivo","text":"<p>Descrivere la configurazione iniziale e il workflow di Liquibase per il progetto ZeroErp:</p> <ul> <li>Avviare Liquibase su PostgreSQL</li> <li>Definire struttura dei changelog (baseline vs migrations)</li> <li>Eseguire le operazioni di base (<code>validate</code>, <code>changelogSync</code>, <code>update</code>)</li> <li>Gestire evoluzioni future con nuovi changeSet</li> </ul>"},{"location":"liquibase-setup-workflow/#2-prerequisiti","title":"2. Prerequisiti","text":"<ul> <li>Java\u00a011+ installato</li> <li>Liquibase\u00a04.31.1 (o superiore) scaricato e configurato</li> <li>Driver\u00a0JDBC PostgreSQL (<code>postgresql-&lt;version&gt;.jar</code>) disponibile</li> <li>Accesso a un DB di sviluppo/test e a quello esistente (Zero)</li> </ul>"},{"location":"liquibase-setup-workflow/#3-struttura-dei-changelog-e-delle-cartelle","title":"3. Struttura dei Changelog e delle Cartelle","text":"<pre><code>ZeroErp/db/changelog/\n\u251c\u2500 changelog-master.yaml         # master changelog\n\u251c\u2500 baseline/                     # snapshot iniziale (punto 0)\n\u2502   \u251c\u2500 000-tables-config.yaml    # schema config\n\u2502   \u251c\u2500 001-tables-anagrafiche.yaml\n\u2502   \u2514\u2500 sql/&lt;schema&gt;/\u2026            # script SQL originali\n\u2514\u2500 migrations/                   # step 00\u201399 (changelog generici)\n    \u251c\u2500 00_bootstrap/            \u2190 primi steps (script di base)\n    \u2502   \u251c\u2500 20250514-01-fn-trigger-audit-generic.yaml\n    \u2502   \u2514\u2500 sql/&lt;schema&gt;/\u2026        # script SQL di quel changeSet\n    \u251c\u2500 10_scripts/              # script di utilit\u00e0 e trigger\n    \u2502   \u251c\u2500 20250507-01-trgfn-blocco-colonna-mctit.yaml\n    \u2502   \u2514\u2500 sql/&lt;schema&gt;/\u2026        # script SQL di quel changeSet\n    \u251c\u2500 20_config/               # configurazioni iniziali personalizzate\n    \u2502   \u2514\u2500 sql/&lt;schema&gt;/\u2026        # script SQL di configurazione\n    \u251c\u2500 30_anagrafiche/          # evoluzioni anagrafiche\n    \u2502   \u2514\u2500 sql/&lt;schema&gt;/\u2026        \n    \u251c\u2500 40_storico/              # evoluzioni storico\n    \u2502   \u2514\u2500 sql/&lt;schema&gt;/\u2026        \n    \u251c\u2500 50_dbops/                # evoluzioni DBOps\n    \u2502   \u2514\u2500 sql/&lt;schema&gt;/\u2026        \n    \u2514\u2500 \u2026\n    \u251c\u2500 80_data/                 # import dati schema config\n    \u2502   \u251c\u2500 sql/\n    \u2502   \u2502  \u2514\u2500 config/\n    \u2502   \u2502     \u251c\u2500 stati.csv      # dump CI per loadUpdateData\n    \u2502   \u2502     \u2514\u2500 utilities.csv\n    \u2502   \u2514\u2500 changelogs/\n    \u2502       \u251c\u2500 YYYYMMDD-01-upsert-stati.yaml\n    \u2502       \u2514\u2500 YYYYMMDD-02-upsert-utilities.yaml\n    \u2514\u2500 90_end/                  # script finali da eseguire sempre per ultimi\n        \u2514\u2500 apply-fk-index-policy.yaml\n</code></pre> <ul> <li>Baseline: snapshot iniziale; <code>changelogSync</code> li marca eseguiti e non saranno riapplicati automaticamente.</li> <li>Migrations: file numerati definiscono le modifiche incrementalmente. Ogni folder numerato (00\u201350\u2026) contiene YAML e script SQL.</li> <li>80_data: dedicata all\u2019importazione dei dati di configurazione (test e funzionali). Contiene CSV prodotti dal CI e changelog YAML con <code>loadUpdateData</code>.</li> <li> <p>Cartella 90_end: dedicata ai changeSet che devono sempre essere eseguiti per ultimi, indipendentemente dalle date. Qui si collocano:</p> </li> <li> <p>changeSet con <code>runAlways: true</code> o <code>runAlways: false</code> per operazioni di chiusura</p> </li> <li>richiamo di procedure/funzioni di popolamento o aggiornamento di tabelle (es. <code>CALL dbops.apply_fk_index_policy();</code>)</li> <li>eventuali cleanup o sync finali delle policy</li> </ul> <p>\ud83d\udd14 Consiglio:  Nomina il file con prefisso la data iniziale seguito da descrizione, es. <code>20250630-01-end-apply-fk-policy.yaml</code>. In questo modo l\u2019ordine alfabetico di Liquibase garantisce la priorit\u00e0 d\u2019esecuzione. Nel caso sia necessario far eseguire un changelog prima di uno esistente immettere la data precedente.</p>"},{"location":"liquibase-setup-workflow/#4-master-changelog-changelog-masteryaml","title":"4. Master Changelog (<code>changelog-master.yaml</code>)","text":"<pre><code>databaseChangeLog:\n  - includeAll:\n      path: baseline\n      relativeToChangelogFile: true\n      errorIfMissingOrEmpty: true\n  - includeAll:\n      path: migrations\n      relativeToChangelogFile: true\n      errorIfMissingOrEmpty: false\n</code></pre> <ul> <li>Caricamento in ordine alfabetico.</li> <li>Usare <code>include</code> per eccezioni di ordine specifico.</li> </ul>"},{"location":"liquibase-setup-workflow/#5-file-liquibaseproperties","title":"5. File <code>liquibase.properties</code>","text":"<pre><code># Connessione PostgreSQL\ndriver=org.postgresql.Driver\nclasspath=/path/to/postgresql-42.x.jar\nurl=jdbc:postgresql://localhost:5432/Zero\nusername=&lt;utente&gt;\npassword=&lt;password&gt;\n\n# Changelog principale\nchangeLogFile=db/changelog/changelog-master.yaml\n\n# Schema per DATABASECHANGELOG*\ndefaultSchemaName=config\nliquibaseSchemaName=config\n</code></pre> <ul> <li>Suggerimento: script shell/batch per caricare credenziali a runtime.</li> </ul>"},{"location":"liquibase-setup-workflow/#6-importazione-dati-schema-config","title":"6. Importazione Dati Schema <code>config</code>","text":"<p>Lo schema <code>config</code> ospita tabelle di configurazione, sia di setup che di utilizzo in produzione, oltre a dati di test utili in ambienti di sviluppo.</p> <p>Struttura <code>80_data</code>:</p> <ul> <li><code>sql/config/</code>: contiene i CSV generati dalla pipeline CI (<code>COPY \u2026 TO stati.csv, utilities.csv\u2026</code>).</li> <li><code>changelogs/</code>: file YAML uno-per-tabella con <code>loadUpdateData</code>, eseguito via <code>includeAll</code>.</li> </ul> <p>Esempio <code>loadUpdateData</code> per <code>stati</code>:</p> <pre><code>- changeSet:\n    id: 20250716-01-upsert-stati\n    author: mctit\n    runOnChange: true\n    validCheckSums:\n      - ANY\n    failOnError: true\n    preConditions:\n      - onFail: HALT\n      - tableExists:\n          tableName: stati\n          schemaName: config\n    loadUpdateData:\n      relativeToChangelogFile: true\n      file: ../sql/config/stati.csv\n      tableName: stati\n      schemaName: config\n      separator: \",\"\n      encoding: UTF-8\n      schemaName: config\n      primaryKey:\n        - id\n      columns:\n        - column: { name: id,            type: STRING }\n        - column: { name: sigla_stato,   type: STRING }\n        - column: { name: descrizione,   type: STRING }\n        - column: { name: codice_iso2,   type: STRING }\n        - column: { name: codice_iso3,   type: STRING }\n        - column: { name: codice_telefonico, type: STRING }\n        - column: { name: continente,    type: STRING }\n        - column: { name: data_insert,   type: STRING }\n        - column: { name: user_insert,   type: STRING }\n        - column:\n                  name: data_update\n                  type: STRING\n                  defaultValue: \"NOW()\"\n        - column: { name: user_update,   type: STRING }\n        - column: { name: extra_country, type: JSON, defaultValue: \"{}\" }\n</code></pre> <p>Esempio <code>loadUpdateData</code> per <code>utilities</code> (escludendo temporaneamente <code>cd_int_utility</code> dal load, ma lasciandone l'INSERT manuale se necessario tramite trigger):</p> <pre><code>- changeSet:\n    id: 20250716-02-upsert-utilities\n    author: mctit\n    runOnChange: true\n    validCheckSums:\n      - ANY\n    failOnError: true\n    preConditions:\n      - onFail: HALT\n      - tableExists:\n          tableName: utilities\n          schemaName: config\n    loadUpdateData:\n      relativeToChangelogFile: true\n      file: ../sql/config/utilities.csv\n      tableName: utilities\n      schemaName: config\n      separator: \",\"\n      encoding: UTF-8\n      schemaName: config\n      primaryKey:\n        - id\n      columns:\n        - column: { name: id,          type: STRING }\n        - column: { name: cod_utility, type: STRING }\n        - column: { name: descrizione, type: STRING }\n        - column: { name: data_insert, type: STRING }\n        - column: { name: user_insert, type: STRING }\n        - column:\n                  name: data_update\n                  type: STRING\n                  defaultValue: \"NOW()\"\n        - column: { name: user_update, type: STRING }\n</code></pre> <p>Nota: se \u00e8 necessario caricare anche <code>cd_int_utility</code>, si pu\u00f2 disabilitare temporaneamente il trigger con SQL prefase.</p>"},{"location":"liquibase-setup-workflow/#7-workflow-iniziale","title":"7. Workflow Iniziale","text":"<ol> <li>Validate: <code>liquibase validate</code></li> <li>Sync Baseline: <code>liquibase changelogSync</code></li> <li>Update su DB Vuoto: <code>liquibase update</code></li> </ol>"},{"location":"liquibase-setup-workflow/#8-evoluzioni-future-migrations","title":"8. Evoluzioni Future (Migrations)","text":"<ol> <li>Creare YAML in <code>migrations/&lt;area&gt;/YYYYMMDD-XX-descrizione.yaml</code></li> <li>Utilizzare changeSet Liquibase o <code>sqlFile</code></li> <li>Rollback: opzionale o esplicito</li> <li>Script SQL: in <code>migrations/&lt;area&gt;/sql/</code></li> <li>Eseguire: <code>validate</code> \u2192 <code>update</code></li> </ol>"},{"location":"liquibase-setup-workflow/#9-comandi-principali","title":"9. Comandi Principali","text":"<ul> <li><code>liquibase validate</code></li> <li><code>liquibase changelogSync</code></li> <li><code>liquibase update</code></li> <li><code>liquibase updateSql</code></li> <li><code>liquibase rollback</code></li> </ul>"},{"location":"liquibase-setup-workflow/#10-rollback-e-reverse","title":"10. Rollback e Reverse","text":"<ul> <li>Rollback automatico per change types nativi</li> <li><code>rollback</code> esplicito con blocco <code>rollback</code></li> <li><code>rollbackToDate</code>, <code>rollbackCount</code>, <code>rollback tag</code></li> </ul>"},{"location":"liquibase-setup-workflow/#11-convenzioni-e-best-practice","title":"11. Convenzioni e Best Practice","text":"<ul> <li>Utilizzo cartella <code>00_boostrab</code> (esempio generazione tabelle)</li> <li>Numerazione progressiva</li> <li>ID univoci con autore</li> <li>Contexts/Labels</li> <li>CI/CD: <code>validate</code> e <code>updateSql</code> in pipeline</li> <li>Versioning: excl. credenziali</li> </ul> <p>Documento redatto e condiviso con il team ZeroErp.</p>"},{"location":"liquibase-setup-workflow/#7-workflow-iniziale_1","title":"7. Workflow Iniziale","text":"<ol> <li><code>liquibase validate</code></li> <li><code>liquibase changelogSync</code></li> <li><code>liquibase update</code></li> </ol>"},{"location":"liquibase-setup-workflow/#8-evoluzioni-future","title":"8. Evoluzioni Future","text":"<ul> <li>Nuovi YAML in <code>migrations/&lt;area&gt;/YYYYMMDD-XX-descrizione.yaml</code></li> <li><code>changeSet</code> o <code>sqlFile</code></li> <li><code>validate</code> \u2192 <code>update</code></li> </ul>"},{"location":"liquibase-setup-workflow/#9-comandi-principali_1","title":"9. Comandi Principali","text":"<ul> <li><code>liquibase validate</code></li> <li><code>liquibase changelogSync</code></li> <li><code>liquibase update</code></li> <li><code>liquibase updateSql</code></li> <li><code>liquibase rollback</code></li> </ul>"},{"location":"liquibase-setup-workflow/#10-rollback-e-reverse_1","title":"10. Rollback e Reverse","text":"<ul> <li>Rollback automatico per change types nativi</li> <li><code>rollback</code> esplicito</li> <li><code>rollbackToDate</code>, <code>rollbackCount</code>, <code>rollback tag</code></li> </ul>"},{"location":"liquibase-setup-workflow/#11-convenzioni-e-best-practice_1","title":"11. Convenzioni e Best Practice","text":"<ul> <li>One changeSet per oggetto/tabella</li> <li>ID univoci con autore</li> <li>Contexts/Labels</li> <li>CI/CD: <code>validate</code> e <code>updateSql</code> in pipeline</li> <li>Escludere credenziali da VCS</li> </ul> <p>Documento redatto e condiviso con il team ZeroErp.</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"manifesto/","title":"Manifesto","text":""},{"location":"manifesto/#zero-erp-un-progetto-costruito-un-mattone-alla-volta","title":"\u2728 Zero ERP: un progetto costruito un mattone alla volta","text":"<p>C\u2019\u00e8 chi scrive codice per necessit\u00e0. \u00a0 C\u2019\u00e8 chi scrive codice per mestiere. \u00a0 E poi c\u2019\u00e8 chi lo fa per costruire una casa, una casa in cui ogni abitante si sentir\u00e0 a proprio agio come avvolto in un abbraccio.   \u00a0 Una casa dove ogni campo \u00e8 una porta, ogni tabella \u00e8 una stanza, ogni processo \u00e8 un percorso pensato con cura.</p> <p>Zero ERP nasce cos\u00ec.  Non da una moda, non da un\u2019azienda, ma da una lunga storia , fatta di trent\u2019anni di lavoro, ascolto, rispetto per la complessit\u00e0 dei sistemi e delle persone.</p> <p>Per anni, quel server che tanti chiamavano AS/400, per me era una casa viva che ogni giorno ho cercato di rendere pi\u00f9 accogliente, moderna, confortevole.\u00a0 L\u2019ho costruita mattone dopo mattone, giorno dopo giorno. Oggi quel palazzo non c\u2019\u00e8 pi\u00f9, ma la conoscenza, lo stile, la visione sono rimasti. \u00a0 E ora possono vivere in modo nuovo: libero, aperto,condiviso</p> <p>Zero ERP. \u00a0 Un progetto che vuole unire ci\u00f2 che \u00e8 solido con ci\u00f2 che \u00e8 essenziale. \u00a0 Un ERP che ha imparato a eliminare il superfluo, per far spazio alla chiarezza. \u00a0 Una piattaforma che non nasce solo per fatturare, ma per durare, essere capita e, se possibile, anche amata.</p> <p>Il tempo, gli eventi  che portano a  svolte impreviste  della Vita , mi hanno fatto comprendere nuovi valori e oggi so con certezza che \u00e8 tempo per costruire con verit\u00e0. E questo progetto non \u00e8 solo la mia libert\u00e0, ma anche la certezza che render\u00e0 pi\u00f9 liberi tutti gli abitanti di questa casa.</p> <p>A chi vorr\u00e0 contribuire, imparare, proporre: \u00a0 Benvenuto a casa.\u00a0</p> <p>Questo non \u00e8 solo software, \u00e8 un\u2019idea che vi regaler\u00e0 tempo per le persone e le cose  che amate. \u00a0 \u00c8 un\u2019idea che si pu\u00f2 toccare.</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"parametri-personalizzati-%28GUC%29/","title":"Parmetri personalizzati (GUC)","text":""},{"location":"parametri-personalizzati-%28GUC%29/#parametri-personalizzati-guc-in-postgresql","title":"\ud83d\udcd8 Parametri Personalizzati (GUC) in PostgreSQL","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle: - config.parameters - config.parameter_overrides</p> <p>Approfondimento funzioni: - script.fn_get_parameter_full</p> <p>All\u2019interno del documento viene spiegata la differenza tra parametri GUC e parametri tabellari.</p> <p>I Parametri Personalizzati (GUC \u2013 Grand Unified Configuration) di PostgreSQL consentono di definire variabili di configurazione custom, accessibili da funzioni, trigger e dalla sessione SQL. Sono ideali per configurazioni DB\u2011centriche, centralizzate e versionabili tramite <code>postgresql.conf</code> o comandi SQL.</p>"},{"location":"parametri-personalizzati-%28GUC%29/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Centralizzare configurazioni applicative specifiche direttamente nel database.</li> <li>Modificare dinamicamente parametri senza toccare il codice applicativo.</li> <li>Rendere disponibili \u201cfeature flags\u201d, stringhe di connessione, lingua, ecc., in modo uniforme.</li> </ul>"},{"location":"parametri-personalizzati-%28GUC%29/#definizione-e-utilizzo","title":"\ud83d\udee0\ufe0f Definizione e Utilizzo","text":"<p>Si definiscono in <code>postgresql.conf</code> o con:</p> <pre><code>ALTER DATABASE zeroerp SET myapp.user_language = 'it';\nALTER ROLE app_user   SET myapp.bypass_tx_id_check = 'on';\n</code></pre> <p>Si leggono in PL/pgSQL o SQL con:</p> <pre><code>SELECT current_setting('myapp.user_language', TRUE);\n</code></pre> <p>e si possono modificare in sessione:</p> <pre><code>SET myapp.user_language = 'en';\n</code></pre>"},{"location":"parametri-personalizzati-%28GUC%29/#tipologie-di-guc","title":"\u2696\ufe0f Tipologie di GUC","text":"Tipo di GUC Prefisso Stabilit\u00e0 Scope Di sistema <code>myapp.</code> Persistente (conf/db) Cluster, Database, Role, Session Di infrastruttura <code>dbops.</code> Temporanee (GUC local) Solo within-session (es. <code>dbops.tx_id</code>) <ul> <li>GUC di sistema (<code>myapp.*</code>):   Parametri applicativi centrali (es. lingua, dblink, feature-flag). Definiti in <code>postgresql.conf</code>, <code>ALTER SYSTEM</code>, <code>ALTER DATABASE</code> o <code>ALTER ROLE</code>.</li> <li>GUC temporanee/infrastrutturali (<code>&lt;schema&gt;.&lt;name&gt;</code>):   Usate da trigger e funzioni per passare variabili di sessione (es. <code>dbops.tx_id</code>). Vengono settate con <code>set_config(\u2026, is_local := TRUE)</code> e reset al commit/rollback.</li> </ul>"},{"location":"parametri-personalizzati-%28GUC%29/#esempi-di-guc-in-zero-erp","title":"\ud83d\udccb Esempi di GUC in Zero ERP","text":"<ul> <li><code>myapp.dblink_log_connection</code>   Stringa di connessione per <code>dblink</code>, usata per log remoti fuori dalla transazione corrente.</li> </ul> <p><pre><code>myapp.dblink_log_connection = 'host=localhost port=5432 dbname=Zero user=xx password=xx'\n</code></pre> * <code>myapp.user_language</code>   Lingua di default per le funzioni applicative.</p> <p><pre><code>myapp.user_language = 'it'\n</code></pre> * <code>myapp.bypass_tx_id_check</code>   Flag booleano per abilitare/disabilitare il controllo obbligatorio di <code>tx_id</code> nel trigger.</p> <p><pre><code>myapp.bypass_tx_id_check = off\n</code></pre> * <code>dbops.tx_id</code> (temporanea)   UUID di sessione che identifica le operazioni della stessa transazione. Viene settato da trigger PL/pgSQL e reset al commit/rollback.</p>"},{"location":"parametri-personalizzati-%28GUC%29/#differenza-guc-vs-parametri-tabellari","title":"\ud83e\udd1d Differenza GUC vs Parametri Tabellari","text":"Caratteristica GUC (<code>myapp.*</code>, <code>dbops.*</code>) Tabelle (<code>config.parameters</code> + overrides) Scope Cluster/DB/Role/Session Record-level (tenant, utente, funzione, sessione) Versioning/Audit No (solo DDL o conf file) S\u00ec (Liquibase, trigger di audit, date_insert, ecc.) Dinamico S\u00ec (SET/ALTER in sessione) S\u00ec (modificabile in runtime con query) Use case Configurazioni DB-centriche (lingua, connessioni) Configurazioni business-centriche (feature-flag, timeouts)"},{"location":"parametri-personalizzati-%28GUC%29/#documentazione-e-allegati","title":"\ud83d\uddc2\ufe0f Documentazione e Allegati","text":"<ul> <li>Documento Principale (questo): introduce GUC e best practice.</li> <li> <p>Elenco GUC Definite: crea un file separato (<code>guc_reference.md</code> o <code>.xlsx</code>) contenente tabella con:</p> </li> <li> <p><code>nome parametro</code></p> </li> <li><code>default</code></li> <li><code>scope</code> (cluster/db/role/session)</li> <li><code>descrizione</code></li> <li><code>schema/funzione che lo usa</code></li> </ul> <p>Suggerimento: per estrarre le GUC gi\u00e0 definite in conf usa:</p> <pre><code>SELECT name, setting\n  FROM pg_settings\n WHERE name LIKE 'myapp.%' OR name LIKE 'dbops.%'\n ORDER BY name;\n</code></pre>"},{"location":"parametri-personalizzati-%28GUC%29/#comandi-utili","title":"\ud83d\uddc2\ufe0f Comandi Utili","text":"<p>```sql</p> <p>-- Mostra la path di postgresql.conf  SHOW config_file;    -- Mostra i parametri GUC definiti in :   SHOW myapp.user_language;     -- (Show nome Guc)</p> <p>```</p>"},{"location":"parametri-personalizzati-%28GUC%29/#best-practices","title":"\ud83d\udd12 Best Practices","text":"<ol> <li>Usare prefissi chiari (<code>myapp.</code> per sistema, <code>&lt;schema&gt;.</code> per variabili di sessione).</li> <li>Documentare ogni parametro in <code>postgresql.conf</code> e in <code>guc_reference.md</code>.</li> <li>Gestire valori sensibili con Vault, non in GUC.</li> <li>Caricare in cache in applicazione e rinfrescare periodicamente.</li> </ol> <p>\ud83e\udde0 \u201cStandardizza i prefissi, separa configurazioni di sistema da quelle transazionali e mantieni sempre un elenco aggiornato da allegare ai tuoi rilasci.\u201d</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"postgresql-estensioni-utilizzate/","title":"Utilizzate","text":""},{"location":"postgresql-estensioni-utilizzate/#estensioni-postgresql-utilizzate-in-zero-erp","title":"\ud83d\udcd8 Estensioni PostgreSQL Utilizzate in Zero ERP","text":"<p>Zero ERP utilizza diverse estensioni PostgreSQL per migliorare le funzionalit\u00e0 e soddisfare specifiche esigenze applicative. Di seguito \u00e8 riportata una panoramica delle estensioni attualmente in uso:</p>"},{"location":"postgresql-estensioni-utilizzate/#estensioni-installate","title":"Estensioni installate","text":"<ul> <li> <p><code>plpgsql</code>   Linguaggio procedurale integrato in PostgreSQL per definire funzioni, trigger e procedure stored direttamente nel database, garantendo logiche di business efficienti e robuste.</p> </li> <li> <p><code>postgis</code>   Aggiunge supporto per la gestione e analisi avanzata dei dati geografici e spaziali, consentendo query geospaziali e operazioni di calcolo territoriale complesse.</p> </li> <li> <p><code>postgis_topology</code>   Estensione complementare a PostGIS che fornisce strumenti per gestire e analizzare topologie spaziali, essenziali per la modellazione di reti o aree contigue.</p> </li> <li> <p><code>pgcrypto</code>   Fornisce funzionalit\u00e0 crittografiche per la gestione sicura di dati sensibili, come crittografia simmetrica e asimmetrica, hashing sicuro e generazione di UUID.</p> </li> <li> <p><code>btree_gist</code>   Permette l\u2019uso di indici GiST con tipi di dati standard, abilitando implementazioni avanzate e flessibili di indici multicolonna e personalizzati.</p> </li> <li> <p><code>dblink</code>   Consente connessioni e query cross-database tra diverse istanze PostgreSQL, utilizzata principalmente per attivit\u00e0 di logging remoto e integrazioni di dati distribuiti.</p> </li> </ul> <p>Queste estensioni sono parte integrante della struttura tecnologica di Zero ERP, ognuna scelta per specifiche funzionalit\u00e0 e necessit\u00e0 progettuali, contribuendo alla sicurezza, efficienza e versatilit\u00e0 del sistema.</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"postgresql-intro/","title":"Panoramica","text":""},{"location":"postgresql-intro/#introduzione-a-postgresql","title":"\ud83d\udcd8 Introduzione a PostgreSQL","text":"<p>Zero ERP utilizza PostgreSQL, un database relazionale open-source potente e altamente estensibile, riconosciuto per robustezza, scalabilit\u00e0 e aderenza agli standard SQL. La scelta di PostgreSQL risponde alle esigenze specifiche del progetto Zero ERP, dove \u00e8 fondamentale garantire integrit\u00e0 dei dati, elevate prestazioni e flessibilit\u00e0 nello sviluppo e nella gestione.</p>"},{"location":"postgresql-intro/#perche-postgresql","title":"Perch\u00e9 PostgreSQL?","text":"<ul> <li>Integrit\u00e0 e Affidabilit\u00e0: PostgreSQL garantisce consistenza e durabilit\u00e0 dei dati attraverso avanzati meccanismi di transazione e controllo dei vincoli.</li> <li>Estendibilit\u00e0: Supporta numerose estensioni come <code>dblink</code> per comunicazioni inter-database e <code>pgcrypto</code> per sicurezza e crittografia.</li> <li>Performance e Scalabilit\u00e0: Offre eccellenti prestazioni anche con dataset molto grandi e carichi di lavoro complessi, grazie a strumenti come gli indici avanzati e il query planner intelligente.</li> <li>Community e Supporto: Ampia comunit\u00e0 di utenti e sviluppatori, che offre documentazione estesa e risorse utili per supporto e manutenzione.</li> </ul>"},{"location":"postgresql-intro/#struttura-della-documentazione-del-database","title":"Struttura della documentazione del Database","text":"<p>Questa sezione della documentazione include:</p> <ul> <li>Installazione e configurazione iniziale: dettagli operativi per configurare PostgreSQL in modo ottimale per Zero ERP.</li> <li>Estensioni utilizzate: panoramica delle estensioni PostgreSQL adottate, come <code>dblink</code>, <code>pgcrypto</code>, e altre.</li> <li>Parametri personalizzati (GUC): guida alla definizione, utilizzo e gestione dei parametri applicativi personalizzati per adattare il database alle specifiche esigenze di Zero ERP.</li> </ul> <p>Seguendo questa documentazione sar\u00e0 possibile gestire al meglio PostgreSQL all\u2019interno di Zero ERP, sfruttandone pienamente le potenzialit\u00e0 e garantendo stabilit\u00e0 e affidabilit\u00e0 al sistema.</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"schemidb/","title":"Schemidb","text":""},{"location":"schemidb/#organizzati-per-funzionalita-e-responsabilita","title":"Organizzati per funzionalit\u00e0 e responsabilit\u00e0:","text":"Schema Descrizione anagrafiche          Contiene tutte le tabelle legate all'anagrafica soggetti (persone fisiche e giuridiche).         <ul> <li>Esempi: <code>soggetti</code>, <code>indirizzi</code>, <code>contatti</code></li> <li>Usa identificatori UUID e naming coerente</li> </ul> config          Contiene tabelle di configurazione parametrica e lookup.         <ul> <li>Esempi: <code>stati</code>, <code>nazioni</code>, <code>contatti_ruoli</code></li> <li>Normalizzazione forte, spesso referenziate da altri schemi</li> </ul> script          Logica applicativa (viste e funzioni) legate ai processi ERP.         Favorisce riuso, mantenibilit\u00e0 e isolamento della logica.         <ul> <li>Esempi: <code>vw_clienti_attivi</code>, <code>fn_calcolo_fattura()</code></li> <li>Include anche: <code>fn_get_stradario_by_indirizzo()</code>, etc.</li> </ul> dbops          Strumenti DB per DBA (vista/funzioni tecniche, metadata, monitoring).         <ul> <li>Esempi: <code>vw_function_list</code>, <code>fn_foreign_keys_info(text)</code></li> <li>Nessuna logica applicativa, solo strumenti per DBA e manutentori</li> </ul> storico          Tabelle di audit/storico con versioning temporale dei dati.          Tutte le tabelle che richiedono \"storicizzazione\" saranno replicate qui         <ul> <li>Esempi: <code>soggetti_storico</code>, <code>contratti_storico</code></li> <li>Usato per audit, confronto tra versioni, report du dati storici</li> </ul> public          Mostra solo tabelle pubbliche (non pubbliche), ad esempio version_info            <ul> <li>Esempi: <code>version_info</code>, <code>ecc...</code></li> <li>Solo tabelle o funzioni non pubbliche</li> </ul>"},{"location":"schemidb/#navigazione-per-schema","title":"Navigazione per schema","text":"<ul> <li>anagrafiche </li> <li>config </li> <li>script </li> <li>dbops </li> <li>storico </li> </ul>"},{"location":"schemidb/#in-ciascuna-pagina-di-schema-troverai-un-unico-indice-con-le-tabelle-le-funzioni-e-le-view-corrispondenti","title":"&gt; In ciascuna pagina di schema troverai un unico indice con le tabelle, le funzioni e le view corrispondenti.","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"versioni-supportate/","title":"Versioni supportate","text":"Componente Versione Python 3.x Django 5.x PostgreSQL 17+ Liquibase 4.x Vue 3 3.x \u2026 \u2026 <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/","title":"Database Zero ERP","text":"<p>\ud83d\udc40 Collegamenti rapidi </p> <p>Database --&gt; Liquibase Setup &amp; Workflow.(Come eseguire e applicare le migrazioni)</p> <p>Database --&gt; Linee Guida SQL. (Best practice e convenzioni in Zero Erp)</p> <p>Questa sezione documenta la struttura fisica del Database Zero ERP, implementato in PostgreSQL. Il database \u00e8 suddiviso in pi\u00f9 schemi, ognuno con responsabilit\u00e0 e oggetti (tabelle, funzioni, view) dedicati, per:</p> <ul> <li>Garantire isolamento e sicurezza tra domini  </li> <li>Facilitare manutenzione e evoluzione indipendente  </li> <li>Riflettere chiaramente l\u2019organizzazione funzionale del sistema</li> </ul> <p>\ud83d\udd17 Diagramma ER:</p>"},{"location":"dbzero/#organizzazione-per-schema","title":"Organizzazione per schema","text":""},{"location":"dbzero/#organizzati-per-funzionalita-e-responsabilita","title":"Organizzati per funzionalit\u00e0 e responsabilit\u00e0:","text":"Schema Descrizione anagrafiche          Contiene tutte le tabelle legate all'anagrafica soggetti (persone fisiche e giuridiche).         <ul> <li>Esempi: <code>soggetti</code>, <code>indirizzi</code>, <code>contatti</code></li> <li>Usa identificatori UUID e naming coerente</li> </ul> config          Contiene tabelle di configurazione parametrica e lookup.         <ul> <li>Esempi: <code>stati</code>, <code>nazioni</code>, <code>contatti_ruoli</code></li> <li>Normalizzazione forte, spesso referenziate da altri schemi</li> </ul> script          Logica applicativa (viste e funzioni) legate ai processi ERP.         Favorisce riuso, mantenibilit\u00e0 e isolamento della logica.         <ul> <li>Esempi: <code>vw_clienti_attivi</code>, <code>fn_calcolo_fattura()</code></li> <li>Include anche: <code>fn_get_stradario_by_indirizzo()</code>, etc.</li> </ul> dbops          Strumenti DB per DBA (vista/funzioni tecniche, metadata, monitoring).         <ul> <li>Esempi: <code>vw_function_list</code>, <code>fn_foreign_keys_info(text)</code></li> <li>Nessuna logica applicativa, solo strumenti per DBA e manutentori</li> </ul> storico          Tabelle di audit/storico con versioning temporale dei dati.          Tutte le tabelle che richiedono \"storicizzazione\" saranno replicate qui         <ul> <li>Esempi: <code>soggetti_storico</code>, <code>contratti_storico</code></li> <li>Usato per audit, confronto tra versioni, report du dati storici</li> </ul> public          Mostra solo tabelle pubbliche (non pubbliche), ad esempio version_info            <ul> <li>Esempi: <code>version_info</code>, <code>ecc...</code></li> <li>Solo tabelle o funzioni non pubbliche</li> </ul>"},{"location":"dbzero/#navigazione-per-schema","title":"Navigazione per schema","text":"<ul> <li>anagrafiche </li> <li>config </li> <li>script </li> <li>dbops </li> <li>storico </li> </ul>"},{"location":"dbzero/#in-ciascuna-pagina-di-schema-troverai-un-unico-indice-con-le-tabelle-le-funzioni-e-le-view-corrispondenti","title":"&gt; In ciascuna pagina di schema troverai un unico indice con le tabelle, le funzioni e le view corrispondenti.","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p> <p>Nota: I dettagli tecnici dei campi (tipi, constraint, indici) e delle definizioni di funzione vengono generati automaticamente via script CI, estraendoli da <code>information_schema</code> e dal catalogo PostgreSQL, in modo da mantenere sempre allineata la documentazione con il modello reale.</p>"},{"location":"dbzero/anagrafiche/","title":"Schema <code>anagrafiche</code>","text":""},{"location":"dbzero/anagrafiche/#tabelle","title":"\ud83d\udcda Tabelle","text":"<ul> <li>billing_account</li> <li>clienti</li> <li>contatti \u2014 * Centralizzare i contatti     Un\u2019unica tabella per tutti i numeri di telefono, email, PEC e nominativi, evitando duplicazioni e frammentazione.</li> <li>dati_societari \u2014 - Estendere l\u2019anagrafica generale     I soggetti di tipo giuridico (aziende) hanno esigenze di memorizzazione di dati societari che non interessano le persone fisiche. Spostando queste informazioni in <code>dati_societari</code>, si mantiene la tabella <code>anagrafiche.soggetti</code> leggera e focalizzata sui campi anagrafici di base. Solo per i tipi soggetti appropriati controllati dalla trigger function <code>anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto</code></li> <li>gestori \u2014 - Identificare il gestore del sistema     Memorizzare la riga unica che corrisponde all\u2019azienda proprietaria o amministratrice di Zero ERP, distinguendola da tutti gli altri soggetti (clienti, fornitori, partner, ecc.).</li> <li>gestori_utilities_ruoli</li> <li>indirizzi \u2014 * Associazione soggetto/ruolo \u2192 indirizzo     Ogni soggetto pu\u00f2 avere pi\u00f9 indirizzi distinti in base al ruolo (es. cliente, fornitore) e al tipo di indirizzo (es. sede legale, spedizione, residenza).</li> <li>indirizzi_dettaglio \u2014 * Dettagliare lo stradario     Associare a ciascuna via (memorizzata in <code>config.stradario</code>) le singole unit\u00e0 civiche (numeri civici, estensioni, palazzine, interni, piani), ottenendo cos\u00ec l\u2019indirizzo completo e navigabile.   * Geolocalizzazione precisa     Il campo <code>civic_geoloc</code> memorizza il punto geografico corrispondente al singolo civico, mentre <code>street_geoloc</code> rappresenta la posizione media della via. Questi dati consentono ricerche spaziali e visualizzazioni GIS a livello di civico.   * Indirizzo normalizzato     Il campo calcolato <code>indirizzo_normalizzato</code> combina via, civico, palazzina, scala, piano e interno in un\u2019unica stringa formattata in modo coerente, facilitando confronti testuali e ricerche full-text.</li> <li>istanze_utilities</li> <li>soggetti \u2014 - Coerenza dei dati     Garantire che ogni soggetto\u2014persona fisica, giuridica o fisica forzata\u2014sia identificato in modo univoco e validato secondo le regole aziendali.</li> <li>soggetti_ruoli \u2014 * Associazione molti-a-molti: stabilisce una relazione N\\:N tra la tabella <code>anagrafiche.soggetti</code> e <code>config.tipi_ruoli</code>, consentendo a ogni soggetto di rivestire pi\u00f9 ruoli (es. cliente, fornitore, gestore) e a ogni ruolo di essere assegnato a molti soggetti. * Estensione semantica: il campo <code>extra</code> (JSONB) offre la possibilit\u00e0 di collegare metadati aggiuntivi per la singola associazione soggetto-ruolo (ad esempio, parametri contrattuali specifici se il ruolo \u00e8 \u201cfornitore\u201d o date di attivazione per il ruolo \u201ccliente\u201d). * Tracciatura delle modifiche: grazie ai campi di audit (<code>user_insert</code>, <code>data_insert</code>, <code>user_update</code>, <code>data_update</code>) aggiornati automaticamente, la tabella conserva la cronologia di creazione e aggiornamento di ciascuna associazione.</li> </ul>"},{"location":"dbzero/anagrafiche/#funzioni","title":"\u2699\ufe0f Funzioni","text":"<ul> <li>trgfn_contatti_ins_upd_set_default_contatto \u2014 * Impostare il contatto default   Garantire che il primo contatto (o quello marcato explicitamente) diventi predefinito all\u2019interno del suo contesto.</li> <li>trgfn_dati_societari_ins_upd_check_tipo_soggetto</li> <li>trgfn_gestori_ins_upd_check_ruolo_gestore \u2014 - Centralizzare l\u2019assegnazione del ruolo \u201cGestore\u201d     Delegare a <code>script.fn_check_ins_soggetto_ruolo</code> la logica di inserimento o verifica del linking table, evitando duplicazioni di codice.</li> <li>trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio \u2014 * Uniformit\u00e0 dei dati: garantire che i campi relativi all\u2019indirizzo (<code>via_norm</code>, <code>civico_norm</code>, <code>indirizzo_normalizzato</code>) rispettino regole di maiuscole, spaziatura e formattazione. * Preparazione per ricerche e comparazioni: offrire valori normalizzati che migliorano le performance di query basate su stringhe (es. ricerche full-text, join su via). * Affidabilit\u00e0: centralizzare la logica di normalizzazione nel database, evitando differenze tra applicazioni diverse.</li> <li>trgfn_indirizzi_ins_upd_clean_fields \u2014 Assicura che, in modalit\u00e0 indirizzo normalizzato, tutti i campi alternativi utilizzati per gli indirizzi liberi siano resettati a <code>NULL</code>. In questo modo si evita la coesistenza di dati incongruenti tra indirizzo normalizzato e indirizzo libero.</li> <li>trgfn_indirizzi_ins_upd_sync_geoloc \u2014 Ogni volta che viene inserito o aggiornato un record in <code>anagrafiche.indirizzi</code>, se \u00e8 impostato <code>indirizzo_dettaglio_id</code>, la funzione recupera dal dettaglio civico la coordinata geografica (<code>civic_geoloc</code>) e la copia in <code>NEW.geoloc</code>. In questo modo il dato di geolocalizzazione rimane sempre allineato con la fonte di verit\u00e0 civica.</li> <li>trgfn_istanze_utilities_ins_set_istanza_codice</li> <li>trgfn_soggetti_ins_upd_check_soggetto_contatti \u2014 * Validazione di integrit\u00e0   Garantire che ogni soggetto disponga di almeno un contatto predefinito o dotato di un canale attivo.</li> <li>trgfn_soggetti_ins_upd_clean_fields</li> <li>trgfn_soggetti_ins_upd_genera_cdsoggetto \u2014 La trigger function <code>anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto()</code> viene eseguita <code>BEFORE INSERT OR UPDATE</code> su <code>anagrafiche.soggetti</code> e si occupa di:</li> <li>trgfn_soggetti_valida_cf_piva_dispatch \u2014 La trigger function <code>anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch()</code> viene eseguita <code>BEFORE INSERT OR UPDATE</code> sulla tabella <code>anagrafiche.soggetti</code> e instrada la validazione di codice fiscale e partita IVA in base allo Stato e al dettaglio di soggetto.</li> </ul>"},{"location":"dbzero/anagrafiche/#views","title":"\ud83d\udd0d Views","text":""},{"location":"dbzero/anagrafiche/funzioni/trgfn_contatti_ins_upd_set_default_contatto/","title":"Trgfn contatti ins upd set default contatto","text":""},{"location":"dbzero/anagrafiche/funzioni/trgfn_contatti_ins_upd_set_default_contatto/#documentazione-concettuale-trigger-function-anagrafichetrgfn_contatti_ins_upd_set_default_contatto","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_contatti_ins_upd_set_default_contatto</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - anagrafiche.soggetti  - anagrafiche.contatti </p> <p>Approfondimento funzioni :   - script.fn_log_and_raise_error </p> <p>La trigger function <code>anagrafiche.trgfn_contatti_ins_upd_set_default_contatto()</code> gestisce automaticamente il contatto predefinito per un soggetto, tenendo conto di un contesto dinamico (<code>soggetto</code>, <code>ruolo</code> o <code>utility</code>). Assicura che esista al massimo un contatto default per soggetto e contesto, ed aggiorna il riferimento <code>default_contatto_id</code> in <code>anagrafiche.soggetti</code> quando richiesto.</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_contatti_ins_upd_set_default_contatto/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Impostare il contatto default   Garantire che il primo contatto (o quello marcato explicitamente) diventi predefinito all\u2019interno del suo contesto.</p> </li> <li> <p>Contesto dinamico   Utilizzare il campo <code>default_context</code> (valori: <code>soggetto</code>, <code>ruolo</code>, <code>utility</code>) per isolare i default per diversi ambiti di utilizzo.</p> </li> <li> <p>Sincronizzazione con anagrafica soggetti   Se il contesto \u00e8 <code>soggetto</code>, aggiornare in automatico <code>anagrafiche.soggetti.default_contatto_id</code> per mantenere il collegamento principale.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_contatti_ins_upd_set_default_contatto/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>Trigger associato: <code>BEFORE INSERT OR UPDATE</code> su <code>anagrafiche.contatti</code>.</li> <li> <p>Colonne coinvolte:</p> </li> <li> <p><code>NEW.is_default BOOLEAN</code></p> </li> <li><code>NEW.default_context TEXT</code></li> <li><code>NEW.utility_id</code> (opzionale)</li> <li><code>NEW.soggetto_ruolo_id</code> (opzionale)</li> <li><code>NEW.soggetto_id UUID</code></li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_contatti_ins_upd_set_default_contatto/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Azzeramento contesto</li> </ol> <pre><code>NEW.default_context := NULL;\n</code></pre> <ol> <li>Determinazione contesto</li> </ol> <pre><code>ctx := CASE\n  WHEN NEW.utility_id        IS NOT NULL THEN 'utility'\n  WHEN NEW.soggetto_ruolo_id IS NOT NULL THEN 'ruolo'\n  ELSE 'soggetto'\nEND;\n</code></pre> <ol> <li> <p>Gestione contatto marcato default    Se <code>NEW.is_default = TRUE</code>:</p> </li> <li> <p>Disabilita (<code>is_default = FALSE</code>) tutti i contatti esistenti dello stesso <code>soggetto_id</code> e <code>default_context</code> = <code>ctx</code>, eccetto <code>NEW.id</code>.</p> </li> <li>Imposta <code>NEW.default_context := ctx</code>.</li> <li>Se <code>ctx = 'soggetto'</code>, aggiorna <code>anagrafiche.soggetti.default_contatto_id = NEW.id</code>.</li> <li> <p>Restituisce <code>NEW</code>.</p> </li> <li> <p>Assegnazione primo default    Se <code>NEW.is_default = FALSE</code> e non esistono contatti default per <code>soggetto_id</code> e <code>ctx</code>:</p> </li> <li> <p>Imposta <code>NEW.is_default := TRUE</code> e <code>NEW.default_context := ctx</code>.</p> </li> <li> <p>Se <code>ctx = 'soggetto'</code>, aggiorna <code>anagrafiche.soggetti.default_contatto_id = NEW.id</code>.</p> </li> <li> <p>Chiusura    Restituisce <code>NEW</code> con i valori aggiornati.</p> </li> </ol>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_contatti_ins_upd_set_default_contatto/#vincoli-e-assunzioni","title":"\ud83d\udd12 Vincoli e Assunzioni","text":"<ul> <li>Contesto obbligatorio: <code>default_context</code> viene sempre valorizzato a uno dei tre valori.</li> <li>Unico default per contesto: la funzione garantisce un solo contatto <code>is_default = TRUE</code> per coppia (<code>soggetto_id</code>, <code>default_context</code>).</li> <li>Aggiornamento referenza soggetto: solo per <code>default_context = 'soggetto'</code> si propaga l\u2019ID contatto.</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_contatti_ins_upd_set_default_contatto/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Gestione semplificata dei default   Automatizza l\u2019impostazione del contatto principale per soggetti e ruoli.</li> <li>Contesti indipendenti   Consente di avere contatti di default distinti per scopi diversi (<code>soggetto</code>, <code>ruolo</code>, <code>utility</code>) senza mescolarli.</li> <li>Sincronizzazione diretta   Tiene coerente il campo <code>default_contatto_id</code> in <code>anagrafiche.soggetti</code> senza ulteriori query esterne.</li> <li>Manutenibilit\u00e0   Centralizza la logica di default in un\u2019unica function, riutilizzabile in pi\u00f9 trigger.</li> </ul> <p>\ud83e\udde0 \u201cUna trigger function flessibile che assegna e mantiene automaticamente il contatto predefinito in base a contesti distinti, semplificando la gestione dei dati di contatto.\u201d</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_contatti_ins_upd_set_default_contatto/#funzione-trgfn_contatti_ins_upd_set_default_contatto","title":"\u2699\ufe0f Funzione <code>trgfn_contatti_ins_upd_set_default_contatto</code>","text":"<pre><code>CREATE FUNCTION trgfn_contatti_ins_upd_set_default_contatto()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_contatti_ins_upd_set_default_contatto/#create-or-replace-function-anagrafichetrgfn_contatti_ins_upd_set_default_contatto-returns-trigger-language-plpgsql-as-function-declare-cnt-integer-ctx-text-begin-1-preparo-il-reset-del-context-newdefault_context-null-2-determino-il-contesto-per-questo-contatto-ctx-case-when-newutility_id-is-not-null-then-utility-when-newsoggetto_ruolo_id-is-not-null-then-ruolo-else-soggetto-end-3-se-il-nuovo-contatto-e-marcato-default-if-newis_default-then-update-anagrafichecontatti-set-is_default-false-default_context-null-where-soggetto_id-newsoggetto_id-and-id-coalescenewid0-and-is_default-and-default_context-ctx-solo-quel-contesto-newdefault_context-ctx-assegno-il-context-e-se-e-soggetto-aggiorno-anche-la-tabella-soggetti-if-ctx-soggetto-then-update-anagrafichesoggetti-set-default_contatto_id-newid-where-id-newsoggetto_id-end-if-return-new-end-if-4-altrimenti-se-non-esiste-ancora-alcun-default-in-questo-contesto-select-count-into-cnt-from-anagrafichecontatti-where-soggetto_id-newsoggetto_id-and-is_default-and-default_context-ctx-count-limitato-a-quel-contesto-if-cnt-0-then-newis_default-true-newdefault_context-ctx-if-ctx-soggetto-then-update-anagrafichesoggetti-set-default_contatto_id-newid-where-id-newsoggetto_id-end-if-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_contatti_ins_upd_set_default_contatto()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n  DECLARE\n    cnt INTEGER;\n    ctx TEXT;\n  BEGIN\n    -- 1) Preparo il reset del context\n    NEW.default_context := NULL;\n\n    -- 2) Determino il contesto per questo contatto\n    ctx := CASE\n      WHEN NEW.utility_id        IS NOT NULL THEN 'utility'\n      WHEN NEW.soggetto_ruolo_id IS NOT NULL THEN 'ruolo'\n      ELSE 'soggetto'\n    END;\n\n    -- 3) Se il nuovo contatto \u00e8 marcato default:\n    IF NEW.is_default THEN\n      UPDATE anagrafiche.contatti\n        SET is_default = FALSE,\n            default_context = NULL\n      WHERE soggetto_id = NEW.soggetto_id\n        AND id &lt;&gt; COALESCE(NEW.id,0)\n        AND is_default\n        AND default_context = ctx;  -- **solo quel contesto**\n\n      NEW.default_context := ctx;\n      -- Assegno il context e, se \u00e8 'soggetto', aggiorno anche la tabella soggetti\n\n      IF ctx = 'soggetto' THEN\n        UPDATE anagrafiche.soggetti\n          SET default_contatto_id = NEW.id\n        WHERE id = NEW.soggetto_id;\n      END IF;\n      RETURN NEW;\n    END IF;\n\n    -- 4) Altrimenti, se non esiste ancora alcun default in questo contesto,\n    SELECT COUNT(*) INTO cnt\n      FROM anagrafiche.contatti\n    WHERE soggetto_id = NEW.soggetto_id\n      AND is_default\n      AND default_context = ctx;   -- **count limitato a quel contesto**\n\n    IF cnt = 0 THEN\n        NEW.is_default      := TRUE;\n        NEW.default_context := ctx;\n\n        IF ctx = 'soggetto' THEN\n          UPDATE anagrafiche.soggetti\n            SET default_contatto_id = NEW.id\n          WHERE id = NEW.soggetto_id;\n        END IF;\n    END IF;\n\n    RETURN NEW;\n  END;\n  $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_dati_societari_ins_upd_check_tipo_soggetto/","title":"Trgfn dati societari ins upd check tipo soggetto","text":""},{"location":"dbzero/anagrafiche/funzioni/trgfn_dati_societari_ins_upd_check_tipo_soggetto/#documentazione-concettuale-funzione-anagrafichetrgfn_dati_societari_ins_upd_check_tipo_soggetto","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>anagrafiche.dati_societari </li> <li>anagrafiche.soggetti </li> <li>config.tipi_soggetto_dettaglio </li> </ul> <p>Approfondimento funzioni:</p> <ul> <li>script.fn_log_and_raise_error</li> <li>dbops.trgfn_tx_id_managed</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_dati_societari_ins_upd_check_tipo_soggetto/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Verificare che il soggetto associato ai dati societari ( <code>new.soggetto_id</code> in <code>anagrafiche.dati_societari</code> ) abbia un <code>cod_int_tipo_soggetto</code> ammesso (solo <code>SC</code> o <code>SP</code>). In caso contrario, viene lanciato un errore tramite <code>script.fn_log_and_raise_error</code>.</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_dati_societari_ins_upd_check_tipo_soggetto/#collegamenti","title":"\ud83d\udd17 Collegamenti","text":"<ul> <li><code>anagrafiche.dati_societari</code> \u2013 tabella su cui viene applicato il trigger <code>BEFORE INSERT OR UPDATE</code> che richiama questa funzione.</li> <li><code>anagrafiche.soggetti</code> \u2013 da cui si legge il campo <code>tipo_soggetto_dettaglio_id</code>.</li> <li><code>config.tipi_soggetto_dettaglio</code> \u2013 contiene <code>cod_int_tipo_soggetto</code> per validazione.</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_dati_societari_ins_upd_check_tipo_soggetto/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Utilizza <code>script.fn_log_and_raise_error</code> per loggare dettagli e abortire la DML in caso di tipo non ammesso (codice errore <code>E_DATI_SOCIETARI_TIPO_SOGGETTO_NON_AMMESSO</code>).</li> <li>Facile da estendere aggiungendo codici consentiti alla condizione.</li> <li>Si accompagna al trigger definito come:</li> </ul> <pre><code>CREATE TRIGGER trg_dati_societari_ins_upd_check_tipo_soggetto\n  BEFORE INSERT OR UPDATE ON anagrafiche.dati_societari\n  FOR EACH ROW EXECUTE FUNCTION anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto();\n</code></pre> <ul> <li>Assicurarsi che la funzione sia caricata prima del trigger e aggiornata in caso di modifiche future.</li> </ul> <p>\ud83e\udde0 \u201cBlocca in anticipo l\u2019inserimento di dati societari per soggetti non conformi: integrit\u00e0 di business garantita.\u201d</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_dati_societari_ins_upd_check_tipo_soggetto/#funzione-trgfn_dati_societari_ins_upd_check_tipo_soggetto","title":"\u2699\ufe0f Funzione <code>trgfn_dati_societari_ins_upd_check_tipo_soggetto</code>","text":"<pre><code>CREATE FUNCTION trgfn_dati_societari_ins_upd_check_tipo_soggetto()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_dati_societari_ins_upd_check_tipo_soggetto/#create-or-replace-function-anagrafichetrgfn_dati_societari_ins_upd_check_tipo_soggetto-returns-trigger-language-plpgsql-as-function-declare-v_cod_int_tipo-text-begin-controlla-che-il-soggetto-associato-abbia-un-tipo-valido-solo-sc-e-sp-in-futuro-si-potra-estendere-per-altri-tipi-select-tsdcod_int_tipo_soggetto-into-v_cod_int_tipo-from-anagrafichesoggetti-s-join-configtipi_soggetto_dettaglio-tsd-on-stipo_soggetto_dettaglio_id-tsdid-where-sid-newsoggetto_id-if-v_cod_int_tipo-not-in-scsp-then-perform-scriptfn_log_and_raise_error-database-anagrafichetrgfn_check_tipo_soggetto_for_dati_societari-e_dati_societari_tipo_soggetto_non_ammesso-jsonb_build_object-soggetto_id-newsoggetto_id-cod_int_tipo_soggetto-v_cod_int_tipo-nulluuid-newsoggetto_idtext-v_cod_int_tipo-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n   DECLARE\n     v_cod_int_tipo text;\n   BEGIN\n   -- Controlla che il soggetto associato abbia un tipo valido\n   -- solo SC e SP. In futuro si potr\u00e0 estendere per altri tipi\n\n     SELECT tsd.cod_int_tipo_soggetto\n       INTO v_cod_int_tipo\n       FROM anagrafiche.soggetti s\n         JOIN config.tipi_soggetto_dettaglio tsd \n           ON s.tipo_soggetto_dettaglio_id = tsd.id\n     WHERE s.id = NEW.soggetto_id;\n\n     IF v_cod_int_tipo NOT IN ('SC','SP') THEN\n       PERFORM script.fn_log_and_raise_error(\n         'database',\n         'anagrafiche.trgfn_check_tipo_soggetto_for_dati_societari',\n         'E_DATI_SOCIETARI_TIPO_SOGGETTO_NON_AMMESSO',\n         jsonb_build_object(\n           'soggetto_id', NEW.soggetto_id,\n           'cod_int_tipo_soggetto', v_cod_int_tipo\n         ),\n         NULL::uuid,\n         NEW.soggetto_id::text, v_cod_int_tipo\n       );\n     END IF;\n\n     RETURN NEW;\n   END;\n   $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_gestori_ins_upd_check_ruolo_gestore/","title":"Trgfn gestori ins upd check ruolo gestore","text":""},{"location":"dbzero/anagrafiche/funzioni/trgfn_gestori_ins_upd_check_ruolo_gestore/#documentazione-concettuale-trigger-function-anagrafichetrgfn_gestori_ins_upd_check_ruolo_gestore","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_gestori_ins_upd_check_ruolo_gestore</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:  - anagrafiche.gestori   - anagrafiche.soggetti_ruoli </p> <p>Approfondimenti funzioni:   - script.fn_check_ins_soggetto_ruolo </p> <p>La trigger function <code>anagrafiche.trgfn_gestori_ins_upd_check_ruolo_gestore()</code> si attiva BEFORE INSERT e BEFORE UPDATE sulla tabella <code>anagrafiche.gestori</code>. Il suo scopo \u00e8 garantire che, ogni volta che si crea o modifica il record del gestore, venga automaticamente gestita (verificata o creata) la corrispondente riga di relazione in <code>anagrafiche.soggetti_ruoli</code> con ruolo \u201cGestore\u201d (<code>cd_int_ruolo = 'GE'</code>).</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_gestori_ins_upd_check_ruolo_gestore/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Centralizzare l\u2019assegnazione del ruolo \u201cGestore\u201d   Delegare a <code>script.fn_check_ins_soggetto_ruolo</code> la logica di inserimento o verifica del linking table, evitando duplicazioni di codice.</p> </li> <li> <p>Mantenere coerenza referenziale   Associare sempre correttamente il soggetto al ruolo di gestore, aggiornando <code>NEW.soggetto_ruolo_id</code> con l\u2019ID valido, che sia preesistente o appena creato.</p> </li> <li> <p>Semplificare i trigger client   Qualunque operazione di INSERT o UPDATE su <code>anagrafiche.gestori</code> non deve preoccuparsi di controllare manualmente <code>soggetto_ruolo_id</code>; la trigger function ne gestisce la delega.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_gestori_ins_upd_check_ruolo_gestore/#flusso-logico","title":"\ud83d\udd0d Flusso Logico","text":"<ol> <li> <p>Chiamata automatica    Attivata BEFORE INSERT OR UPDATE su <code>anagrafiche.gestori</code>.  </p> <p>p_cd_int_ruolo = 'GE' identifica il ruolo \u201cGestore\u201d in config.tipi_ruoli.</p> <p>La funzione verifica o crea il record in anagrafiche.soggetti_ruoli e restituisce l\u2019ID.</p> </li> </ol>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_gestori_ins_upd_check_ruolo_gestore/#utilizzo-in-ddl","title":"\ud83d\udee0\ufe0f Utilizzo in DDL","text":"<p>Nel DDL di anagrafiche.gestori il trigger viene definito cos\u00ec:</p> <p>CREATE OR REPLACE TRIGGER trg_gestori_ins_upd_check_ruolo_gestore   BEFORE INSERT OR UPDATE ON anagrafiche.gestori   FOR EACH ROW   EXECUTE FUNCTION anagrafiche.trgfn_gestori_ins_upd_check_ruolo_gestore();</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_gestori_ins_upd_check_ruolo_gestore/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<pre><code>Unica fonte di verit\u00e0 per l\u2019assegnazione del ruolo\nOgni modifica al gestore delega a una sola funzione centralizzata il compito di controllare/eseguire \nl\u2019inserimento del ruolo in linking table.\n\nRiduzione del codice boilerplate\nNon \u00e8 necessario ripetere la logica di verifica/inserimento nei trigger o nelle procedure che \ngestiscono anagrafiche.gestori.\n\nCoerenza e tracciabilit\u00e0\nGrazie all\u2019uso di script.fn_check_ins_soggetto_ruolo, ogni assegnazione di ruolo registra automaticamente \nuser_insert nel linking table e garantisce che soggetto_ruolo_id sia sempre valido.\n\nFlessibilit\u00e0 per ruoli futuri\nIl pattern pu\u00f2 essere replicato in altre trigger function per tabelle analoghe \n(es. anagrafiche.clienti, anagrafiche.fornitori), semplicemente cambiando il parametro p_cd_int_ruolo.\n</code></pre>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_gestori_ins_upd_check_ruolo_gestore/#nota-di-sviluppo","title":"\ud83d\udea7 Nota di sviluppo","text":"<pre><code>Questa trigger function e la funzione generica fn_check_ins_soggetto_ruolo costituiscono il \nnucleo metodologico per la gestione dei ruoli in Zero ERP: saranno estese e replicate per ogni nuovo \ntipo di ruolo oggetto di implementazione.\n</code></pre>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_gestori_ins_upd_check_ruolo_gestore/#funzione-trgfn_gestori_ins_upd_check_ruolo_gestore","title":"\u2699\ufe0f Funzione <code>trgfn_gestori_ins_upd_check_ruolo_gestore</code>","text":"<pre><code>CREATE FUNCTION trgfn_gestori_ins_upd_check_ruolo_gestore()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_gestori_ins_upd_check_ruolo_gestore/#create-or-replace-function-anagrafichetrgfn_gestori_ins_upd_check_ruolo_gestore-returns-trigger-language-plpgsql-as-function-begin-function-ogni-volta-che-inseriscoaggiorno-in-gestori-gestisco-la-creazioneverifica-della-riga-corrispondente-in-soggetti_ruoli-alimentando-poi-in-newsoggetto_ruolo_id-il-record-finale-sostituisco-newsoggetto_ruolo_id-con-lid-vero-nuovo-o-esistente-delegando-completamente-alla-funzione-generica-newsoggetto_ruolo_id-scriptfn_check_ins_soggetto_ruolo-p_soggetto_id-newsoggetto_id-p_soggetto_ruolo_id-newsoggetto_ruolo_id-p_cd_int_ruolo-ge-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_gestori_ins_upd_check_ruolo_gestore()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n BEGIN\n       -- FUNCTION: \n       --   Ogni volta che inserisco/aggiorno in gestori, gestisco la\n       --   creazione/verifica della riga corrispondente in soggetti_ruoli\n       --   alimentando poi in NEW.soggetto_ruolo_id il record finale.\n\n     -- Sostituisco NEW.soggetto_ruolo_id con l'ID vero (nuovo o esistente),\n     -- delegando completamente alla funzione generica:\n     NEW.soggetto_ruolo_id := script.fn_check_ins_soggetto_ruolo(\n                               p_soggetto_id       := NEW.soggetto_id,\n                               p_soggetto_ruolo_id := NEW.soggetto_ruolo_id,\n                               p_cd_int_ruolo      := 'GE'\n                             );\n     RETURN NEW;\n END;\n $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/","title":"Trgfn indirizzi dettaglio ins upd norm indirizzi dettaglio","text":""},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#documentazione-concettuale-trigger-function-anagrafichetrgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio()</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento tabelle:   - anagrafiche.indirizzi_dettaglio </p> <p>Approfondimento view:   - script.vw_indirizzo_completo </p> <p>La trigger function <code>anagrafiche.trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio()</code> normalizza i dati di indirizzo al momento di INSERT o UPDATE su <code>anagrafiche.indirizzi_dettaglio</code>, costruendo campi coerenti e uniformi per via, civico e indirizzo completo.</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Uniformit\u00e0 dei dati: garantire che i campi relativi all\u2019indirizzo (<code>via_norm</code>, <code>civico_norm</code>, <code>indirizzo_normalizzato</code>) rispettino regole di maiuscole, spaziatura e formattazione.</li> <li>Preparazione per ricerche e comparazioni: offrire valori normalizzati che migliorano le performance di query basate su stringhe (es. ricerche full-text, join su via).</li> <li>Affidabilit\u00e0: centralizzare la logica di normalizzazione nel database, evitando differenze tra applicazioni diverse.</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>Trigger: <code>BEFORE INSERT OR UPDATE</code> sulla tabella <code>anagrafiche.indirizzi_dettaglio</code>.</li> <li>Campi JOIN: legge da <code>script.vw_indirizzo_completo</code> i campi <code>tipo_toponimo</code> e <code>nome_strada</code> tramite <code>id_stradario = NEW.stradario_id</code>.</li> <li> <p>Campi target:</p> </li> <li> <p><code>via_norm</code></p> </li> <li><code>civico_norm</code></li> <li><code>indirizzo_normalizzato</code></li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#flusso-di-esecuzione-dettagliato","title":"\u2699\ufe0f Flusso di Esecuzione Dettagliato","text":"<ol> <li> <p>Normalizzazione della via</p> </li> <li> <p>Recupera <code>tipo_toponimo</code> e <code>nome_strada</code> dalla view <code>script.vw_indirizzo_completo</code> (query con <code>INTO STRICT NEW.via_norm</code>).</p> </li> <li> <p>Applica <code>TRIM</code> e <code>UPPER</code> alla concatenazione, rimuovendo spazi e uniformando il case.</p> </li> <li> <p>Normalizzazione del civico</p> </li> <li> <p>Se <code>NEW.civico</code> \u00e8 valorizzato e diverso da 0, controlla <code>NEW.estensione_civico</code>:</p> <ul> <li>Aggiunge <code>/</code> se mancante e concatena (es. \u201c12/A\u201d).</li> <li>Converte il risultato in maiuscolo.</li> <li>Se <code>civico</code> non \u00e8 specificato, imposta <code>NEW.civico_norm := 'SNC'</code> (Senza Numero Civico).</li> </ul> </li> <li> <p>Costruzione dell\u2019indirizzo completo</p> </li> <li> <p>Concatena <code>via_norm</code>, <code>civico_norm</code> e, se presenti, <code>palazzina</code>, <code>scala</code>, <code>piano</code>, <code>interno</code>, separati da virgola e label (es. \u201cPal.\u201d, \u201cScala\u201d).</p> </li> <li> <p>Applica <code>TRIM</code> sul risultato per rimuovere spazi superflui.</p> </li> <li> <p>Restituzione</p> </li> <li> <p>Ritorna <code>NEW</code> con i campi popolati, pronto per essere inserito o aggiornato.</p> </li> </ol>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Coerenza: tutti gli indirizzi vengono salvati secondo uno stesso pattern, semplificando validazioni e confronti.</li> <li>Efficienza: la normalizzazione lato database riduce il carico applicativo e velocizza le query full-text.</li> <li>Modularit\u00e0: modifiche al formato (es. aggiunta di nuovi componenti) sono centralizzate nella trigger function senza cambiare il codice applicativo.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio</code>, Zero ERP assicura indirizzi coerenti e pronti per ogni esigenza di ricerca o reporting.\u201d</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#funzione-trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio","title":"\u2699\ufe0f Funzione <code>trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio</code>","text":"<pre><code>CREATE FUNCTION trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#create-or-replace-function-anagrafichetrgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio-returns-trigger-language-plpgsql-as-function-begin-1-normalizzazione-della-descrizione-della-via-recupera-la-descrizione-dello-stradario-dalla-view-scriptvw_indirizzo_completo-applica-trim-per-rimuovere-spazi-inizialifinali-e-upper-per-convertire-in-maiuscolo-strict-garantisce-che-la-query-deve-restituire-esattamente-una-riga-select-uppertrimivtipo_toponimo-ivnome_strada-into-strict-newvia_norm-from-scriptvw_indirizzo_completo-iv-where-ivid_stradario-newstradario_id-limit-1-2-normalizzazione-del-numero-civico-con-eventuale-estensione-processa-solo-se-il-civico-e-valorizzato-if-newcivico-is-not-null-and-newcivico-0-then-se-esiste-unestensione-del-civico-es-a-in-12a-if-newestensione_civico-is-not-null-and-newestensione_civico-then-assicura-che-lestensione-inizi-con-aggiunge-se-mancante-if-leftnewestensione_civico1-then-newestensione_civico-newestensione_civico-end-if-combina-civico-ed-estensione-es-12-a-12a-newcivico_norm-uppernewcivicotext-newestensione_civico-else-solo-civico-senza-estensione-conversione-in-maiuscolo-newcivico_norm-uppernewcivicotext-end-if-else-civico-non-valorizzato-newcivico_norm-snc-end-if-3-costruzione-dellindirizzo-completo-normalizzato-crea-una-stringa-unica-concatenando-tutti-i-componenti-dellindirizzo-trim-rimuove-spazi-inizialifinali-dal-risultato-finale-ogni-componente-e-aggiunto-solo-se-valorizzato-preceduto-da-un-separatore-appropriato-newindirizzo_normalizzato-trimboth-from-newvia_norm-via-gia-normalizzata-case-when-newcivico_norm-then-newcivico_norm-else-end-civico-es-12a-case-when-newpalazzina-is-not-null-and-newpalazzina-then-pal-newpalazzina-else-end-palazzina-es-palb-case-when-newscala-is-not-null-and-newscala-then-scala-newscala-else-end-scala-es-scala-2-case-when-newpiano-is-not-null-and-newpiano-then-piano-newpiano-else-end-piano-es-p3-case-when-newinterno-is-not-null-and-newinterno-then-int-newinterno-else-end-interno-es-int5-restituisce-il-record-modificato-con-i-campi-normalizzati-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  -- 1) Normalizzazione della descrizione della via:\n  -- Recupera la descrizione dello stradario dalla view script.vw_indirizzo_completo                  -- Applica TRIM per rimuovere spazi iniziali/finali e UPPER per convertire in maiuscolo\n  -- STRICT garantisce che la query deve restituire esattamente una riga\n     SELECT UPPER(TRIM(iv.tipo_toponimo || ' ' || iv.nome_strada))\n      INTO STRICT NEW.via_norm\n     FROM script.vw_indirizzo_completo iv\n     WHERE iv.id_stradario = NEW.stradario_id\n     LIMIT 1;\n\n  -- 2) Normalizzazione del numero civico con eventuale estensione:\n  -- Processa solo se il civico \u00e8 valorizzato\n  IF NEW.civico IS NOT NULL AND NEW.civico &lt;&gt; 0 THEN\n    -- Se esiste un'estensione del civico (es: \"A\" in \"12/A\")\n    IF NEW.estensione_civico IS NOT NULL AND NEW.estensione_civico &lt;&gt; '' THEN\n      -- Assicura che l'estensione inizi con \"/\" (aggiunge se mancante)\n      IF LEFT(NEW.estensione_civico,1) &lt;&gt; '/' THEN\n        NEW.estensione_civico := '/' || NEW.estensione_civico;\n      END IF;\n      -- Combina civico ed estensione (es: \"12\" + \"/A\" =&gt; \"12/A\")\n      NEW.civico_norm := UPPER(NEW.civico::TEXT || NEW.estensione_civico);\n    ELSE\n      -- Solo civico senza estensione (conversione in maiuscolo)\n      NEW.civico_norm := UPPER(NEW.civico::TEXT);\n    END IF;\n  ELSE\n    -- Civico non valorizzato\n    NEW.civico_norm := 'SNC';\n  END IF;\n\n  -- 3) Costruzione dell'indirizzo completo normalizzato:\n  -- Crea una stringa unica concatenando tutti i componenti dell'indirizzo\n  -- TRIM rimuove spazi iniziali/finali dal risultato finale\n  -- Ogni componente \u00e8 aggiunto solo se valorizzato, preceduto da un separatore appropriato\n  NEW.indirizzo_normalizzato := TRIM(BOTH ' ' FROM (\n      NEW.via_norm  -- Via gi\u00e0 normalizzata\n    || CASE WHEN NEW.civico_norm &lt;&gt; '' THEN ', ' || NEW.civico_norm ELSE '' END  -- Civico (es: \", 12/A\")\n    || CASE WHEN NEW.palazzina   IS NOT NULL AND NEW.palazzina &lt;&gt; '' \n            THEN ', Pal.'   || NEW.palazzina ELSE '' END  -- Palazzina (es: \", Pal.B\")\n    || CASE WHEN NEW.scala        IS NOT NULL AND NEW.scala &lt;&gt; '' \n            THEN ', Scala ' || NEW.scala      ELSE '' END  -- Scala (es: \", Scala 2\")\n    || CASE WHEN NEW.piano        IS NOT NULL AND NEW.piano &lt;&gt; '' \n            THEN ', Piano '     || NEW.piano      ELSE '' END  -- Piano (es: \", P3\")\n    || CASE WHEN NEW.interno      IS NOT NULL AND NEW.interno &lt;&gt; '' \n            THEN ', Int.'  || NEW.interno    ELSE '' END  -- Interno (es: \", Int.5\")\n  ));\n\n  -- Restituisce il record modificato con i campi normalizzati\n  RETURN NEW;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_clean_fields/","title":"Trgfn indirizzi ins upd clean fields","text":""},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_clean_fields/#documentazione-concettuale-trigger-function-anagrafichetrgfn_indirizzi_ins_upd_clean_fields","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_indirizzi_ins_upd_clean_fields()</code>","text":"<p>Approfondimento Tabelle:  </p> <ul> <li>anagrafiche.indirizzi </li> <li>anagrafiche.indirizzi_dettaglio </li> </ul> <p>Pulisce i campi di fallback di <code>anagrafiche.indirizzi</code> quando \u00e8 presente un <code>indirizzo_dettaglio_id</code>.</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_clean_fields/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Assicura che, in modalit\u00e0 indirizzo normalizzato, tutti i campi alternativi utilizzati per gli indirizzi liberi siano resettati a <code>NULL</code>. In questo modo si evita la coesistenza di dati incongruenti tra indirizzo normalizzato e indirizzo libero.</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_clean_fields/#parametri-del-trigger","title":"Parametri del Trigger","text":"<ul> <li><code>NEW</code>: record in fase di INSERT o UPDATE di <code>anagrafiche.indirizzi</code>.</li> <li><code>OLD</code>: record precedente alla modifica (non utilizzato).</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_clean_fields/#valore-di-ritorno","title":"Valore di Ritorno","text":"<ul> <li><code>NEW</code>: record modificato, con i campi di fallback (<code>stato_id</code>, <code>indirizzo_libero</code>, <code>comune_id</code>, <code>codice_postale_id</code>, <code>administrative_area</code>, <code>locality</code>, <code>sublocality</code>, <code>postal_box</code>, <code>geoloc</code>) azzerati se <code>indirizzo_dettaglio_id</code> \u00e8 valorizzato.</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_clean_fields/#trigger-associato","title":"\ud83d\udd17 Trigger Associato","text":"<pre><code>CREATE TRIGGER trg_indirizzi_ins_upd_clean_fields\n  BEFORE INSERT OR UPDATE\n  ON anagrafiche.indirizzi\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_indirizzi_ins_upd_clean_fields();\n</code></pre>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_clean_fields/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Garantisce la mutua esclusione tra modalit\u00e0 normalizzata e libera.</li> <li>Previene l\u2019inserimento di dati superflui o incongruenti quando si usa il dettaglio civico.</li> <li>La pulizia \u00e8 estesa per azzerare anche <code>geoloc</code>, si preferisce derivare sempre da <code>indirizzi_dettaglio</code>.</li> </ul> <p>\ud83e\udde0 \u201cMantieni coerenza tra indirizzo normalizzato e campi di fallback: pulizia automatica e sicura.\u201d</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_clean_fields/#funzione-trgfn_indirizzi_ins_upd_clean_fields","title":"\u2699\ufe0f Funzione <code>trgfn_indirizzi_ins_upd_clean_fields</code>","text":"<pre><code>CREATE FUNCTION trgfn_indirizzi_ins_upd_clean_fields()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_clean_fields/#create-or-replace-function-anagrafichetrgfn_indirizzi_ins_upd_clean_fields-returns-trigger-language-plpgsql-as-function-begin-if-newindirizzo_dettaglio_id-is-not-null-then-pulisco-i-fallback-newstato_id-null-newindirizzo_libero-null-newcomune_id-null-newcodice_postale_id-null-newadministrative_area-null-newlocality-null-newsublocality-null-newpostal_box-null-geoloc-puoi-lasciarlo-oppure-pulirlo-se-preferisci-newgeoloc-null-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_indirizzi_ins_upd_clean_fields()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n  BEGIN\n    IF NEW.indirizzo_dettaglio_id IS NOT NULL THEN\n      -- pulisco i fallback\n      NEW.stato_id             := NULL;\n      NEW.indirizzo_libero     := NULL;\n      NEW.comune_id            := NULL;\n      NEW.codice_postale_id    := NULL;\n      NEW.administrative_area  := NULL;\n      NEW.locality             := NULL;\n      NEW.sublocality          := NULL;\n      NEW.postal_box           := NULL;\n      -- geoloc puoi lasciarlo, oppure pulirlo se preferisci:\n      NEW.geoloc := NULL;\n    END IF;\n\n    RETURN NEW;\n  END;\n  $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_sync_geoloc/","title":"Trgfn indirizzi ins upd sync geoloc","text":""},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_sync_geoloc/#funzione-anagrafichetrgfn_indirizzi_ins_upd_sync_geoloc","title":"Funzione <code>anagrafiche.trgfn_indirizzi_ins_upd_sync_geoloc()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - anagrafiche.indirizzi_dettaglio - anagrafiche.indirizzi </p> <p>Sincronizza il campo <code>geoloc</code> di <code>anagrafiche.indirizzi</code> con la geolocalizzazione memorizzata in <code>anagrafiche.indirizzi_dettaglio</code>.</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_sync_geoloc/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Ogni volta che viene inserito o aggiornato un record in <code>anagrafiche.indirizzi</code>, se \u00e8 impostato <code>indirizzo_dettaglio_id</code>, la funzione recupera dal dettaglio civico la coordinata geografica (<code>civic_geoloc</code>) e la copia in <code>NEW.geoloc</code>. In questo modo il dato di geolocalizzazione rimane sempre allineato con la fonte di verit\u00e0 civica.</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_sync_geoloc/#parametri-del-trigger","title":"Parametri del Trigger","text":"<ul> <li><code>NEW</code>: record di riga in inserimento o aggiornamento della tabella <code>anagrafiche.indirizzi</code>.</li> <li><code>OLD</code>: non utilizzato in questa funzione.</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_sync_geoloc/#valore-di-ritorno","title":"Valore di Ritorno","text":"<ul> <li><code>NEW</code> (record modificato), con <code>geoloc</code> aggiornato quando applicabile.</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_sync_geoloc/#trigger-associato","title":"\ud83d\udd17 Trigger Associato","text":"<pre><code>CREATE TRIGGER trg_indirizzi_ins_upd_sync_geoloc\n  BEFORE INSERT OR UPDATE\n  ON anagrafiche.indirizzi\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_indirizzi_ins_upd_sync_geoloc();\n</code></pre>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_sync_geoloc/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Garantisce coerenza tra i dati geografici civici (<code>indirizzi_dettaglio</code>) e la tabella principale degli indirizzi.</li> <li>Evita geolocalizzazioni obsolete: ad ogni modifica o inserimento si riallinea il campo <code>geoloc</code>.</li> <li>Se <code>indirizzo_dettaglio_id</code> \u00e8 <code>NULL</code>, non interviene e lascia invariato il valore esistente di <code>geoloc</code>.</li> </ul> <p>\ud83e\udde0 \u201cAllinea sempre la posizione geografica degli indirizzi con il dettaglio civico: precisione e consistenza garantite.\u201d</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_sync_geoloc/#funzione-trgfn_indirizzi_ins_upd_sync_geoloc","title":"\u2699\ufe0f Funzione <code>trgfn_indirizzi_ins_upd_sync_geoloc</code>","text":"<pre><code>CREATE FUNCTION trgfn_indirizzi_ins_upd_sync_geoloc()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_indirizzi_ins_upd_sync_geoloc/#create-or-replace-function-anagrafichetrgfn_indirizzi_ins_upd_sync_geoloc-returns-trigger-language-plpgsql-as-function-begin-if-newindirizzo_dettaglio_id-is-not-null-then-select-civic_geoloc-into-newgeoloc-from-anagraficheindirizzi_dettaglio-where-id-newindirizzo_dettaglio_id-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_indirizzi_ins_upd_sync_geoloc()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n  BEGIN\n    IF NEW.indirizzo_dettaglio_id IS NOT NULL THEN\n      SELECT civic_geoloc INTO NEW.geoloc\n        FROM anagrafiche.indirizzi_dettaglio\n      WHERE id = NEW.indirizzo_dettaglio_id;\n    END IF;\n    RETURN NEW;\n  END;\n  $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_istanze_utilities_ins_set_istanza_codice/","title":"\u2699\ufe0f Funzione <code>trgfn_istanze_utilities_ins_set_istanza_codice</code>","text":"<pre><code>CREATE FUNCTION trgfn_istanze_utilities_ins_set_istanza_codice()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_istanze_utilities_ins_set_istanza_codice/#create-or-replace-function-anagrafichetrgfn_istanze_utilities_ins_set_istanza_codice-returns-trigger-language-plpgsql-as-function-declare-seq_val-bigint-prefix-text-sep-text-len-int-seq_name-text-tipo-text-istanze_utilities-begin-if-newcodice_istanza-is-null-then-select-prefisso-separatore-lunghezza_numero-nome_sequenza-into-prefix-sep-len-seq_name-from-configsistema_codici-where-codice_tipo-tipo-and-attivo-true-limit-1-if-seq_name-is-not-null-then-execute-formatselect-nextvall-seq_name-into-seq_val-newcodice_istanza-prefix-sep-lpadseq_valtext-len-0-else-raise-exception-scriptfn_get_messaggiosequenza_non_configurata-tipo-end-if-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_istanze_utilities_ins_set_istanza_codice()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n  seq_val BIGINT;\n  prefix  TEXT;\n  sep     TEXT;\n  len     INT;\n  seq_name TEXT;\n  tipo    TEXT := 'istanze_utilities';\nBEGIN\n  IF NEW.codice_istanza IS NULL THEN\n    SELECT prefisso, separatore, lunghezza_numero, nome_sequenza\n      INTO prefix, sep, len, seq_name\n      FROM config.sistema_codici\n     WHERE codice_tipo = tipo\n       AND attivo = TRUE\n     LIMIT 1;\n\n    IF seq_name IS NOT NULL THEN\n      EXECUTE format('SELECT nextval(%L)', seq_name) INTO seq_val;\n      NEW.codice_istanza := prefix || sep || lpad(seq_val::TEXT, len, '0');\n    ELSE\n      RAISE EXCEPTION '%',\n        script.fn_get_messaggio('SEQUENZA_NON_CONFIGURATA', tipo);\n    END IF;\n  END IF;\n\n  RETURN NEW;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_check_soggetto_contatti/","title":"Trgfn soggetti ins upd check soggetto contatti","text":""},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_check_soggetto_contatti/#documentazione-concettuale-trigger-function-anagrafichetrgfn_soggetti_ins_upd_check_soggetto_contatti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_soggetti_ins_upd_check_soggetto_contatti</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - anagrafiche.soggetti  - anagrafiche.contatti </p> <p>Approfondimento funzioni :   - script.fn_log_and_raise_error </p> <p>La trigger function <code>anagrafiche.trgfn_soggetti_ins_upd_check_soggetto_contatti()</code> verifica, al termine dell\u2019inserimento o aggiornamento di un record in <code>anagrafiche.soggetti</code>, che il soggetto associato abbia almeno un contatto valido. Se non trova contatti con <code>is_default = TRUE</code> o almeno un canale valorizzato (email, telefono, cellulare, PEC), registra l\u2019evento e solleva un\u2019eccezione centralizzata.</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_check_soggetto_contatti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Validazione di integrit\u00e0   Garantire che ogni soggetto disponga di almeno un contatto predefinito o dotato di un canale attivo.</p> </li> <li> <p>Log e gestione errori centralizzata   Utilizzare <code>script.fn_log_and_raise_error</code> per tracciare l\u2019anomalia e segnalare l\u2019errore con un codice specifico (<code>E_SOGGETTO_NO_CONTATTI</code>).</p> </li> <li> <p>Deferrable per transazioni   Essendo un constraint trigger <code>DEFERRABLE INITIALLY DEFERRED</code>, l\u2019esecuzione avviene al momento del <code>COMMIT</code>, consentendo di completare tutte le operazioni di contatto correlate prima della verifica finale.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_check_soggetto_contatti/#parametri-e-contesto-del-trigger","title":"\ud83d\udd0d Parametri e Contesto del Trigger","text":"<ul> <li>Trigger associato: <code>AFTER INSERT OR UPDATE</code> su <code>anagrafiche.soggetti</code>, definito come:</li> </ul> <p><pre><code>CREATE CONSTRAINT TRIGGER trg_soggetti_ins_upd_check_soggetto_contatti\n  AFTER INSERT OR UPDATE ON anagrafiche.soggetti\n  DEFERRABLE INITIALLY DEFERRED\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_check_soggetto_contatti();\n</code></pre> * Deferrable: permette di posticipare la verifica fino alla fine della transazione per includere eventuali operazioni correlate su <code>anagrafiche.contatti</code>.</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_check_soggetto_contatti/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Conteggio contatti validi</li> </ol> <p><pre><code>SELECT COUNT(*) INTO v_count\n  FROM anagrafiche.contatti c\n WHERE c.soggetto_id = NEW.id\n   AND c.default_context = 'soggetto'\n   AND (\n     c.is_default\n     OR c.email      IS NOT NULL\n     OR c.telefono   IS NOT NULL\n     OR c.cellulare  IS NOT NULL\n     OR c.pec        IS NOT NULL\n   );\n</code></pre> 2. Verifica risultato</p> <pre><code>IF v_count = 0 THEN\n  PERFORM script.fn_log_and_raise_error(\n    'database',\n    TG_NAME,\n    'E_SOGGETTO_NO_CONTATTI',\n    jsonb_build_object('soggetto_id', NEW.id)\n  );\nEND IF;\n</code></pre> <ul> <li>Chiama <code>fn_log_and_raise_error</code>, che registra su log la violazione e solleva l\u2019eccezione appropriata.</li> <li>Restituzione    Restituisce <code>NEW</code> se la condizione \u00e8 soddisfatta; altrimenti l\u2019eccezione interrompe la commit.</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_check_soggetto_contatti/#error-handling-e-logging","title":"\ud83d\udd12 Error Handling e Logging","text":"<ul> <li>Codice errore: <code>E_SOGGETTO_NO_CONTATTI</code> (messaggio configurato in <code>config.messaggi_errore</code>).</li> <li>Context payload: JSON <code>{ \"soggetto_id\": &lt;NEW.id&gt; }</code> passato a <code>fn_log_and_raise_error</code> per dettagliare l\u2019evento di errore.</li> <li>Log ed eccezione: <code>fn_log_and_raise_error</code> effettua il logging e lancia un\u2019eccezione per bloccare la transazione.</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_check_soggetto_contatti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Integrit\u00e0 garantita   Nessun soggetto privo di contatti validi pu\u00f2 essere creato o aggiornato, prevenendo dati anomali.</li> <li>Deferral di verifica   Utilizzo di trigger constraint deferrable per includere le modifiche ai contatti nella stessa transazione.</li> <li>Centralizzazione del logging   Tutta la gestione di log ed eccezioni avviene tramite una funzione dedicata, facilitando l\u2019audit.</li> <li>Manutenzione e coerenza   Separazione fra logica di business (controllo contatti) e gestione degli errori (logging), in due moduli riutilizzabili.</li> </ul> <p>\ud83e\udde0 \u201cUsare un constraint trigger deferrable per verificare i contatti di un soggetto assicura integrit\u00e0 e coerenza dei dati, sfruttando logging e gestione errori centralizzata.\u201d</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_check_soggetto_contatti/#funzione-trgfn_soggetti_ins_upd_check_soggetto_contatti","title":"\u2699\ufe0f Funzione <code>trgfn_soggetti_ins_upd_check_soggetto_contatti</code>","text":"<pre><code>CREATE FUNCTION trgfn_soggetti_ins_upd_check_soggetto_contatti()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_check_soggetto_contatti/#create-or-replace-function-anagrafichetrgfn_soggetti_ins_upd_check_soggetto_contatti-returns-trigger-language-plpgsql-as-function-declare-v_count-integer-begin-verifica-che-il-soggetto-abbia-almeno-un-contatto-di-default-is_default-true-oppure-un-contatto-con-almeno-un-canale-non-nullo-select-count-into-v_count-from-anagrafichecontatti-c-where-csoggetto_id-newid-and-cis_default-or-cemail-is-not-null-or-ctelefono-is-not-null-or-ccellulare-is-not-null-or-cpec-is-not-null-if-v_count-0-then-logga-e-solleva-errore-usando-il-wrapper-centralizzato-perform-scriptfn_log_and_raise_error-database-tg_name-nome-del-trigger-e_soggetto_no_contatti-codice-messaggio-jsonb_build_objectsoggetto_id-newid-contesto-json-nulluuid-variadic-arraytext-argomenti-variabili-fn_log_and_raise_error-dara-raise-exception-internamente-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_check_soggetto_contatti()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n  v_count INTEGER;\n\nBEGIN\n\n  -- ====================================================================\n  -- Verifica che il soggetto abbia almeno:\n  --   \u2022 un contatto di default (is_default = TRUE), oppure\n  --   \u2022 un contatto con almeno un canale non nullo \n  -- ====================================================================\n  SELECT COUNT(*) INTO v_count\n    FROM anagrafiche.contatti c\n  WHERE c.soggetto_id = NEW.id\n    AND (\n      c.is_default\n      OR c.email      IS NOT NULL\n      OR c.telefono   IS NOT NULL\n      OR c.cellulare  IS NOT NULL\n      OR c.pec        IS NOT NULL\n    );\n\n  IF v_count = 0 THEN\n    -- Logga e solleva errore usando il wrapper centralizzato\n    PERFORM script.fn_log_and_raise_error(\n      'database',\n      TG_NAME,                               -- nome del trigger\n      'E_SOGGETTO_NO_CONTATTI',              -- codice messaggio\n      jsonb_build_object('soggetto_id', NEW.id),  -- contesto JSON\n      NULL::uuid,                                    \n      VARIADIC ARRAY[]::text[]                -- argomenti variabili\n    );\n    -- fn_log_and_raise_error dar\u00e0 RAISE EXCEPTION internamente\n  END IF;\n\n  RETURN NEW;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_clean_fields/","title":"Trgfn soggetti ins upd clean fields","text":""},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_clean_fields/#documentazione-concettuale-funzione-anagrafichetrgfn_soggetti_ins_upd_clean_fields","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>anagrafiche.trgfn_soggetti_ins_upd_clean_fields()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>anagrafiche.soggetti</li> <li>config.stati</li> </ul> <p>Approfondimento funzioni:</p> <ul> <li>script.fn_get_default_by_param</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_clean_fields/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Impostare valori di default per campi mancanti in <code>anagrafiche.soggetti</code> (ad esempio, assegnare <code>stato_id</code> da <code>config.stati</code> se <code>NEW.stato_id</code> \u00e8 <code>NULL</code>).</li> <li>Pulire e normalizzare ulteriori campi (es. trimming, uppercasing) seguendo le regole di business.</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_clean_fields/#collegamenti","title":"\ud83d\udd17 Collegamenti","text":"<ul> <li><code>anagrafiche.soggetti</code> \u2013 tabella su cui si applica il trigger <code>BEFORE INSERT OR UPDATE</code>.</li> <li><code>config.stati</code> \u2013 usata come lookup per recuperare il PK di default tramite <code>codice_iso3</code>.</li> <li><code>script.fn_get_default_by_param</code> \u2013 funzione dinamica che esegue il lookup del valore di default da una tabella di configurazione.</li> <li>Trigger associato: <code>trg_soggetti_ins_upd_clean_fields</code> (viene creato dal Liquibase changeSet <code>20250730-07-trgfn_soggetti_ins_upd_clean_fields_v1</code>).</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_clean_fields/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Il trigger viene invocato BEFORE INSERT OR UPDATE su <code>anagrafiche.soggetti</code> e agisce su <code>NEW</code>.</li> <li>Assegnazione default: utilizza <code>fn_get_default_by_param('config','stati','codice_iso3','state_code_iso3', TG_NAME)::integer</code> per ottenere il <code>stato_id</code>.</li> <li><code>TG_NAME</code> passa automaticamente il nome del trigger alla funzione per migliorare il contesto di log in caso di errore.</li> <li>Estendibilit\u00e0: dopo il lookup di default \u00e8 possibile inserire ulteriori blocchi di cleanup (es. normalizzazione di <code>nome</code>, <code>cognome</code>).</li> <li>Robustezza: la funzione di lookup solleva eccezione se non trova il valore, garantendo coerenza dei dati.</li> </ul> <p>\ud83e\udde0 \u201cAllinea i record di <code>anagrafiche.soggetti</code> a regole di default e pulizia automatica: default lookup, normalizzazione e coerenza garantita.\u201d</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_clean_fields/#funzione-trgfn_soggetti_ins_upd_clean_fields","title":"\u2699\ufe0f Funzione <code>trgfn_soggetti_ins_upd_clean_fields</code>","text":"<pre><code>CREATE FUNCTION trgfn_soggetti_ins_upd_clean_fields()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_clean_fields/#create-or-replace-function-anagrafichetrgfn_soggetti_ins_upd_clean_fields-returns-trigger-language-plpgsql-as-function-begin-1-imposta-stato_id-di-default-da-configstati-se-e-null-if-newstato_id-is-null-then-newstato_id-scriptfn_get_default_by_param-config-schema-della-tabella-lookup-stati-tabella-di-lookup-codice_iso3-colonna-di-filtro-in-configstati-state_code_iso3-codice-parametro-in-configparameters-tg_name-nome-del-trigger-chiamante-integer-cast-al-tipo-integer-di-stato_id-end-if-2-altri-cleanup-esempi-if-newnome-is-not-null-then-newnome-uppertrimnewnome-end-if-if-newcognome-is-not-null-then-newcognome-uppertrimnewcognome-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_clean_fields()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n BEGIN\n   ------------------------------------------------------------------\n   -- 1) Imposta stato_id di default da config.stati se \u00e8 NULL\n   IF NEW.stato_id IS NULL THEN\n     NEW.stato_id := script.fn_get_default_by_param(\n       'config',           -- schema della tabella lookup\n       'stati',            -- tabella di lookup\n       'codice_iso3',        -- colonna di filtro in config.stati\n       'state_code_iso3',  -- codice parametro in config.parameters\n       TG_NAME             -- nome del trigger chiamante\n     )::integer;           -- cast al tipo integer di stato_id\n   END IF;\n   ------------------------------------------------------------------\n   -- 2) Altri cleanup (esempi)\n   --IF NEW.nome IS NOT NULL THEN\n   --  NEW.nome := UPPER(TRIM(NEW.nome));\n   --END IF;\n   --IF NEW.cognome IS NOT NULL THEN\n     --NEW.cognome := UPPER(TRIM(NEW.cognome));\n  -- END IF;\n   ------------------------------------------------------------------\n   RETURN NEW;\n END;\n $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_genera_cdsoggetto/","title":"Trgfn soggetti ins upd genera cdsoggetto","text":""},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_genera_cdsoggetto/#documentazione-concettuale-trigger-function-anagrafichetrgfn_soggetti_ins_upd_genera_cdsoggetto","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.sistema_codici </p> <p>Approfondimenti funzioni:  - script.fn_generate_codice </p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_genera_cdsoggetto/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La trigger function <code>anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto()</code> viene eseguita <code>BEFORE INSERT OR UPDATE</code> su <code>anagrafiche.soggetti</code> e si occupa di:</p> <ul> <li>Verificare se il campo <code>codice_soggetto</code> \u00e8 nullo.</li> <li>Generare automaticamente un nuovo <code>codice_soggetto</code> utilizzando la logica centralizzata in <code>script.fn_generate_codice('soggetto')</code>.</li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_genera_cdsoggetto/#obiettivi-e-ruolo","title":"\u2699\ufe0f Obiettivi e Ruolo","text":"<ol> <li>Unicit\u00e0 e coerenza: garantire che ogni soggetto inserito o aggiornato abbia un codice univoco, evitando conflitti manuali.</li> <li>Centralizzazione della generazione: delegare la logica di creazione alla funzione di utility <code>fn_generate_codice</code>, che usa la tabella di sistema <code>config.sistema_codici</code> per decide prefissi, sequenze e formati.</li> <li>Semplicit\u00e0 di manutenzione: modifiche al formato dei codici o alle regole di sequenza avvengono in un unico punto (<code>fn_generate_codice</code>), senza toccare il trigger.</li> </ol>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_genera_cdsoggetto/#flusso-di-esecuzione-dettagliato","title":"\ud83d\udd0d Flusso di Esecuzione Dettagliato","text":"<ol> <li> <p>Verifica dell\u2019operazione    Il trigger opera sia su <code>INSERT</code> sia su <code>UPDATE</code>.</p> </li> <li> <p>Controllo <code>codice_soggetto</code></p> </li> </ol> <pre><code>IF (TG_OP = 'INSERT' OR TG_OP = 'UPDATE')\n   AND NEW.codice_soggetto IS NULL THEN\n  -- Campo non valorizzato: generazione automatica\n</code></pre> <ol> <li>Invocazione della funzione di generazione</li> </ol> <pre><code>NEW.codice_soggetto := script.fn_generate_codice('soggetto');\n</code></pre> <ul> <li> <p><code>fn_generate_codice</code> legge da <code>config.sistema_codici</code> i parametri (prefisso, sequenza, formato) per il dominio <code>'soggetto'</code>.</p> </li> <li> <p>Restituzione del record    Il record aggiornato con <code>NEW.codice_soggetto</code> valorizzato viene restituito all\u2019operazione DML.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_genera_cdsoggetto/#esempio-di-trigger-ddl","title":"\ud83d\udd16 Esempio di Trigger DDL","text":"<pre><code>DROP TRIGGER IF EXISTS trg_soggetti_ins_upd_genera_cdsoggetto\n  ON anagrafiche.soggetti;\n\nCREATE TRIGGER trg_soggetti_ins_upd_genera_cdsoggetto\n  BEFORE INSERT OR UPDATE\n  ON anagrafiche.soggetti\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto();\n</code></pre>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_genera_cdsoggetto/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Automazione: elimina la necessit\u00e0 di calcolare o fornire manualmente il codice del soggetto.</li> <li>Consistenza: assicura che tutti i codici seguano lo stesso pattern, facilitando ricerche e integrazioni.</li> <li>Flessibilit\u00e0: cambiamenti al pattern di codice (prefissi, lunghezza, charset) si applicano modificando solo <code>config.sistema_codici</code> o la funzione <code>fn_generate_codice</code>.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>trgfn_soggetti_ins_upd_genera_cdsoggetto</code>, Zero ERP assicura codici di soggetto uniformi e coerenti, lasciando al database il compito di generare e mantenere la logica di sequenza.\u201d</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_genera_cdsoggetto/#funzione-trgfn_soggetti_ins_upd_genera_cdsoggetto","title":"\u2699\ufe0f Funzione <code>trgfn_soggetti_ins_upd_genera_cdsoggetto</code>","text":"<pre><code>CREATE FUNCTION trgfn_soggetti_ins_upd_genera_cdsoggetto()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_ins_upd_genera_cdsoggetto/#create-or-replace-function-anagrafichetrgfn_soggetti_ins_upd_genera_cdsoggetto-returns-trigger-language-plpgsql-as-function-begin-se-il-codice-soggetto-e-null-si-richiama-la-funzione-per-la-generazione-automatico-il-codice-sara-generato-come-indicato-nella-tabella-sistema_codici-if-tg_op-insert-or-tg_op-update-and-newcodice_soggetto-is-null-then-newcodice_soggetto-scriptfn_generate_codicesoggetto-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  /*     Se il codice soggetto \u00e8 null si richiama la funzione per la generazione automatico, \n      il codice sar\u00e0 generato come indicato nella tabella sistema_codici \n  */\n  IF (TG_OP = 'INSERT' OR TG_OP = 'UPDATE' ) AND NEW.codice_soggetto IS NULL THEN\n    NEW.codice_soggetto := script.fn_generate_codice('soggetto');\n  END IF;\n  RETURN NEW;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_valida_cf_piva_dispatch/","title":"Trgfn soggetti valida cf piva dispatch","text":""},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_valida_cf_piva_dispatch/#documentazione-concettuale-trigger-function-anagrafichetrgfn_soggetti_valida_cf_piva_dispatch","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.stati </p> <p>Approfondimenti funzioni:   - script.validate_cf_piva_it </p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_valida_cf_piva_dispatch/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La trigger function <code>anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch()</code> viene eseguita <code>BEFORE INSERT OR UPDATE</code> sulla tabella <code>anagrafiche.soggetti</code> e instrada la validazione di codice fiscale e partita IVA in base allo Stato e al dettaglio di soggetto.</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_valida_cf_piva_dispatch/#obiettivi-e-ruolo","title":"\u2699\ufe0f Obiettivi e Ruolo","text":"<ol> <li>Selezione del contesto nazionale    Recuperare il <code>codice_iso2</code> dello Stato (<code>stato_id</code>) per identificare il Paese di validazione.</li> <li>Dispatch su validazione specifica    Per lo Stato IT, invocare la funzione <code>script.fn_validate_cf_piva_it</code>, passando il dettaglio di soggetto e i campi fiscali.</li> <li>Estendibilit\u00e0    Consentire in futuro di aggiungere branch per altri paesi, invocando funzioni di validazione dedicate.</li> </ol>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_valida_cf_piva_dispatch/#flusso-di-esecuzione-dettagliato","title":"\ud83d\udd0d Flusso di Esecuzione Dettagliato","text":"<ol> <li>Recupero Stato</li> </ol> <p><pre><code>SELECT codice_iso2 INTO country\n  FROM config.stati\n WHERE id = NEW.stato_id;\n</code></pre> 2. Controllo branch IT    Se <code>country = 'IT'</code>, viene eseguita:</p> <p><pre><code>PERFORM script.fn_validate_cf_piva_it(\n  NEW.tipo_soggetto_dettaglio_id,\n  NEW.partita_iva,\n  NEW.piva_gruppo_acquisto,\n  NEW.codice_fiscale\n);\n</code></pre> 3. Ritorno del record    Quando la validazione termina senza eccezioni, la riga viene restituita a INSERT/UPDATE.</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_valida_cf_piva_dispatch/#esempio-di-trigger-ddl","title":"\ud83d\udd16 Esempio di Trigger DDL","text":"<pre><code>DROP TRIGGER IF EXISTS trg_soggetti_ins_upd_dispatch_valida_cf_piva\n  ON anagrafiche.soggetti;\n\nCREATE TRIGGER trg_soggetti_ins_upd_dispatch_valida_cf_piva\n  BEFORE INSERT OR UPDATE\n  ON anagrafiche.soggetti\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch();\n</code></pre>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_valida_cf_piva_dispatch/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Centralizzazione validation: tutta la logica di CF/P.IVA per l\u2019Italia \u00e8 in un\u2019unica funzione.</li> <li>Manutenibilit\u00e0: nuove regole per altri paesi si aggiungono semplicemente con nuovi branch o funzioni dedicate.</li> <li>Coerenza dati: errori di formato e regole specifiche sono applicate a livello database, riducendo la complessit\u00e0 lato applicazione.</li> </ul> <p>\ud83e\udde0 \u201cCon il dispatch centralizzato in <code>trgfn_soggetti_valida_cf_piva_dispatch</code>, Zero ERP assicura controlli locali e internazionali sui dati fiscali in modo modulare e a prova di evoluzioni future.\u201d</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_valida_cf_piva_dispatch/#funzione-trgfn_soggetti_valida_cf_piva_dispatch","title":"\u2699\ufe0f Funzione <code>trgfn_soggetti_valida_cf_piva_dispatch</code>","text":"<pre><code>CREATE FUNCTION trgfn_soggetti_valida_cf_piva_dispatch()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/anagrafiche/funzioni/trgfn_soggetti_valida_cf_piva_dispatch/#create-or-replace-function-anagrafichetrgfn_soggetti_valida_cf_piva_dispatch-returns-trigger-language-plpgsql-as-function-declare-country-text-begin-select-codice_iso2-into-country-from-configstati-where-id-newstato_id-limit-1-if-country-it-then-perform-scriptfn_validate_cf_piva_it-newtipo_soggetto_dettaglio_id-newpartita_iva-newpiva_gruppo_acquisto-newcodice_fiscale-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n  DECLARE\n    country TEXT;\n  BEGIN\n    SELECT codice_iso2 INTO country\n      FROM config.stati\n    WHERE id = NEW.stato_id\n    LIMIT 1;\n\n    IF country = 'IT' THEN\n      PERFORM script.fn_validate_cf_piva_it(\n        NEW.tipo_soggetto_dettaglio_id,\n        NEW.partita_iva,\n        NEW.piva_gruppo_acquisto,\n        NEW.codice_fiscale\n      );\n    END IF;\n\n    RETURN NEW;\n  END;\n  $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/manual/contatti/","title":"Contatti","text":""},{"location":"dbzero/anagrafiche/manual/contatti/#documentazione-concettuale-tabella-anagrafichecontatti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.contatti</code>","text":"<p>\ud83d\udc40 Vedi anche Approfondimento tabelle:   - anagrafiche.soggetti  - anagrafiche.soggetti_ruoli  - config.tipi_contatti  - config.utilities </p> <p>Approfondimenti funzioni:  - anagrafiche.trgfn_contatti_ins_upd_set_default_contatto  - script.trgfn_upd_audit_data_user_generic </p> <p>La tabella <code>anagrafiche.contatti</code> \u00e8 il punto di raccolta centralizzato per tutte le informazioni di contatto nell\u2019applicazione, a diversi livelli di granularit\u00e0:</p> <ul> <li>Soggetto (<code>soggetto_id</code> obbligatorio)  </li> <li>Ruolo assegnato al soggetto (<code>soggetto_ruolo_id</code>, opzionale)  </li> <li>Servizio/utility (<code>utility_id</code>, opzionale)  </li> </ul> <p>In questo modo \u00e8 possibile definire:</p> <ol> <li> <p>Contatto \u201cglobale\u201d del soggetto    (solo <code>soggetto_id</code>, <code>soggetto_ruolo_id</code> e <code>utility_id</code> a <code>NULL</code>)</p> </li> <li> <p>Contatto legato a uno specifico ruolo    (ad es. l\u2019amministratore di un soggetto, con <code>soggetto_ruolo_id</code> valorizzato)</p> </li> <li> <p>Contatto associato a un servizio/utility    (ad es. referente tecnico per un determinato servizio)</p> </li> </ol>"},{"location":"dbzero/anagrafiche/manual/contatti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Centralizzare i contatti   Un\u2019unica tabella per tutti i numeri di telefono, email, PEC e nominativi, evitando duplicazioni e frammentazione.</p> </li> <li> <p>Gestire livelli di contesto   Tramite i campi <code>soggetto_ruolo_id</code> e <code>utility_id</code> (che possono essere <code>NULL</code>), si modellano contatti generici o specifici.</p> </li> <li> <p>Identificare il contatto \u201cdefault\u201d   Il flag <code>is_default</code> permette di marcare un solo contatto di riferimento per ciascun soggetto.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/contatti/#vincoli-e-relazioni","title":"\ud83d\udd0d Vincoli e Relazioni","text":"<ul> <li><code>PK (id)</code>: identificatore univoco del contact record.  </li> <li><code>UNIQUE (soggetto_id, soggetto_ruolo_id, utility_id, tipo_contatto_id)</code>   Garantisce una sola entry per combinazione di soggetto/ruolo/utility e tipo di contatto.  </li> <li>Foreign Keys </li> <li><code>soggetto_id</code> \u2192 <code>anagrafiche.soggetti(id)</code> ON DELETE CASCADE </li> <li><code>soggetto_ruolo_id</code> \u2192 <code>anagrafiche.soggetti_ruoli(id)</code> ON DELETE CASCADE </li> <li><code>tipo_contatto_id</code> \u2192 <code>config.tipi_contatti(id)</code> ON DELETE RESTRICT </li> <li><code>utility_id</code> \u2192 <code>config.utilities(id)</code> ON DELETE CASCADE </li> </ul>"},{"location":"dbzero/anagrafiche/manual/contatti/#relazioni-e-trigger","title":"\u2699\ufe0f Relazioni e Trigger","text":"<ul> <li>Trigger <code>trg_contatti_ins_upd_set_default_contatto</code>   Assicura che esista al pi\u00f9 un contatto <code>is_default = TRUE</code> per ogni <code>soggetto_id</code>:  </li> <li>Se <code>NEW.is_default = TRUE</code>, resetta gli altri a <code>FALSE</code>.  </li> <li> <p>Se nessun contatto precedente \u00e8 <code>default</code>, marca automaticamente il primo inserito/aggiornato.</p> </li> <li> <p>Trigger <code>trg_upd_contatti_audit_data_user</code>   Aggiorna i campi <code>data_update</code> e <code>user_update</code> ad ogni modifica.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/contatti/#indici","title":"\ud83d\udd17 Indici","text":"<ul> <li><code>ix_contatti_soggetto</code> su <code>soggetto_id</code> per ricerche rapide per soggetto.</li> <li><code>ix_contatti_tipo</code> su <code>tipo_contatto_id</code> per filtrare contatti per tipologia.</li> <li><code>ix_contatti_utility</code> su <code>utility_id</code> per isolare contatti per servizio.</li> </ul> <p>Migliorano le performance nelle query di recupero contatti per soggetto, tipo o servizio.</p>"},{"location":"dbzero/anagrafiche/manual/contatti/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<p>```sql -- 1) Contatto globale per il soggetto UUID '123e4567-e89b-12d3-a456-426614174000' INSERT INTO anagrafiche.contatti (   tipo_contatto_id, soggetto_id,   nominativo, email, telefono, is_default ) VALUES (   1, '123e4567-e89b-12d3-a456-426614174000',   'Mario Rossi', 'm.rossi@example.com', '0123456789', TRUE );</p> <p>-- 2) Contatto specifico per ruolo (soggetto_ruolo_id = 10) INSERT INTO anagrafiche.contatti (   tipo_contatto_id, soggetto_id, soggetto_ruolo_id,   nominativo, cellulare ) VALUES (   2, '123e4567-e89b-12d3-a456-426614174000', 10,   'Luca Bianchi', '3801234567' );</p> <p>-- 3) Contatto per utility (utility_id = 5) INSERT INTO anagrafiche.contatti (   tipo_contatto_id, soggetto_id, utility_id,   nominativo, pec ) VALUES (   3, '123e4567-e89b-12d3-a456-426614174000', 5,   'Ufficio Tecnico', 'tecnico@azienda.pec' );</p> <p>-- 4) Impostare un contatto come default (il trigger resetta gli altri) UPDATE anagrafiche.contatti    SET is_default = TRUE  WHERE id = 42;</p> <p>-- 5) Recuperare il contatto default di un soggetto SELECT *   FROM anagrafiche.contatti  WHERE soggetto_id = '123e4567-e89b-12d3-a456-426614174000'    AND is_default;</p>"},{"location":"dbzero/anagrafiche/manual/contatti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Flessibilit\u00e0: un singolo modello per ogni combinazione soggetto/ruolo/servizio e tipo di contatto.</p> </li> <li> <p>Univocit\u00e0: constraint e trigger assicurano coerenza e un solo contatto predefinito per soggetto.</p> </li> <li> <p>Manutenzione semplificata: aggiornare o estendere i tipi di contatto avviene solo in tabelle di configurazione.</p> </li> <li> <p>Tracciabilit\u00e0: audit dei cambiamenti con timestamp e utente, per compliance e debugging.</p> </li> </ul> <p>\ud83e\udde0 Centralizzare i contatti in un\u2019unica tabella con supporto multi-contesto e contact default migliora coerenza, performance e usabilit\u00e0 del sistema.\u201d</p>"},{"location":"dbzero/anagrafiche/manual/dati_societari/","title":"Dati societari","text":""},{"location":"dbzero/anagrafiche/manual/dati_societari/#documentazione-concettuale-tabella-anagrafichedati_societari","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.dati_societari</code>","text":"<p>\ud83d\udc40 Vedi anche Approfondimento Tabelle:  </p> <ul> <li>anagrafiche.soggetti </li> <li>config.province</li> </ul> <p>Approfondimento funzioni e trigger:</p> <ul> <li>anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto</li> <li>script.trgfn_upd_dlt_storico_generic</li> <li>dbops.trgfn_tx_id_managed</li> </ul> <p>La tabella <code>anagrafiche.dati_societari</code> contiene i dati societari estesi per ciascun soggetto di tipo aziendale presente in <code>anagrafiche.soggetti</code>. Ogni riga rappresenta un insieme di informazioni obbligatorie e opzionali relative alla forma giuridica, capitale sociale, iscrizione REA, stato di liquidazione e modalit\u00e0 di fatturazione elettronica.</p>"},{"location":"dbzero/anagrafiche/manual/dati_societari/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Estendere l\u2019anagrafica generale   I soggetti di tipo giuridico (aziende) hanno esigenze di memorizzazione di dati societari che non interessano le persone fisiche. Spostando queste informazioni in <code>dati_societari</code>, si mantiene la tabella <code>anagrafiche.soggetti</code> leggera e focalizzata sui campi anagrafici di base. Solo per i tipi soggetti appropriati controllati dalla trigger function <code>anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto</code></p> </li> <li> <p>Gestione iscrizione REA e capitale sociale   Memorizzare la provincia di iscrizione REA (<code>id_prov_iscri_rea</code> + <code>iscrizione_rea</code>) e il capitale sociale in Euro (<code>capitale_sociale</code>), dato fondamentale per valutazioni finanziarie e di business.</p> </li> <li> <p>Informazioni su socio unico e liquidazione   Tenere traccia degli stati societari tramite i campi enumerati <code>socio_unico</code> (se \u00e8 \u201cSocio Unico\u201d o \u201cSocio Multiplo\u201d) e <code>liquidazione</code> (se la societ\u00e0 \u00e8 in liquidazione o meno).</p> </li> <li> <p>Dati di fatturazione elettronica   Conservare il codice SDI (<code>codice_sdi</code>) e la PEC dedicata (<code>pec_fatturazione</code>) utilizzati per l\u2019invio di fatture elettroniche (B2B/B2C), oltre al \u201ccodice destinatario FE\u201d (<code>destinatario_fe</code>).</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/dati_societari/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>anagrafiche.soggetti</code> </li> <li>Il campo <code>soggetto_id</code> (UUID) fa riferimento alla chiave primaria di <code>anagrafiche.soggetti(id)</code>.  </li> <li>Vincolo <code>fk_soggetti_anagrafiche</code>:  <ul> <li>ON UPDATE CASCADE (se cambia l\u2019ID del soggetto, si propaga)  </li> <li>ON DELETE CASCADE (se un soggetto viene eliminato, si rimuovono automaticamente i suoi dati societari).  </li> </ul> </li> <li> <p>Ogni soggetto di tipo \u201cazienda\u201d pu\u00f2 avere al massimo una riga in <code>dati_societari</code> (vincolo di unicit\u00e0 <code>uq_ds_soggetto</code>).</p> </li> <li> <p><code>config.province</code> </p> </li> <li>Il campo <code>id_prov_iscri_rea</code> (integer) fa riferimento a <code>config.province(id)</code>.  </li> <li>Vincolo <code>fk_province_config</code>:  <ul> <li>ON UPDATE CASCADE (se l\u2019ID di una provincia cambia, si propaga)  </li> <li>ON DELETE RESTRICT (non si pu\u00f2 eliminare una provincia se esistono aziende iscritte l\u00ec).  </li> </ul> </li> <li>Il binomio (<code>id_prov_iscri_rea</code>, <code>iscrizione_rea</code>) \u00e8 garantito unico da <code>uq_ds_prov_cea</code>, evitando duplicati di iscrizione REA nella stessa provincia.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/dati_societari/#vincoli-di-unicita-e-integrita","title":"\ud83d\udea9 Vincoli di Unicit\u00e0 e Integrit\u00e0","text":"<ul> <li>Primary Key </li> <li> <p><code>pk_dati_societari</code> su <code>id_dati_societari</code>, gestito da sequenza automatica.</p> </li> <li> <p>Unicit\u00e0 dei campi di fatturazione </p> </li> <li><code>uq_ds_codice_sdi</code> su <code>codice_sdi</code> (ogni codice SDI pu\u00f2 appartenere a una sola azienda).  </li> <li> <p><code>uq_ds_pec_fatt</code> su <code>pec_fatturazione</code> (ogni PEC di fatturazione \u00e8 univoca).</p> </li> <li> <p>Unicit\u00e0 iscrizione REA </p> </li> <li> <p><code>uq_ds_prov_cea</code> su (<code>id_prov_iscri_rea</code>, <code>iscrizione_rea</code>), garantendo che non esistano due aziende con la stessa iscrizione REA nella stessa provincia.</p> </li> <li> <p>Vincolo <code>uq_ds_soggetto</code> </p> </li> <li>Assicura che ogni <code>soggetto_id</code> compaia al pi\u00f9 una volta in <code>dati_societari</code>, evitando duplicati di scheda societaria.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/dati_societari/#descrizione-dei-campi-principali","title":"\ud83d\udd0d Descrizione dei Campi Principali","text":"<ul> <li> <p><code>soggetto_id</code>   Riferimento al soggetto (UUID) in <code>anagrafiche.soggetti</code>. Identifica in modo univoco l\u2019azienda cui appartengono questi dati societari.</p> </li> <li> <p><code>forma_giuridica</code>   Testo che indica la forma giuridica della societ\u00e0 (es. \u201cSRL\u201d, \u201cSPA\u201d, \u201cSNC\u201d). \u00c8 un campo obbligatorio.</p> </li> <li> <p><code>capitale_sociale</code>   Valore numerico (precisione 15,2) che rappresenta il capitale sociale, espresso in Euro. Campo obbligatorio.</p> </li> <li> <p><code>id_prov_iscri_rea</code>   Intero che indica la provincia di iscrizione al Registro delle Imprese (REA), collegato a <code>config.province(id)</code>.</p> </li> <li> <p><code>iscrizione_rea</code>   Testo (fino a 30 caratteri) che indica il numero di iscrizione REA. Deve essere valorizzato ed \u00e8 unito a <code>id_prov_iscri_rea</code> dal vincolo di unicit\u00e0.</p> </li> <li> <p><code>socio_unico</code>   Tipo enumerato <code>anagrafiche.socio_unico_enum</code>:  </p> </li> <li><code>SU</code> = Socio Unico  </li> <li> <p><code>SM</code> = Socio Multiplo   Valorizzato di default a <code>SU</code>.</p> </li> <li> <p><code>liquidazione</code>   Tipo enumerato <code>anagrafiche.liquidazione_enum</code>:  </p> </li> <li><code>LN</code> = Non in liquidazione (default)  </li> <li> <p><code>LS</code> = In liquidazione  </p> </li> <li> <p><code>destinatario_fe</code>   Testo fino a 10 caratteri che contiene il \u201ccodice destinatario\u201d per la fatturazione elettronica. Campo obbligatorio (ad uso interno).</p> </li> <li> <p><code>pec_fatturazione</code>   PEC (Testo fino a 100 caratteri) dedicata alla fatturazione elettronica. Deve essere univoca o valorizzata a <code>NULL</code> se non disponibile.</p> </li> <li> <p><code>codice_sdi</code>   Testo fino a 10 caratteri che rappresenta il \u201ccodice SDI\u201d per la fatturazione elettronica. Deve essere univoco o valorizzato a <code>NULL</code>.</p> </li> <li> <p><code>data_costituzione</code>   Data di costituzione dell\u2019azienda. Campo opzionale: pu\u00f2 essere <code>NULL</code> se non disponibile.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/dati_societari/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Separazione dei dati societari dal resto   Consolidando le informazioni strettamente legate alla natura giuridica e fiscale di un\u2019azienda in una tabella dedicata, si migliora la coerenza e la manutenzione. La tabella <code>anagrafiche.soggetti</code> resta focalizzata su campi di base comuni a tutte le tipologie di soggetti.</p> </li> <li> <p>Garanzia di unicit\u00e0 e integrit\u00e0   I vincoli di unicit\u00e0 su <code>codice_sdi</code>, <code>pec_fatturazione</code>, <code>iscrizione_rea</code> (assieme a <code>id_prov_iscri_rea</code>) e <code>soggetto_id</code> impediscono duplicazioni di dati critici, evitando errori nelle fasi di fatturazione e verifica anagrafica.</p> </li> <li> <p>Tracciabilit\u00e0 della relazione soggetto \u2192 dati societari   La cancellazione a cascata del soggetto rimuove automaticamente la scheda societaria associata, semplificando l\u2019amministrazione dei dati e riducendo la possibilit\u00e0 di record orfani.</p> </li> <li> <p>Supporto a processi di fatturazione elettronica   Con <code>destinatario_fe</code>, <code>pec_fatturazione</code> e <code>codice_sdi</code>, la tabella fornisce tutte le informazioni necessarie per l\u2019invio di fatture elettroniche conformi alle normative italiane.</p> </li> </ul> <p>\ud83e\udde0 \u201cUn\u2019estensione dedicata ai dati societari, che valorizza la tabella anagrafica base separando informazioni fiscali, legali e di fatturazione in un unico punto, con regole di integrit\u00e0 che evitano inconsistenze.\u201d </p>"},{"location":"dbzero/anagrafiche/manual/gestori/","title":"Gestori","text":""},{"location":"dbzero/anagrafiche/manual/gestori/#documentazione-concettuale-tabella-anagrafichegestori","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.gestori</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:   - anagrafiche.soggetti   - anagrafiche.soggetti_ruoli   - config.valute </p> <p>Approfondimenti funzioni:  - anagrafiche.trgfn_gestori_ins_upd_check_ruolo_gestore  - script.fn_check_ins_soggetto_ruolo </p> <p>La tabella <code>anagrafiche.gestori</code> rappresenta l\u2019azienda stessa che utilizza e amministra il sistema Zero ERP (\u201cgestore\u201d). Attualmente raccoglie le informazioni di base necessarie a identificare il gestore, ma \u00e8 ancora in fase di definizione: in futuro potr\u00e0 essere estesa per includere ulteriori parametri funzionali e di configurazione del software.</p>"},{"location":"dbzero/anagrafiche/manual/gestori/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Identificare il gestore del sistema   Memorizzare la riga unica che corrisponde all\u2019azienda proprietaria o amministratrice di Zero ERP, distinguendola da tutti gli altri soggetti (clienti, fornitori, partner, ecc.).</p> </li> <li> <p>Collegare il gestore all\u2019anagrafica generica   Utilizzare il campo <code>soggetto_id</code> per riferirsi al record corrispondente in <code>anagrafiche.soggetti</code> (azienda di tipo giuridico), garantendo coerenza fra scheda anagrafica e scheda gestore.</p> </li> <li> <p>Assicurare il ruolo corretto   Contribuire al rispetto della logica applicativa: il trigger <code>trg_gestori_ins_upd_check_ruolo_gestore</code> verifica che il record inserito o aggiornato faccia effettivamente riferimento a una relazione soggetto-ruolo di tipo \u201cGestore\u201d (presente in <code>anagrafiche.soggetti_ruoli</code>).</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/gestori/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>anagrafiche.soggetti</code> </li> <li>Il campo <code>soggetto_id</code> (UUID) \u00e8 una chiave esterna che punta a <code>anagrafiche.soggetti(id)</code>.  </li> <li> <p>Vincolo <code>fk_soggetti_anagrafiche</code>:  </p> <ul> <li>ON UPDATE NO ACTION </li> <li>ON DELETE RESTRICT (non \u00e8 consentito eliminare il soggetto di tipo \u201cgestore\u201d finch\u00e9 rimane collegato).  </li> </ul> </li> <li> <p><code>anagrafiche.soggetti_ruoli</code> </p> </li> <li>Il campo <code>soggetto_ruolo_id</code> (integer) fa riferimento a una riga di <code>anagrafiche.soggetti_ruoli(id)</code> avente ruolo \u201cGestore\u201d.  </li> <li> <p>Vincolo <code>fk_soggetti_ruoli_anagrafiche</code>:  </p> <ul> <li>ON UPDATE NO ACTION </li> <li>ON DELETE RESTRICT (non \u00e8 consentito eliminare la relazione soggetto-ruolo \u201cGestore\u201d se \u00e8 in uso).  </li> </ul> </li> <li> <p><code>config.valute</code> </p> </li> <li>Il campo <code>valuta_id</code> (integer) rimanda a <code>config.valute(id)</code>, indicando la valuta di default per le operazioni gestionali.  </li> <li>Vincolo <code>fk_valute_config</code>:  <ul> <li>ON UPDATE NO ACTION </li> <li>ON DELETE RESTRICT (la valuta di default non pu\u00f2 essere eliminata se \u00e8 assegnata a un gestore).  </li> </ul> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/gestori/#vincoli-di-unicita-e-integrita","title":"\ud83d\udea9 Vincoli di Unicit\u00e0 e Integrit\u00e0","text":"<ul> <li>Primary Key </li> <li> <p><code>pk_gestori</code> su <code>id</code> (seriale intero generato automaticamente).</p> </li> <li> <p>Riga singleton per gestore </p> </li> <li> <p>Il vincolo <code>uq_gestori_singleton EXCLUDE USING gist ((1) WITH =) WHERE (id IS NOT NULL)</code> assicura che esista al massimo una sola riga nella tabella <code>gestori</code>. In tal modo, zero o un record potranno rappresentare il gestore di Zero ERP.</p> </li> <li> <p>Riferimento obbligatorio a soggetto </p> </li> <li><code>soggetto_id</code> deve sempre esistere in <code>anagrafiche.soggetti</code>.  </li> <li> <p><code>soggetto_ruolo_id</code> deve sempre esistere in <code>anagrafiche.soggetti_ruoli</code> e deve corrispondere a un ruolo \u201cGestore\u201d.</p> </li> <li> <p>Riferimento obbligatorio a valuta </p> </li> <li> <p><code>valuta_id</code> deve sempre esistere in <code>config.valute</code>, per definire la moneta utilizzata dal gestore.</p> </li> <li> <p>Campi testuali obbligatori </p> </li> <li> <p><code>descrizione</code> (50 caratteri) e <code>cd_prod_software</code> (20 caratteri) non possono essere nulli, al fine di fornire un\u2019etichetta descrittiva e l\u2019indicazione del prodotto software in uso.</p> </li> <li> <p>IBAN obbligatorio </p> </li> <li>Il campo <code>iban</code> (35 caratteri) \u00e8 necessario per registrare il conto bancario del gestore.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/gestori/#descrizione-dei-campi-principali","title":"\ud83d\udd0d Descrizione dei Campi Principali","text":"<ul> <li> <p><code>id</code>   Identificativo univoco (seriale intero) per la riga \u201cgestore\u201d.</p> </li> <li> <p><code>soggetto_id</code>   Riferimento al record di <code>anagrafiche.soggetti</code> che rappresenta l\u2019azienda amministratrice. \u00c8 vincolato alla presenza di un soggetto di tipo giuridico.</p> </li> <li> <p><code>soggetto_ruolo_id</code>   Riferimento alla riga di <code>anagrafiche.soggetti_ruoli</code> associata al ruolo \u201cGestore\u201d per il soggetto indicato. Garantisce che il soggetto abbia gi\u00e0 un ruolo valido di tipo \u201cGestore\u201d.</p> </li> <li> <p><code>descrizione</code>   Etichetta testuale (50 caratteri) utilizzata per mostrare un nominativo breve (ad esempio, \u201cACME S.r.l. \u2013 Gestore Sistema\u201d) nelle interfacce utente.</p> </li> <li> <p><code>cd_prod_software</code>   Codice del prodotto software in uso (20 caratteri). Pu\u00f2 essere utile per identificare versioni, edizioni o configurazioni specifiche attivate per il gestore (es. \u201cZEROERP_PRO\u201d o \u201cZEROERP_STD\u201d).</p> </li> <li> <p><code>valuta_id</code>   Riferimento a <code>config.valute(id)</code>, indica la valuta di default per prezzi, bilanci e reporting amministrativo (es. EUR, USD, GBP).</p> </li> <li> <p><code>iban</code>   Codice IBAN (35 caratteri) del conto corrente aziendale del gestore, utilizzato per operazioni bancarie e pagamento fatture.</p> </li> <li> <p><code>user_insert</code>, <code>data_insert</code>, <code>user_update</code>, <code>data_update</code>   Campi di audit standard:</p> </li> <li><code>user_insert</code>: login utente che ha creato la riga.  </li> <li><code>data_insert</code>: timestamp di creazione.  </li> <li><code>user_update</code>: login utente che ha eseguito l\u2019ultima modifica.  </li> <li><code>data_update</code>: timestamp dell\u2019ultima modifica.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/gestori/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Singleton azienda gestore   Grazie al vincolo di esclusione su <code>(1)</code>, si garantisce che esista al massimo una sola riga che rappresenta l\u2019azienda \u201cgestore\u201d. Ci\u00f2 semplifica la logica applicativa, perch\u00e9 non \u00e8 necessario gestire pi\u00f9 istanze di gestore.</p> </li> <li> <p>Controllo automatico del ruolo   Il trigger <code>check_ruolo_gestore</code> impedisce l\u2019inserimento di record non validi, assicurando che il soggetto collegato abbia gi\u00e0 il ruolo \u201cGestore\u201d in <code>anagrafiche.soggetti_ruoli</code>.</p> </li> <li> <p>Collegamenti diretti a dati anagrafici e valute   Le chiavi esterne verso <code>anagrafiche.soggetti</code> e <code>config.valute</code> assicurano coerenza e consentono di risalire rapidamente alle informazioni base dell\u2019azienda e alla valuta di riferimento.</p> </li> <li> <p>Tracciabilit\u00e0 delle modifiche   Il trigger di audit registra tutti gli aggiornamenti, mantenendo un log implicito di chi e quando ha modificato i dati del gestore.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/gestori/#sviluppi-futuri","title":"\ud83d\ude80 Sviluppi Futuri","text":"<ul> <li>Estensione dei parametri funzionali   In futuro, <code>anagrafiche.gestori</code> potr\u00e0 contenere campi aggiuntivi di configurazione software, quali:</li> <li>Parametri di default per fatturazione elettronica (ad es. metodi di invio, codici destinatario).  </li> <li>Impostazioni di branding (logo, colori, template PDF).  </li> <li>Soglie operative (es. scorte minime, limiti di credito).  </li> <li> <p>Configurazioni API per integrazione con servizi esterni (es. CRM, sistemi bancari).</p> </li> <li> <p>Integrazione con tabelle di telemetria   Possibile aggiunta di relazioni verso tabelle di monitoraggio (log di accesso, statistiche di performance, volumi di documenti) collegate al gestore, per analisi di utilizzo e ottimizzazione del sistema.</p> </li> <li> <p>Multitenancy e permessi   Se in futuro Zero ERP dovr\u00e0 supportare ambienti multi-tenant, saranno previsti campi aggiuntivi per definire permessi, ruoli amministrativi e ambiti di visibilit\u00e0 dati in funzione del gestore.</p> </li> </ul> <p>\ud83d\udea7 Stato di sviluppo Questa tabella \u00e8 gi\u00e0 funzionante per memorizzare le informazioni di base del gestore, ma rimane soggetta a evoluzione. I campi e i vincoli futuri saranno aggiunti a seconda delle esigenze di progetto.</p> <p>\ud83e\udde0 \u201cUna singola entit\u00e0 per identificare l\u2019azienda gestore e gettare le basi per la futura configurazione avanzata del sistema Zero ERP.\u201d </p>"},{"location":"dbzero/anagrafiche/manual/indirizzi/","title":"Indirizzi","text":""},{"location":"dbzero/anagrafiche/manual/indirizzi/#documentazione-concettuale-tabella-anagraficheindirizzi","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.indirizzi</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:   </p> <ul> <li>anagrafiche.soggetti </li> <li>anagrafiche.soggetti_ruoli </li> <li>anagrafiche.indirizzi_dettaglio </li> <li>storico.indirizzi </li> <li>config.comuni </li> <li>config.codici_postali </li> <li>config.stati </li> <li>config.tipi_indirizzi </li> </ul> <p>Approfondimento funzioni e trigger:  </p> <ul> <li>anagrafiche.trgfn_indirizzi_ins_upd_clean_fields </li> <li>script.trgfn_upd_dlt_storico_generic </li> <li>dbops.trgfn_tx_id_managed </li> </ul> <p>La tabella <code>anagrafiche.indirizzi</code> gestisce l\u2019associazione tra un soggetto/ruolo e un indirizzo, integrando sia indirizzi normalizzati (collegati a <code>indirizzi_dettaglio</code>), sia indirizzi liberi, utili per contesti internazionali o non strutturati.</p> <p>Supporta: - Identificazione del tipo di indirizzo (es. legale, sede operativa, corrispondenza) - Riferimenti geografici completi - Storicizzazione delle modifiche - Geolocalizzazione - Vincoli di integrit\u00e0 per garantire coerenza tra i dati</p>"},{"location":"dbzero/anagrafiche/manual/indirizzi/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Associazione soggetto/ruolo \u2192 indirizzo   Ogni soggetto pu\u00f2 avere pi\u00f9 indirizzi distinti in base al ruolo (es. cliente, fornitore) e al tipo di indirizzo (es. sede legale, spedizione, residenza).</p> </li> <li> <p>Supporto per due modalit\u00e0 </p> </li> <li>Normalizzata: tramite <code>indirizzo_dettaglio_id</code>, si collega a una via e civico specifici (con geolocalizzazione puntuale e struttura gerarchica).</li> <li> <p>Libera: tramite <code>indirizzo_libero</code>, con campi ausiliari (<code>comune_id</code>, <code>stato_id</code>, <code>locality</code>, <code>postal_box</code>, ecc.), utile per indirizzi internazionali o non standardizzati.</p> </li> <li> <p>Controllo di coerenza   Tramite vincoli <code>CHECK</code>, \u00e8 garantita l\u2019alternativit\u00e0 tra le due modalit\u00e0 (o normalizzata o libera) e la completezza minima dei dati se si usa la modalit\u00e0 libera.</p> </li> <li> <p>Tracciabilit\u00e0 e storicizzazione   Con il campo <code>storicizza</code> e i trigger associati, le modifiche vengono salvate come snapshot nella tabella <code>storico.indirizzi</code>.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/indirizzi/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>anagrafiche.soggetti_ruoli</code> </li> <li>Ogni indirizzo \u00e8 riferito a una specifica combinazione soggetto/ruolo.  </li> <li> <p>Vincolo <code>RESTRICT</code> in caso di eliminazione (non si pu\u00f2 eliminare un ruolo associato a indirizzi).  </p> </li> <li> <p><code>config.tipi_indirizzi</code> </p> </li> <li>Definisce la tipologia dell\u2019indirizzo (es. domicilio fiscale, sede legale, corrispondenza).  </li> <li> <p>Obbligatoria per ogni record.  </p> </li> <li> <p><code>anagrafiche.indirizzi_dettaglio</code> </p> </li> <li>Se presente, indica che l\u2019indirizzo \u00e8 in modalit\u00e0 normalizzata.  </li> <li> <p>In caso contrario, devono essere valorizzati i campi dell\u2019indirizzo libero.  </p> </li> <li> <p><code>config.comuni</code>, <code>config.codici_postali</code>, <code>config.stati</code> </p> </li> <li>Utilizzati solo per la modalit\u00e0 libera per fornire contesto geografico anche a indirizzi non normalizzati.  </li> </ul>"},{"location":"dbzero/anagrafiche/manual/indirizzi/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Gestione flessibile degli indirizzi   Si adatta a tutti i contesti: locali (normalizzati) o esteri/non strutturati (liberi), senza perdere integrit\u00e0 dei dati.</p> </li> <li> <p>Storicizzazione automatica   Le modifiche vengono archiviate tramite trigger in <code>storico.indirizzi</code>, mantenendo tracciabilit\u00e0 completa nel tempo.</p> </li> <li> <p>Geolocalizzazione precisa   In modalit\u00e0 normalizzata, \u00e8 disponibile una posizione puntuale (<code>geoloc</code>) utile per sistemi GIS, ottimizzazione logistica o analisi territoriali.</p> </li> <li> <p>Ricerca e normalizzazione   Gli indirizzi normalizzati consentono query full-text, deduplicazione e aggregazioni pi\u00f9 efficienti.</p> </li> <li> <p>Controlli automatici e consistenza   I vincoli <code>CHECK</code> garantiscono che non si verifichino ambiguit\u00e0 nei dati (es. indirizzo sia normalizzato che libero insieme).</p> </li> </ul> <p>\ud83e\udde0 \u201cUna tabella ponte tra struttura e flessibilit\u00e0: <code>anagrafiche.indirizzi</code> consente di mappare ogni possibile indirizzo di un soggetto, conservando coerenza, precisione geografica e tracciabilit\u00e0 delle modifiche.\u201d</p>"},{"location":"dbzero/anagrafiche/manual/indirizzi_dettaglio/","title":"Indirizzi dettaglio","text":""},{"location":"dbzero/anagrafiche/manual/indirizzi_dettaglio/#documentazione-concettuale-tabella-anagraficheindirizzi_dettaglio","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.indirizzi_dettaglio</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:     - config.stradario - config.comuni  - config.province  - anagrafiche.indirizzi_dettaglio </p> <p>Approfondimento funzioni:  - script.trgfn_upd_dlt_storico_generic </p> <p>La tabella <code>anagrafiche.indirizzi_dettaglio</code> contiene il dettaglio degli indirizzi civici, collegati a una specifica via (tramite <code>stradario_id</code>) e al relativo contesto geografico (comune, provincia, regione, stato). In essa sono memorizzati numeri civici, estensioni, palazzine, interni, piani, dati di geolocalizzazione e un campo di indirizzo normalizzato generato automaticamente.</p>"},{"location":"dbzero/anagrafiche/manual/indirizzi_dettaglio/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Dettagliare lo stradario   Associare a ciascuna via (memorizzata in <code>config.stradario</code>) le singole unit\u00e0 civiche (numeri civici, estensioni, palazzine, interni, piani), ottenendo cos\u00ec l\u2019indirizzo completo e navigabile.  </li> <li>Geolocalizzazione precisa   Il campo <code>civic_geoloc</code> memorizza il punto geografico corrispondente al singolo civico, mentre <code>street_geoloc</code> rappresenta la posizione media della via. Questi dati consentono ricerche spaziali e visualizzazioni GIS a livello di civico.  </li> <li>Indirizzo normalizzato   Il campo calcolato <code>indirizzo_normalizzato</code> combina via, civico, palazzina, scala, piano e interno in un\u2019unica stringa formattata in modo coerente, facilitando confronti testuali e ricerche full-text.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/indirizzi_dettaglio/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>config.stradario</code> </li> <li>Il campo <code>stradario_id</code> (integer) fa riferimento alla chiave primaria di <code>config.stradario</code>.  </li> <li>Vincolo referenziale:  <ul> <li>ON UPDATE CASCADE (se cambia l\u2019ID della via, si propaga automaticamente)  </li> <li>ON DELETE RESTRICT (non si pu\u00f2 eliminare una via se esistono civici ad essa collegati).  </li> </ul> </li> <li> <p>Attraverso <code>config.stradario</code>, si risale alla catena gerarchica:  </p> <ol> <li>Comune (via \u2192 comune)  </li> <li>Provincia (comune \u2192 provincia)  </li> <li>Regione (provincia \u2192 regione)  </li> <li>Stato (regione \u2192 stato)</li> </ol> </li> <li> <p>Unicit\u00e0 del dettaglio civico </p> </li> <li>Il vincolo <code>uq_indirizzi_dettaglio_norm</code> su (<code>via_norm</code>, <code>civico_norm</code>, <code>interno</code>, <code>piano</code>, <code>palazzina</code>) garantisce che non esistano duplicati logici dello stesso indirizzo normalizzato.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/indirizzi_dettaglio/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Ricostruzione gerarchica completa   Mediante <code>stradario_id</code>, \u00e8 possibile risalire in modo automatico e veloce all\u2019intera struttura geografica (via \u2192 comune \u2192 provincia \u2192 regione \u2192 stato) senza duplicare dati.  </li> <li>Precisione nella geolocalizzazione   I campi <code>civic_geoloc</code> e <code>street_geoloc</code> permettono di visualizzare sia la posizione esatta di un civico sia la posizione media della via su mappe e applicazioni GIS.  </li> <li>Ricerche full-text e uniformit\u00e0   Il campo <code>indirizzo_normalizzato</code> consente di effettuare ricerche testuali uniformi, confrontando stringhe gi\u00e0 normalizzate (indipendenti da differenze di formattazione manuale).  </li> <li>Gestione completa delle varianti civiche   Grazie a <code>estensione_civico</code>, <code>palazzina</code>, <code>interno</code> e <code>scala</code>, si coprono tutte le possibili varianti di civico (lettere, palazzine multiple, suddivisioni e piani), senza necessit\u00e0 di alterare lo schema.  </li> <li>Integrit\u00e0 e prevenzione duplicati   Il vincolo di unicit\u00e0 <code>uq_indirizzi_dettaglio_norm</code> evita la creazione di due record con lo stesso indirizzo normalizzato, mantenendo coerenza e pulizia dei dati.</li> </ul> <p>\ud83e\udde0 \u201cUna tabella di dettaglio civico che unisce normalizzazione testuale, geolocalizzazione puntuale e collegamenti gerarchici: il fulcro del sistema di indirizzamento completo in Zero ERP.\u201d </p>"},{"location":"dbzero/anagrafiche/manual/soggetti/","title":"Soggetti","text":""},{"location":"dbzero/anagrafiche/manual/soggetti/#documentazione-concettuale-tabella-anagrafichesoggetti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.soggetti</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:   </p> <ul> <li>anagrafiche.soggetti_ruoli </li> <li>anagrafiche.dati_societari </li> <li>config.tipi_ruoli </li> <li>config.titoli_cortesia </li> <li>config.tipi_soggetto_dettaglio </li> <li>storico.soggetti </li> </ul> <p>Approfondimento Funzioni:   </p> <ul> <li>anagrafiche.trgfn_soggetti_ins_upd_check_soggetto_contatti </li> <li>anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch </li> <li>anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto </li> <li>anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto </li> <li>anagrafiche.trgfn_soggetti_ins_upd_clean_fields </li> <li>script.trgfn_upd_audit_data_user_generic </li> <li>script.trgfn_upd_dlt_storico_generic</li> </ul> <p>Questa documentazione descrive le regole di progettazione e implementazione della tabella anagrafica <code>anagrafiche.soggetti</code> in Zero ERP, senza ripetere la struttura SQL automatica. Contiene informazioni su vincoli, campi generati e relazioni con altre tabelle.</p>"},{"location":"dbzero/anagrafiche/manual/soggetti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Coerenza dei dati   Garantire che ogni soggetto\u2014persona fisica, giuridica o fisica forzata\u2014sia identificato in modo univoco e validato secondo le regole aziendali.</p> </li> <li> <p>Univocit\u00e0 basata su CF/P.IVA   Utilizzare un campo generato (<code>id_fiscale_univoco_cf_piva</code>) che unisca codice fiscale e partita IVA per evitare duplicati all\u2019interno dello stesso stato.</p> </li> <li> <p>Ricerca semplificata   Creare un campo generato (<code>ragione_sociale_completa</code>) che unisca automaticamente ragione sociale, cognome e nome, facilitando le query di ricerca testuale.</p> </li> <li> <p>Dettagli societari   Le informazioni dettagliate per le aziende vengono descritti nella tabella <code>anagrafiche.dati_societari</code> </p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/soggetti/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>config.comuni</code> </li> <li>Il campo <code>comune_id</code> fa riferimento a <code>config.comuni(id)</code>.  </li> <li>Se un comune viene eliminato, la cancellazione \u00e8 vietata finch\u00e9 esistono riferimenti (<code>ON DELETE RESTRICT</code>).  </li> <li> <p>Se l\u2019ID di un comune cambia, si propaga la modifica (<code>ON UPDATE CASCADE</code>).</p> </li> <li> <p><code>anagrafiche.contatti</code> </p> </li> <li>Il campo <code>default_contatto_id</code> fa riferimento a <code>anagrafiche.contatti(id)</code>.  </li> <li> <p>Ogni soggetto deve avere un contatto valido: la cancellazione di un contatto di default richiede una gestione manuale (<code>ON DELETE RESTRICT</code>).</p> </li> <li> <p><code>config.titoli_cortesia</code> </p> </li> <li>Il campo <code>titolo_cortesia_id</code> fa riferimento a <code>config.titoli_cortesia(id)</code>.  </li> <li> <p>I titoli cortesia non possono essere eliminati se sono ancora in uso (<code>ON DELETE RESTRICT</code>); eventuali aggiornamenti si propagano (<code>ON UPDATE CASCADE</code>).</p> </li> <li> <p><code>config.stati</code> </p> </li> <li>Il campo <code>stato_id</code> fa riferimento a <code>config.stati(id)</code>.  </li> <li>Uno stato non pu\u00f2 essere eliminato se esistono soggetti associati (<code>ON DELETE RESTRICT</code>); modifiche di ID si propaghino (<code>ON UPDATE CASCADE</code>).</li> </ul>"},{"location":"dbzero/anagrafiche/manual/soggetti/#regole-di-validazione-condizionale","title":"\ud83d\udea9 Regole di Validazione Condizionale","text":"<ol> <li> <p>Campo <code>tipo_soggetto</code>      Campo tipo_soggetto (DEPRECATA)</p> <ul> <li>Nota: la colonna tipo_soggetto \u00e8 stata rimossa ed \u00e8 ora sostituita da tipo_soggetto_dettaglio_id</li> </ul> </li> <li> <p>Check su <code>sesso</code> </p> </li> <li> <p>Valori ammessi:  </p> <ul> <li><code>M</code> (Maschio)  </li> <li><code>F</code> (Femmina)  </li> <li><code>S</code> (Soggetto generico)  </li> <li><code>X</code> (Non indicato)</li> </ul> </li> <li> <p>Vincolo di presenza di CF o P.IVA    Almeno uno tra <code>codice_fiscale</code> o <code>partita_iva</code> deve essere valorizzato.</p> </li> <li> <p>Coerenza tra <code>tipo_soggetto</code> e campi anagrafici </p> </li> <li>Se <code>tipo_soggetto = 'F'</code>, devono essere presenti <code>nome</code>, <code>cognome</code> e <code>codice_fiscale</code>.  </li> <li>Se <code>tipo_soggetto = 'G'</code>, devono essere presenti <code>ragione_sociale</code> e <code>partita_iva</code>.  </li> <li> <p>Se <code>tipo_soggetto = 'X'</code>, deve essere presente almeno <code>codice_fiscale</code>.</p> </li> <li> <p>Ulteriore coerenza per soggetti di tipo \u201cX\u201d    Se <code>tipo_soggetto = 'X'</code>, deve esserci almeno <code>ragione_sociale</code> oppure entrambi <code>cognome</code> e <code>nome</code>.</p> </li> </ol>"},{"location":"dbzero/anagrafiche/manual/soggetti/#campi-generati-e-indicizzazione","title":"\ud83d\udd0d Campi Generati e Indicizzazione","text":"<ul> <li><code>id_fiscale_univoco_cf_piva</code> (colonna generata)  </li> <li>Definito come <code>COALESCE(codice_fiscale, partita_iva)</code>.  </li> <li> <p>Garantisce l\u2019univocit\u00e0 del soggetto all\u2019interno dello stesso stato.</p> </li> <li> <p><code>ragione_sociale_completa</code> (colonna generata)  </p> </li> <li>Definito come <code>COALESCE(ragione_sociale, (cognome || ' ' || nome))</code>.  </li> <li>Studiato per semplificare le ricerche testuali senza concatenare manualmente valori.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/soggetti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Univocit\u00e0 e integrit\u00e0 dei dati   Grazie al campo generato <code>id_fiscale_univoco_cf_piva</code> abbinato a <code>stato_id</code>, si evita la duplicazione di soggetti con lo stesso CF o P.IVA per uno stesso stato.</p> </li> <li> <p>Ricerca efficiente   Il campo <code>ragione_sociale_completa</code> consente ricerche full-text immediate, sia per persone fisiche sia per aziende, migliorando le performance delle query.</p> </li> <li> <p>Riduzione delle inconsistenze   I vincoli condizionali su <code>tipo_soggetto</code>, <code>sesso</code> e CF/P.IVA catturano automaticamente eventuali inserimenti errati, riducendo la necessit\u00e0 di controlli manuali in fase applicativa.</p> </li> <li> <p>Facilit\u00e0 di manutenzione   Separando le informazioni \u201cstatiche\u201d dall\u2019anagrafica generica e sfruttando colonne generate, si evita di duplicare logiche di concatenamento o controlli sui dati, semplificando eventuali evoluzioni future.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/soggetti/#implementazioni-aggiuntive","title":"\u2699\ufe0f Implementazioni Aggiuntive","text":"<p>In questa sezione sono descritte le modifiche chiave apportate per allinearsi al nuovo modello dati, con dettaglio delle motivazioni e degli esempi di configurazione internazionale:</p> <ol> <li> <p>Esigenza di accuratezza per CF/P.IVA e internazionalizzazione    Con la sola colonna <code>tipo_soggetto</code> non era possibile gestire formati e vincoli diversi per ogni paese. La nuova colonna <code>tipo_soggetto_dettaglio_id</code>, in relazione alla tabella di configurazione <code>config.tipi_soggetto_dettaglio</code>, permette di:</p> </li> <li> <p>Applicare regole di validazione specifiche per codice fiscale e partita IVA in base allo Stato (<code>stato_iso2</code>).</p> </li> <li>Definire formati diversi (alfanumerico, numerico, lunghezza fissa) a livello di dettaglio di soggetto (privato, ditta individuale, societ\u00e0 di capitali, ecc.).</li> <li> <p>Facilitare l\u2019internazionalizzazione e futuri ampliamenti a nuovi paesi senza modificare lo schema principale.</p> </li> <li> <p>**Rimozione della colonna **<code>tipo_soggetto</code></p> </li> </ol> <pre><code>ALTER TABLE anagrafiche.soggetti\n  DROP COLUMN IF EXISTS tipo_soggetto;\n</code></pre> <ol> <li>**Introduzione di **<code>tipo_soggetto_dettaglio_id</code></li> </ol> <pre><code>ALTER TABLE anagrafiche.soggetti\n  ADD COLUMN tipo_soggetto_dettaglio_id BIGINT NOT NULL\n    REFERENCES config.tipi_soggetto_dettaglio(id)\n    ON UPDATE CASCADE\n    ON DELETE RESTRICT;\n</code></pre> <ol> <li> <p>Vincoli e trigger aggiornati</p> </li> <li> <p>Il trigger di validazione CF/P.IVA (<code>trg_soggetti_ins_upd_valida_cf_piva</code>) ora utilizza <code>tipo_soggetto_dettaglio_id</code>.</p> </li> <li>\u00c8 stato aggiunto il vincolo di FK:</li> </ol> <pre><code>ALTER TABLE anagrafiche.soggetti\n  ADD CONSTRAINT fk_soggetti_tipo_soggetto_dettaglio\n    FOREIGN KEY (tipo_soggetto_dettaglio_id)\n    REFERENCES config.tipi_soggetto_dettaglio(id)\n    ON UPDATE CASCADE\n    ON DELETE RESTRICT;\n</code></pre> <p>\ud83e\udde0 \u201cUn\u2019Anagrafica Soggetti solida e coerente: controlli condizionali e campi generati assicurano dati puliti, ricercabili e univoci, senza dover ripetere informazioni in fase applicativa.\u201d</p>"},{"location":"dbzero/anagrafiche/manual/soggetti_ruoli/","title":"Soggetti ruoli","text":""},{"location":"dbzero/anagrafiche/manual/soggetti_ruoli/#documentazione-concettuale-tabella-anagrafichesoggetti_ruoli","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.soggetti_ruoli</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - anagrafiche.soggetti - config.tipi_ruoli </p> <p>Approfondimento trigger e funzioni:  - script.tipi_ruoli</p> <p>La tabella <code>anagrafiche.soggetti_ruoli</code> funge da collegamento (linking table) tra i soggetti registrati nel sistema e i ruoli definiti in <code>config.tipi_ruoli</code>, permettendo di assegnare a ciascun soggetto - individuo o azienda - uno o pi\u00f9 ruoli specifici all\u2019interno del software Zero ERP.</p>"},{"location":"dbzero/anagrafiche/manual/soggetti_ruoli/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Associazione molti-a-molti: stabilisce una relazione N\\:N tra la tabella <code>anagrafiche.soggetti</code> e <code>config.tipi_ruoli</code>, consentendo a ogni soggetto di rivestire pi\u00f9 ruoli (es. cliente, fornitore, gestore) e a ogni ruolo di essere assegnato a molti soggetti.</li> <li>Estensione semantica: il campo <code>extra</code> (JSONB) offre la possibilit\u00e0 di collegare metadati aggiuntivi per la singola associazione soggetto-ruolo (ad esempio, parametri contrattuali specifici se il ruolo \u00e8 \u201cfornitore\u201d o date di attivazione per il ruolo \u201ccliente\u201d).</li> <li>Tracciatura delle modifiche: grazie ai campi di audit (<code>user_insert</code>, <code>data_insert</code>, <code>user_update</code>, <code>data_update</code>) aggiornati automaticamente, la tabella conserva la cronologia di creazione e aggiornamento di ciascuna associazione.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/soggetti_ruoli/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>anagrafiche.soggetti</code></p> </li> <li> <p>Il campo <code>soggetto_id</code> (UUID) fa riferimento alla chiave primaria di <code>anagrafiche.soggetti</code>.</p> </li> <li> <p>Vincolo <code>fk_soggetti_anagrafiche</code>: se un soggetto viene eliminato, tutte le righe corrispondenti in <code>soggetti_ruoli</code> vengono automaticamente cancellate (ON DELETE CASCADE).</p> </li> <li> <p><code>config.tipi_ruoli</code></p> </li> <li> <p>Il campo <code>ruolo_id</code> (integer) fa riferimento alla chiave primaria di <code>config.tipi_ruoli</code>.</p> </li> <li> <p>Vincolo <code>fk_tipi_ruoli_config</code>: impedisce la cancellazione di un ruolo se esistono associazioni attive (ON DELETE RESTRICT), garantendo la coerenza referenziale.</p> </li> <li> <p>Unicit\u00e0 dell\u2019associazione</p> </li> <li> <p>Il vincolo <code>uq_soggetto_ruolo</code> su <code>(soggetto_id, ruolo_id)</code> garantisce che non esistano duplicati: uno stesso soggetto non pu\u00f2 avere due volte lo stesso ruolo.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/soggetti_ruoli/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Modularit\u00e0 e pulizia dei dati   Separando i dati anagrafici base (in <code>anagrafiche.soggetti</code>) dall\u2019assegnazione dei ruoli, si evita di dover ripetere attributi del soggetto ogni qualvolta cambia un ruolo. Questo design semplifica le query e migliora le performance.</p> </li> <li> <p>Flessibilit\u00e0 nella configurazione dei ruoli   Grazie al campo <code>extra</code> in JSONB, \u00e8 possibile aggiungere informazioni contestuali per ogni associazione (es. contratti specifici, date di validit\u00e0, note), senza dover modificare lo schema SQL.</p> </li> <li> <p>Garanzia di coerenza referenziale   I vincoli di chiave esterna e di unicit\u00e0 assicurano che ogni associazione sia valida (il soggetto e il ruolo devono esistere) e che non vi siano duplicazioni.</p> </li> <li> <p>Tracciabilit\u00e0 delle modifiche   I trigger di audit mantengono un log implicito delle modifiche, rendendo pi\u00f9 semplice identificare chi ha modificato cosa e quando, utile per scopi di compliance e diagnostica.</p> </li> </ul> <p>\ud83e\udde0 \"Una tabella ponte che unisce flessibilit\u00e0 e integrit\u00e0 referenziale, consentendo di assegnare e tracciare ruoli multipli a ciascun soggetto senza duplicare dati anagrafici.\"</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_contatti_ins_upd_set_default_contatto/","title":"Trgfn contatti ins upd set default contatto","text":""},{"location":"dbzero/anagrafiche/manual/trgfn_contatti_ins_upd_set_default_contatto/#documentazione-concettuale-trigger-function-anagrafichetrgfn_contatti_ins_upd_set_default_contatto","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_contatti_ins_upd_set_default_contatto</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - anagrafiche.soggetti  - anagrafiche.contatti </p> <p>Approfondimento funzioni :   - script.fn_log_and_raise_error </p> <p>La trigger function <code>anagrafiche.trgfn_contatti_ins_upd_set_default_contatto()</code> gestisce automaticamente il contatto predefinito per un soggetto, tenendo conto di un contesto dinamico (<code>soggetto</code>, <code>ruolo</code> o <code>utility</code>). Assicura che esista al massimo un contatto default per soggetto e contesto, ed aggiorna il riferimento <code>default_contatto_id</code> in <code>anagrafiche.soggetti</code> quando richiesto.</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_contatti_ins_upd_set_default_contatto/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Impostare il contatto default   Garantire che il primo contatto (o quello marcato explicitamente) diventi predefinito all\u2019interno del suo contesto.</p> </li> <li> <p>Contesto dinamico   Utilizzare il campo <code>default_context</code> (valori: <code>soggetto</code>, <code>ruolo</code>, <code>utility</code>) per isolare i default per diversi ambiti di utilizzo.</p> </li> <li> <p>Sincronizzazione con anagrafica soggetti   Se il contesto \u00e8 <code>soggetto</code>, aggiornare in automatico <code>anagrafiche.soggetti.default_contatto_id</code> per mantenere il collegamento principale.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_contatti_ins_upd_set_default_contatto/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>Trigger associato: <code>BEFORE INSERT OR UPDATE</code> su <code>anagrafiche.contatti</code>.</li> <li> <p>Colonne coinvolte:</p> </li> <li> <p><code>NEW.is_default BOOLEAN</code></p> </li> <li><code>NEW.default_context TEXT</code></li> <li><code>NEW.utility_id</code> (opzionale)</li> <li><code>NEW.soggetto_ruolo_id</code> (opzionale)</li> <li><code>NEW.soggetto_id UUID</code></li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_contatti_ins_upd_set_default_contatto/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Azzeramento contesto</li> </ol> <pre><code>NEW.default_context := NULL;\n</code></pre> <ol> <li>Determinazione contesto</li> </ol> <pre><code>ctx := CASE\n  WHEN NEW.utility_id        IS NOT NULL THEN 'utility'\n  WHEN NEW.soggetto_ruolo_id IS NOT NULL THEN 'ruolo'\n  ELSE 'soggetto'\nEND;\n</code></pre> <ol> <li> <p>Gestione contatto marcato default    Se <code>NEW.is_default = TRUE</code>:</p> </li> <li> <p>Disabilita (<code>is_default = FALSE</code>) tutti i contatti esistenti dello stesso <code>soggetto_id</code> e <code>default_context</code> = <code>ctx</code>, eccetto <code>NEW.id</code>.</p> </li> <li>Imposta <code>NEW.default_context := ctx</code>.</li> <li>Se <code>ctx = 'soggetto'</code>, aggiorna <code>anagrafiche.soggetti.default_contatto_id = NEW.id</code>.</li> <li> <p>Restituisce <code>NEW</code>.</p> </li> <li> <p>Assegnazione primo default    Se <code>NEW.is_default = FALSE</code> e non esistono contatti default per <code>soggetto_id</code> e <code>ctx</code>:</p> </li> <li> <p>Imposta <code>NEW.is_default := TRUE</code> e <code>NEW.default_context := ctx</code>.</p> </li> <li> <p>Se <code>ctx = 'soggetto'</code>, aggiorna <code>anagrafiche.soggetti.default_contatto_id = NEW.id</code>.</p> </li> <li> <p>Chiusura    Restituisce <code>NEW</code> con i valori aggiornati.</p> </li> </ol>"},{"location":"dbzero/anagrafiche/manual/trgfn_contatti_ins_upd_set_default_contatto/#vincoli-e-assunzioni","title":"\ud83d\udd12 Vincoli e Assunzioni","text":"<ul> <li>Contesto obbligatorio: <code>default_context</code> viene sempre valorizzato a uno dei tre valori.</li> <li>Unico default per contesto: la funzione garantisce un solo contatto <code>is_default = TRUE</code> per coppia (<code>soggetto_id</code>, <code>default_context</code>).</li> <li>Aggiornamento referenza soggetto: solo per <code>default_context = 'soggetto'</code> si propaga l\u2019ID contatto.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_contatti_ins_upd_set_default_contatto/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Gestione semplificata dei default   Automatizza l\u2019impostazione del contatto principale per soggetti e ruoli.</li> <li>Contesti indipendenti   Consente di avere contatti di default distinti per scopi diversi (<code>soggetto</code>, <code>ruolo</code>, <code>utility</code>) senza mescolarli.</li> <li>Sincronizzazione diretta   Tiene coerente il campo <code>default_contatto_id</code> in <code>anagrafiche.soggetti</code> senza ulteriori query esterne.</li> <li>Manutenibilit\u00e0   Centralizza la logica di default in un\u2019unica function, riutilizzabile in pi\u00f9 trigger.</li> </ul> <p>\ud83e\udde0 \u201cUna trigger function flessibile che assegna e mantiene automaticamente il contatto predefinito in base a contesti distinti, semplificando la gestione dei dati di contatto.\u201d</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_dati_societari_ins_upd_check_tipo_soggetto/","title":"Trgfn dati societari ins upd check tipo soggetto","text":""},{"location":"dbzero/anagrafiche/manual/trgfn_dati_societari_ins_upd_check_tipo_soggetto/#documentazione-concettuale-funzione-anagrafichetrgfn_dati_societari_ins_upd_check_tipo_soggetto","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>anagrafiche.dati_societari </li> <li>anagrafiche.soggetti </li> <li>config.tipi_soggetto_dettaglio </li> </ul> <p>Approfondimento funzioni:</p> <ul> <li>script.fn_log_and_raise_error</li> <li>dbops.trgfn_tx_id_managed</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_dati_societari_ins_upd_check_tipo_soggetto/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Verificare che il soggetto associato ai dati societari ( <code>new.soggetto_id</code> in <code>anagrafiche.dati_societari</code> ) abbia un <code>cod_int_tipo_soggetto</code> ammesso (solo <code>SC</code> o <code>SP</code>). In caso contrario, viene lanciato un errore tramite <code>script.fn_log_and_raise_error</code>.</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_dati_societari_ins_upd_check_tipo_soggetto/#collegamenti","title":"\ud83d\udd17 Collegamenti","text":"<ul> <li><code>anagrafiche.dati_societari</code> \u2013 tabella su cui viene applicato il trigger <code>BEFORE INSERT OR UPDATE</code> che richiama questa funzione.</li> <li><code>anagrafiche.soggetti</code> \u2013 da cui si legge il campo <code>tipo_soggetto_dettaglio_id</code>.</li> <li><code>config.tipi_soggetto_dettaglio</code> \u2013 contiene <code>cod_int_tipo_soggetto</code> per validazione.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_dati_societari_ins_upd_check_tipo_soggetto/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Utilizza <code>script.fn_log_and_raise_error</code> per loggare dettagli e abortire la DML in caso di tipo non ammesso (codice errore <code>E_DATI_SOCIETARI_TIPO_SOGGETTO_NON_AMMESSO</code>).</li> <li>Facile da estendere aggiungendo codici consentiti alla condizione.</li> <li>Si accompagna al trigger definito come:</li> </ul> <pre><code>CREATE TRIGGER trg_dati_societari_ins_upd_check_tipo_soggetto\n  BEFORE INSERT OR UPDATE ON anagrafiche.dati_societari\n  FOR EACH ROW EXECUTE FUNCTION anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto();\n</code></pre> <ul> <li>Assicurarsi che la funzione sia caricata prima del trigger e aggiornata in caso di modifiche future.</li> </ul> <p>\ud83e\udde0 \u201cBlocca in anticipo l\u2019inserimento di dati societari per soggetti non conformi: integrit\u00e0 di business garantita.\u201d</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_gestori_ins_upd_check_ruolo_gestore/","title":"Trgfn gestori ins upd check ruolo gestore","text":""},{"location":"dbzero/anagrafiche/manual/trgfn_gestori_ins_upd_check_ruolo_gestore/#documentazione-concettuale-trigger-function-anagrafichetrgfn_gestori_ins_upd_check_ruolo_gestore","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_gestori_ins_upd_check_ruolo_gestore</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:  - anagrafiche.gestori   - anagrafiche.soggetti_ruoli </p> <p>Approfondimenti funzioni:   - script.fn_check_ins_soggetto_ruolo </p> <p>La trigger function <code>anagrafiche.trgfn_gestori_ins_upd_check_ruolo_gestore()</code> si attiva BEFORE INSERT e BEFORE UPDATE sulla tabella <code>anagrafiche.gestori</code>. Il suo scopo \u00e8 garantire che, ogni volta che si crea o modifica il record del gestore, venga automaticamente gestita (verificata o creata) la corrispondente riga di relazione in <code>anagrafiche.soggetti_ruoli</code> con ruolo \u201cGestore\u201d (<code>cd_int_ruolo = 'GE'</code>).</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_gestori_ins_upd_check_ruolo_gestore/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Centralizzare l\u2019assegnazione del ruolo \u201cGestore\u201d   Delegare a <code>script.fn_check_ins_soggetto_ruolo</code> la logica di inserimento o verifica del linking table, evitando duplicazioni di codice.</p> </li> <li> <p>Mantenere coerenza referenziale   Associare sempre correttamente il soggetto al ruolo di gestore, aggiornando <code>NEW.soggetto_ruolo_id</code> con l\u2019ID valido, che sia preesistente o appena creato.</p> </li> <li> <p>Semplificare i trigger client   Qualunque operazione di INSERT o UPDATE su <code>anagrafiche.gestori</code> non deve preoccuparsi di controllare manualmente <code>soggetto_ruolo_id</code>; la trigger function ne gestisce la delega.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_gestori_ins_upd_check_ruolo_gestore/#flusso-logico","title":"\ud83d\udd0d Flusso Logico","text":"<ol> <li> <p>Chiamata automatica    Attivata BEFORE INSERT OR UPDATE su <code>anagrafiche.gestori</code>.  </p> <p>p_cd_int_ruolo = 'GE' identifica il ruolo \u201cGestore\u201d in config.tipi_ruoli.</p> <p>La funzione verifica o crea il record in anagrafiche.soggetti_ruoli e restituisce l\u2019ID.</p> </li> </ol>"},{"location":"dbzero/anagrafiche/manual/trgfn_gestori_ins_upd_check_ruolo_gestore/#utilizzo-in-ddl","title":"\ud83d\udee0\ufe0f Utilizzo in DDL","text":"<p>Nel DDL di anagrafiche.gestori il trigger viene definito cos\u00ec:</p> <p>CREATE OR REPLACE TRIGGER trg_gestori_ins_upd_check_ruolo_gestore   BEFORE INSERT OR UPDATE ON anagrafiche.gestori   FOR EACH ROW   EXECUTE FUNCTION anagrafiche.trgfn_gestori_ins_upd_check_ruolo_gestore();</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_gestori_ins_upd_check_ruolo_gestore/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<pre><code>Unica fonte di verit\u00e0 per l\u2019assegnazione del ruolo\nOgni modifica al gestore delega a una sola funzione centralizzata il compito di controllare/eseguire \nl\u2019inserimento del ruolo in linking table.\n\nRiduzione del codice boilerplate\nNon \u00e8 necessario ripetere la logica di verifica/inserimento nei trigger o nelle procedure che \ngestiscono anagrafiche.gestori.\n\nCoerenza e tracciabilit\u00e0\nGrazie all\u2019uso di script.fn_check_ins_soggetto_ruolo, ogni assegnazione di ruolo registra automaticamente \nuser_insert nel linking table e garantisce che soggetto_ruolo_id sia sempre valido.\n\nFlessibilit\u00e0 per ruoli futuri\nIl pattern pu\u00f2 essere replicato in altre trigger function per tabelle analoghe \n(es. anagrafiche.clienti, anagrafiche.fornitori), semplicemente cambiando il parametro p_cd_int_ruolo.\n</code></pre>"},{"location":"dbzero/anagrafiche/manual/trgfn_gestori_ins_upd_check_ruolo_gestore/#nota-di-sviluppo","title":"\ud83d\udea7 Nota di sviluppo","text":"<pre><code>Questa trigger function e la funzione generica fn_check_ins_soggetto_ruolo costituiscono il \nnucleo metodologico per la gestione dei ruoli in Zero ERP: saranno estese e replicate per ogni nuovo \ntipo di ruolo oggetto di implementazione.\n</code></pre>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/","title":"Trgfn indirizzi dettaglio ins upd norm indirizzi dettaglio","text":""},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#documentazione-concettuale-trigger-function-anagrafichetrgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio()</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento tabelle:   - anagrafiche.indirizzi_dettaglio </p> <p>Approfondimento view:   - script.vw_indirizzo_completo </p> <p>La trigger function <code>anagrafiche.trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio()</code> normalizza i dati di indirizzo al momento di INSERT o UPDATE su <code>anagrafiche.indirizzi_dettaglio</code>, costruendo campi coerenti e uniformi per via, civico e indirizzo completo.</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Uniformit\u00e0 dei dati: garantire che i campi relativi all\u2019indirizzo (<code>via_norm</code>, <code>civico_norm</code>, <code>indirizzo_normalizzato</code>) rispettino regole di maiuscole, spaziatura e formattazione.</li> <li>Preparazione per ricerche e comparazioni: offrire valori normalizzati che migliorano le performance di query basate su stringhe (es. ricerche full-text, join su via).</li> <li>Affidabilit\u00e0: centralizzare la logica di normalizzazione nel database, evitando differenze tra applicazioni diverse.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>Trigger: <code>BEFORE INSERT OR UPDATE</code> sulla tabella <code>anagrafiche.indirizzi_dettaglio</code>.</li> <li>Campi JOIN: legge da <code>script.vw_indirizzo_completo</code> i campi <code>tipo_toponimo</code> e <code>nome_strada</code> tramite <code>id_stradario = NEW.stradario_id</code>.</li> <li> <p>Campi target:</p> </li> <li> <p><code>via_norm</code></p> </li> <li><code>civico_norm</code></li> <li><code>indirizzo_normalizzato</code></li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#flusso-di-esecuzione-dettagliato","title":"\u2699\ufe0f Flusso di Esecuzione Dettagliato","text":"<ol> <li> <p>Normalizzazione della via</p> </li> <li> <p>Recupera <code>tipo_toponimo</code> e <code>nome_strada</code> dalla view <code>script.vw_indirizzo_completo</code> (query con <code>INTO STRICT NEW.via_norm</code>).</p> </li> <li> <p>Applica <code>TRIM</code> e <code>UPPER</code> alla concatenazione, rimuovendo spazi e uniformando il case.</p> </li> <li> <p>Normalizzazione del civico</p> </li> <li> <p>Se <code>NEW.civico</code> \u00e8 valorizzato e diverso da 0, controlla <code>NEW.estensione_civico</code>:</p> <ul> <li>Aggiunge <code>/</code> se mancante e concatena (es. \u201c12/A\u201d).</li> <li>Converte il risultato in maiuscolo.</li> <li>Se <code>civico</code> non \u00e8 specificato, imposta <code>NEW.civico_norm := 'SNC'</code> (Senza Numero Civico).</li> </ul> </li> <li> <p>Costruzione dell\u2019indirizzo completo</p> </li> <li> <p>Concatena <code>via_norm</code>, <code>civico_norm</code> e, se presenti, <code>palazzina</code>, <code>scala</code>, <code>piano</code>, <code>interno</code>, separati da virgola e label (es. \u201cPal.\u201d, \u201cScala\u201d).</p> </li> <li> <p>Applica <code>TRIM</code> sul risultato per rimuovere spazi superflui.</p> </li> <li> <p>Restituzione</p> </li> <li> <p>Ritorna <code>NEW</code> con i campi popolati, pronto per essere inserito o aggiornato.</p> </li> </ol>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Coerenza: tutti gli indirizzi vengono salvati secondo uno stesso pattern, semplificando validazioni e confronti.</li> <li>Efficienza: la normalizzazione lato database riduce il carico applicativo e velocizza le query full-text.</li> <li>Modularit\u00e0: modifiche al formato (es. aggiunta di nuovi componenti) sono centralizzate nella trigger function senza cambiare il codice applicativo.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio</code>, Zero ERP assicura indirizzi coerenti e pronti per ogni esigenza di ricerca o reporting.\u201d</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_clean_fields/","title":"Trgfn indirizzi ins upd clean fields","text":""},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_clean_fields/#documentazione-concettuale-trigger-function-anagrafichetrgfn_indirizzi_ins_upd_clean_fields","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_indirizzi_ins_upd_clean_fields()</code>","text":"<p>Approfondimento Tabelle:  </p> <ul> <li>anagrafiche.indirizzi </li> <li>anagrafiche.indirizzi_dettaglio </li> </ul> <p>Pulisce i campi di fallback di <code>anagrafiche.indirizzi</code> quando \u00e8 presente un <code>indirizzo_dettaglio_id</code>.</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_clean_fields/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Assicura che, in modalit\u00e0 indirizzo normalizzato, tutti i campi alternativi utilizzati per gli indirizzi liberi siano resettati a <code>NULL</code>. In questo modo si evita la coesistenza di dati incongruenti tra indirizzo normalizzato e indirizzo libero.</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_clean_fields/#parametri-del-trigger","title":"Parametri del Trigger","text":"<ul> <li><code>NEW</code>: record in fase di INSERT o UPDATE di <code>anagrafiche.indirizzi</code>.</li> <li><code>OLD</code>: record precedente alla modifica (non utilizzato).</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_clean_fields/#valore-di-ritorno","title":"Valore di Ritorno","text":"<ul> <li><code>NEW</code>: record modificato, con i campi di fallback (<code>stato_id</code>, <code>indirizzo_libero</code>, <code>comune_id</code>, <code>codice_postale_id</code>, <code>administrative_area</code>, <code>locality</code>, <code>sublocality</code>, <code>postal_box</code>, <code>geoloc</code>) azzerati se <code>indirizzo_dettaglio_id</code> \u00e8 valorizzato.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_clean_fields/#trigger-associato","title":"\ud83d\udd17 Trigger Associato","text":"<pre><code>CREATE TRIGGER trg_indirizzi_ins_upd_clean_fields\n  BEFORE INSERT OR UPDATE\n  ON anagrafiche.indirizzi\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_indirizzi_ins_upd_clean_fields();\n</code></pre>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_clean_fields/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Garantisce la mutua esclusione tra modalit\u00e0 normalizzata e libera.</li> <li>Previene l\u2019inserimento di dati superflui o incongruenti quando si usa il dettaglio civico.</li> <li>La pulizia \u00e8 estesa per azzerare anche <code>geoloc</code>, si preferisce derivare sempre da <code>indirizzi_dettaglio</code>.</li> </ul> <p>\ud83e\udde0 \u201cMantieni coerenza tra indirizzo normalizzato e campi di fallback: pulizia automatica e sicura.\u201d</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_sync_geoloc/","title":"Trgfn indirizzi ins upd sync geoloc","text":""},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_sync_geoloc/#funzione-anagrafichetrgfn_indirizzi_ins_upd_sync_geoloc","title":"Funzione <code>anagrafiche.trgfn_indirizzi_ins_upd_sync_geoloc()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - anagrafiche.indirizzi_dettaglio - anagrafiche.indirizzi </p> <p>Sincronizza il campo <code>geoloc</code> di <code>anagrafiche.indirizzi</code> con la geolocalizzazione memorizzata in <code>anagrafiche.indirizzi_dettaglio</code>.</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_sync_geoloc/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Ogni volta che viene inserito o aggiornato un record in <code>anagrafiche.indirizzi</code>, se \u00e8 impostato <code>indirizzo_dettaglio_id</code>, la funzione recupera dal dettaglio civico la coordinata geografica (<code>civic_geoloc</code>) e la copia in <code>NEW.geoloc</code>. In questo modo il dato di geolocalizzazione rimane sempre allineato con la fonte di verit\u00e0 civica.</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_sync_geoloc/#parametri-del-trigger","title":"Parametri del Trigger","text":"<ul> <li><code>NEW</code>: record di riga in inserimento o aggiornamento della tabella <code>anagrafiche.indirizzi</code>.</li> <li><code>OLD</code>: non utilizzato in questa funzione.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_sync_geoloc/#valore-di-ritorno","title":"Valore di Ritorno","text":"<ul> <li><code>NEW</code> (record modificato), con <code>geoloc</code> aggiornato quando applicabile.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_sync_geoloc/#trigger-associato","title":"\ud83d\udd17 Trigger Associato","text":"<pre><code>CREATE TRIGGER trg_indirizzi_ins_upd_sync_geoloc\n  BEFORE INSERT OR UPDATE\n  ON anagrafiche.indirizzi\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_indirizzi_ins_upd_sync_geoloc();\n</code></pre>"},{"location":"dbzero/anagrafiche/manual/trgfn_indirizzi_ins_upd_sync_geoloc/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Garantisce coerenza tra i dati geografici civici (<code>indirizzi_dettaglio</code>) e la tabella principale degli indirizzi.</li> <li>Evita geolocalizzazioni obsolete: ad ogni modifica o inserimento si riallinea il campo <code>geoloc</code>.</li> <li>Se <code>indirizzo_dettaglio_id</code> \u00e8 <code>NULL</code>, non interviene e lascia invariato il valore esistente di <code>geoloc</code>.</li> </ul> <p>\ud83e\udde0 \u201cAllinea sempre la posizione geografica degli indirizzi con il dettaglio civico: precisione e consistenza garantite.\u201d</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_check_soggetto_contatti/","title":"Trgfn soggetti ins upd check soggetto contatti","text":""},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_check_soggetto_contatti/#documentazione-concettuale-trigger-function-anagrafichetrgfn_soggetti_ins_upd_check_soggetto_contatti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_soggetti_ins_upd_check_soggetto_contatti</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - anagrafiche.soggetti  - anagrafiche.contatti </p> <p>Approfondimento funzioni :   - script.fn_log_and_raise_error </p> <p>La trigger function <code>anagrafiche.trgfn_soggetti_ins_upd_check_soggetto_contatti()</code> verifica, al termine dell\u2019inserimento o aggiornamento di un record in <code>anagrafiche.soggetti</code>, che il soggetto associato abbia almeno un contatto valido. Se non trova contatti con <code>is_default = TRUE</code> o almeno un canale valorizzato (email, telefono, cellulare, PEC), registra l\u2019evento e solleva un\u2019eccezione centralizzata.</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_check_soggetto_contatti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Validazione di integrit\u00e0   Garantire che ogni soggetto disponga di almeno un contatto predefinito o dotato di un canale attivo.</p> </li> <li> <p>Log e gestione errori centralizzata   Utilizzare <code>script.fn_log_and_raise_error</code> per tracciare l\u2019anomalia e segnalare l\u2019errore con un codice specifico (<code>E_SOGGETTO_NO_CONTATTI</code>).</p> </li> <li> <p>Deferrable per transazioni   Essendo un constraint trigger <code>DEFERRABLE INITIALLY DEFERRED</code>, l\u2019esecuzione avviene al momento del <code>COMMIT</code>, consentendo di completare tutte le operazioni di contatto correlate prima della verifica finale.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_check_soggetto_contatti/#parametri-e-contesto-del-trigger","title":"\ud83d\udd0d Parametri e Contesto del Trigger","text":"<ul> <li>Trigger associato: <code>AFTER INSERT OR UPDATE</code> su <code>anagrafiche.soggetti</code>, definito come:</li> </ul> <p><pre><code>CREATE CONSTRAINT TRIGGER trg_soggetti_ins_upd_check_soggetto_contatti\n  AFTER INSERT OR UPDATE ON anagrafiche.soggetti\n  DEFERRABLE INITIALLY DEFERRED\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_check_soggetto_contatti();\n</code></pre> * Deferrable: permette di posticipare la verifica fino alla fine della transazione per includere eventuali operazioni correlate su <code>anagrafiche.contatti</code>.</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_check_soggetto_contatti/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Conteggio contatti validi</li> </ol> <p><pre><code>SELECT COUNT(*) INTO v_count\n  FROM anagrafiche.contatti c\n WHERE c.soggetto_id = NEW.id\n   AND c.default_context = 'soggetto'\n   AND (\n     c.is_default\n     OR c.email      IS NOT NULL\n     OR c.telefono   IS NOT NULL\n     OR c.cellulare  IS NOT NULL\n     OR c.pec        IS NOT NULL\n   );\n</code></pre> 2. Verifica risultato</p> <pre><code>IF v_count = 0 THEN\n  PERFORM script.fn_log_and_raise_error(\n    'database',\n    TG_NAME,\n    'E_SOGGETTO_NO_CONTATTI',\n    jsonb_build_object('soggetto_id', NEW.id)\n  );\nEND IF;\n</code></pre> <ul> <li>Chiama <code>fn_log_and_raise_error</code>, che registra su log la violazione e solleva l\u2019eccezione appropriata.</li> <li>Restituzione    Restituisce <code>NEW</code> se la condizione \u00e8 soddisfatta; altrimenti l\u2019eccezione interrompe la commit.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_check_soggetto_contatti/#error-handling-e-logging","title":"\ud83d\udd12 Error Handling e Logging","text":"<ul> <li>Codice errore: <code>E_SOGGETTO_NO_CONTATTI</code> (messaggio configurato in <code>config.messaggi_errore</code>).</li> <li>Context payload: JSON <code>{ \"soggetto_id\": &lt;NEW.id&gt; }</code> passato a <code>fn_log_and_raise_error</code> per dettagliare l\u2019evento di errore.</li> <li>Log ed eccezione: <code>fn_log_and_raise_error</code> effettua il logging e lancia un\u2019eccezione per bloccare la transazione.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_check_soggetto_contatti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Integrit\u00e0 garantita   Nessun soggetto privo di contatti validi pu\u00f2 essere creato o aggiornato, prevenendo dati anomali.</li> <li>Deferral di verifica   Utilizzo di trigger constraint deferrable per includere le modifiche ai contatti nella stessa transazione.</li> <li>Centralizzazione del logging   Tutta la gestione di log ed eccezioni avviene tramite una funzione dedicata, facilitando l\u2019audit.</li> <li>Manutenzione e coerenza   Separazione fra logica di business (controllo contatti) e gestione degli errori (logging), in due moduli riutilizzabili.</li> </ul> <p>\ud83e\udde0 \u201cUsare un constraint trigger deferrable per verificare i contatti di un soggetto assicura integrit\u00e0 e coerenza dei dati, sfruttando logging e gestione errori centralizzata.\u201d</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_clean_fields/","title":"Trgfn soggetti ins upd clean fields","text":""},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_clean_fields/#documentazione-concettuale-funzione-anagrafichetrgfn_soggetti_ins_upd_clean_fields","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>anagrafiche.trgfn_soggetti_ins_upd_clean_fields()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>anagrafiche.soggetti</li> <li>config.stati</li> </ul> <p>Approfondimento funzioni:</p> <ul> <li>script.fn_get_default_by_param</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_clean_fields/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Impostare valori di default per campi mancanti in <code>anagrafiche.soggetti</code> (ad esempio, assegnare <code>stato_id</code> da <code>config.stati</code> se <code>NEW.stato_id</code> \u00e8 <code>NULL</code>).</li> <li>Pulire e normalizzare ulteriori campi (es. trimming, uppercasing) seguendo le regole di business.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_clean_fields/#collegamenti","title":"\ud83d\udd17 Collegamenti","text":"<ul> <li><code>anagrafiche.soggetti</code> \u2013 tabella su cui si applica il trigger <code>BEFORE INSERT OR UPDATE</code>.</li> <li><code>config.stati</code> \u2013 usata come lookup per recuperare il PK di default tramite <code>codice_iso3</code>.</li> <li><code>script.fn_get_default_by_param</code> \u2013 funzione dinamica che esegue il lookup del valore di default da una tabella di configurazione.</li> <li>Trigger associato: <code>trg_soggetti_ins_upd_clean_fields</code> (viene creato dal Liquibase changeSet <code>20250730-07-trgfn_soggetti_ins_upd_clean_fields_v1</code>).</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_clean_fields/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Il trigger viene invocato BEFORE INSERT OR UPDATE su <code>anagrafiche.soggetti</code> e agisce su <code>NEW</code>.</li> <li>Assegnazione default: utilizza <code>fn_get_default_by_param('config','stati','codice_iso3','state_code_iso3', TG_NAME)::integer</code> per ottenere il <code>stato_id</code>.</li> <li><code>TG_NAME</code> passa automaticamente il nome del trigger alla funzione per migliorare il contesto di log in caso di errore.</li> <li>Estendibilit\u00e0: dopo il lookup di default \u00e8 possibile inserire ulteriori blocchi di cleanup (es. normalizzazione di <code>nome</code>, <code>cognome</code>).</li> <li>Robustezza: la funzione di lookup solleva eccezione se non trova il valore, garantendo coerenza dei dati.</li> </ul> <p>\ud83e\udde0 \u201cAllinea i record di <code>anagrafiche.soggetti</code> a regole di default e pulizia automatica: default lookup, normalizzazione e coerenza garantita.\u201d</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_genera_cdsoggetto/","title":"Trgfn soggetti ins upd genera cdsoggetto","text":""},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_genera_cdsoggetto/#documentazione-concettuale-trigger-function-anagrafichetrgfn_soggetti_ins_upd_genera_cdsoggetto","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.sistema_codici </p> <p>Approfondimenti funzioni:  - script.fn_generate_codice </p>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_genera_cdsoggetto/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La trigger function <code>anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto()</code> viene eseguita <code>BEFORE INSERT OR UPDATE</code> su <code>anagrafiche.soggetti</code> e si occupa di:</p> <ul> <li>Verificare se il campo <code>codice_soggetto</code> \u00e8 nullo.</li> <li>Generare automaticamente un nuovo <code>codice_soggetto</code> utilizzando la logica centralizzata in <code>script.fn_generate_codice('soggetto')</code>.</li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_genera_cdsoggetto/#obiettivi-e-ruolo","title":"\u2699\ufe0f Obiettivi e Ruolo","text":"<ol> <li>Unicit\u00e0 e coerenza: garantire che ogni soggetto inserito o aggiornato abbia un codice univoco, evitando conflitti manuali.</li> <li>Centralizzazione della generazione: delegare la logica di creazione alla funzione di utility <code>fn_generate_codice</code>, che usa la tabella di sistema <code>config.sistema_codici</code> per decide prefissi, sequenze e formati.</li> <li>Semplicit\u00e0 di manutenzione: modifiche al formato dei codici o alle regole di sequenza avvengono in un unico punto (<code>fn_generate_codice</code>), senza toccare il trigger.</li> </ol>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_genera_cdsoggetto/#flusso-di-esecuzione-dettagliato","title":"\ud83d\udd0d Flusso di Esecuzione Dettagliato","text":"<ol> <li> <p>Verifica dell\u2019operazione    Il trigger opera sia su <code>INSERT</code> sia su <code>UPDATE</code>.</p> </li> <li> <p>Controllo <code>codice_soggetto</code></p> </li> </ol> <pre><code>IF (TG_OP = 'INSERT' OR TG_OP = 'UPDATE')\n   AND NEW.codice_soggetto IS NULL THEN\n  -- Campo non valorizzato: generazione automatica\n</code></pre> <ol> <li>Invocazione della funzione di generazione</li> </ol> <pre><code>NEW.codice_soggetto := script.fn_generate_codice('soggetto');\n</code></pre> <ul> <li> <p><code>fn_generate_codice</code> legge da <code>config.sistema_codici</code> i parametri (prefisso, sequenza, formato) per il dominio <code>'soggetto'</code>.</p> </li> <li> <p>Restituzione del record    Il record aggiornato con <code>NEW.codice_soggetto</code> valorizzato viene restituito all\u2019operazione DML.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_genera_cdsoggetto/#esempio-di-trigger-ddl","title":"\ud83d\udd16 Esempio di Trigger DDL","text":"<pre><code>DROP TRIGGER IF EXISTS trg_soggetti_ins_upd_genera_cdsoggetto\n  ON anagrafiche.soggetti;\n\nCREATE TRIGGER trg_soggetti_ins_upd_genera_cdsoggetto\n  BEFORE INSERT OR UPDATE\n  ON anagrafiche.soggetti\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto();\n</code></pre>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_ins_upd_genera_cdsoggetto/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Automazione: elimina la necessit\u00e0 di calcolare o fornire manualmente il codice del soggetto.</li> <li>Consistenza: assicura che tutti i codici seguano lo stesso pattern, facilitando ricerche e integrazioni.</li> <li>Flessibilit\u00e0: cambiamenti al pattern di codice (prefissi, lunghezza, charset) si applicano modificando solo <code>config.sistema_codici</code> o la funzione <code>fn_generate_codice</code>.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>trgfn_soggetti_ins_upd_genera_cdsoggetto</code>, Zero ERP assicura codici di soggetto uniformi e coerenti, lasciando al database il compito di generare e mantenere la logica di sequenza.\u201d</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_valida_cf_piva_dispatch/","title":"Trgfn soggetti valida cf piva dispatch","text":""},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_valida_cf_piva_dispatch/#documentazione-concettuale-trigger-function-anagrafichetrgfn_soggetti_valida_cf_piva_dispatch","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.stati </p> <p>Approfondimenti funzioni:   - script.validate_cf_piva_it </p>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_valida_cf_piva_dispatch/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La trigger function <code>anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch()</code> viene eseguita <code>BEFORE INSERT OR UPDATE</code> sulla tabella <code>anagrafiche.soggetti</code> e instrada la validazione di codice fiscale e partita IVA in base allo Stato e al dettaglio di soggetto.</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_valida_cf_piva_dispatch/#obiettivi-e-ruolo","title":"\u2699\ufe0f Obiettivi e Ruolo","text":"<ol> <li>Selezione del contesto nazionale    Recuperare il <code>codice_iso2</code> dello Stato (<code>stato_id</code>) per identificare il Paese di validazione.</li> <li>Dispatch su validazione specifica    Per lo Stato IT, invocare la funzione <code>script.fn_validate_cf_piva_it</code>, passando il dettaglio di soggetto e i campi fiscali.</li> <li>Estendibilit\u00e0    Consentire in futuro di aggiungere branch per altri paesi, invocando funzioni di validazione dedicate.</li> </ol>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_valida_cf_piva_dispatch/#flusso-di-esecuzione-dettagliato","title":"\ud83d\udd0d Flusso di Esecuzione Dettagliato","text":"<ol> <li>Recupero Stato</li> </ol> <p><pre><code>SELECT codice_iso2 INTO country\n  FROM config.stati\n WHERE id = NEW.stato_id;\n</code></pre> 2. Controllo branch IT    Se <code>country = 'IT'</code>, viene eseguita:</p> <p><pre><code>PERFORM script.fn_validate_cf_piva_it(\n  NEW.tipo_soggetto_dettaglio_id,\n  NEW.partita_iva,\n  NEW.piva_gruppo_acquisto,\n  NEW.codice_fiscale\n);\n</code></pre> 3. Ritorno del record    Quando la validazione termina senza eccezioni, la riga viene restituita a INSERT/UPDATE.</p>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_valida_cf_piva_dispatch/#esempio-di-trigger-ddl","title":"\ud83d\udd16 Esempio di Trigger DDL","text":"<pre><code>DROP TRIGGER IF EXISTS trg_soggetti_ins_upd_dispatch_valida_cf_piva\n  ON anagrafiche.soggetti;\n\nCREATE TRIGGER trg_soggetti_ins_upd_dispatch_valida_cf_piva\n  BEFORE INSERT OR UPDATE\n  ON anagrafiche.soggetti\n  FOR EACH ROW\n  EXECUTE FUNCTION anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch();\n</code></pre>"},{"location":"dbzero/anagrafiche/manual/trgfn_soggetti_valida_cf_piva_dispatch/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Centralizzazione validation: tutta la logica di CF/P.IVA per l\u2019Italia \u00e8 in un\u2019unica funzione.</li> <li>Manutenibilit\u00e0: nuove regole per altri paesi si aggiungono semplicemente con nuovi branch o funzioni dedicate.</li> <li>Coerenza dati: errori di formato e regole specifiche sono applicate a livello database, riducendo la complessit\u00e0 lato applicazione.</li> </ul> <p>\ud83e\udde0 \u201cCon il dispatch centralizzato in <code>trgfn_soggetti_valida_cf_piva_dispatch</code>, Zero ERP assicura controlli locali e internazionali sui dati fiscali in modo modulare e a prova di evoluzioni future.\u201d</p>"},{"location":"dbzero/anagrafiche/tabelle/billing_account/","title":"\ud83d\udcda Tabella <code>billing_account</code>","text":""},{"location":"dbzero/anagrafiche/tabelle/billing_account/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('anagrafiche.billing_account_id_seq'::regclass) istanza_id integer NO soggetto_ruolo_id integer NO utility_id integer NO parent_account_id integer YES account_code character varying NO valid_from date NO CURRENT_DATE valid_to date YES data_insert timestamp with time zone NO now() user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO now() user_update character varying NO CURRENT_USER"},{"location":"dbzero/anagrafiche/tabelle/billing_account/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_billing_account_anagrafiche parent_account_id FOREIGN KEY fk_istanze_utilities_anagrafiche istanza_id, istanza_id FOREIGN KEY fk_soggetti_ruoli_anagrafiche soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id FOREIGN KEY fk_utilities_config utility_id, utility_id, utility_id, utility_id PRIMARY KEY pk_billing_account id UNIQUE uq_billing_account_code account_code UNIQUE uq_billing_instance_utility istanza_id, utility_id"},{"location":"dbzero/anagrafiche/tabelle/billing_account/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_billing_account_istanza_id <code>CREATE INDEX ix_billing_account_istanza_id ON anagrafiche.billing_account USING btree (istanza_id)</code> ix_billing_account_parent_account_id <code>CREATE INDEX ix_billing_account_parent_account_id ON anagrafiche.billing_account USING btree (parent_account_id)</code> ix_billing_account_soggetto_ruolo_id <code>CREATE INDEX ix_billing_account_soggetto_ruolo_id ON anagrafiche.billing_account USING btree (soggetto_ruolo_id)</code> ix_billing_account_utility_id <code>CREATE INDEX ix_billing_account_utility_id ON anagrafiche.billing_account USING btree (utility_id)</code> pk_billing_account <code>CREATE UNIQUE INDEX pk_billing_account ON anagrafiche.billing_account USING btree (id)</code> uq_billing_account_code <code>CREATE UNIQUE INDEX uq_billing_account_code ON anagrafiche.billing_account USING btree (account_code)</code> uq_billing_instance_utility <code>CREATE UNIQUE INDEX uq_billing_instance_utility ON anagrafiche.billing_account USING btree (istanza_id, utility_id)</code>"},{"location":"dbzero/anagrafiche/tabelle/billing_account/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_billing_account_ins_upd_gen_account_code BEFORE INSERT <code>EXECUTE FUNCTION script.trgfn_generate_account_code_generic('billing_account')</code> trg_billing_account_ins_upd_gen_account_code BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_generate_account_code_generic('billing_account')</code> trg_upd_billing_account_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/tabelle/clienti/","title":"\ud83d\udcda Tabella <code>clienti</code>","text":""},{"location":"dbzero/anagrafiche/tabelle/clienti/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('anagrafiche.clienti_id_seq'::regclass) soggetto_ruolo_id integer NO istanza_id integer YES tipo_gg_scadenza_ft character NO 'N'::bpchar nr_giorni_scadenza integer NO 0 modalita_pagamento_id integer YES cliente_pa character NO 'N'::bpchar codice_cig character varying YES codice_cup character varying YES cod_commessa character varying YES split_payment character NO 'N'::bpchar cd_cliente_importato character varying YES stato_cliente_id integer NO iva_id integer NO servizio_da_fatturare boolean NO true data_insert timestamp with time zone NO now() user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO now() user_update character varying NO CURRENT_USER utility_id integer YES"},{"location":"dbzero/anagrafiche/tabelle/clienti/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_clienti_pa CHECK chk_clienti_scadenza_logic CHECK chk_clienti_servizio_da_fatturare CHECK chk_clienti_split_payment CHECK chk_clienti_tipo_scadenza FOREIGN KEY fk_istanze_utilities_anagrafiche istanza_id, istanza_id FOREIGN KEY fk_iva_config iva_id FOREIGN KEY fk_modalita_pagamento_config modalita_pagamento_id FOREIGN KEY fk_soggetti_ruoli_anagrafiche soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id FOREIGN KEY fk_stati_cliente_config stato_cliente_id FOREIGN KEY fk_utilities_config utility_id, utility_id, utility_id, utility_id PRIMARY KEY pk_clienti id"},{"location":"dbzero/anagrafiche/tabelle/clienti/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_clienti_cd_importato <code>CREATE INDEX ix_clienti_cd_importato ON anagrafiche.clienti USING btree (cd_cliente_importato)</code> ix_clienti_istanza_id <code>CREATE INDEX ix_clienti_istanza_id ON anagrafiche.clienti USING btree (istanza_id)</code> ix_clienti_iva_id <code>CREATE INDEX ix_clienti_iva_id ON anagrafiche.clienti USING btree (iva_id)</code> ix_clienti_modalita_pagamento_id <code>CREATE INDEX ix_clienti_modalita_pagamento_id ON anagrafiche.clienti USING btree (modalita_pagamento_id)</code> ix_clienti_soggetto_ruolo_id <code>CREATE INDEX ix_clienti_soggetto_ruolo_id ON anagrafiche.clienti USING btree (soggetto_ruolo_id)</code> ix_clienti_stato_cliente_id <code>CREATE INDEX ix_clienti_stato_cliente_id ON anagrafiche.clienti USING btree (stato_cliente_id)</code> ix_clienti_utility_id <code>CREATE INDEX ix_clienti_utility_id ON anagrafiche.clienti USING btree (utility_id)</code> pk_clienti <code>CREATE UNIQUE INDEX pk_clienti ON anagrafiche.clienti USING btree (id)</code>"},{"location":"dbzero/anagrafiche/tabelle/clienti/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_clienti_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/tabelle/contatti/","title":"Contatti","text":""},{"location":"dbzero/anagrafiche/tabelle/contatti/#documentazione-concettuale-tabella-anagrafichecontatti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.contatti</code>","text":"<p>\ud83d\udc40 Vedi anche Approfondimento tabelle:   - anagrafiche.soggetti  - anagrafiche.soggetti_ruoli  - config.tipi_contatti  - config.utilities </p> <p>Approfondimenti funzioni:  - anagrafiche.trgfn_contatti_ins_upd_set_default_contatto  - script.trgfn_upd_audit_data_user_generic </p> <p>La tabella <code>anagrafiche.contatti</code> \u00e8 il punto di raccolta centralizzato per tutte le informazioni di contatto nell\u2019applicazione, a diversi livelli di granularit\u00e0:</p> <ul> <li>Soggetto (<code>soggetto_id</code> obbligatorio)  </li> <li>Ruolo assegnato al soggetto (<code>soggetto_ruolo_id</code>, opzionale)  </li> <li>Servizio/utility (<code>utility_id</code>, opzionale)  </li> </ul> <p>In questo modo \u00e8 possibile definire:</p> <ol> <li> <p>Contatto \u201cglobale\u201d del soggetto    (solo <code>soggetto_id</code>, <code>soggetto_ruolo_id</code> e <code>utility_id</code> a <code>NULL</code>)</p> </li> <li> <p>Contatto legato a uno specifico ruolo    (ad es. l\u2019amministratore di un soggetto, con <code>soggetto_ruolo_id</code> valorizzato)</p> </li> <li> <p>Contatto associato a un servizio/utility    (ad es. referente tecnico per un determinato servizio)</p> </li> </ol>"},{"location":"dbzero/anagrafiche/tabelle/contatti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Centralizzare i contatti   Un\u2019unica tabella per tutti i numeri di telefono, email, PEC e nominativi, evitando duplicazioni e frammentazione.</p> </li> <li> <p>Gestire livelli di contesto   Tramite i campi <code>soggetto_ruolo_id</code> e <code>utility_id</code> (che possono essere <code>NULL</code>), si modellano contatti generici o specifici.</p> </li> <li> <p>Identificare il contatto \u201cdefault\u201d   Il flag <code>is_default</code> permette di marcare un solo contatto di riferimento per ciascun soggetto.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/contatti/#vincoli-e-relazioni","title":"\ud83d\udd0d Vincoli e Relazioni","text":"<ul> <li><code>PK (id)</code>: identificatore univoco del contact record.  </li> <li><code>UNIQUE (soggetto_id, soggetto_ruolo_id, utility_id, tipo_contatto_id)</code>   Garantisce una sola entry per combinazione di soggetto/ruolo/utility e tipo di contatto.  </li> <li>Foreign Keys </li> <li><code>soggetto_id</code> \u2192 <code>anagrafiche.soggetti(id)</code> ON DELETE CASCADE </li> <li><code>soggetto_ruolo_id</code> \u2192 <code>anagrafiche.soggetti_ruoli(id)</code> ON DELETE CASCADE </li> <li><code>tipo_contatto_id</code> \u2192 <code>config.tipi_contatti(id)</code> ON DELETE RESTRICT </li> <li><code>utility_id</code> \u2192 <code>config.utilities(id)</code> ON DELETE CASCADE </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/contatti/#relazioni-e-trigger","title":"\u2699\ufe0f Relazioni e Trigger","text":"<ul> <li>Trigger <code>trg_contatti_ins_upd_set_default_contatto</code>   Assicura che esista al pi\u00f9 un contatto <code>is_default = TRUE</code> per ogni <code>soggetto_id</code>:  </li> <li>Se <code>NEW.is_default = TRUE</code>, resetta gli altri a <code>FALSE</code>.  </li> <li> <p>Se nessun contatto precedente \u00e8 <code>default</code>, marca automaticamente il primo inserito/aggiornato.</p> </li> <li> <p>Trigger <code>trg_upd_contatti_audit_data_user</code>   Aggiorna i campi <code>data_update</code> e <code>user_update</code> ad ogni modifica.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/contatti/#indici","title":"\ud83d\udd17 Indici","text":"<ul> <li><code>ix_contatti_soggetto</code> su <code>soggetto_id</code> per ricerche rapide per soggetto.</li> <li><code>ix_contatti_tipo</code> su <code>tipo_contatto_id</code> per filtrare contatti per tipologia.</li> <li><code>ix_contatti_utility</code> su <code>utility_id</code> per isolare contatti per servizio.</li> </ul> <p>Migliorano le performance nelle query di recupero contatti per soggetto, tipo o servizio.</p>"},{"location":"dbzero/anagrafiche/tabelle/contatti/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<p>```sql -- 1) Contatto globale per il soggetto UUID '123e4567-e89b-12d3-a456-426614174000' INSERT INTO anagrafiche.contatti (   tipo_contatto_id, soggetto_id,   nominativo, email, telefono, is_default ) VALUES (   1, '123e4567-e89b-12d3-a456-426614174000',   'Mario Rossi', 'm.rossi@example.com', '0123456789', TRUE );</p> <p>-- 2) Contatto specifico per ruolo (soggetto_ruolo_id = 10) INSERT INTO anagrafiche.contatti (   tipo_contatto_id, soggetto_id, soggetto_ruolo_id,   nominativo, cellulare ) VALUES (   2, '123e4567-e89b-12d3-a456-426614174000', 10,   'Luca Bianchi', '3801234567' );</p> <p>-- 3) Contatto per utility (utility_id = 5) INSERT INTO anagrafiche.contatti (   tipo_contatto_id, soggetto_id, utility_id,   nominativo, pec ) VALUES (   3, '123e4567-e89b-12d3-a456-426614174000', 5,   'Ufficio Tecnico', 'tecnico@azienda.pec' );</p> <p>-- 4) Impostare un contatto come default (il trigger resetta gli altri) UPDATE anagrafiche.contatti    SET is_default = TRUE  WHERE id = 42;</p> <p>-- 5) Recuperare il contatto default di un soggetto SELECT *   FROM anagrafiche.contatti  WHERE soggetto_id = '123e4567-e89b-12d3-a456-426614174000'    AND is_default;</p>"},{"location":"dbzero/anagrafiche/tabelle/contatti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Flessibilit\u00e0: un singolo modello per ogni combinazione soggetto/ruolo/servizio e tipo di contatto.</p> </li> <li> <p>Univocit\u00e0: constraint e trigger assicurano coerenza e un solo contatto predefinito per soggetto.</p> </li> <li> <p>Manutenzione semplificata: aggiornare o estendere i tipi di contatto avviene solo in tabelle di configurazione.</p> </li> <li> <p>Tracciabilit\u00e0: audit dei cambiamenti con timestamp e utente, per compliance e debugging.</p> </li> </ul> <p>\ud83e\udde0 Centralizzare i contatti in un\u2019unica tabella con supporto multi-contesto e contact default migliora coerenza, performance e usabilit\u00e0 del sistema.\u201d</p>"},{"location":"dbzero/anagrafiche/tabelle/contatti/#tabella-contatti","title":"\ud83d\udcda Tabella <code>contatti</code>","text":""},{"location":"dbzero/anagrafiche/tabelle/contatti/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('anagrafiche.contatti_id_seq'::regclass) tipo_contatto_id integer NO soggetto_id uuid NO soggetto_ruolo_id integer YES utility_id integer YES nominativo character varying NO email character varying YES telefono character varying YES cellulare character varying YES pec character varying YES note text YES user_insert text NO CURRENT_USER user_update text NO CURRENT_USER is_default boolean NO false data_insert timestamp with time zone NO now() data_update timestamp with time zone NO now() titolo_cortesia_id integer YES default_context character varying YES tx_id uuid YES"},{"location":"dbzero/anagrafiche/tabelle/contatti/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_soggetti_anagrafiche soggetto_id, soggetto_id, soggetto_id, soggetto_id FOREIGN KEY fk_soggetti_ruoli_anagrafiche soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id FOREIGN KEY fk_tipi_contatti_config tipo_contatto_id FOREIGN KEY fk_titoli_cortesia_config titolo_cortesia_id, titolo_cortesia_id FOREIGN KEY fk_utilities_config utility_id, utility_id, utility_id, utility_id PRIMARY KEY pk_contatti id UNIQUE uq_contatti_multilevel soggetto_ruolo_id, utility_id, soggetto_id, tipo_contatto_id"},{"location":"dbzero/anagrafiche/tabelle/contatti/#indici_1","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_contatti_soggetto_id <code>CREATE INDEX ix_contatti_soggetto_id ON anagrafiche.contatti USING btree (soggetto_id)</code> ix_contatti_soggetto_ruolo_id <code>CREATE INDEX ix_contatti_soggetto_ruolo_id ON anagrafiche.contatti USING btree (soggetto_ruolo_id)</code> ix_contatti_tipo_contatto_id <code>CREATE INDEX ix_contatti_tipo_contatto_id ON anagrafiche.contatti USING btree (tipo_contatto_id)</code> ix_contatti_titolo_cortesia_id <code>CREATE INDEX ix_contatti_titolo_cortesia_id ON anagrafiche.contatti USING btree (titolo_cortesia_id)</code> ix_contatti_utility_id <code>CREATE INDEX ix_contatti_utility_id ON anagrafiche.contatti USING btree (utility_id)</code> pk_contatti <code>CREATE UNIQUE INDEX pk_contatti ON anagrafiche.contatti USING btree (id)</code> uq_contatti_multilevel <code>CREATE UNIQUE INDEX uq_contatti_multilevel ON anagrafiche.contatti USING btree (soggetto_id, soggetto_ruolo_id, utility_id, tipo_contatto_id)</code>"},{"location":"dbzero/anagrafiche/tabelle/contatti/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_contatti_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_contatti_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_contatti_ins_upd_set_default_contatto BEFORE INSERT <code>EXECUTE FUNCTION anagrafiche.trgfn_contatti_ins_upd_set_default_contatto()</code> trg_contatti_ins_upd_set_default_contatto BEFORE UPDATE <code>EXECUTE FUNCTION anagrafiche.trgfn_contatti_ins_upd_set_default_contatto()</code> trg_upd_contatti_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/tabelle/dati_societari/","title":"Dati societari","text":""},{"location":"dbzero/anagrafiche/tabelle/dati_societari/#documentazione-concettuale-tabella-anagrafichedati_societari","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.dati_societari</code>","text":"<p>\ud83d\udc40 Vedi anche Approfondimento Tabelle:  </p> <ul> <li>anagrafiche.soggetti </li> <li>config.province</li> </ul> <p>Approfondimento funzioni e trigger:</p> <ul> <li>anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto</li> <li>script.trgfn_upd_dlt_storico_generic</li> <li>dbops.trgfn_tx_id_managed</li> </ul> <p>La tabella <code>anagrafiche.dati_societari</code> contiene i dati societari estesi per ciascun soggetto di tipo aziendale presente in <code>anagrafiche.soggetti</code>. Ogni riga rappresenta un insieme di informazioni obbligatorie e opzionali relative alla forma giuridica, capitale sociale, iscrizione REA, stato di liquidazione e modalit\u00e0 di fatturazione elettronica.</p>"},{"location":"dbzero/anagrafiche/tabelle/dati_societari/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Estendere l\u2019anagrafica generale   I soggetti di tipo giuridico (aziende) hanno esigenze di memorizzazione di dati societari che non interessano le persone fisiche. Spostando queste informazioni in <code>dati_societari</code>, si mantiene la tabella <code>anagrafiche.soggetti</code> leggera e focalizzata sui campi anagrafici di base. Solo per i tipi soggetti appropriati controllati dalla trigger function <code>anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto</code></p> </li> <li> <p>Gestione iscrizione REA e capitale sociale   Memorizzare la provincia di iscrizione REA (<code>id_prov_iscri_rea</code> + <code>iscrizione_rea</code>) e il capitale sociale in Euro (<code>capitale_sociale</code>), dato fondamentale per valutazioni finanziarie e di business.</p> </li> <li> <p>Informazioni su socio unico e liquidazione   Tenere traccia degli stati societari tramite i campi enumerati <code>socio_unico</code> (se \u00e8 \u201cSocio Unico\u201d o \u201cSocio Multiplo\u201d) e <code>liquidazione</code> (se la societ\u00e0 \u00e8 in liquidazione o meno).</p> </li> <li> <p>Dati di fatturazione elettronica   Conservare il codice SDI (<code>codice_sdi</code>) e la PEC dedicata (<code>pec_fatturazione</code>) utilizzati per l\u2019invio di fatture elettroniche (B2B/B2C), oltre al \u201ccodice destinatario FE\u201d (<code>destinatario_fe</code>).</p> </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/dati_societari/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>anagrafiche.soggetti</code> </li> <li>Il campo <code>soggetto_id</code> (UUID) fa riferimento alla chiave primaria di <code>anagrafiche.soggetti(id)</code>.  </li> <li>Vincolo <code>fk_soggetti_anagrafiche</code>:  <ul> <li>ON UPDATE CASCADE (se cambia l\u2019ID del soggetto, si propaga)  </li> <li>ON DELETE CASCADE (se un soggetto viene eliminato, si rimuovono automaticamente i suoi dati societari).  </li> </ul> </li> <li> <p>Ogni soggetto di tipo \u201cazienda\u201d pu\u00f2 avere al massimo una riga in <code>dati_societari</code> (vincolo di unicit\u00e0 <code>uq_ds_soggetto</code>).</p> </li> <li> <p><code>config.province</code> </p> </li> <li>Il campo <code>id_prov_iscri_rea</code> (integer) fa riferimento a <code>config.province(id)</code>.  </li> <li>Vincolo <code>fk_province_config</code>:  <ul> <li>ON UPDATE CASCADE (se l\u2019ID di una provincia cambia, si propaga)  </li> <li>ON DELETE RESTRICT (non si pu\u00f2 eliminare una provincia se esistono aziende iscritte l\u00ec).  </li> </ul> </li> <li>Il binomio (<code>id_prov_iscri_rea</code>, <code>iscrizione_rea</code>) \u00e8 garantito unico da <code>uq_ds_prov_cea</code>, evitando duplicati di iscrizione REA nella stessa provincia.</li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/dati_societari/#vincoli-di-unicita-e-integrita","title":"\ud83d\udea9 Vincoli di Unicit\u00e0 e Integrit\u00e0","text":"<ul> <li>Primary Key </li> <li> <p><code>pk_dati_societari</code> su <code>id_dati_societari</code>, gestito da sequenza automatica.</p> </li> <li> <p>Unicit\u00e0 dei campi di fatturazione </p> </li> <li><code>uq_ds_codice_sdi</code> su <code>codice_sdi</code> (ogni codice SDI pu\u00f2 appartenere a una sola azienda).  </li> <li> <p><code>uq_ds_pec_fatt</code> su <code>pec_fatturazione</code> (ogni PEC di fatturazione \u00e8 univoca).</p> </li> <li> <p>Unicit\u00e0 iscrizione REA </p> </li> <li> <p><code>uq_ds_prov_cea</code> su (<code>id_prov_iscri_rea</code>, <code>iscrizione_rea</code>), garantendo che non esistano due aziende con la stessa iscrizione REA nella stessa provincia.</p> </li> <li> <p>Vincolo <code>uq_ds_soggetto</code> </p> </li> <li>Assicura che ogni <code>soggetto_id</code> compaia al pi\u00f9 una volta in <code>dati_societari</code>, evitando duplicati di scheda societaria.</li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/dati_societari/#descrizione-dei-campi-principali","title":"\ud83d\udd0d Descrizione dei Campi Principali","text":"<ul> <li> <p><code>soggetto_id</code>   Riferimento al soggetto (UUID) in <code>anagrafiche.soggetti</code>. Identifica in modo univoco l\u2019azienda cui appartengono questi dati societari.</p> </li> <li> <p><code>forma_giuridica</code>   Testo che indica la forma giuridica della societ\u00e0 (es. \u201cSRL\u201d, \u201cSPA\u201d, \u201cSNC\u201d). \u00c8 un campo obbligatorio.</p> </li> <li> <p><code>capitale_sociale</code>   Valore numerico (precisione 15,2) che rappresenta il capitale sociale, espresso in Euro. Campo obbligatorio.</p> </li> <li> <p><code>id_prov_iscri_rea</code>   Intero che indica la provincia di iscrizione al Registro delle Imprese (REA), collegato a <code>config.province(id)</code>.</p> </li> <li> <p><code>iscrizione_rea</code>   Testo (fino a 30 caratteri) che indica il numero di iscrizione REA. Deve essere valorizzato ed \u00e8 unito a <code>id_prov_iscri_rea</code> dal vincolo di unicit\u00e0.</p> </li> <li> <p><code>socio_unico</code>   Tipo enumerato <code>anagrafiche.socio_unico_enum</code>:  </p> </li> <li><code>SU</code> = Socio Unico  </li> <li> <p><code>SM</code> = Socio Multiplo   Valorizzato di default a <code>SU</code>.</p> </li> <li> <p><code>liquidazione</code>   Tipo enumerato <code>anagrafiche.liquidazione_enum</code>:  </p> </li> <li><code>LN</code> = Non in liquidazione (default)  </li> <li> <p><code>LS</code> = In liquidazione  </p> </li> <li> <p><code>destinatario_fe</code>   Testo fino a 10 caratteri che contiene il \u201ccodice destinatario\u201d per la fatturazione elettronica. Campo obbligatorio (ad uso interno).</p> </li> <li> <p><code>pec_fatturazione</code>   PEC (Testo fino a 100 caratteri) dedicata alla fatturazione elettronica. Deve essere univoca o valorizzata a <code>NULL</code> se non disponibile.</p> </li> <li> <p><code>codice_sdi</code>   Testo fino a 10 caratteri che rappresenta il \u201ccodice SDI\u201d per la fatturazione elettronica. Deve essere univoco o valorizzato a <code>NULL</code>.</p> </li> <li> <p><code>data_costituzione</code>   Data di costituzione dell\u2019azienda. Campo opzionale: pu\u00f2 essere <code>NULL</code> se non disponibile.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/dati_societari/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Separazione dei dati societari dal resto   Consolidando le informazioni strettamente legate alla natura giuridica e fiscale di un\u2019azienda in una tabella dedicata, si migliora la coerenza e la manutenzione. La tabella <code>anagrafiche.soggetti</code> resta focalizzata su campi di base comuni a tutte le tipologie di soggetti.</p> </li> <li> <p>Garanzia di unicit\u00e0 e integrit\u00e0   I vincoli di unicit\u00e0 su <code>codice_sdi</code>, <code>pec_fatturazione</code>, <code>iscrizione_rea</code> (assieme a <code>id_prov_iscri_rea</code>) e <code>soggetto_id</code> impediscono duplicazioni di dati critici, evitando errori nelle fasi di fatturazione e verifica anagrafica.</p> </li> <li> <p>Tracciabilit\u00e0 della relazione soggetto \u2192 dati societari   La cancellazione a cascata del soggetto rimuove automaticamente la scheda societaria associata, semplificando l\u2019amministrazione dei dati e riducendo la possibilit\u00e0 di record orfani.</p> </li> <li> <p>Supporto a processi di fatturazione elettronica   Con <code>destinatario_fe</code>, <code>pec_fatturazione</code> e <code>codice_sdi</code>, la tabella fornisce tutte le informazioni necessarie per l\u2019invio di fatture elettroniche conformi alle normative italiane.</p> </li> </ul> <p>\ud83e\udde0 \u201cUn\u2019estensione dedicata ai dati societari, che valorizza la tabella anagrafica base separando informazioni fiscali, legali e di fatturazione in un unico punto, con regole di integrit\u00e0 che evitano inconsistenze.\u201d </p>"},{"location":"dbzero/anagrafiche/tabelle/dati_societari/#tabella-dati_societari","title":"\ud83d\udcda Tabella <code>dati_societari</code>","text":""},{"location":"dbzero/anagrafiche/tabelle/dati_societari/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id bigint NO nextval('anagrafiche.dati_societari_id_seq'::regclass) soggetto_id uuid NO forma_giuridica text NO capitale_sociale numeric NO id_prov_iscri_rea integer NO iscrizione_rea character varying NO socio_unico USER-DEFINED NO 'SU'::anagrafiche.socio_unico_enum liquidazione USER-DEFINED NO 'LN'::anagrafiche.liquidazione_enum destinatario_fe character NO pec_fatturazione character varying YES codice_sdi character varying YES data_costituzione date YES data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert text NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update text NO CURRENT_USER tx_id uuid YES storicizza boolean YES false"},{"location":"dbzero/anagrafiche/tabelle/dati_societari/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_province_config id_prov_iscri_rea FOREIGN KEY fk_soggetti_anagrafiche soggetto_id, soggetto_id, soggetto_id, soggetto_id PRIMARY KEY pk_dati_societari id UNIQUE uq_ds_codice_sdi codice_sdi UNIQUE uq_ds_pec_fatt pec_fatturazione UNIQUE uq_ds_prov_cea id_prov_iscri_rea, iscrizione_rea UNIQUE uq_ds_soggetto soggetto_id"},{"location":"dbzero/anagrafiche/tabelle/dati_societari/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_dati_societari_id_prov_iscri_rea <code>CREATE INDEX ix_dati_societari_id_prov_iscri_rea ON anagrafiche.dati_societari USING btree (id_prov_iscri_rea)</code> pk_dati_societari <code>CREATE UNIQUE INDEX pk_dati_societari ON anagrafiche.dati_societari USING btree (id)</code> uq_ds_codice_sdi <code>CREATE UNIQUE INDEX uq_ds_codice_sdi ON anagrafiche.dati_societari USING btree (codice_sdi)</code> uq_ds_pec_fatt <code>CREATE UNIQUE INDEX uq_ds_pec_fatt ON anagrafiche.dati_societari USING btree (pec_fatturazione)</code> uq_ds_prov_cea <code>CREATE UNIQUE INDEX uq_ds_prov_cea ON anagrafiche.dati_societari USING btree (id_prov_iscri_rea, iscrizione_rea)</code> uq_ds_soggetto <code>CREATE UNIQUE INDEX uq_ds_soggetto ON anagrafiche.dati_societari USING btree (soggetto_id)</code>"},{"location":"dbzero/anagrafiche/tabelle/dati_societari/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_dati_societari_ins_upd_check_tipo_soggetto BEFORE UPDATE <code>EXECUTE FUNCTION anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto()</code> trg_dati_societari_ins_upd_check_tipo_soggetto BEFORE INSERT <code>EXECUTE FUNCTION anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto()</code> trg_dati_societari_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_dati_societari_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_upd_dati_societari_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> trg_z90_dati_societari_upd_dlt_storico BEFORE DELETE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('dati_societari_id')</code> trg_z90_dati_societari_upd_dlt_storico BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('dati_societari_id')</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/tabelle/gestori/","title":"Gestori","text":""},{"location":"dbzero/anagrafiche/tabelle/gestori/#documentazione-concettuale-tabella-anagrafichegestori","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.gestori</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:   - anagrafiche.soggetti   - anagrafiche.soggetti_ruoli   - config.valute </p> <p>Approfondimenti funzioni:  - anagrafiche.trgfn_gestori_ins_upd_check_ruolo_gestore  - script.fn_check_ins_soggetto_ruolo </p> <p>La tabella <code>anagrafiche.gestori</code> rappresenta l\u2019azienda stessa che utilizza e amministra il sistema Zero ERP (\u201cgestore\u201d). Attualmente raccoglie le informazioni di base necessarie a identificare il gestore, ma \u00e8 ancora in fase di definizione: in futuro potr\u00e0 essere estesa per includere ulteriori parametri funzionali e di configurazione del software.</p>"},{"location":"dbzero/anagrafiche/tabelle/gestori/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Identificare il gestore del sistema   Memorizzare la riga unica che corrisponde all\u2019azienda proprietaria o amministratrice di Zero ERP, distinguendola da tutti gli altri soggetti (clienti, fornitori, partner, ecc.).</p> </li> <li> <p>Collegare il gestore all\u2019anagrafica generica   Utilizzare il campo <code>soggetto_id</code> per riferirsi al record corrispondente in <code>anagrafiche.soggetti</code> (azienda di tipo giuridico), garantendo coerenza fra scheda anagrafica e scheda gestore.</p> </li> <li> <p>Assicurare il ruolo corretto   Contribuire al rispetto della logica applicativa: il trigger <code>trg_gestori_ins_upd_check_ruolo_gestore</code> verifica che il record inserito o aggiornato faccia effettivamente riferimento a una relazione soggetto-ruolo di tipo \u201cGestore\u201d (presente in <code>anagrafiche.soggetti_ruoli</code>).</p> </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/gestori/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>anagrafiche.soggetti</code> </li> <li>Il campo <code>soggetto_id</code> (UUID) \u00e8 una chiave esterna che punta a <code>anagrafiche.soggetti(id)</code>.  </li> <li> <p>Vincolo <code>fk_soggetti_anagrafiche</code>:  </p> <ul> <li>ON UPDATE NO ACTION </li> <li>ON DELETE RESTRICT (non \u00e8 consentito eliminare il soggetto di tipo \u201cgestore\u201d finch\u00e9 rimane collegato).  </li> </ul> </li> <li> <p><code>anagrafiche.soggetti_ruoli</code> </p> </li> <li>Il campo <code>soggetto_ruolo_id</code> (integer) fa riferimento a una riga di <code>anagrafiche.soggetti_ruoli(id)</code> avente ruolo \u201cGestore\u201d.  </li> <li> <p>Vincolo <code>fk_soggetti_ruoli_anagrafiche</code>:  </p> <ul> <li>ON UPDATE NO ACTION </li> <li>ON DELETE RESTRICT (non \u00e8 consentito eliminare la relazione soggetto-ruolo \u201cGestore\u201d se \u00e8 in uso).  </li> </ul> </li> <li> <p><code>config.valute</code> </p> </li> <li>Il campo <code>valuta_id</code> (integer) rimanda a <code>config.valute(id)</code>, indicando la valuta di default per le operazioni gestionali.  </li> <li>Vincolo <code>fk_valute_config</code>:  <ul> <li>ON UPDATE NO ACTION </li> <li>ON DELETE RESTRICT (la valuta di default non pu\u00f2 essere eliminata se \u00e8 assegnata a un gestore).  </li> </ul> </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/gestori/#vincoli-di-unicita-e-integrita","title":"\ud83d\udea9 Vincoli di Unicit\u00e0 e Integrit\u00e0","text":"<ul> <li>Primary Key </li> <li> <p><code>pk_gestori</code> su <code>id</code> (seriale intero generato automaticamente).</p> </li> <li> <p>Riga singleton per gestore </p> </li> <li> <p>Il vincolo <code>uq_gestori_singleton EXCLUDE USING gist ((1) WITH =) WHERE (id IS NOT NULL)</code> assicura che esista al massimo una sola riga nella tabella <code>gestori</code>. In tal modo, zero o un record potranno rappresentare il gestore di Zero ERP.</p> </li> <li> <p>Riferimento obbligatorio a soggetto </p> </li> <li><code>soggetto_id</code> deve sempre esistere in <code>anagrafiche.soggetti</code>.  </li> <li> <p><code>soggetto_ruolo_id</code> deve sempre esistere in <code>anagrafiche.soggetti_ruoli</code> e deve corrispondere a un ruolo \u201cGestore\u201d.</p> </li> <li> <p>Riferimento obbligatorio a valuta </p> </li> <li> <p><code>valuta_id</code> deve sempre esistere in <code>config.valute</code>, per definire la moneta utilizzata dal gestore.</p> </li> <li> <p>Campi testuali obbligatori </p> </li> <li> <p><code>descrizione</code> (50 caratteri) e <code>cd_prod_software</code> (20 caratteri) non possono essere nulli, al fine di fornire un\u2019etichetta descrittiva e l\u2019indicazione del prodotto software in uso.</p> </li> <li> <p>IBAN obbligatorio </p> </li> <li>Il campo <code>iban</code> (35 caratteri) \u00e8 necessario per registrare il conto bancario del gestore.</li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/gestori/#descrizione-dei-campi-principali","title":"\ud83d\udd0d Descrizione dei Campi Principali","text":"<ul> <li> <p><code>id</code>   Identificativo univoco (seriale intero) per la riga \u201cgestore\u201d.</p> </li> <li> <p><code>soggetto_id</code>   Riferimento al record di <code>anagrafiche.soggetti</code> che rappresenta l\u2019azienda amministratrice. \u00c8 vincolato alla presenza di un soggetto di tipo giuridico.</p> </li> <li> <p><code>soggetto_ruolo_id</code>   Riferimento alla riga di <code>anagrafiche.soggetti_ruoli</code> associata al ruolo \u201cGestore\u201d per il soggetto indicato. Garantisce che il soggetto abbia gi\u00e0 un ruolo valido di tipo \u201cGestore\u201d.</p> </li> <li> <p><code>descrizione</code>   Etichetta testuale (50 caratteri) utilizzata per mostrare un nominativo breve (ad esempio, \u201cACME S.r.l. \u2013 Gestore Sistema\u201d) nelle interfacce utente.</p> </li> <li> <p><code>cd_prod_software</code>   Codice del prodotto software in uso (20 caratteri). Pu\u00f2 essere utile per identificare versioni, edizioni o configurazioni specifiche attivate per il gestore (es. \u201cZEROERP_PRO\u201d o \u201cZEROERP_STD\u201d).</p> </li> <li> <p><code>valuta_id</code>   Riferimento a <code>config.valute(id)</code>, indica la valuta di default per prezzi, bilanci e reporting amministrativo (es. EUR, USD, GBP).</p> </li> <li> <p><code>iban</code>   Codice IBAN (35 caratteri) del conto corrente aziendale del gestore, utilizzato per operazioni bancarie e pagamento fatture.</p> </li> <li> <p><code>user_insert</code>, <code>data_insert</code>, <code>user_update</code>, <code>data_update</code>   Campi di audit standard:</p> </li> <li><code>user_insert</code>: login utente che ha creato la riga.  </li> <li><code>data_insert</code>: timestamp di creazione.  </li> <li><code>user_update</code>: login utente che ha eseguito l\u2019ultima modifica.  </li> <li><code>data_update</code>: timestamp dell\u2019ultima modifica.</li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/gestori/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Singleton azienda gestore   Grazie al vincolo di esclusione su <code>(1)</code>, si garantisce che esista al massimo una sola riga che rappresenta l\u2019azienda \u201cgestore\u201d. Ci\u00f2 semplifica la logica applicativa, perch\u00e9 non \u00e8 necessario gestire pi\u00f9 istanze di gestore.</p> </li> <li> <p>Controllo automatico del ruolo   Il trigger <code>check_ruolo_gestore</code> impedisce l\u2019inserimento di record non validi, assicurando che il soggetto collegato abbia gi\u00e0 il ruolo \u201cGestore\u201d in <code>anagrafiche.soggetti_ruoli</code>.</p> </li> <li> <p>Collegamenti diretti a dati anagrafici e valute   Le chiavi esterne verso <code>anagrafiche.soggetti</code> e <code>config.valute</code> assicurano coerenza e consentono di risalire rapidamente alle informazioni base dell\u2019azienda e alla valuta di riferimento.</p> </li> <li> <p>Tracciabilit\u00e0 delle modifiche   Il trigger di audit registra tutti gli aggiornamenti, mantenendo un log implicito di chi e quando ha modificato i dati del gestore.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/gestori/#sviluppi-futuri","title":"\ud83d\ude80 Sviluppi Futuri","text":"<ul> <li>Estensione dei parametri funzionali   In futuro, <code>anagrafiche.gestori</code> potr\u00e0 contenere campi aggiuntivi di configurazione software, quali:</li> <li>Parametri di default per fatturazione elettronica (ad es. metodi di invio, codici destinatario).  </li> <li>Impostazioni di branding (logo, colori, template PDF).  </li> <li>Soglie operative (es. scorte minime, limiti di credito).  </li> <li> <p>Configurazioni API per integrazione con servizi esterni (es. CRM, sistemi bancari).</p> </li> <li> <p>Integrazione con tabelle di telemetria   Possibile aggiunta di relazioni verso tabelle di monitoraggio (log di accesso, statistiche di performance, volumi di documenti) collegate al gestore, per analisi di utilizzo e ottimizzazione del sistema.</p> </li> <li> <p>Multitenancy e permessi   Se in futuro Zero ERP dovr\u00e0 supportare ambienti multi-tenant, saranno previsti campi aggiuntivi per definire permessi, ruoli amministrativi e ambiti di visibilit\u00e0 dati in funzione del gestore.</p> </li> </ul> <p>\ud83d\udea7 Stato di sviluppo Questa tabella \u00e8 gi\u00e0 funzionante per memorizzare le informazioni di base del gestore, ma rimane soggetta a evoluzione. I campi e i vincoli futuri saranno aggiunti a seconda delle esigenze di progetto.</p> <p>\ud83e\udde0 \u201cUna singola entit\u00e0 per identificare l\u2019azienda gestore e gettare le basi per la futura configurazione avanzata del sistema Zero ERP.\u201d </p>"},{"location":"dbzero/anagrafiche/tabelle/gestori/#tabella-gestori","title":"\ud83d\udcda Tabella <code>gestori</code>","text":""},{"location":"dbzero/anagrafiche/tabelle/gestori/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('anagrafiche.gestori_id_seq'::regclass) soggetto_id uuid NO soggetto_ruolo_id integer NO descrizione character NO cd_prod_software character NO valuta_id integer NO iban character NO user_insert character varying NO user_update character varying YES data_insert timestamp with time zone NO now() data_update timestamp with time zone NO now()"},{"location":"dbzero/anagrafiche/tabelle/gestori/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_soggetti_anagrafiche soggetto_id, soggetto_id, soggetto_id, soggetto_id FOREIGN KEY fk_soggetti_ruoli_anagrafiche soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id FOREIGN KEY fk_valute_config valuta_id PRIMARY KEY pk_gestori id"},{"location":"dbzero/anagrafiche/tabelle/gestori/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_gestori_soggetto_id <code>CREATE INDEX ix_gestori_soggetto_id ON anagrafiche.gestori USING btree (soggetto_id)</code> ix_gestori_soggetto_ruolo_id <code>CREATE INDEX ix_gestori_soggetto_ruolo_id ON anagrafiche.gestori USING btree (soggetto_ruolo_id)</code> ix_gestori_valuta_id <code>CREATE INDEX ix_gestori_valuta_id ON anagrafiche.gestori USING btree (valuta_id)</code> pk_gestori <code>CREATE UNIQUE INDEX pk_gestori ON anagrafiche.gestori USING btree (id)</code> uq_gestori_singleton <code>CREATE INDEX uq_gestori_singleton ON anagrafiche.gestori USING gist ((1)) WHERE (id IS NOT NULL)</code>"},{"location":"dbzero/anagrafiche/tabelle/gestori/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_gestori_ins_upd_check_ruolo_gestore BEFORE INSERT <code>EXECUTE FUNCTION anagrafiche.trgfn_gestori_ins_upd_check_ruolo_gestore()</code> trg_gestori_ins_upd_check_ruolo_gestore BEFORE UPDATE <code>EXECUTE FUNCTION anagrafiche.trgfn_gestori_ins_upd_check_ruolo_gestore()</code> trg_upd_gestori_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/tabelle/gestori_utilities_ruoli/","title":"\ud83d\udcda Tabella <code>gestori_utilities_ruoli</code>","text":""},{"location":"dbzero/anagrafiche/tabelle/gestori_utilities_ruoli/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('anagrafiche.gestori_utilities_ruoli_id_seq'::regclass) gestore_id integer NO utility_id integer NO ruolo_id integer NO extra jsonb YES '{}'::jsonb user_insert character varying NO CURRENT_USER user_update character varying NO CURRENT_USER data_insert timestamp with time zone NO now() data_update timestamp with time zone NO now()"},{"location":"dbzero/anagrafiche/tabelle/gestori_utilities_ruoli/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_gestori_anagrafiche gestore_id FOREIGN KEY fk_tipi_ruoli_config ruolo_id, ruolo_id FOREIGN KEY fk_utilities_config utility_id, utility_id, utility_id, utility_id PRIMARY KEY pk_gestori_utilities_ruoli id UNIQUE uq_gest_util_ruolo ruolo_id, utility_id, gestore_id"},{"location":"dbzero/anagrafiche/tabelle/gestori_utilities_ruoli/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_gestori_utilities_ruoli_gestore_id <code>CREATE INDEX ix_gestori_utilities_ruoli_gestore_id ON anagrafiche.gestori_utilities_ruoli USING btree (gestore_id)</code> ix_gestori_utilities_ruoli_ruolo_id <code>CREATE INDEX ix_gestori_utilities_ruoli_ruolo_id ON anagrafiche.gestori_utilities_ruoli USING btree (ruolo_id)</code> ix_gestori_utilities_ruoli_utility_id <code>CREATE INDEX ix_gestori_utilities_ruoli_utility_id ON anagrafiche.gestori_utilities_ruoli USING btree (utility_id)</code> pk_gestori_utilities_ruoli <code>CREATE UNIQUE INDEX pk_gestori_utilities_ruoli ON anagrafiche.gestori_utilities_ruoli USING btree (id)</code> uq_gest_util_ruolo <code>CREATE UNIQUE INDEX uq_gest_util_ruolo ON anagrafiche.gestori_utilities_ruoli USING btree (gestore_id, utility_id, ruolo_id)</code>"},{"location":"dbzero/anagrafiche/tabelle/gestori_utilities_ruoli/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_gestori_utilities_ruoli_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi/","title":"Indirizzi","text":""},{"location":"dbzero/anagrafiche/tabelle/indirizzi/#documentazione-concettuale-tabella-anagraficheindirizzi","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.indirizzi</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:   </p> <ul> <li>anagrafiche.soggetti </li> <li>anagrafiche.soggetti_ruoli </li> <li>anagrafiche.indirizzi_dettaglio </li> <li>storico.indirizzi </li> <li>config.comuni </li> <li>config.codici_postali </li> <li>config.stati </li> <li>config.tipi_indirizzi </li> </ul> <p>Approfondimento funzioni e trigger:  </p> <ul> <li>anagrafiche.trgfn_indirizzi_ins_upd_clean_fields </li> <li>script.trgfn_upd_dlt_storico_generic </li> <li>dbops.trgfn_tx_id_managed </li> </ul> <p>La tabella <code>anagrafiche.indirizzi</code> gestisce l\u2019associazione tra un soggetto/ruolo e un indirizzo, integrando sia indirizzi normalizzati (collegati a <code>indirizzi_dettaglio</code>), sia indirizzi liberi, utili per contesti internazionali o non strutturati.</p> <p>Supporta: - Identificazione del tipo di indirizzo (es. legale, sede operativa, corrispondenza) - Riferimenti geografici completi - Storicizzazione delle modifiche - Geolocalizzazione - Vincoli di integrit\u00e0 per garantire coerenza tra i dati</p>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Associazione soggetto/ruolo \u2192 indirizzo   Ogni soggetto pu\u00f2 avere pi\u00f9 indirizzi distinti in base al ruolo (es. cliente, fornitore) e al tipo di indirizzo (es. sede legale, spedizione, residenza).</p> </li> <li> <p>Supporto per due modalit\u00e0 </p> </li> <li>Normalizzata: tramite <code>indirizzo_dettaglio_id</code>, si collega a una via e civico specifici (con geolocalizzazione puntuale e struttura gerarchica).</li> <li> <p>Libera: tramite <code>indirizzo_libero</code>, con campi ausiliari (<code>comune_id</code>, <code>stato_id</code>, <code>locality</code>, <code>postal_box</code>, ecc.), utile per indirizzi internazionali o non standardizzati.</p> </li> <li> <p>Controllo di coerenza   Tramite vincoli <code>CHECK</code>, \u00e8 garantita l\u2019alternativit\u00e0 tra le due modalit\u00e0 (o normalizzata o libera) e la completezza minima dei dati se si usa la modalit\u00e0 libera.</p> </li> <li> <p>Tracciabilit\u00e0 e storicizzazione   Con il campo <code>storicizza</code> e i trigger associati, le modifiche vengono salvate come snapshot nella tabella <code>storico.indirizzi</code>.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>anagrafiche.soggetti_ruoli</code> </li> <li>Ogni indirizzo \u00e8 riferito a una specifica combinazione soggetto/ruolo.  </li> <li> <p>Vincolo <code>RESTRICT</code> in caso di eliminazione (non si pu\u00f2 eliminare un ruolo associato a indirizzi).  </p> </li> <li> <p><code>config.tipi_indirizzi</code> </p> </li> <li>Definisce la tipologia dell\u2019indirizzo (es. domicilio fiscale, sede legale, corrispondenza).  </li> <li> <p>Obbligatoria per ogni record.  </p> </li> <li> <p><code>anagrafiche.indirizzi_dettaglio</code> </p> </li> <li>Se presente, indica che l\u2019indirizzo \u00e8 in modalit\u00e0 normalizzata.  </li> <li> <p>In caso contrario, devono essere valorizzati i campi dell\u2019indirizzo libero.  </p> </li> <li> <p><code>config.comuni</code>, <code>config.codici_postali</code>, <code>config.stati</code> </p> </li> <li>Utilizzati solo per la modalit\u00e0 libera per fornire contesto geografico anche a indirizzi non normalizzati.  </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Gestione flessibile degli indirizzi   Si adatta a tutti i contesti: locali (normalizzati) o esteri/non strutturati (liberi), senza perdere integrit\u00e0 dei dati.</p> </li> <li> <p>Storicizzazione automatica   Le modifiche vengono archiviate tramite trigger in <code>storico.indirizzi</code>, mantenendo tracciabilit\u00e0 completa nel tempo.</p> </li> <li> <p>Geolocalizzazione precisa   In modalit\u00e0 normalizzata, \u00e8 disponibile una posizione puntuale (<code>geoloc</code>) utile per sistemi GIS, ottimizzazione logistica o analisi territoriali.</p> </li> <li> <p>Ricerca e normalizzazione   Gli indirizzi normalizzati consentono query full-text, deduplicazione e aggregazioni pi\u00f9 efficienti.</p> </li> <li> <p>Controlli automatici e consistenza   I vincoli <code>CHECK</code> garantiscono che non si verifichino ambiguit\u00e0 nei dati (es. indirizzo sia normalizzato che libero insieme).</p> </li> </ul> <p>\ud83e\udde0 \u201cUna tabella ponte tra struttura e flessibilit\u00e0: <code>anagrafiche.indirizzi</code> consente di mappare ogni possibile indirizzo di un soggetto, conservando coerenza, precisione geografica e tracciabilit\u00e0 delle modifiche.\u201d</p>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi/#tabella-indirizzi","title":"\ud83d\udcda Tabella <code>indirizzi</code>","text":""},{"location":"dbzero/anagrafiche/tabelle/indirizzi/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('anagrafiche.indirizzi_id_seq'::regclass) soggetto_ruolo_id integer NO tipo_indirizzo_id integer NO indirizzo_dettaglio_id integer YES indirizzo_libero text YES stato_id integer YES administrative_area character varying YES locality character varying YES sublocality character varying YES postal_box character varying YES geoloc USER-DEFINED YES data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER comune_id integer YES codice_postale_id integer YES storicizza boolean NO false tx_id uuid YES"},{"location":"dbzero/anagrafiche/tabelle/indirizzi/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_indirizzi_dettaglio_exclusive CHECK chk_indirizzi_fallback_required FOREIGN KEY fk_codici_postali_config codice_postale_id FOREIGN KEY fk_comuni_config comune_id, comune_id FOREIGN KEY fk_indirizzi_dettaglio_anagrafiche indirizzo_dettaglio_id FOREIGN KEY fk_soggetti_ruoli_anagrafiche soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id FOREIGN KEY fk_stati_config stato_id, stato_id FOREIGN KEY fk_tipi_indirizzo_config tipo_indirizzo_id PRIMARY KEY pk_indirizzi id UNIQUE uq_indirizzi_dettaglio_unique indirizzo_dettaglio_id, tipo_indirizzo_id, soggetto_ruolo_id UNIQUE uq_indirizzi_libero_unique indirizzo_libero, tipo_indirizzo_id, soggetto_ruolo_id"},{"location":"dbzero/anagrafiche/tabelle/indirizzi/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_indirizzi_codice_postale_id <code>CREATE INDEX ix_indirizzi_codice_postale_id ON anagrafiche.indirizzi USING btree (codice_postale_id)</code> ix_indirizzi_comune_id <code>CREATE INDEX ix_indirizzi_comune_id ON anagrafiche.indirizzi USING btree (comune_id)</code> ix_indirizzi_geoloc_gist <code>CREATE INDEX ix_indirizzi_geoloc_gist ON anagrafiche.indirizzi USING gist (geoloc)</code> ix_indirizzi_indirizzo_dettaglio_id <code>CREATE INDEX ix_indirizzi_indirizzo_dettaglio_id ON anagrafiche.indirizzi USING btree (indirizzo_dettaglio_id)</code> ix_indirizzi_soggetto_ruolo_id <code>CREATE INDEX ix_indirizzi_soggetto_ruolo_id ON anagrafiche.indirizzi USING btree (soggetto_ruolo_id)</code> ix_indirizzi_stato_id <code>CREATE INDEX ix_indirizzi_stato_id ON anagrafiche.indirizzi USING btree (stato_id)</code> ix_indirizzi_tipo_indirizzo_id <code>CREATE INDEX ix_indirizzi_tipo_indirizzo_id ON anagrafiche.indirizzi USING btree (tipo_indirizzo_id)</code> pk_indirizzi <code>CREATE UNIQUE INDEX pk_indirizzi ON anagrafiche.indirizzi USING btree (id)</code> uq_indirizzi_dettaglio_unique <code>CREATE UNIQUE INDEX uq_indirizzi_dettaglio_unique ON anagrafiche.indirizzi USING btree (soggetto_ruolo_id, tipo_indirizzo_id, indirizzo_dettaglio_id)</code> uq_indirizzi_libero_unique <code>CREATE UNIQUE INDEX uq_indirizzi_libero_unique ON anagrafiche.indirizzi USING btree (soggetto_ruolo_id, tipo_indirizzo_id, indirizzo_libero)</code>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_indirizzi_ins_upd_clean_fields BEFORE UPDATE <code>EXECUTE FUNCTION anagrafiche.trgfn_indirizzi_ins_upd_clean_fields()</code> trg_indirizzi_ins_upd_clean_fields BEFORE INSERT <code>EXECUTE FUNCTION anagrafiche.trgfn_indirizzi_ins_upd_clean_fields()</code> trg_indirizzi_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_indirizzi_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_indirizzi_ins_upd_sync_geoloc BEFORE INSERT <code>EXECUTE FUNCTION anagrafiche.trgfn_indirizzi_ins_upd_sync_geoloc()</code> trg_indirizzi_ins_upd_sync_geoloc BEFORE UPDATE <code>EXECUTE FUNCTION anagrafiche.trgfn_indirizzi_ins_upd_sync_geoloc()</code> trg_upd_indirizzi_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> trg_z90_indirizzi_upd_dlt_storico BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('indirizzo_id')</code> trg_z90_indirizzi_upd_dlt_storico BEFORE DELETE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('indirizzo_id')</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi_dettaglio/","title":"Indirizzi dettaglio","text":""},{"location":"dbzero/anagrafiche/tabelle/indirizzi_dettaglio/#documentazione-concettuale-tabella-anagraficheindirizzi_dettaglio","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.indirizzi_dettaglio</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:     - config.stradario - config.comuni  - config.province  - anagrafiche.indirizzi_dettaglio </p> <p>Approfondimento funzioni:  - script.trgfn_upd_dlt_storico_generic </p> <p>La tabella <code>anagrafiche.indirizzi_dettaglio</code> contiene il dettaglio degli indirizzi civici, collegati a una specifica via (tramite <code>stradario_id</code>) e al relativo contesto geografico (comune, provincia, regione, stato). In essa sono memorizzati numeri civici, estensioni, palazzine, interni, piani, dati di geolocalizzazione e un campo di indirizzo normalizzato generato automaticamente.</p>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi_dettaglio/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Dettagliare lo stradario   Associare a ciascuna via (memorizzata in <code>config.stradario</code>) le singole unit\u00e0 civiche (numeri civici, estensioni, palazzine, interni, piani), ottenendo cos\u00ec l\u2019indirizzo completo e navigabile.  </li> <li>Geolocalizzazione precisa   Il campo <code>civic_geoloc</code> memorizza il punto geografico corrispondente al singolo civico, mentre <code>street_geoloc</code> rappresenta la posizione media della via. Questi dati consentono ricerche spaziali e visualizzazioni GIS a livello di civico.  </li> <li>Indirizzo normalizzato   Il campo calcolato <code>indirizzo_normalizzato</code> combina via, civico, palazzina, scala, piano e interno in un\u2019unica stringa formattata in modo coerente, facilitando confronti testuali e ricerche full-text.</li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi_dettaglio/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>config.stradario</code> </li> <li>Il campo <code>stradario_id</code> (integer) fa riferimento alla chiave primaria di <code>config.stradario</code>.  </li> <li>Vincolo referenziale:  <ul> <li>ON UPDATE CASCADE (se cambia l\u2019ID della via, si propaga automaticamente)  </li> <li>ON DELETE RESTRICT (non si pu\u00f2 eliminare una via se esistono civici ad essa collegati).  </li> </ul> </li> <li> <p>Attraverso <code>config.stradario</code>, si risale alla catena gerarchica:  </p> <ol> <li>Comune (via \u2192 comune)  </li> <li>Provincia (comune \u2192 provincia)  </li> <li>Regione (provincia \u2192 regione)  </li> <li>Stato (regione \u2192 stato)</li> </ol> </li> <li> <p>Unicit\u00e0 del dettaglio civico </p> </li> <li>Il vincolo <code>uq_indirizzi_dettaglio_norm</code> su (<code>via_norm</code>, <code>civico_norm</code>, <code>interno</code>, <code>piano</code>, <code>palazzina</code>) garantisce che non esistano duplicati logici dello stesso indirizzo normalizzato.</li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi_dettaglio/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Ricostruzione gerarchica completa   Mediante <code>stradario_id</code>, \u00e8 possibile risalire in modo automatico e veloce all\u2019intera struttura geografica (via \u2192 comune \u2192 provincia \u2192 regione \u2192 stato) senza duplicare dati.  </li> <li>Precisione nella geolocalizzazione   I campi <code>civic_geoloc</code> e <code>street_geoloc</code> permettono di visualizzare sia la posizione esatta di un civico sia la posizione media della via su mappe e applicazioni GIS.  </li> <li>Ricerche full-text e uniformit\u00e0   Il campo <code>indirizzo_normalizzato</code> consente di effettuare ricerche testuali uniformi, confrontando stringhe gi\u00e0 normalizzate (indipendenti da differenze di formattazione manuale).  </li> <li>Gestione completa delle varianti civiche   Grazie a <code>estensione_civico</code>, <code>palazzina</code>, <code>interno</code> e <code>scala</code>, si coprono tutte le possibili varianti di civico (lettere, palazzine multiple, suddivisioni e piani), senza necessit\u00e0 di alterare lo schema.  </li> <li>Integrit\u00e0 e prevenzione duplicati   Il vincolo di unicit\u00e0 <code>uq_indirizzi_dettaglio_norm</code> evita la creazione di due record con lo stesso indirizzo normalizzato, mantenendo coerenza e pulizia dei dati.</li> </ul> <p>\ud83e\udde0 \u201cUna tabella di dettaglio civico che unisce normalizzazione testuale, geolocalizzazione puntuale e collegamenti gerarchici: il fulcro del sistema di indirizzamento completo in Zero ERP.\u201d </p>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi_dettaglio/#tabella-indirizzi_dettaglio","title":"\ud83d\udcda Tabella <code>indirizzi_dettaglio</code>","text":""},{"location":"dbzero/anagrafiche/tabelle/indirizzi_dettaglio/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('anagrafiche.indirizzi_dettaglio_id_seq'::regclass) stradario_id integer NO civico integer YES estensione_civico character varying YES palazzina character varying YES interno character varying YES piano character varying YES civic_geoloc USER-DEFINED YES altro text YES via_norm text NO civico_norm text NO street_geoloc USER-DEFINED YES data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER scala character varying YES indirizzo_normalizzato text YES tx_id uuid YES attivo boolean NO true storicizza boolean NO false"},{"location":"dbzero/anagrafiche/tabelle/indirizzi_dettaglio/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_stradario_config stradario_id PRIMARY KEY pk_indirizzi_dettaglio id"},{"location":"dbzero/anagrafiche/tabelle/indirizzi_dettaglio/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_indirizzi_dettaglio_civic_geoloc_gist <code>CREATE INDEX ix_indirizzi_dettaglio_civic_geoloc_gist ON anagrafiche.indirizzi_dettaglio USING gist (civic_geoloc)</code> ix_indirizzi_dettaglio_stradario_id <code>CREATE INDEX ix_indirizzi_dettaglio_stradario_id ON anagrafiche.indirizzi_dettaglio USING btree (stradario_id)</code> ix_uq_indirizzi_dettaglio_norm <code>CREATE UNIQUE INDEX ix_uq_indirizzi_dettaglio_norm ON anagrafiche.indirizzi_dettaglio USING btree (via_norm, civico_norm, interno, piano, palazzina)</code> pk_indirizzi_dettaglio <code>CREATE UNIQUE INDEX pk_indirizzi_dettaglio ON anagrafiche.indirizzi_dettaglio USING btree (id)</code>"},{"location":"dbzero/anagrafiche/tabelle/indirizzi_dettaglio/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_indirizzi_dettaglio_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_indirizzi_dettaglio_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio BEFORE INSERT <code>EXECUTE FUNCTION anagrafiche.trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio()</code> trg_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio BEFORE UPDATE <code>EXECUTE FUNCTION anagrafiche.trgfn_indirizzi_dettaglio_ins_upd_norm_indirizzi_dettaglio()</code> trg_upd_indirizzi_dettaglio_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> trg_z90_indirizzi_dettaglio_upd_dlt_storico BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('indirizzo_dettaglio_id')</code> trg_z90_indirizzi_dettaglio_upd_dlt_storico BEFORE DELETE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('indirizzo_dettaglio_id')</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/tabelle/istanze_utilities/","title":"\ud83d\udcda Tabella <code>istanze_utilities</code>","text":""},{"location":"dbzero/anagrafiche/tabelle/istanze_utilities/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('anagrafiche.istanze_utilities_id_seq'::regclass) soggetto_ruolo_id integer NO fittizia boolean NO false codice_istanza character varying NO proprietario_inquilino character NO 'I'::bpchar destinazione_immobile character YES num_concessione character varying YES data_concessione date YES sezione_catastale character YES foglio_catastale character YES particella character YES subalterno character YES anno_protocollo integer YES superficie integer YES immobile_rurale boolean NO false tipo_accatastamento character YES categoria_catastale character varying YES classe_catastale character varying YES rendita_catastale numeric YES consistenza integer YES data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER account_code character varying YES"},{"location":"dbzero/anagrafiche/tabelle/istanze_utilities/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_istanza_utilities_imm_rurale CHECK chk_istanza_utilities_prop_inquilino CHECK chk_istanze_utilities_fittizia FOREIGN KEY fk_soggetti_ruoli_anagrafiche soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id, soggetto_ruolo_id PRIMARY KEY pk_istanze_utilities id UNIQUE uq_istanze_utilities_account_code account_code UNIQUE uq_istanze_utilities_codice_istanza codice_istanza"},{"location":"dbzero/anagrafiche/tabelle/istanze_utilities/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_istanze_utilities_soggetto_ruolo_id <code>CREATE INDEX ix_istanze_utilities_soggetto_ruolo_id ON anagrafiche.istanze_utilities USING btree (soggetto_ruolo_id)</code> pk_istanze_utilities <code>CREATE UNIQUE INDEX pk_istanze_utilities ON anagrafiche.istanze_utilities USING btree (id)</code> uq_istanze_utilities_account_code <code>CREATE UNIQUE INDEX uq_istanze_utilities_account_code ON anagrafiche.istanze_utilities USING btree (account_code)</code> uq_istanze_utilities_codice_istanza <code>CREATE UNIQUE INDEX uq_istanze_utilities_codice_istanza ON anagrafiche.istanze_utilities USING btree (codice_istanza)</code>"},{"location":"dbzero/anagrafiche/tabelle/istanze_utilities/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_istanze_utilities_ins_set_istanza_codice BEFORE INSERT <code>EXECUTE FUNCTION anagrafiche.trgfn_istanze_utilities_ins_set_istanza_codice()</code> trg_upd_istanze_utilities_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/tabelle/soggetti/","title":"Soggetti","text":""},{"location":"dbzero/anagrafiche/tabelle/soggetti/#documentazione-concettuale-tabella-anagrafichesoggetti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.soggetti</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:   </p> <ul> <li>anagrafiche.soggetti_ruoli </li> <li>anagrafiche.dati_societari </li> <li>config.tipi_ruoli </li> <li>config.titoli_cortesia </li> <li>config.tipi_soggetto_dettaglio </li> <li>storico.soggetti </li> </ul> <p>Approfondimento Funzioni:   </p> <ul> <li>anagrafiche.trgfn_soggetti_ins_upd_check_soggetto_contatti </li> <li>anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch </li> <li>anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto </li> <li>anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto </li> <li>anagrafiche.trgfn_soggetti_ins_upd_clean_fields </li> <li>script.trgfn_upd_audit_data_user_generic </li> <li>script.trgfn_upd_dlt_storico_generic</li> </ul> <p>Questa documentazione descrive le regole di progettazione e implementazione della tabella anagrafica <code>anagrafiche.soggetti</code> in Zero ERP, senza ripetere la struttura SQL automatica. Contiene informazioni su vincoli, campi generati e relazioni con altre tabelle.</p>"},{"location":"dbzero/anagrafiche/tabelle/soggetti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Coerenza dei dati   Garantire che ogni soggetto\u2014persona fisica, giuridica o fisica forzata\u2014sia identificato in modo univoco e validato secondo le regole aziendali.</p> </li> <li> <p>Univocit\u00e0 basata su CF/P.IVA   Utilizzare un campo generato (<code>id_fiscale_univoco_cf_piva</code>) che unisca codice fiscale e partita IVA per evitare duplicati all\u2019interno dello stesso stato.</p> </li> <li> <p>Ricerca semplificata   Creare un campo generato (<code>ragione_sociale_completa</code>) che unisca automaticamente ragione sociale, cognome e nome, facilitando le query di ricerca testuale.</p> </li> <li> <p>Dettagli societari   Le informazioni dettagliate per le aziende vengono descritti nella tabella <code>anagrafiche.dati_societari</code> </p> </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/soggetti/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>config.comuni</code> </li> <li>Il campo <code>comune_id</code> fa riferimento a <code>config.comuni(id)</code>.  </li> <li>Se un comune viene eliminato, la cancellazione \u00e8 vietata finch\u00e9 esistono riferimenti (<code>ON DELETE RESTRICT</code>).  </li> <li> <p>Se l\u2019ID di un comune cambia, si propaga la modifica (<code>ON UPDATE CASCADE</code>).</p> </li> <li> <p><code>anagrafiche.contatti</code> </p> </li> <li>Il campo <code>default_contatto_id</code> fa riferimento a <code>anagrafiche.contatti(id)</code>.  </li> <li> <p>Ogni soggetto deve avere un contatto valido: la cancellazione di un contatto di default richiede una gestione manuale (<code>ON DELETE RESTRICT</code>).</p> </li> <li> <p><code>config.titoli_cortesia</code> </p> </li> <li>Il campo <code>titolo_cortesia_id</code> fa riferimento a <code>config.titoli_cortesia(id)</code>.  </li> <li> <p>I titoli cortesia non possono essere eliminati se sono ancora in uso (<code>ON DELETE RESTRICT</code>); eventuali aggiornamenti si propagano (<code>ON UPDATE CASCADE</code>).</p> </li> <li> <p><code>config.stati</code> </p> </li> <li>Il campo <code>stato_id</code> fa riferimento a <code>config.stati(id)</code>.  </li> <li>Uno stato non pu\u00f2 essere eliminato se esistono soggetti associati (<code>ON DELETE RESTRICT</code>); modifiche di ID si propaghino (<code>ON UPDATE CASCADE</code>).</li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/soggetti/#regole-di-validazione-condizionale","title":"\ud83d\udea9 Regole di Validazione Condizionale","text":"<ol> <li> <p>Campo <code>tipo_soggetto</code>      Campo tipo_soggetto (DEPRECATA)</p> <ul> <li>Nota: la colonna tipo_soggetto \u00e8 stata rimossa ed \u00e8 ora sostituita da tipo_soggetto_dettaglio_id</li> </ul> </li> <li> <p>Check su <code>sesso</code> </p> </li> <li> <p>Valori ammessi:  </p> <ul> <li><code>M</code> (Maschio)  </li> <li><code>F</code> (Femmina)  </li> <li><code>S</code> (Soggetto generico)  </li> <li><code>X</code> (Non indicato)</li> </ul> </li> <li> <p>Vincolo di presenza di CF o P.IVA    Almeno uno tra <code>codice_fiscale</code> o <code>partita_iva</code> deve essere valorizzato.</p> </li> <li> <p>Coerenza tra <code>tipo_soggetto</code> e campi anagrafici </p> </li> <li>Se <code>tipo_soggetto = 'F'</code>, devono essere presenti <code>nome</code>, <code>cognome</code> e <code>codice_fiscale</code>.  </li> <li>Se <code>tipo_soggetto = 'G'</code>, devono essere presenti <code>ragione_sociale</code> e <code>partita_iva</code>.  </li> <li> <p>Se <code>tipo_soggetto = 'X'</code>, deve essere presente almeno <code>codice_fiscale</code>.</p> </li> <li> <p>Ulteriore coerenza per soggetti di tipo \u201cX\u201d    Se <code>tipo_soggetto = 'X'</code>, deve esserci almeno <code>ragione_sociale</code> oppure entrambi <code>cognome</code> e <code>nome</code>.</p> </li> </ol>"},{"location":"dbzero/anagrafiche/tabelle/soggetti/#campi-generati-e-indicizzazione","title":"\ud83d\udd0d Campi Generati e Indicizzazione","text":"<ul> <li><code>id_fiscale_univoco_cf_piva</code> (colonna generata)  </li> <li>Definito come <code>COALESCE(codice_fiscale, partita_iva)</code>.  </li> <li> <p>Garantisce l\u2019univocit\u00e0 del soggetto all\u2019interno dello stesso stato.</p> </li> <li> <p><code>ragione_sociale_completa</code> (colonna generata)  </p> </li> <li>Definito come <code>COALESCE(ragione_sociale, (cognome || ' ' || nome))</code>.  </li> <li>Studiato per semplificare le ricerche testuali senza concatenare manualmente valori.</li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/soggetti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Univocit\u00e0 e integrit\u00e0 dei dati   Grazie al campo generato <code>id_fiscale_univoco_cf_piva</code> abbinato a <code>stato_id</code>, si evita la duplicazione di soggetti con lo stesso CF o P.IVA per uno stesso stato.</p> </li> <li> <p>Ricerca efficiente   Il campo <code>ragione_sociale_completa</code> consente ricerche full-text immediate, sia per persone fisiche sia per aziende, migliorando le performance delle query.</p> </li> <li> <p>Riduzione delle inconsistenze   I vincoli condizionali su <code>tipo_soggetto</code>, <code>sesso</code> e CF/P.IVA catturano automaticamente eventuali inserimenti errati, riducendo la necessit\u00e0 di controlli manuali in fase applicativa.</p> </li> <li> <p>Facilit\u00e0 di manutenzione   Separando le informazioni \u201cstatiche\u201d dall\u2019anagrafica generica e sfruttando colonne generate, si evita di duplicare logiche di concatenamento o controlli sui dati, semplificando eventuali evoluzioni future.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/soggetti/#implementazioni-aggiuntive","title":"\u2699\ufe0f Implementazioni Aggiuntive","text":"<p>In questa sezione sono descritte le modifiche chiave apportate per allinearsi al nuovo modello dati, con dettaglio delle motivazioni e degli esempi di configurazione internazionale:</p> <ol> <li> <p>Esigenza di accuratezza per CF/P.IVA e internazionalizzazione    Con la sola colonna <code>tipo_soggetto</code> non era possibile gestire formati e vincoli diversi per ogni paese. La nuova colonna <code>tipo_soggetto_dettaglio_id</code>, in relazione alla tabella di configurazione <code>config.tipi_soggetto_dettaglio</code>, permette di:</p> </li> <li> <p>Applicare regole di validazione specifiche per codice fiscale e partita IVA in base allo Stato (<code>stato_iso2</code>).</p> </li> <li>Definire formati diversi (alfanumerico, numerico, lunghezza fissa) a livello di dettaglio di soggetto (privato, ditta individuale, societ\u00e0 di capitali, ecc.).</li> <li> <p>Facilitare l\u2019internazionalizzazione e futuri ampliamenti a nuovi paesi senza modificare lo schema principale.</p> </li> <li> <p>**Rimozione della colonna **<code>tipo_soggetto</code></p> </li> </ol> <pre><code>ALTER TABLE anagrafiche.soggetti\n  DROP COLUMN IF EXISTS tipo_soggetto;\n</code></pre> <ol> <li>**Introduzione di **<code>tipo_soggetto_dettaglio_id</code></li> </ol> <pre><code>ALTER TABLE anagrafiche.soggetti\n  ADD COLUMN tipo_soggetto_dettaglio_id BIGINT NOT NULL\n    REFERENCES config.tipi_soggetto_dettaglio(id)\n    ON UPDATE CASCADE\n    ON DELETE RESTRICT;\n</code></pre> <ol> <li> <p>Vincoli e trigger aggiornati</p> </li> <li> <p>Il trigger di validazione CF/P.IVA (<code>trg_soggetti_ins_upd_valida_cf_piva</code>) ora utilizza <code>tipo_soggetto_dettaglio_id</code>.</p> </li> <li>\u00c8 stato aggiunto il vincolo di FK:</li> </ol> <pre><code>ALTER TABLE anagrafiche.soggetti\n  ADD CONSTRAINT fk_soggetti_tipo_soggetto_dettaglio\n    FOREIGN KEY (tipo_soggetto_dettaglio_id)\n    REFERENCES config.tipi_soggetto_dettaglio(id)\n    ON UPDATE CASCADE\n    ON DELETE RESTRICT;\n</code></pre> <p>\ud83e\udde0 \u201cUn\u2019Anagrafica Soggetti solida e coerente: controlli condizionali e campi generati assicurano dati puliti, ricercabili e univoci, senza dover ripetere informazioni in fase applicativa.\u201d</p>"},{"location":"dbzero/anagrafiche/tabelle/soggetti/#tabella-soggetti","title":"\ud83d\udcda Tabella <code>soggetti</code>","text":""},{"location":"dbzero/anagrafiche/tabelle/soggetti/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id uuid NO gen_random_uuid() codice_soggetto text YES ragione_sociale text YES cognome text YES nome text YES sesso character YES 'M'::bpchar stato_id integer NO partita_iva text YES piva_gruppo_acquisto text YES codice_fiscale text YES data_nascita date YES comune_id integer YES data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert text NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update text NO CURRENT_USER titolo_cortesia_id integer YES identificativo_old character varying YES ragione_sociale_completa text YES default_contatto_id integer YES tipo_soggetto_dettaglio_id bigint YES id_fiscale_univoco_cf_piva text YES tx_id uuid YES storicizza boolean NO false"},{"location":"dbzero/anagrafiche/tabelle/soggetti/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_soggetto_soggetto_sesso FOREIGN KEY fk_comuni_config comune_id, comune_id FOREIGN KEY fk_contatti_anagrafiche default_contatto_id FOREIGN KEY fk_soggetti_tipo_soggetto_dettaglio tipo_soggetto_dettaglio_id FOREIGN KEY fk_stati_config stato_id, stato_id FOREIGN KEY fk_titoli_cortesia_config titolo_cortesia_id, titolo_cortesia_id PRIMARY KEY pk_soggetto id UNIQUE key_soggetto_idstato_id_fiscale_univoco stato_id, id_fiscale_univoco_cf_piva UNIQUE key_soggetto_soggetto_codice codice_soggetto"},{"location":"dbzero/anagrafiche/tabelle/soggetti/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_anagrafiche_soggetti_ragione_sociale_completa <code>CREATE INDEX ix_anagrafiche_soggetti_ragione_sociale_completa ON anagrafiche.soggetti USING btree (ragione_sociale_completa)</code> ix_soggetti_comune_id <code>CREATE INDEX ix_soggetti_comune_id ON anagrafiche.soggetti USING btree (comune_id)</code> ix_soggetti_default_contatto_id <code>CREATE INDEX ix_soggetti_default_contatto_id ON anagrafiche.soggetti USING btree (default_contatto_id)</code> ix_soggetti_stato_id <code>CREATE INDEX ix_soggetti_stato_id ON anagrafiche.soggetti USING btree (stato_id)</code> ix_soggetti_tipo_soggetto_dettaglio_id <code>CREATE INDEX ix_soggetti_tipo_soggetto_dettaglio_id ON anagrafiche.soggetti USING btree (tipo_soggetto_dettaglio_id)</code> ix_soggetti_titolo_cortesia_id <code>CREATE INDEX ix_soggetti_titolo_cortesia_id ON anagrafiche.soggetti USING btree (titolo_cortesia_id)</code> key_soggetto_idstato_id_fiscale_univoco <code>CREATE UNIQUE INDEX key_soggetto_idstato_id_fiscale_univoco ON anagrafiche.soggetti USING btree (stato_id, id_fiscale_univoco_cf_piva)</code> key_soggetto_soggetto_codice <code>CREATE UNIQUE INDEX key_soggetto_soggetto_codice ON anagrafiche.soggetti USING btree (codice_soggetto)</code> pk_soggetto <code>CREATE UNIQUE INDEX pk_soggetto ON anagrafiche.soggetti USING btree (id)</code>"},{"location":"dbzero/anagrafiche/tabelle/soggetti/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_soggetti_ins_upd_check_soggetto_contatti AFTER INSERT <code>EXECUTE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_check_soggetto_contatti()</code> trg_soggetti_ins_upd_check_soggetto_contatti AFTER UPDATE <code>EXECUTE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_check_soggetto_contatti()</code> trg_soggetti_ins_upd_clean_fields BEFORE INSERT <code>EXECUTE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_clean_fields()</code> trg_soggetti_ins_upd_clean_fields BEFORE UPDATE <code>EXECUTE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_clean_fields()</code> trg_soggetti_ins_upd_dispatch_valida_cf_piva BEFORE INSERT <code>EXECUTE FUNCTION anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch()</code> trg_soggetti_ins_upd_dispatch_valida_cf_piva BEFORE UPDATE <code>EXECUTE FUNCTION anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch()</code> trg_soggetti_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_soggetti_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_soggetti_ins_upd_genera_cdsoggetto BEFORE INSERT <code>EXECUTE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto()</code> trg_soggetti_ins_upd_genera_cdsoggetto BEFORE UPDATE <code>EXECUTE FUNCTION anagrafiche.trgfn_soggetti_ins_upd_genera_cdsoggetto()</code> trg_upd_soggetti_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> trg_z90_soggetti_upd_dlt_storico BEFORE DELETE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('soggetto_id')</code> trg_z90_soggetti_upd_dlt_storico BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('soggetto_id')</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/anagrafiche/tabelle/soggetti_ruoli/","title":"Soggetti ruoli","text":""},{"location":"dbzero/anagrafiche/tabelle/soggetti_ruoli/#documentazione-concettuale-tabella-anagrafichesoggetti_ruoli","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>anagrafiche.soggetti_ruoli</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - anagrafiche.soggetti - config.tipi_ruoli </p> <p>Approfondimento trigger e funzioni:  - script.tipi_ruoli</p> <p>La tabella <code>anagrafiche.soggetti_ruoli</code> funge da collegamento (linking table) tra i soggetti registrati nel sistema e i ruoli definiti in <code>config.tipi_ruoli</code>, permettendo di assegnare a ciascun soggetto - individuo o azienda - uno o pi\u00f9 ruoli specifici all\u2019interno del software Zero ERP.</p>"},{"location":"dbzero/anagrafiche/tabelle/soggetti_ruoli/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Associazione molti-a-molti: stabilisce una relazione N\\:N tra la tabella <code>anagrafiche.soggetti</code> e <code>config.tipi_ruoli</code>, consentendo a ogni soggetto di rivestire pi\u00f9 ruoli (es. cliente, fornitore, gestore) e a ogni ruolo di essere assegnato a molti soggetti.</li> <li>Estensione semantica: il campo <code>extra</code> (JSONB) offre la possibilit\u00e0 di collegare metadati aggiuntivi per la singola associazione soggetto-ruolo (ad esempio, parametri contrattuali specifici se il ruolo \u00e8 \u201cfornitore\u201d o date di attivazione per il ruolo \u201ccliente\u201d).</li> <li>Tracciatura delle modifiche: grazie ai campi di audit (<code>user_insert</code>, <code>data_insert</code>, <code>user_update</code>, <code>data_update</code>) aggiornati automaticamente, la tabella conserva la cronologia di creazione e aggiornamento di ciascuna associazione.</li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/soggetti_ruoli/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>anagrafiche.soggetti</code></p> </li> <li> <p>Il campo <code>soggetto_id</code> (UUID) fa riferimento alla chiave primaria di <code>anagrafiche.soggetti</code>.</p> </li> <li> <p>Vincolo <code>fk_soggetti_anagrafiche</code>: se un soggetto viene eliminato, tutte le righe corrispondenti in <code>soggetti_ruoli</code> vengono automaticamente cancellate (ON DELETE CASCADE).</p> </li> <li> <p><code>config.tipi_ruoli</code></p> </li> <li> <p>Il campo <code>ruolo_id</code> (integer) fa riferimento alla chiave primaria di <code>config.tipi_ruoli</code>.</p> </li> <li> <p>Vincolo <code>fk_tipi_ruoli_config</code>: impedisce la cancellazione di un ruolo se esistono associazioni attive (ON DELETE RESTRICT), garantendo la coerenza referenziale.</p> </li> <li> <p>Unicit\u00e0 dell\u2019associazione</p> </li> <li> <p>Il vincolo <code>uq_soggetto_ruolo</code> su <code>(soggetto_id, ruolo_id)</code> garantisce che non esistano duplicati: uno stesso soggetto non pu\u00f2 avere due volte lo stesso ruolo.</p> </li> </ul>"},{"location":"dbzero/anagrafiche/tabelle/soggetti_ruoli/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Modularit\u00e0 e pulizia dei dati   Separando i dati anagrafici base (in <code>anagrafiche.soggetti</code>) dall\u2019assegnazione dei ruoli, si evita di dover ripetere attributi del soggetto ogni qualvolta cambia un ruolo. Questo design semplifica le query e migliora le performance.</p> </li> <li> <p>Flessibilit\u00e0 nella configurazione dei ruoli   Grazie al campo <code>extra</code> in JSONB, \u00e8 possibile aggiungere informazioni contestuali per ogni associazione (es. contratti specifici, date di validit\u00e0, note), senza dover modificare lo schema SQL.</p> </li> <li> <p>Garanzia di coerenza referenziale   I vincoli di chiave esterna e di unicit\u00e0 assicurano che ogni associazione sia valida (il soggetto e il ruolo devono esistere) e che non vi siano duplicazioni.</p> </li> <li> <p>Tracciabilit\u00e0 delle modifiche   I trigger di audit mantengono un log implicito delle modifiche, rendendo pi\u00f9 semplice identificare chi ha modificato cosa e quando, utile per scopi di compliance e diagnostica.</p> </li> </ul> <p>\ud83e\udde0 \"Una tabella ponte che unisce flessibilit\u00e0 e integrit\u00e0 referenziale, consentendo di assegnare e tracciare ruoli multipli a ciascun soggetto senza duplicare dati anagrafici.\"</p>"},{"location":"dbzero/anagrafiche/tabelle/soggetti_ruoli/#tabella-soggetti_ruoli","title":"\ud83d\udcda Tabella <code>soggetti_ruoli</code>","text":""},{"location":"dbzero/anagrafiche/tabelle/soggetti_ruoli/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('anagrafiche.soggetti_ruoli_id_seq'::regclass) soggetto_id uuid NO ruolo_id integer NO extra jsonb YES '{}'::jsonb user_insert character varying NO user_update character varying YES data_insert timestamp with time zone NO now() data_update timestamp with time zone NO now() tx_id uuid YES"},{"location":"dbzero/anagrafiche/tabelle/soggetti_ruoli/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_soggetti_anagrafiche soggetto_id, soggetto_id, soggetto_id, soggetto_id FOREIGN KEY fk_tipi_ruoli_config ruolo_id, ruolo_id PRIMARY KEY pk_soggetti_ruoli id UNIQUE uq_soggetto_ruolo ruolo_id, soggetto_id"},{"location":"dbzero/anagrafiche/tabelle/soggetti_ruoli/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_soggetti_ruoli_ruolo_id <code>CREATE INDEX ix_soggetti_ruoli_ruolo_id ON anagrafiche.soggetti_ruoli USING btree (ruolo_id)</code> ix_soggetti_ruoli_soggetto_id <code>CREATE INDEX ix_soggetti_ruoli_soggetto_id ON anagrafiche.soggetti_ruoli USING btree (soggetto_id)</code> pk_soggetti_ruoli <code>CREATE UNIQUE INDEX pk_soggetti_ruoli ON anagrafiche.soggetti_ruoli USING btree (id)</code> uq_soggetto_ruolo <code>CREATE UNIQUE INDEX uq_soggetto_ruolo ON anagrafiche.soggetti_ruoli USING btree (soggetto_id, ruolo_id)</code>"},{"location":"dbzero/anagrafiche/tabelle/soggetti_ruoli/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_soggetti_ruoli_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_soggetti_ruoli_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_upd_soggetti_ruoli_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/","title":"Schema <code>config</code>","text":""},{"location":"dbzero/config/#tabelle","title":"\ud83d\udcda Tabelle","text":"<ul> <li>ambiti</li> <li>codici_postali \u2014 * Elenco dei codici postali   Per ogni comune (city/municipality), memorizza tutti i codici postali (Postal Code o\u00a0ZIP Code) validi per quell\u2019area geografica.</li> <li>comuni \u2014 * Censimento dei comuni   Elenco dei comuni presenti in ciascuno stato, identificati da nome e collegamento gerarchico a provincia e stato. * Attributi specifici per stato   La colonna <code>extra_country</code> (JSONB) permette di memorizzare dati aggiuntivi specifici per ogni paese (per l\u2019Italia: codice catastale, codice ISTAT, fascia climatica, ecc.). * Integrazione con lo stradario   L\u2019associazione tra <code>config.stradario_generale</code> (prefissi e nomi delle vie) e <code>config.comuni</code> genera la tabella <code>config.stradario</code>, che contiene l\u2019indirizzo completo con la localizzazione geografica sul comune di appartenenza.   Utilizzata per associare i record di <code>config.stradario</code> al comune di appartenenza, completa il percorso di indirizzamento. * Storicizzazione   Il campo <code>storicizza</code> se true attiva il trigger per la storicizzazione delle informazioni sulla tabella <code>storico.comuni</code>. Il front-end dovr\u00e0 sempre impostare a true il valore, solo per funzioni administrator si potr\u00e0 non gestire a true.</li> <li>conti_contabili \u2014 * Mantenere il catalogo centralizzato dei codici conto con descrizioni e tipologia. * Supportare la validazione dei riferimenti contabili in altre tabelle (ad esempio <code>config.iva</code>).</li> <li>iva \u2014 * Centralizzare i codici IVA disponibili in un unico repository configurabile. * Gestire:</li> <li>iva_natura \u2014 * Fornire il catalogo ufficiale dei codici natura IVA previsti dalla normativa per le fatture elettroniche. * Consentire il mapping automatico tra i record di <code>config.iva</code> e il codice natura da inviare al SDI.</li> <li>iva_stati \u2014 * Sovrascrivere, per ogni coppia <code>(iva_id, stato_id)</code>, i valori di aliquota e assoggettamento di default definiti in <code>config.iva</code>. * Gestire scenari in cui normative locali richiedono aliquote differenti o modalit\u00e0 di assoggettamento speciali.</li> <li>messaggi_errore \u2014 * Centralizzare i messaggi: evitare hard\u2011coding nei sorgenti SQL, trigger o procedure. * Supporto multilingua: gestire versioni localizzate tramite il campo <code>lingua</code> (es. <code>it</code>, <code>en</code>). * Placeholder dinamici: usare <code>%s</code> nel campo <code>messaggio</code>, sostituiti a runtime dalla funzione <code>script.fn_get_messaggio</code> con valori contestuali. * Collegamento ai log: tabelle come <code>dbops.error_log</code> e <code>dbops.audit_log</code> fanno riferimento a <code>config.messaggi_errore</code> per arricchire i record di log con testi coerenti.</li> <li>modalita_pagamento</li> <li>parameter_overrides \u2014 La tabella <code>config.parameter_overrides</code> permette di creare override dinamici dei parametri definiti in <code>config.parameters</code> su diversi livelli di contesto (tenant, user, session, function), garantendo che ogni combinazione <code>(parameter_id, scope_type, scope_id)</code> sia unica e tracciata per audit.</li> <li>parameters \u2014 La tabella <code>config.parameters</code> implementa un\u2019architettura a due livelli per la configurazione dinamica dell\u2019applicazione:</li> <li>province \u2014 * Elenco delle province   Contiene tutte le province di uno stato (es. in Italia: RM, MI, FI), con sigla e nome descrittivo.</li> <li>regioni \u2014 * Elenco delle regioni   Comprende tutte le regioni appartenenti a uno stato (es. in Italia: <code>Lazio</code>, <code>Campania</code>, <code>Sicilia</code>), con collegamento al rispettivo <code>stato_id</code> in <code>config.stati</code>.</li> <li>sistema_codici \u2014 * Definizione del formato codice   Consente di specificare per ogni tipo di codice (<code>codice_tipo</code>) un prefisso, un separatore e la lunghezza numerica totale, rendendo parametrica la struttura dei codici generati. * Configurazione del meccanismo di sequenza   Tramite il flag <code>usa_sequenza</code> e l\u2019attributo <code>nome_sequenza</code>, si abilita o meno l\u2019utilizzo di una progressione automatica basata su sequenza di database, a garanzia di unicit\u00e0 e ordinariet\u00e0. * Attivazione o disattivazione   Il campo <code>attivo</code> permette di abilitare o disabilitare temporaneamente il sistema di generazione per un tipo di codice, senza cancellare la configurazione.</li> <li>stati \u2014 * Elenco degli stati/paesi   Contiene tutte le nazioni riconosciute, con sigle e codici ISO standard (ISO 3166-1 alpha-2 e alpha-3) e prefisso telefonico internazionale.</li> <li>stati_cliente</li> <li>stati_pratiche</li> <li>stradario \u2014 * Mappa comunale delle vie   Contiene l\u2019elenco delle strade e vie di ogni comune, con riferimento al prefisso e al nome forniti da <code>config.stradario_generale</code>. * Geolocalizzazione   Il campo <code>geoloc</code> (geometry Point, SRID 4326) consente di associare ogni via a coordinate geografiche per mappe e ricerche spaziali. * Associazione CAP   Collega ogni via a un codice postale obbligatorio (<code>codice_postale_id</code>), gestito nella tabella <code>config.codici_postali</code>. * Informazioni estese   Il campo <code>extra_info</code> (JSONB) permette di memorizzare dati aggiuntivi, come eventuali frazioni, indicazioni o note specifiche. * Storicizzazione   Il campo <code>storicizza</code> se true attiva il trigger per la storicizzazione delle informazioni sulla tabella <code>storico.stradario</code>. Il front-end dovr\u00e0 sempre impostare a true il valore, solo per funzioni administrator si potr\u00e0 non gestire a true.    ---</li> <li>stradario_generale \u2014 * Composizione del toponimo   Unisce il prefisso toponomastico (es. <code>VIA</code>, <code>PIAZZA</code>) al nome specifico (es. <code>Garibaldi</code>, <code>Roma</code>) per formare la descrizione completa. * Indipendenza geografica   Mantiene un catalogo centralizzato dei nomi senza riferimenti a comuni o aree, favorendo il riuso e la coerenza. * Integrazione con stradario locale   Collegata a <code>config.stradario</code>, che associa ogni record di <code>stradario_generale</code> al comune di appartenenza, consentendo la geolocalizzazione e l\u2019uso nei processi di indirizzamento.</li> <li>tipi_attivita</li> <li>tipi_contatti \u2014 La tabella <code>config.tipi_contatti</code> definisce le categorie di contatto utilizzabili nell\u2019anagrafica dei soggetti, fornendo un codice interno non modificabile e una descrizione estesa.</li> <li>tipi_documenti</li> <li>tipi_indirizzi \u2014 La tabella <code>config.tipi_indirizzi</code> centralizza i tipi di indirizzo utilizzabili in Zero ERP, come ad esempio Residenza, Domicilio Fiscale, Sede Legale, Sede Operativa, Corrispondenza Postale, Indirizzo di Fornitura, ecc. </li> <li>tipi_ruoli \u2014 * Distinzione dei ruoli: consente di assegnare a ogni record della tabella <code>soggetti</code> uno o pi\u00f9 ruoli funzionali (es. cliente, fornitore, gestore). * Flessibilit\u00e0 operativa: un soggetto pu\u00f2 assumere ruoli differenti in contesti diversi (ad esempio un fornitore che pu\u00f2 diventare cliente in altre transazioni). * Ruolo \"gestore\": l\u2019azienda stessa che utilizza il software viene registrata in <code>soggetti</code> e associata al ruolo interno \u201cgestore\u201d per identificare i dati dell\u2019utente principale o amministratore del sistema.</li> <li>tipi_soggetto \u2014 * Definire le macro-tipologie di soggetto (es. Persona Fisica, Persona Giuridica, Ente, ecc.) * Separare la classificazione di alto livello dalla gestione dettagliata dei tipi soggetto (internazionale) tramite la tabella di dettaglio.</li> <li>tipi_soggetto_dettaglio \u2014 * Gestione Internazionale   Permette di adattare la validazione di CF/P.IVA alle regole di ciascuno Stato (<code>stato_iso2</code>). * Estendibilit\u00e0   Il collegamento a <code>config.tipi_soggetto</code> garantisce macro-categorie estensibili (Fisico, Giuridico, Ente, \u2026). * Controllo Applicativo   Centralizza il formato di CF/P.IVA, evitando logiche duplicate nel backend.</li> <li>titoli_cortesia \u2014 * Uniformare i titoli     Gestire centralmente i titoli di cortesia per tutti i soggetti/contatti, evitando discrepanze tra form, report e stampe.</li> <li>toponomastica \u2014 * Censimento dei toponimi   Elenco delle tipologie di vie, strade, piazze, viali, ecc., utilizzate come prefisso negli indirizzi. * Fondamentale per lo stradario   Fornisce i prefissi standardizzati che, uniti al nome (es. \"Garibaldi\", \"Roma\"), generano i record di <code>stradario_generale</code>. * Integrazione con lo stato geografico   Collegato alla tabella <code>config.stati</code> per associare ogni tipo di toponimo all\u2019area amministrativa di riferimento.</li> <li>utilities \u2014 * Definizione del settore   Tabella dove si definiscono i tipi di \"utilities\" a cui l\u2019azienda \u00e8 rivolta. Ogni record identifica un settore di business specifico: per esempio manifatturiero, gas o telecom. * Componente standard e specifica   Per ogni tipo di utility \u00e8 prevista una parte core (funzionalit\u00e0 standard comuni a tutti i settori) e un modulo verticale specifico, progettato per risolvere le problematiche tipiche del settore.</li> <li>valute \u2014 * Definizione delle valute   Elenco centralizzato di tutte le valute supportate, con codici interni e standard ISO 4217. * Supporto ai moduli finanziari   Garantisce alle aree di fatturazione, contabilit\u00e0 e reporting uniformit\u00e0 nella rappresentazione e conversione delle valute. * Tracciabilit\u00e0 e auditing   Memorizza informazioni di inserimento e aggiornamento per mantenere la storicit\u00e0 delle modifiche.</li> </ul>"},{"location":"dbzero/config/#funzioni","title":"\u2699\ufe0f Funzioni","text":"<ul> <li>fn_get_iva_override \u2014 * Recupero unificato   Ottenere in un\u2019unica chiamata sia i valori base da <code>config.iva</code> sia gli override da <code>config.iva_stati</code> se presenti. * Override per Stato   Consentire di modificare aliquota e assoggettamento IVA a livello di Stato senza duplicare righe in <code>config.iva</code>. * Centralizzazione   Incapsulare la logica di join e COALESCE in una funzione riutilizzabile.</li> <li>trgfn_iva_ins_upd_check_conti_iva \u2014 * Validazione contestuale: eseguire controlli sui campi contabili prima di inserire o aggiornare un record in <code>config.iva</code>. * Coerenza dei dati: evitare associazioni errate tra codici IVA e conti di tipo sbagliato.</li> <li>trgfn_iva_stati_ins_upd_clean_fields</li> <li>trgfn_regioni_ins_upd_clean_fields</li> <li>trgfn_stradario_generale_upd_non_permesso \u2014 * Blocco modifiche non consentite: evitare update di descrizione, descrizione_breve o toponomastica_id in <code>config.stradario_generale</code> se il record \u00e8 gi\u00e0 in uso in <code>config.stradario</code>. * Identificazione precisa: indicare tramite JSON il nome della colonna modificata e l\u2019ID del record per diagnosticare efficacemente l\u2019errore. * Centralizzazione logica: mantenere il controllo integrit\u00e0 nel database, riducendo complessit\u00e0 lato applicazione.</li> <li>trgfn_sync_stato_iso2</li> <li>trgfn_toponomastica_upd_non_permesso \u2014 * Protezione semantica: garantire coerenza tra topografia e stradario evitando rinominazioni dirette di toponomastiche gi\u00e0 in uso. * Decisione di design: anzich\u00e9 storicizzare o consentire modifiche parziali, obbligare alla creazione di nuove topograf\u00ece per cambiare descrizione. * Centralizzazione: concentrare la logica di blocco in una sola funzione trigger per ridurre complessit\u00e0 applicativa.</li> </ul>"},{"location":"dbzero/config/#views","title":"\ud83d\udd0d Views","text":""},{"location":"dbzero/config/funzioni/fn_get_iva_override/","title":"Fn get iva override","text":""},{"location":"dbzero/config/funzioni/fn_get_iva_override/#documentazione-concettuale-funzione-configfn_get_iva_override","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>config.fn_get_iva_override</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - config.iva  - config.iva_stati </p> <p>La funzione <code>config.fn_get_iva_override(p_codice_iva TEXT, p_stato_id INTEGER)</code> restituisce i dati completi della aliquota IVA (codice, descrizioni, natura, conti) per un determinato codice IVA e Stato, applicando eventuali override specifici per Stato definiti in <code>config.iva_stati</code>.</p>"},{"location":"dbzero/config/funzioni/fn_get_iva_override/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Recupero unificato   Ottenere in un\u2019unica chiamata sia i valori base da <code>config.iva</code> sia gli override da <code>config.iva_stati</code> se presenti.</li> <li>Override per Stato   Consentire di modificare aliquota e assoggettamento IVA a livello di Stato senza duplicare righe in <code>config.iva</code>.</li> <li>Centralizzazione   Incapsulare la logica di join e COALESCE in una funzione riutilizzabile.</li> </ul>"},{"location":"dbzero/config/funzioni/fn_get_iva_override/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Descrizione <code>p_codice_iva</code> <code>TEXT</code> Codice identificativo dell\u2019IVA (es. 'IVA22', 'IVA10'). <code>p_stato_id</code> <code>INT</code> ID dello Stato (chiave esterna su <code>config.stati.id</code>)."},{"location":"dbzero/config/funzioni/fn_get_iva_override/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Join su tabella base    Seleziona i campi da <code>config.iva</code> per il record con <code>codice_iva = p_codice_iva</code>, e unisce a <code>config.stati</code> per validare <code>p_stato_id</code>.</li> <li>Left join per override    Unisce <code>config.iva_stati</code> su <code>(iva_id, stato_id)</code> per recuperare gli eventuali valori di <code>aliquota_override</code> e <code>assoggettamento_override</code>.</li> <li> <p>Applicazione override o default    Usa <code>COALESCE</code> per restituire:</p> </li> <li> <p><code>aliquota = COALESCE(s.aliquota_override, i.aliquota_iva)</code></p> </li> <li><code>assoggettamento = COALESCE(s.assoggettamento_override, i.assoggettamento_iva)</code></li> <li>Restituzione tabella    Ritorna la tabella con colonne dettagliate: dati base, override, natura, conti e metadati di audit.</li> </ol>"},{"location":"dbzero/config/funzioni/fn_get_iva_override/#firma-sql","title":"\ud83d\udd16 Firma SQL","text":"<pre><code>CREATE OR REPLACE FUNCTION config.fn_get_iva_override(\n  p_codice_iva TEXT,\n  p_stato_id   INTEGER\n)\nRETURNS TABLE(\n  id_iva                INTEGER,\n  codice_iva            CHARACTER,\n  desc_iva              VARCHAR,\n  desc_breve_iva        VARCHAR,\n  aliquota_base         NUMERIC,\n  assoggettamento_base  CHAR,\n  aliquota              NUMERIC,\n  assoggettamento       CHAR,\n  id_natura_iva         INTEGER,\n  conto_iva_acquisti_id INTEGER,\n  conto_iva_vendita_id  INTEGER,\n  stato_id              INTEGER,\n  stato_sigla           VARCHAR,\n  data_insert           TIMESTAMP,\n  user_insert           TEXT,\n  data_update           TIMESTAMP,\n  user_update           TEXT\n)\nLANGUAGE sql\nAS $body$\n  /* Implementazione: join su config.iva, config.stati, config.iva_stati; COALESCE per override */\n  SELECT ...\n$body$;\n</code></pre>"},{"location":"dbzero/config/funzioni/fn_get_iva_override/#esempio-di-utilizzo","title":"\ud83d\udccb Esempio di Utilizzo","text":"<pre><code>SELECT *\n  FROM config.fn_get_iva_override('IVA22', 1);\n-- Restituisce la riga IVA 22% per lo Stato con id=1, applicando eventuali override.\n</code></pre>"},{"location":"dbzero/config/funzioni/fn_get_iva_override/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Semplicit\u00e0: un\u2019unica funzione per gestire base e override.</li> <li>Manutenibilit\u00e0: cambiamenti agli override si propagano automaticamente al risultato.</li> <li>Performance: il linguaggio SQL nativo con COST=100 e STABLE \u00e8 ottimizzato per uso frequente.</li> <li>Coerenza: evita duplicazioni di logica in pi\u00f9 punti dell\u2019applicazione.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare la logica di override IVA in una funzione SQL migliora chiarezza, riuso e governabilit\u00e0 delle regole fiscali.\u201d</p>"},{"location":"dbzero/config/funzioni/fn_get_iva_override/#funzione-fn_get_iva_override","title":"\u2699\ufe0f Funzione <code>fn_get_iva_override</code>","text":"<pre><code>CREATE FUNCTION fn_get_iva_override(p_codice_iva text, p_stato_id integer)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/config/funzioni/fn_get_iva_override/#create-or-replace-function-configfn_get_iva_overridep_codice_iva-text-p_stato_id-integer-returns-tableid_iva-integer-codice_iva-character-desc_iva-character-varying-desc_breve_iva-character-varying-aliquota_base-numeric-assoggettamento_base-character-aliquota-numeric-assoggettamento-character-id_natura_iva-integer-conto_iva_acquisti_id-integer-conto_iva_vendita_id-integer-stato_id-integer-stato_sigla-character-varying-data_insert-timestamp-without-time-zone-user_insert-text-data_update-timestamp-without-time-zone-user_update-text-language-sql-stable-as-function-select-iid-icodice_iva-idesc_iva-idesc_breve_iva-ialiquota_iva-as-aliquota_base-iassoggettamento_iva-as-assoggettamento_base-coalescesaliquota_override-ialiquota_iva-as-aliquota-coalescesassoggettamento_override-iassoggettamento_iva-as-assoggettamento-inatura_iva_id-iconto_iva_acquisti_id-iconto_iva_vendita_id-stid-as-stato_id-stsigla_stato-as-stato_sigla-idata_insert-iuser_insert-idata_update-iuser_update-from-configiva-i-join-configstati-st-on-stid-p_stato_id-left-join-configiva_stati-s-on-siva_id-iid-and-sstato_id-p_stato_id-where-icodice_iva-p_codice_iva-function","title":"<pre><code>CREATE OR REPLACE FUNCTION config.fn_get_iva_override(p_codice_iva text, p_stato_id integer)\n RETURNS TABLE(id_iva integer, codice_iva character, desc_iva character varying, desc_breve_iva character varying, aliquota_base numeric, assoggettamento_base character, aliquota numeric, assoggettamento character, id_natura_iva integer, conto_iva_acquisti_id integer, conto_iva_vendita_id integer, stato_id integer, stato_sigla character varying, data_insert timestamp without time zone, user_insert text, data_update timestamp without time zone, user_update text)\n LANGUAGE sql\n STABLE\nAS $function$\n  SELECT\n    i.id,\n    i.codice_iva,\n    i.desc_iva,\n    i.desc_breve_iva,\n    i.aliquota_iva      AS aliquota_base,\n    i.assoggettamento_iva AS assoggettamento_base,\n    COALESCE(s.aliquota_override, i.aliquota_iva)         AS aliquota,\n    COALESCE(s.assoggettamento_override, i.assoggettamento_iva) AS assoggettamento,\n    i.natura_iva_id,\n    i.conto_iva_acquisti_id,\n    i.conto_iva_vendita_id,\n    st.id                    AS stato_id,\n    st.sigla_stato           AS stato_sigla,\n    i.data_insert,\n    i.user_insert,\n    i.data_update,\n    i.user_update\n  FROM config.iva i\n  JOIN config.stati st\n    ON st.id = p_stato_id\n  LEFT JOIN config.iva_stati s\n    ON s.iva_id   = i.id\n   AND s.stato_id = p_stato_id\n  WHERE i.codice_iva = p_codice_iva;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/funzioni/trgfn_iva_ins_upd_check_conti_iva/","title":"Trgfn iva ins upd check conti iva","text":""},{"location":"dbzero/config/funzioni/trgfn_iva_ins_upd_check_conti_iva/#documentazione-concettuale-function-configtrgfn_iva_ins_upd_check_conti_iva","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Function <code>config.trgfn_iva_ins_upd_check_conti_iva</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.iva  - config.conti_contabili </p> <p>La trigger function <code>trgfn_iva_ins_upd_check_conti_iva</code> assicura che i conti contabili associati ai codici IVA rispettino le regole aziendali: il conto di acquisto (<code>conto_iva_acquisti_id</code>) deve essere di tipo acquisto, mentre il conto di vendita (<code>conto_iva_vendita_id</code>) deve essere di tipo vendita.</p>"},{"location":"dbzero/config/funzioni/trgfn_iva_ins_upd_check_conti_iva/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Validazione contestuale: eseguire controlli sui campi contabili prima di inserire o aggiornare un record in <code>config.iva</code>.</li> <li>Coerenza dei dati: evitare associazioni errate tra codici IVA e conti di tipo sbagliato.</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_iva_ins_upd_check_conti_iva/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>Nessun parametro esterno: opera sui record <code>NEW</code> del trigger.</li> <li>Trigger associato:</li> </ul> <p><pre><code>CREATE OR REPLACE TRIGGER trg_iva_ins_upd_check_conti_iva\n  BEFORE INSERT OR UPDATE ON config.iva\n  FOR EACH ROW\n  EXECUTE FUNCTION config.trgfn_iva_ins_upd_check_conti_iva();\n</code></pre> * Campi letti:</p> <ul> <li><code>NEW.conto_iva_acquisti_id</code></li> <li><code>NEW.conto_iva_vendita_id</code></li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_iva_ins_upd_check_conti_iva/#logica-di-controllo","title":"\u2699\ufe0f Logica di Controllo","text":"<ol> <li>Caricamento del tipo conto</li> </ol> <p><pre><code>SELECT tipo_conto INTO v_tipo_acq\n  FROM config.conti_contabili\n WHERE id = NEW.conto_iva_acquisti_id;\n\nSELECT tipo_conto INTO v_tipo_ven\n  FROM config.conti_contabili\n WHERE id = NEW.conto_iva_vendita_id;\n</code></pre> 2. Verifica del conto di acquisto</p> <p><pre><code>IF NEW.conto_iva_acquisti_id IS NOT NULL AND v_tipo_acq &lt;&gt; 'A' THEN\n  RAISE EXCEPTION 'Il conto acquisti (%), non \u00e8 di tipo A', NEW.conto_iva_acquisti_id;\nEND IF;\n</code></pre> 3. Verifica del conto di vendita</p> <p><pre><code>IF NEW.conto_iva_vendita_id IS NOT NULL AND v_tipo_ven &lt;&gt; 'V' THEN\n  RAISE EXCEPTION 'Il conto vendita (%), non \u00e8 di tipo V', NEW.conto_iva_vendita_id;\nEND IF;\n</code></pre> 4. Terminazione</p> <pre><code>RETURN NEW;\n</code></pre> <p>Se uno dei controlli fallisce, la funzione interrompe l\u2019operazione con un errore descrittivo.</p>"},{"location":"dbzero/config/funzioni/trgfn_iva_ins_upd_check_conti_iva/#valore-di-ritorno","title":"\ud83d\udd12 Valore di Ritorno","text":"<ul> <li>``   Restituisce <code>NEW</code> immutato se tutti i controlli superano, altrimenti solleva un\u2019eccezione.</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_iva_ins_upd_check_conti_iva/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Prevenzione di errori: blocca subito associazioni contabili non valide.</li> <li>Feedback immediato: messaggi di errore chiari aiutano lo sviluppatore o l\u2019operatore.</li> <li>Centralizzazione: tutte le validazioni contabili per <code>config.iva</code> risiedono in un unico punto.</li> </ul> <p>\ud83e\udde0 \u201cCon una trigger function dedicata alla validazione dei conti IVA si garantisce che ogni codice IVA sia sempre accoppiato al conto corretto, riducendo i rischi di anomalie contabili.\u201d</p>"},{"location":"dbzero/config/funzioni/trgfn_iva_ins_upd_check_conti_iva/#funzione-trgfn_iva_ins_upd_check_conti_iva","title":"\u2699\ufe0f Funzione <code>trgfn_iva_ins_upd_check_conti_iva</code>","text":"<pre><code>CREATE FUNCTION trgfn_iva_ins_upd_check_conti_iva()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/config/funzioni/trgfn_iva_ins_upd_check_conti_iva/#create-or-replace-function-configtrgfn_iva_ins_upd_check_conti_iva-returns-trigger-language-plpgsql-as-function-declare-v_tipo_acq-char1-v_tipo_ven-char1-begin-constraint-trigger-per-validare-i-conti-iva-in-configiva-conto_iva_acquisti-deve-riferirsi-a-un-conto-di-tipo-a-conto_iva_vendita-deve-riferirsi-a-un-conto-di-tipo-v-usa-messaggi-centralizzati-in-configmessaggi_errore-schema-config-validazione-conto-acquisti-if-newconto_iva_acquisti_id-is-not-null-then-select-tipo_conto-into-v_tipo_acq-from-configconti_contabili-where-id-newconto_iva_acquisti_id-if-v_tipo_acq-is-distinct-from-a-then-raise-exception-configfn_get_messaggioe_iva_conto_acq_err-end-if-end-if-validazione-conto-vendita-if-newconto_iva_vendita_id-is-not-null-then-select-tipo_conto-into-v_tipo_ven-from-configconti_contabili-where-id-newconto_iva_vendita_id-if-v_tipo_ven-is-distinct-from-v-then-raise-exception-configfn_get_messaggioe_iva_conto_ven_err-end-if-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION config.trgfn_iva_ins_upd_check_conti_iva()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n  v_tipo_acq CHAR(1);\n  v_tipo_ven CHAR(1);\nBEGIN\n  -- \n  -- Constraint trigger per validare i conti IVA in config.iva\n  --    conto_iva_acquisti deve riferirsi a un conto di tipo A\n  --    conto_iva_vendita deve riferirsi a un conto di tipo V\n  -- Usa messaggi centralizzati in config.messaggi_errore\n  -- Schema: config\n  -- \n\n  -- Validazione conto acquisti\n  IF NEW.conto_iva_acquisti_id IS NOT NULL THEN\n    SELECT tipo_conto INTO v_tipo_acq\n      FROM config.conti_contabili\n     WHERE id = NEW.conto_iva_acquisti_id;\n    IF v_tipo_acq IS DISTINCT FROM 'A' THEN\n      RAISE EXCEPTION '%', config.fn_get_messaggio('E_IVA_CONTO_ACQ_ERR');\n    END IF;\n  END IF;\n\n  -- Validazione conto vendita\n  IF NEW.conto_iva_vendita_id IS NOT NULL THEN\n    SELECT tipo_conto INTO v_tipo_ven\n      FROM config.conti_contabili\n     WHERE id = NEW.conto_iva_vendita_id;\n    IF v_tipo_ven IS DISTINCT FROM 'V' THEN\n      RAISE EXCEPTION '%', config.fn_get_messaggio('E_IVA_CONTO_VEN_ERR');\n    END IF;\n  END IF;\n\n  RETURN NEW;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/funzioni/trgfn_iva_stati_ins_upd_clean_fields/","title":"Trgfn iva stati ins upd clean fields","text":""},{"location":"dbzero/config/funzioni/trgfn_iva_stati_ins_upd_clean_fields/#documentazione-concettuale-funzione-configtrgfn_iva_stati_ins_upd_clean_fields","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>config.trgfn_iva_stati_ins_upd_clean_fields()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>config.iva_stati</li> <li>config.stati</li> </ul> <p>Approfondimento funzioni:</p> <ul> <li>script.fn_get_default_by_param</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_iva_stati_ins_upd_clean_fields/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Impostare valori di default per campi mancanti in <code>config.iva_stati</code> (ad esempio, assegnare <code>stato_id</code> da <code>config.stati</code> se <code>NEW.stato_id</code> \u00e8 <code>NULL</code>).</li> <li>Pulire e normalizzare ulteriori campi (es. trimming, uppercasing) seguendo le regole di business.</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_iva_stati_ins_upd_clean_fields/#collegamenti","title":"\ud83d\udd17 Collegamenti","text":"<ul> <li><code>config.iva_stati</code> \u2013 tabella su cui si applica il trigger <code>BEFORE INSERT OR UPDATE</code>.</li> <li><code>config.stati</code> \u2013 usata come lookup per recuperare il PK di default tramite <code>codice_iso3</code>.</li> <li><code>script.fn_get_default_by_param</code> \u2013 funzione dinamica che esegue il lookup del valore di default da una tabella di configurazione.</li> <li>Trigger associato: <code>trg_iva_stati_ins_upd_clean_fields</code> (viene creato dal Liquibase changeSet <code>20250730-07-trgfn_iva_stati_ins_upd_clean_fields_v1</code>).</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_iva_stati_ins_upd_clean_fields/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Il trigger viene invocato BEFORE INSERT OR UPDATE su <code>config.iva_stati</code> e agisce su <code>NEW</code>.</li> <li>Assegnazione default: utilizza <code>fn_get_default_by_param('config','stati','codice_iso3','state_code_iso3', TG_NAME)::integer</code> per ottenere il <code>stato_id</code>.</li> <li><code>TG_NAME</code> passa automaticamente il nome del trigger alla funzione per migliorare il contesto di log in caso di errore.</li> <li>Estendibilit\u00e0: dopo il lookup di default \u00e8 possibile inserire ulteriori blocchi di cleanup (es. normalizzazione di <code>nome</code>, <code>cognome</code>).</li> <li>Robustezza: la funzione di lookup solleva eccezione se non trova il valore, garantendo coerenza dei dati.</li> </ul> <p>\ud83e\udde0 \u201cAllinea i record di <code>config.iva_stati</code> a regole di default e pulizia automatica: default lookup, normalizzazione e coerenza garantita.\u201d</p>"},{"location":"dbzero/config/funzioni/trgfn_iva_stati_ins_upd_clean_fields/#funzione-trgfn_iva_stati_ins_upd_clean_fields","title":"\u2699\ufe0f Funzione <code>trgfn_iva_stati_ins_upd_clean_fields</code>","text":"<pre><code>CREATE FUNCTION trgfn_iva_stati_ins_upd_clean_fields()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/config/funzioni/trgfn_iva_stati_ins_upd_clean_fields/#create-or-replace-function-configtrgfn_iva_stati_ins_upd_clean_fields-returns-trigger-language-plpgsql-as-function-begin-1-imposta-stato_id-di-default-da-configstati-se-e-null-if-newstato_id-is-null-then-newstato_id-scriptfn_get_default_by_param-config-schema-della-tabella-lookup-stati-tabella-di-lookup-codice_iso3-colonna-di-filtro-in-configstati-state_code_iso3-codice-parametro-in-configparameters-tg_name-nome-del-trigger-chiamante-integer-cast-al-tipo-integer-di-stato_id-end-if-2-altri-cleanup-esempi-if-newnome-is-not-null-then-newnome-uppertrimnewnome-end-if-if-newcognome-is-not-null-then-newcognome-uppertrimnewcognome-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION config.trgfn_iva_stati_ins_upd_clean_fields()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n BEGIN\n   ------------------------------------------------------------------\n   -- 1) Imposta stato_id di default da config.stati se \u00e8 NULL\n   IF NEW.stato_id IS NULL THEN\n     NEW.stato_id := script.fn_get_default_by_param(\n       'config',           -- schema della tabella lookup\n       'stati',            -- tabella di lookup\n       'codice_iso3',        -- colonna di filtro in config.stati\n       'state_code_iso3',  -- codice parametro in config.parameters\n       TG_NAME             -- nome del trigger chiamante\n     )::integer;           -- cast al tipo integer di stato_id\n   END IF;\n   ------------------------------------------------------------------\n   -- 2) Altri cleanup (esempi)\n   --IF NEW.nome IS NOT NULL THEN\n   --  NEW.nome := UPPER(TRIM(NEW.nome));\n   --END IF;\n   --IF NEW.cognome IS NOT NULL THEN\n     --NEW.cognome := UPPER(TRIM(NEW.cognome));\n  -- END IF;\n   ------------------------------------------------------------------\n   RETURN NEW;\n END;\n $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/funzioni/trgfn_regioni_ins_upd_clean_fields/","title":"Trgfn regioni ins upd clean fields","text":""},{"location":"dbzero/config/funzioni/trgfn_regioni_ins_upd_clean_fields/#documentazione-concettuale-funzione-configtrgfn_regioni_ins_upd_clean_fields","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>config.trgfn_regioni_ins_upd_clean_fields()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>config.regioni</li> <li>config.stati</li> </ul> <p>Approfondimento funzioni:</p> <ul> <li>script.fn_get_default_by_param</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_regioni_ins_upd_clean_fields/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Impostare valori di default per campi mancanti in <code>config.regioni</code> (ad esempio, assegnare <code>stato_id</code> da <code>config.stati</code> se <code>NEW.stato_id</code> \u00e8 <code>NULL</code>).</li> <li>Pulire e normalizzare ulteriori campi (es. trimming, uppercasing) seguendo le regole di business.</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_regioni_ins_upd_clean_fields/#collegamenti","title":"\ud83d\udd17 Collegamenti","text":"<ul> <li><code>config.regioni</code> \u2013 tabella su cui si applica il trigger <code>BEFORE INSERT OR UPDATE</code>.</li> <li><code>config.stati</code> \u2013 usata come lookup per recuperare il PK di default tramite <code>codice_iso3</code>.</li> <li><code>script.fn_get_default_by_param</code> \u2013 funzione dinamica che esegue il lookup del valore di default da una tabella di configurazione.</li> <li>Trigger associato: <code>trg_regioni_ins_upd_clean_fields</code> (viene creato dal Liquibase changeSet <code>20250730-07-trgfn_regioni_ins_upd_clean_fields_v1</code>).</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_regioni_ins_upd_clean_fields/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Il trigger viene invocato BEFORE INSERT OR UPDATE su <code>config.regioni</code> e agisce su <code>NEW</code>.</li> <li>Assegnazione default: utilizza <code>fn_get_default_by_param('config','stati','codice_iso3','state_code_iso3', TG_NAME)::integer</code> per ottenere il <code>stato_id</code>.</li> <li><code>TG_NAME</code> passa automaticamente il nome del trigger alla funzione per migliorare il contesto di log in caso di errore.</li> <li>Estendibilit\u00e0: dopo il lookup di default \u00e8 possibile inserire ulteriori blocchi di cleanup (es. normalizzazione di <code>nome</code>, <code>cognome</code>).</li> <li>Robustezza: la funzione di lookup solleva eccezione se non trova il valore, garantendo coerenza dei dati.</li> </ul> <p>\ud83e\udde0 \u201cAllinea i record di <code>config.regioni</code> a regole di default e pulizia automatica: default lookup, normalizzazione e coerenza garantita.\u201d</p>"},{"location":"dbzero/config/funzioni/trgfn_regioni_ins_upd_clean_fields/#funzione-trgfn_regioni_ins_upd_clean_fields","title":"\u2699\ufe0f Funzione <code>trgfn_regioni_ins_upd_clean_fields</code>","text":"<pre><code>CREATE FUNCTION trgfn_regioni_ins_upd_clean_fields()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/config/funzioni/trgfn_regioni_ins_upd_clean_fields/#create-or-replace-function-configtrgfn_regioni_ins_upd_clean_fields-returns-trigger-language-plpgsql-as-function-begin-1-imposta-stato_id-di-default-da-configstati-se-e-null-if-newstato_id-is-null-then-newstato_id-scriptfn_get_default_by_param-config-schema-della-tabella-lookup-stati-tabella-di-lookup-codice_iso3-colonna-di-filtro-in-configstati-state_code_iso3-codice-parametro-in-configparameters-tg_name-nome-del-trigger-chiamante-integer-cast-al-tipo-integer-di-stato_id-end-if-2-altri-cleanup-esempi-if-newnome-is-not-null-then-newnome-uppertrimnewnome-end-if-if-newcognome-is-not-null-then-newcognome-uppertrimnewcognome-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION config.trgfn_regioni_ins_upd_clean_fields()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n BEGIN\n   ------------------------------------------------------------------\n   -- 1) Imposta stato_id di default da config.stati se \u00e8 NULL\n   IF NEW.stato_id IS NULL THEN\n     NEW.stato_id := script.fn_get_default_by_param(\n       'config',           -- schema della tabella lookup\n       'stati',            -- tabella di lookup\n       'codice_iso3',        -- colonna di filtro in config.stati\n       'state_code_iso3',  -- codice parametro in config.parameters\n       TG_NAME             -- nome del trigger chiamante\n     )::integer;           -- cast al tipo integer di stato_id\n   END IF;\n   ------------------------------------------------------------------\n   -- 2) Altri cleanup (esempi)\n   --IF NEW.nome IS NOT NULL THEN\n   --  NEW.nome := UPPER(TRIM(NEW.nome));\n   --END IF;\n   --IF NEW.cognome IS NOT NULL THEN\n     --NEW.cognome := UPPER(TRIM(NEW.cognome));\n  -- END IF;\n   ------------------------------------------------------------------\n   RETURN NEW;\n END;\n $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/funzioni/trgfn_stradario_generale_upd_non_permesso/","title":"Trgfn stradario generale upd non permesso","text":""},{"location":"dbzero/config/funzioni/trgfn_stradario_generale_upd_non_permesso/#documentazione-concettuale-trigger-function-configtrgfn_stradario_generale_upd_non_permesso","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>config.trgfn_stradario_generale_upd_non_permesso()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:    </p> <ul> <li>config.stradario_generale </li> <li>config.stradario </li> </ul> <p>Approfondimento funzioni:    </p> <ul> <li>script.fn_log_and_raise_error </li> </ul> <p>La trigger function <code>config.trgfn_stradario_generale_upd_non_permesso()</code> impedisce modifiche non consentite sulle colonne critiche di <code>config.stradario_generale</code> (<code>descrizione</code>, <code>descrizione_breve</code>, <code>toponomastica_id</code>) quando esistono vie correlate in <code>config.stradario</code>, segnalando in modo chiaro quale attributo \u00e8 stato alterato.</p>"},{"location":"dbzero/config/funzioni/trgfn_stradario_generale_upd_non_permesso/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Blocco modifiche non consentite: evitare update di descrizione, descrizione_breve o toponomastica_id in <code>config.stradario_generale</code> se il record \u00e8 gi\u00e0 in uso in <code>config.stradario</code>.</li> <li>Identificazione precisa: indicare tramite JSON il nome della colonna modificata e l\u2019ID del record per diagnosticare efficacemente l\u2019errore.</li> <li>Centralizzazione logica: mantenere il controllo integrit\u00e0 nel database, riducendo complessit\u00e0 lato applicazione.</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_stradario_generale_upd_non_permesso/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>INPUT: utilizza il record <code>OLD</code> (pre-update) e <code>NEW</code> (in aggiornamento).</li> <li>Condizione di attivazione: <code>BEFORE UPDATE OF descrizione, descrizione_breve, toponomastica_id</code> su <code>config.stradario_generale</code>.</li> <li> <p>Dipendenze:</p> </li> <li> <p>Tabella <code>config.stradario</code> per la verifica di riferimenti esistenti.</p> </li> <li>Funzione <code>script.fn_log_and_raise_error</code> per logging e segnalazione errori.</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_stradario_generale_upd_non_permesso/#logica-di-esecuzione","title":"\u2699\ufe0f Logica di Esecuzione","text":"<ol> <li>Verifica di utilizzo</li> </ol> <pre><code>IF NOT EXISTS (\n  SELECT 1 FROM config.stradario WHERE stradario_generale_id = OLD.id\n) THEN\n  RETURN NEW;\nEND IF;\n</code></pre> <p>Se non ci sono vie correlate, l\u2019UPDATE procede liberamente. 2. Controlli colonna per colonna    Per ciascuna colonna sensibile, confronta <code>OLD</code> vs <code>NEW</code>:</p> <pre><code>IF OLD.descrizione IS DISTINCT FROM NEW.descrizione THEN\n  PERFORM script.fn_log_and_raise_error(\n    'database', TG_NAME, 'E_COLONNA_NON_MODIFICABILE',\n    jsonb_build_object('column','descrizione','id',OLD.id)\n  );\nEND IF;\n</code></pre> <p>Ripete la stessa logica per <code>descrizione_breve</code> e <code>toponomastica_id</code>, specificando sempre il campo modificato. 3. Ritorno del record</p> <pre><code>RETURN NEW;\n</code></pre> <p>Dopo i controlli, se non viene lanciata eccezione, il record aggiornato viene restituito.</p>"},{"location":"dbzero/config/funzioni/trgfn_stradario_generale_upd_non_permesso/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Integrit\u00e0 referenziale: impedisce modifiche che comprometterebbero la coerenza dei dati stradario.</li> <li>Diagnosi immediata: il payload JSON indica esattamente quale colonna \u00e8 stata alterata e l\u2019ID del record.</li> <li>Centralizzazione: la logica di blocco \u00e8 consolidata nel database, riducendo dipendenze esterne.</li> </ul> <p>\ud83e\udde0 \u201c<code>trgfn_stradario_generale_upd_non_permesso</code> garantisce che le definizioni generali non vengano modificate in modo incongruo, proteggendo la consistenza tra stradario_generale e stradario.\u201d</p>"},{"location":"dbzero/config/funzioni/trgfn_stradario_generale_upd_non_permesso/#funzione-trgfn_stradario_generale_upd_non_permesso","title":"\u2699\ufe0f Funzione <code>trgfn_stradario_generale_upd_non_permesso</code>","text":"<pre><code>CREATE FUNCTION trgfn_stradario_generale_upd_non_permesso()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/config/funzioni/trgfn_stradario_generale_upd_non_permesso/#create-or-replace-function-configtrgfn_stradario_generale_upd_non_permesso-returns-trigger-language-plpgsql-as-function-begin-se-il-record-non-e-usato-in-configstradario-lascio-passare-if-not-exists-select-1-from-configstradario-where-stradario_generale_id-oldid-then-return-new-end-if-se-siamo-qui-il-record-e-in-uso-controllo-ciascuna-colonna-if-olddescrizione-is-distinct-from-newdescrizione-then-perform-scriptfn_log_and_raise_error-database-tg_name-e_colonna_non_modificabile-jsonb_build_objectcolumndescrizioneidoldid-nulluuid-descrizione-end-if-if-olddescrizione_breve-is-distinct-from-newdescrizione_breve-then-perform-scriptfn_log_and_raise_error-database-tg_name-e_colonna_non_modificabile-jsonb_build_objectcolumndescrizione_breveidoldid-nulluuid-descrizione_breve-end-if-if-oldtoponomastica_id-is-distinct-from-newtoponomastica_id-then-perform-scriptfn_log_and_raise_error-database-tg_name-e_colonna_non_modificabile-jsonb_build_objectcolumntoponomastica_ididoldid-nulluuid-toponomastica_id-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION config.trgfn_stradario_generale_upd_non_permesso()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  -- Se il record non \u00e8 usato in config.stradario, lascio passare\n  IF NOT EXISTS (\n    SELECT 1\n      FROM config.stradario\n     WHERE stradario_generale_id = OLD.id\n  ) THEN\n    RETURN NEW;\n  END IF;\n\n  -- Se siamo qui, il record \u00e8 in uso: controllo ciascuna colonna\n  IF OLD.descrizione IS DISTINCT FROM NEW.descrizione THEN\n    PERFORM script.fn_log_and_raise_error(\n      'database',\n      TG_NAME,\n      'E_COLONNA_NON_MODIFICABILE',\n      jsonb_build_object('column','descrizione','id',OLD.id),\n       NULL::uuid,\n      'descrizione'\n    );\n  END IF;\n\n  IF OLD.descrizione_breve IS DISTINCT FROM NEW.descrizione_breve THEN\n    PERFORM script.fn_log_and_raise_error(\n      'database',\n      TG_NAME,\n      'E_COLONNA_NON_MODIFICABILE',\n      jsonb_build_object('column','descrizione_breve','id',OLD.id),\n       NULL::uuid,\n      'descrizione_breve'\n    );\n  END IF;\n\n  IF OLD.toponomastica_id IS DISTINCT FROM NEW.toponomastica_id THEN\n    PERFORM script.fn_log_and_raise_error(\n      'database',\n      TG_NAME,\n      'E_COLONNA_NON_MODIFICABILE',\n      jsonb_build_object('column','toponomastica_id','id',OLD.id),\n       NULL::uuid,\n      'toponomastica_id'\n    );\n  END IF;\n\n  RETURN NEW;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/funzioni/trgfn_sync_stato_iso2/","title":"\u2699\ufe0f Funzione <code>trgfn_sync_stato_iso2</code>","text":"<pre><code>CREATE FUNCTION trgfn_sync_stato_iso2()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/config/funzioni/trgfn_sync_stato_iso2/#create-or-replace-function-configtrgfn_sync_stato_iso2-returns-trigger-language-plpgsql-as-function-begin-select-scodice_iso2-into-newstato_iso2-from-configstati-s-where-sid-newstato_id-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION config.trgfn_sync_stato_iso2()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  SELECT s.codice_iso2\n    INTO NEW.stato_iso2\n    FROM config.stati s\n   WHERE s.id = NEW.stato_id;\n  RETURN NEW;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/funzioni/trgfn_toponomastica_upd_non_permesso/","title":"Trgfn toponomastica upd non permesso","text":""},{"location":"dbzero/config/funzioni/trgfn_toponomastica_upd_non_permesso/#documentazione-concettuale-trigger-function-configtrgfn_toponomastica_upd_non_permesso","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>config.trgfn_toponomastica_upd_non_permesso()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:  - config.toponomastica  - config.stradario_generale </p> <p>Approfondimento funzioni:  - script.fn_log_and_raise_error </p> <p>La trigger function <code>config.trgfn_toponomastica_upd_non_permesso()</code> impedisce modifiche non consentite sul catalogo delle toponomastiche, bloccando l\u2019UPDATE di <code>descrizione</code> quando la voce \u00e8 gi\u00e0 in uso in <code>config.stradario_generale</code>.</p>"},{"location":"dbzero/config/funzioni/trgfn_toponomastica_upd_non_permesso/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Protezione semantica: garantire coerenza tra topografia e stradario evitando rinominazioni dirette di toponomastiche gi\u00e0 in uso.</li> <li>Decisione di design: anzich\u00e9 storicizzare o consentire modifiche parziali, obbligare alla creazione di nuove topograf\u00ece per cambiare descrizione.</li> <li>Centralizzazione: concentrare la logica di blocco in una sola funzione trigger per ridurre complessit\u00e0 applicativa.</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_toponomastica_upd_non_permesso/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>Ambito: <code>BEFORE UPDATE OF descrizione</code> sulla tabella <code>config.toponomastica</code>.</li> <li>Condition: attivazione solo se il record \u00e8 referenziato in <code>config.stradario_generale</code> tramite il campo <code>toponomastica_id</code>.</li> <li> <p>Dipendenze:</p> </li> <li> <p>Tabella <code>config.stradario_generale</code> per la verifica dei riferimenti.</p> </li> <li>Funzione <code>script.fn_log_and_raise_error</code> per generare errori strutturati.</li> </ul>"},{"location":"dbzero/config/funzioni/trgfn_toponomastica_upd_non_permesso/#flusso-di-esecuzione-dettagliato","title":"\u2699\ufe0f Flusso di Esecuzione Dettagliato","text":"<ol> <li>Verifica utilizzo</li> </ol> <pre><code>IF NOT EXISTS (\n  SELECT 1\n    FROM config.stradario_generale\n   WHERE toponomastica_id = OLD.id\n) THEN\n  RETURN NEW;\nEND IF;\n</code></pre> <p>Se la toponomastica non \u00e8 usata, l\u2019UPDATE di <code>descrizione</code> procede normalmente.</p> <ol> <li>Blocco modifica</li> </ol> <pre><code>IF OLD.descrizione IS DISTINCT FROM NEW.descrizione THEN\n  PERFORM script.fn_log_and_raise_error(\n    'database',\n    TG_NAME,\n    'E_COLONNA_NON_MODIFICABILE',\n    jsonb_build_object('column','descrizione','id',OLD.id)\n  );\nEND IF;\n</code></pre> <p>Se la <code>descrizione</code> viene cambiata, la funzione lancia un errore bloccando l\u2019operazione e indicando quale colonna e ID sono coinvolti.</p> <ol> <li>Ritorno</li> </ol> <pre><code>RETURN NEW;\n</code></pre> <p>In ogni caso, il record viene restituito (se l\u2019errore non \u00e8 stato sollevato), anche se normalmente l\u2019operazione si interrompe al lancio dell\u2019eccezione.</p>"},{"location":"dbzero/config/funzioni/trgfn_toponomastica_upd_non_permesso/#motivazione-e-benefici","title":"\ud83d\udd12 Motivazione e Benefici","text":"<ul> <li>Integrit\u00e0 referenziale logica: impedendo modifiche di descrizioni in uso, si evita la discrepanza tra entit\u00e0 generali e record associati.</li> <li>Chiarezza operativa: chiara segnalazione dell\u2019errore con payload JSON specifico, facilita debug e supporto.</li> <li>Strategia di manutenzione: per modificare la descrizione di una toponomastica esistente, \u00e8 necessario creare un nuovo record, preservando la storia e evitando side effect.</li> <li>Leggerezza: rispetto alla storicizzazione completa, questo approccio \u00e8 pi\u00f9 semplice e leggero quando la modifica non \u00e8 prevista come operazione comune.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>trgfn_toponomastica_upd_non_permesso</code>, Zero ERP tutela la coerenza dello stradario imponendo la creazione di nuove toponomastiche per ogni cambiamento, piuttosto che modifiche in-place.\u201d</p>"},{"location":"dbzero/config/funzioni/trgfn_toponomastica_upd_non_permesso/#funzione-trgfn_toponomastica_upd_non_permesso","title":"\u2699\ufe0f Funzione <code>trgfn_toponomastica_upd_non_permesso</code>","text":"<pre><code>CREATE FUNCTION trgfn_toponomastica_upd_non_permesso()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/config/funzioni/trgfn_toponomastica_upd_non_permesso/#create-or-replace-function-configtrgfn_toponomastica_upd_non_permesso-returns-trigger-language-plpgsql-as-function-begin-se-il-record-non-e-usato-in-configstradario_generale-lascio-passare-if-not-exists-select-1-from-configstradario_generale-where-toponomastica_id-oldid-then-return-new-end-if-se-siamo-qui-il-record-e-in-uso-controllo-ciascuna-colonna-if-olddescrizione-is-distinct-from-newdescrizione-then-perform-scriptfn_log_and_raise_error-database-tg_name-e_colonna_non_modificabile-jsonb_build_objectcolumndescrizioneidoldid-nulluuid-descrizione-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION config.trgfn_toponomastica_upd_non_permesso()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  -- Se il record non \u00e8 usato in config.stradario_generale, lascio passare\n  IF NOT EXISTS (\n    SELECT 1\n      FROM config.stradario_generale\n     WHERE  toponomastica_id = OLD.id\n  ) THEN\n    RETURN NEW;\n  END IF;\n\n  -- Se siamo qui, il record \u00e8 in uso: controllo ciascuna colonna\n  IF OLD.descrizione IS DISTINCT FROM NEW.descrizione THEN\n    PERFORM script.fn_log_and_raise_error(\n      'database',\n      TG_NAME,\n      'E_COLONNA_NON_MODIFICABILE',\n      jsonb_build_object('column','descrizione','id',OLD.id),\n       NULL::uuid,\n      'descrizione'\n    );\n  END IF;\n  RETURN NEW;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/manual/codici_postali/","title":"Codici postali","text":""},{"location":"dbzero/config/manual/codici_postali/#documentazione-concettuale-tabella-configcodici_postali","title":"\ud83d\udcda Documentazione Concettuale \u2013 Tabella <code>config.codici_postali</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - config.comuni  - config.stradario  - config.stradario_generale </p> <p>La tabella <code>config.codici_postali</code> censisce i codici di avviamento postale (postal codes o\u00a0ZIP codes) associati ai comuni, fornendo l\u2019elenco completo di CAP per ogni citt\u00e0.</p>"},{"location":"dbzero/config/manual/codici_postali/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Elenco dei codici postali   Per ogni comune (city/municipality), memorizza tutti i codici postali (Postal Code o\u00a0ZIP Code) validi per quell\u2019area geografica.</p> </li> <li> <p>Molti CAP per lo stesso comune   Un singolo comune pu\u00f2 avere pi\u00f9 codici postali (ad esempio diverse frazioni o quartieri). Il campo <code>comune_id</code> pu\u00f2 quindi comparire in pi\u00f9 record con CAP differenti.</p> </li> <li> <p>Associazione con il sistema di strade   La relazione tra vie e codici postali avviene tramite la tabella <code>config.stradario</code>, che collega ogni <code>via_id</code> (da <code>config.stradario_generale</code>) al <code>codice_postale_id</code> corrispondente.</p> </li> <li> <p>Terminologia internazionale   Il termine inglese utilizza \u201cPostal Code\u201d in generale, mentre negli Stati Uniti si parla specificamente di \u201cZIP Code\u201d.</p> </li> </ul>"},{"location":"dbzero/config/manual/codici_postali/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Copertura capillare del territorio   Gestisce pi\u00f9 CAP per un solo comune, utile per suddividere zone interne come frazioni, quartieri o uffici postali specifici.</p> </li> <li> <p>Precisione nell\u2019indirizzamento   Tramite il collegamento con <code>config.stradario</code>, assicura che ogni via sia abbinata al CAP corretto, migliorando la consegna della corrispondenza e i servizi logistici.</p> </li> <li> <p>Supporto multiregionale   Accoglie diversi formati di codici postali (Italia, USA, altri paesi), permettendo l\u2019uso in contesti internazionali senza modifica del modello dati.</p> </li> <li> <p>Audit e tracciabilit\u00e0   Trigger di auditing aggiornano automaticamente <code>data_update</code> e <code>user_update</code>, garantendo la storia delle modifiche dei CAP.</p> </li> </ul> <p>\ud83e\udde0 \"Una tabella essenziale per associare vie e comuni ai rispettivi codici postali, garantendo indirizzamento preciso e compatibilit\u00e0 internazionale.\"</p>"},{"location":"dbzero/config/manual/comuni/","title":"Comuni","text":""},{"location":"dbzero/config/manual/comuni/#documentazione-concettuale-tabella-configcomuni","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.comuni</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento tabelle:   - config.province   - config.stradario   - config.stradario_generale   - storico.comuni </p> <p>Approfondimento funzione:  - script.trgfn_upd_dlt_storico_generic </p> <p>La tabella <code>config.comuni</code> censisce i comuni (italiani ed esteri) all\u2019interno di uno stato, fornendo la base per la geolocalizzazione degli indirizzi e per l\u2019associazione con lo stradario.</p>"},{"location":"dbzero/config/manual/comuni/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Censimento dei comuni   Elenco dei comuni presenti in ciascuno stato, identificati da nome e collegamento gerarchico a provincia e stato.</li> <li>Attributi specifici per stato   La colonna <code>extra_country</code> (JSONB) permette di memorizzare dati aggiuntivi specifici per ogni paese (per l\u2019Italia: codice catastale, codice ISTAT, fascia climatica, ecc.).</li> <li>Integrazione con lo stradario   L\u2019associazione tra <code>config.stradario_generale</code> (prefissi e nomi delle vie) e <code>config.comuni</code> genera la tabella <code>config.stradario</code>, che contiene l\u2019indirizzo completo con la localizzazione geografica sul comune di appartenenza.   Utilizzata per associare i record di <code>config.stradario</code> al comune di appartenenza, completa il percorso di indirizzamento.</li> <li>Storicizzazione   Il campo <code>storicizza</code> se true attiva il trigger per la storicizzazione delle informazioni sulla tabella <code>storico.comuni</code>. Il front-end dovr\u00e0 sempre impostare a true il valore, solo per funzioni administrator si potr\u00e0 non gestire a true.</li> </ul>"},{"location":"dbzero/config/manual/comuni/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>config.province</code>   Il campo <code>provincia_id</code> identifica al provincia di appartenenza..</li> <li><code>storico.comuni</code> <code>storico</code> True attiva il trigger per il salvataggio delle informazioni.</li> </ul>"},{"location":"dbzero/config/manual/comuni/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Flessibilit\u00e0   L\u2019uso di un campo JSONB per attributi extra consente di adattare la struttura dei dati alle diverse normative nazionali senza modifiche allo schema.</li> <li>Coerenza geografica   Collegamento a tabelle di stato e provincia garantisce una gerarchia amministrativa corretta e uniforme.</li> <li>Facilit\u00e0 di manutenzione   Inserimenti e aggiornamenti automatici tramite trigger di auditing e storicizzazione (se abilitata) assicurano la tracciabilit\u00e0 delle modifiche.</li> </ul> <p>\ud83e\udde0 \"Un catalogo flessibile e gerarchico dei comuni, arricchito da attributi nazionali personalizzabili per supportare indirizzamento e reporting geografico.\"</p>"},{"location":"dbzero/config/manual/conti_contabili/","title":"Conti contabili","text":""},{"location":"dbzero/config/manual/conti_contabili/#documentazione-concettuale-tabella-configconti_contabili","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.conti_contabili</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - config.iva </p> <p>Approfondimenti funzioni:  - script.trgfn_upd_audit_data_user_generic </p> <p>La tabella <code>config.conti_contabili</code> definisce il piano dei conti utilizzabile per la contabilizzazione delle operazioni, distinguendo tra conti di acquisto e vendita, e supportando l\u2019audit delle modifiche.</p>"},{"location":"dbzero/config/manual/conti_contabili/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Mantenere il catalogo centralizzato dei codici conto con descrizioni e tipologia.</li> <li>Supportare la validazione dei riferimenti contabili in altre tabelle (ad esempio <code>config.iva</code>).</li> </ul>"},{"location":"dbzero/config/manual/conti_contabili/#vincoli-e-regole-aziendali","title":"\ud83d\udd12 Vincoli e Regole Aziendali","text":"<ul> <li>Unicit\u00e0: <code>codice_conto</code> deve essere univoco.</li> <li> <p>Tipologia: <code>tipo_conto</code> pu\u00f2 essere:</p> </li> <li> <p><code>A</code> (Acquisto)</p> </li> <li><code>V</code> (Vendita)</li> <li>Check Constraint: garantisce che <code>tipo_conto</code> sia solo uno dei valori previsti.</li> </ul>"},{"location":"dbzero/config/manual/conti_contabili/#relazioni-e-indici","title":"\ud83d\udd17 Relazioni e Indici","text":"<ul> <li> <p>FK in ingresso:</p> </li> <li> <p><code>config.iva.conto_iva_acquisti_id</code> \u2192 <code>config.conti_contabili(id)</code></p> </li> <li><code>config.iva.conto_iva_vendita_id</code> \u2192 <code>config.conti_contabili(id)</code></li> <li> <p>Indici:</p> </li> <li> <p><code>IX_CONTI_CONTABILI_DESCRIZIONE</code> su <code>descrizione</code> per ricerche testuali rapide</p> </li> <li><code>IX_CONTI_CONTABILI_TIPO_CONTO</code> su <code>tipo_conto</code> per filtrare conti di acquisto/vendita</li> </ul>"},{"location":"dbzero/config/manual/conti_contabili/#trigger-associati","title":"\u2699\ufe0f Trigger Associati","text":"<ol> <li> <p><code>trg_upd_conti_contabili_audit_data_user</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code></p> </li> <li>Cosa: aggiorna automaticamente i campi <code>data_update</code> e <code>user_update</code> tramite <code>script.trgfn_upd_audit_data_user_generic()</code></li> </ol>"},{"location":"dbzero/config/manual/conti_contabili/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Governance contabile: definizione centralizzata del piano dei conti.</li> <li>Integrit\u00e0 referenziale: associazioni corrette ai conti di acquisto e vendita.</li> <li>Audit completo: tracciamento automatico delle modifiche ai conti.</li> <li>Performante: indici ottimizzati per ricerca e filtro.</li> </ul> <p>\ud83e\udde0 \u201cUn piano dei conti ben strutturato \u00e8 alla base di una contabilit\u00e0 affidabile e facilmente mantenibile.\u201d</p>"},{"location":"dbzero/config/manual/fn_get_iva_override/","title":"Fn get iva override","text":""},{"location":"dbzero/config/manual/fn_get_iva_override/#documentazione-concettuale-funzione-configfn_get_iva_override","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>config.fn_get_iva_override</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - config.iva  - config.iva_stati </p> <p>La funzione <code>config.fn_get_iva_override(p_codice_iva TEXT, p_stato_id INTEGER)</code> restituisce i dati completi della aliquota IVA (codice, descrizioni, natura, conti) per un determinato codice IVA e Stato, applicando eventuali override specifici per Stato definiti in <code>config.iva_stati</code>.</p>"},{"location":"dbzero/config/manual/fn_get_iva_override/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Recupero unificato   Ottenere in un\u2019unica chiamata sia i valori base da <code>config.iva</code> sia gli override da <code>config.iva_stati</code> se presenti.</li> <li>Override per Stato   Consentire di modificare aliquota e assoggettamento IVA a livello di Stato senza duplicare righe in <code>config.iva</code>.</li> <li>Centralizzazione   Incapsulare la logica di join e COALESCE in una funzione riutilizzabile.</li> </ul>"},{"location":"dbzero/config/manual/fn_get_iva_override/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Descrizione <code>p_codice_iva</code> <code>TEXT</code> Codice identificativo dell\u2019IVA (es. 'IVA22', 'IVA10'). <code>p_stato_id</code> <code>INT</code> ID dello Stato (chiave esterna su <code>config.stati.id</code>)."},{"location":"dbzero/config/manual/fn_get_iva_override/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Join su tabella base    Seleziona i campi da <code>config.iva</code> per il record con <code>codice_iva = p_codice_iva</code>, e unisce a <code>config.stati</code> per validare <code>p_stato_id</code>.</li> <li>Left join per override    Unisce <code>config.iva_stati</code> su <code>(iva_id, stato_id)</code> per recuperare gli eventuali valori di <code>aliquota_override</code> e <code>assoggettamento_override</code>.</li> <li> <p>Applicazione override o default    Usa <code>COALESCE</code> per restituire:</p> </li> <li> <p><code>aliquota = COALESCE(s.aliquota_override, i.aliquota_iva)</code></p> </li> <li><code>assoggettamento = COALESCE(s.assoggettamento_override, i.assoggettamento_iva)</code></li> <li>Restituzione tabella    Ritorna la tabella con colonne dettagliate: dati base, override, natura, conti e metadati di audit.</li> </ol>"},{"location":"dbzero/config/manual/fn_get_iva_override/#firma-sql","title":"\ud83d\udd16 Firma SQL","text":"<pre><code>CREATE OR REPLACE FUNCTION config.fn_get_iva_override(\n  p_codice_iva TEXT,\n  p_stato_id   INTEGER\n)\nRETURNS TABLE(\n  id_iva                INTEGER,\n  codice_iva            CHARACTER,\n  desc_iva              VARCHAR,\n  desc_breve_iva        VARCHAR,\n  aliquota_base         NUMERIC,\n  assoggettamento_base  CHAR,\n  aliquota              NUMERIC,\n  assoggettamento       CHAR,\n  id_natura_iva         INTEGER,\n  conto_iva_acquisti_id INTEGER,\n  conto_iva_vendita_id  INTEGER,\n  stato_id              INTEGER,\n  stato_sigla           VARCHAR,\n  data_insert           TIMESTAMP,\n  user_insert           TEXT,\n  data_update           TIMESTAMP,\n  user_update           TEXT\n)\nLANGUAGE sql\nAS $body$\n  /* Implementazione: join su config.iva, config.stati, config.iva_stati; COALESCE per override */\n  SELECT ...\n$body$;\n</code></pre>"},{"location":"dbzero/config/manual/fn_get_iva_override/#esempio-di-utilizzo","title":"\ud83d\udccb Esempio di Utilizzo","text":"<pre><code>SELECT *\n  FROM config.fn_get_iva_override('IVA22', 1);\n-- Restituisce la riga IVA 22% per lo Stato con id=1, applicando eventuali override.\n</code></pre>"},{"location":"dbzero/config/manual/fn_get_iva_override/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Semplicit\u00e0: un\u2019unica funzione per gestire base e override.</li> <li>Manutenibilit\u00e0: cambiamenti agli override si propagano automaticamente al risultato.</li> <li>Performance: il linguaggio SQL nativo con COST=100 e STABLE \u00e8 ottimizzato per uso frequente.</li> <li>Coerenza: evita duplicazioni di logica in pi\u00f9 punti dell\u2019applicazione.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare la logica di override IVA in una funzione SQL migliora chiarezza, riuso e governabilit\u00e0 delle regole fiscali.\u201d</p>"},{"location":"dbzero/config/manual/iva/","title":"Iva","text":""},{"location":"dbzero/config/manual/iva/#documentazione-concettuale-tabella-configiva","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.iva</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - config.iva_natura  - config.conti_contabili </p> <p>Approfondimenti funzioni:  - config.trgfn_iva_ins_upd_check_conti_iva  - config.fn_get_iva_override  - script.trgfn_upd_audit_data_user_generic </p> <p>La tabella <code>config.iva</code> fornisce il catalogo dei codici IVA, includendo descrizioni, regole di assoggettamento, split payment e mapping necessari per l\u2019invio delle fatture al Sistema di Interscambio (SDI).</p>"},{"location":"dbzero/config/manual/iva/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Centralizzare i codici IVA disponibili in un unico repository configurabile.</li> <li> <p>Gestire:</p> </li> <li> <p>Descrizioni estesa e breve</p> </li> <li>Assoggettamento fiscale</li> <li>Aliquota percentuale (quando applicabile)</li> <li>Natura IVA per SDI (<code>natura_iva_id</code>)</li> <li>Conti contabili di acquisto e vendita</li> <li>Split payment (<code>id_iva_split</code>)</li> </ul>"},{"location":"dbzero/config/manual/iva/#vincoli-e-logiche-aziendali","title":"\ud83d\udd12 Vincoli e Logiche Aziendali","text":"<ul> <li>Unicit\u00e0: <code>codice_iva</code> deve essere univoco.</li> <li> <p>Assoggettamento: il campo <code>assoggettamento_iva</code> pu\u00f2 assumere solo i valori {<code>NS</code>, <code>NI</code>, <code>ND</code>, <code>ES</code>, <code>RC</code>, <code>ED</code>, <code>NP</code>, <code>T</code>, <code>IM</code>, ``}.   Esempi:</p> </li> <li> <p><code>NS</code> (Non Soggetto)</p> </li> <li><code>NI</code> (Non Imponibile)</li> <li><code>ES</code> (Esente)</li> <li><code>RC</code> (Reverse Charge)</li> <li><code>ED</code> (Esigibilit\u00e0 Differita)</li> <li>\u2026</li> <li>Aliquota vs. assoggettamento: se <code>assoggettamento_iva</code> \u00e8 diverso da vuoto, l\u2019<code>aliquota_iva</code> non pu\u00f2 essere valorizzata (dev\u2019essere zero o lasciata al default).</li> <li>Split payment: <code>id_iva_split</code> pu\u00f2 essere valorizzato per indicare che il codice IVA segue la normativa di split payment. In questo caso punta ricorsivamente a un codice \u201creale\u201d in <code>config.iva</code>, definendo a quale aliquota reale si collega il meccanismo di split.</li> <li>Natura IVA per SDI: <code>natura_iva_id</code> fa riferimento a <code>config.iva_natura(id)</code>, fornendo il codice natura necessario per la trasmissione al SDI.</li> <li> <p>Conti contabili:</p> </li> <li> <p><code>conto_iva_acquisti_id</code> \u2192 deve essere un conto di tipo acquisto</p> </li> <li><code>conto_iva_vendita_id</code> \u2192 deve essere un conto di tipo vendita</li> </ul>"},{"location":"dbzero/config/manual/iva/#relazioni-e-indici","title":"\ud83d\udd17 Relazioni e Indici","text":"<ul> <li> <p>FK:</p> </li> <li> <p><code>natura_iva_id</code> \u2192 <code>config.iva_natura(id)</code></p> </li> <li><code>conto_iva_acquisti_id</code> \u2192 <code>config.conti_contabili(id)</code></li> <li><code>conto_iva_vendita_id</code> \u2192 <code>config.conti_contabili(id)</code></li> <li><code>id_iva_split</code> \u2192 <code>config.iva(id)</code> (ricorsivo)</li> <li>Indice: <code>IX_IVA_DESC</code> su <code>desc_iva</code> per ricerche testuali performanti</li> </ul>"},{"location":"dbzero/config/manual/iva/#trigger-associati","title":"\u2699\ufe0f Trigger Associati","text":"<ol> <li> <p><code>trg_iva_ins_upd_check_conti_iva</code></p> </li> <li> <p>Quando: <code>BEFORE INSERT OR UPDATE</code></p> </li> <li>Cosa: verifica la corretta tipologia dei conti IVA (acquisto vs vendita).</li> <li> <p><code>trg_upd_iva_audit_data_user</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code></p> </li> <li>Cosa: popola automaticamente i campi <code>data_update</code> e <code>user_update</code> per l\u2019audit.</li> </ol>"},{"location":"dbzero/config/manual/iva/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Conformit\u00e0 normativa: split payment e natura IVA per SDI gestiti automaticamente.</li> <li>Integrit\u00e0 referenziale: FK e trigger garantiscono correttezza dei conti e dei codici natura.</li> <li>Riduzione degli errori: constraint e trigger prevengono valori non validi per assoggettamento e aliquota.</li> <li>Velocit\u00e0 di ricerca: indice su <code>desc_iva</code> per filtrare rapidamente le descrizioni.</li> </ul> <p>\ud83e\udde0 \u201cUn modello di dati IVA ben governato semplifica la compliance fiscale e riduce i rischi di errore durante la compilazione e trasmissione delle fatture.\u201d</p>"},{"location":"dbzero/config/manual/iva_natura/","title":"Iva natura","text":""},{"location":"dbzero/config/manual/iva_natura/#documentazione-concettuale-tabella-configiva_natura","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.iva_natura</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.iva </p> <p>Approfondimenti funzioni:  - config.trgfn_iva_ins_upd_check_conti_iva  - script.trgfn_upd_audit_data_user_generic </p> <p>La tabella <code>config.iva_natura</code> contiene i codici natura IVA utilizzati per l\u2019inoltro delle fatture elettroniche al Sistema di Interscambio (SDI), abbinando ogni codice a una descrizione estesa.</p>"},{"location":"dbzero/config/manual/iva_natura/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Fornire il catalogo ufficiale dei codici natura IVA previsti dalla normativa per le fatture elettroniche.</li> <li>Consentire il mapping automatico tra i record di <code>config.iva</code> e il codice natura da inviare al SDI.</li> </ul>"},{"location":"dbzero/config/manual/iva_natura/#vincoli-e-regole-aziendali","title":"\ud83d\udd12 Vincoli e Regole Aziendali","text":"<ul> <li>Unicit\u00e0: <code>codice_natura</code> deve essere univoco nel catalogo.</li> <li>Validit\u00e0: ogni codice (<code>codice_natura</code>) corrisponde a uno specifico significato fiscale, es. <code>N1</code> (Esportazioni), <code>N2</code> (Operazioni non imponibili), etc.</li> <li>Audit: ogni modifica al catalogo aggiorna automaticamente <code>data_update</code> e <code>user_update</code> tramite trigger.</li> </ul>"},{"location":"dbzero/config/manual/iva_natura/#relazioni","title":"\ud83d\udd17 Relazioni","text":"<ul> <li>I record di <code>config.iva</code> referenziano <code>config.iva_natura(id)</code> per definire la natura fiscale da trasmettere al SDI.</li> </ul>"},{"location":"dbzero/config/manual/iva_natura/#trigger-associati","title":"\u2699\ufe0f Trigger Associati","text":"<ol> <li> <p><code>trg_upd_iva_natura_audit_data_user</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code></p> </li> <li>Cosa: aggiorna automaticamente i campi di audit <code>data_update</code> e <code>user_update</code> tramite la funzione generica <code>script.trgfn_upd_audit_data_user_generic()</code>.</li> </ol>"},{"location":"dbzero/config/manual/iva_natura/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Conformit\u00e0 SDI: assicura che tutte le fatture riportino codici natura conformi alle specifiche AgID.</li> <li>Tracciabilit\u00e0: audit integrato per monitorare modifiche a codici e descrizioni.</li> <li>Modularit\u00e0: eventuali aggiornamenti o estensioni dei codici natura richiedono solo modifiche a questa tabella.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare i codici natura IVA in un catalogo dedicato semplifica la gestione dei flussi di fatturazione elettronica e garantisce compliance normativa.\u201d</p>"},{"location":"dbzero/config/manual/iva_stati/","title":"Iva stati","text":""},{"location":"dbzero/config/manual/iva_stati/#documentazione-concettuale-tabella-configiva_stati","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.iva_stati</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - config.iva  - config.stati </p> <p>Approfondimenti funzioni:  - config.fn_get_iva_override - script.trgfn_upd_audit_data_user_generic </p> <p>La tabella <code>config.iva_stati</code> permette di definire override locali di aliquota e assoggettamento IVA per specifici Stati o Paesi, personalizzando il comportamento dei codici IVA principali in base al contesto geografico.</p>"},{"location":"dbzero/config/manual/iva_stati/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Sovrascrivere, per ogni coppia <code>(iva_id, stato_id)</code>, i valori di aliquota e assoggettamento di default definiti in <code>config.iva</code>.</li> <li>Gestire scenari in cui normative locali richiedono aliquote differenti o modalit\u00e0 di assoggettamento speciali.</li> </ul>"},{"location":"dbzero/config/manual/iva_stati/#vincoli-e-logiche-aziendali","title":"\ud83d\udd12 Vincoli e Logiche Aziendali","text":"<ul> <li>PK composito <code>(iva_id, stato_id)</code>: garantisce un solo override per ciascuna combinazione di codice IVA e Stato.</li> <li>Aliquota e assoggettamento: entrambe sempre valorizzate; <code>aliquota_override</code> rappresenta la percentuale locale, mentre <code>assoggettamento_override</code> segue gli stessi codici di default (<code>NS</code>, <code>NI</code>, <code>ND</code>, <code>ES</code>, <code>RC</code>, <code>ED</code>, ``).</li> <li>Assoggettamento: se <code>assoggettamento_override</code> \u00e8 diverso da vuoto, <code>aliquota_override</code> deve essere 0 o lasciata al default, a indicare che prevale la modalit\u00e0 non imponibile o esente.</li> </ul>"},{"location":"dbzero/config/manual/iva_stati/#relazioni-e-indici","title":"\ud83d\udd17 Relazioni e Indici","text":"<ul> <li> <p>FK:</p> </li> <li> <p><code>iva_id</code> \u2192 <code>config.iva(id)</code> (ON UPDATE CASCADE, ON DELETE CASCADE)</p> </li> <li><code>stato_id</code> \u2192 <code>config.stati(id)</code> (ON UPDATE CASCADE, ON DELETE RESTRICT)</li> <li>Indice: <code>IX_IVA_STATI_STATO</code> su <code>stato_id</code> per ricerche per Paese</li> </ul>"},{"location":"dbzero/config/manual/iva_stati/#trigger-associati","title":"\u2699\ufe0f Trigger Associati","text":"<ol> <li> <p><code>trg_upd_iva_stati_audit_data_user</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code></p> </li> <li>Cosa: aggiorna i campi di audit <code>data_update</code> e <code>user_update</code> tramite la funzione generica <code>script.trgfn_upd_audit_data_user_generic()</code>.</li> </ol>"},{"location":"dbzero/config/manual/iva_stati/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Flessibilit\u00e0 normativa: consente di adattare codici IVA a normative locali diverse senza duplicare codici principali.</li> <li>Integrit\u00e0 referenziale: eliminazione a cascata su <code>iva</code> pulisce automaticamente gli override obsoleti.</li> <li>Chiarezza: la struttura composita PK + FK garantisce coerenza tra codici IVA e Stati di riferimento.</li> </ul> <p>\ud83e\udde0 \u201cUn meccanismo di overriding geografico semplifica la gestione di eccezioni fiscali locali, mantenendo il catalogo IVA principale pulito e centralizzato.\u201d</p>"},{"location":"dbzero/config/manual/messaggi_errore/","title":"Messaggi errore","text":""},{"location":"dbzero/config/manual/messaggi_errore/#documentazione-concettuale-tabella-configmessaggi_errore","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.messaggi_errore</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - dbops.error_log  - dbops.audit_log </p> <p>Approfondimenti funzioni:  - script.fn_get_messaggio </p> <p>La tabella <code>config.messaggi_errore</code> \u00e8 il catalogo centralizzato dei testi applicativi (errori, avvisi, messaggi informativi) con supporto per internazionalizzazione (i18n). Ogni record definisce un messaggio univoco, differenziato per codice e lingua, corredato di causa e suggerimenti di soluzione.</p>"},{"location":"dbzero/config/manual/messaggi_errore/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Centralizzare i messaggi: evitare hard\u2011coding nei sorgenti SQL, trigger o procedure.</li> <li>Supporto multilingua: gestire versioni localizzate tramite il campo <code>lingua</code> (es. <code>it</code>, <code>en</code>).</li> <li>Placeholder dinamici: usare <code>%s</code> nel campo <code>messaggio</code>, sostituiti a runtime dalla funzione <code>script.fn_get_messaggio</code> con valori contestuali.</li> <li>Collegamento ai log: tabelle come <code>dbops.error_log</code> e <code>dbops.audit_log</code> fanno riferimento a <code>config.messaggi_errore</code> per arricchire i record di log con testi coerenti.</li> </ul>"},{"location":"dbzero/config/manual/messaggi_errore/#struttura-dei-campi","title":"\ud83d\udd0d Struttura dei Campi","text":"Nome Tipo Dettagli <code>codice</code> text Codice logico del messaggio (es. <code>ERR001</code>, <code>WARN_TIMEOUT</code>); parte della PK <code>lingua</code> text ISO code della lingua (default: <code>it</code>); parte della PK <code>messaggio</code> text Testo principale, pu\u00f2 contenere placeholder <code>%s</code> <code>causa</code> text Causa del messaggio: breve descrizione del problema riscontrato <code>soluzione</code> text Suggerimenti o passi per risolvere il problema indicato nella causa <code>id</code> bigint PK surrogata, generata automaticamente da sequenza (<code>config.messaggi_errore_id_seq</code>)"},{"location":"dbzero/config/manual/messaggi_errore/#vincoli-di-integrita","title":"\ud83d\udd12 Vincoli di Integrit\u00e0","text":"<ul> <li>Primary Key: <code>pk_messaggi_errore (id)</code> garantisce l\u2019identificativo univoco.</li> <li>Unique Constraint: <code>uq_messaggi_errore_codice_lingua (codice, lingua)</code> per evitare duplicati della medesima traduzione.</li> </ul>"},{"location":"dbzero/config/manual/messaggi_errore/#relazioni-operative-ed-esempi","title":"\u2699\ufe0f Relazioni Operative ed Esempi","text":"<ol> <li>Collegamento con error_log</li> </ol> <p><pre><code>SELECT e.id,\n       me.codice,\n       me.messaggio,\n       e.context\n  FROM dbops.error_log e\n  JOIN config.messaggi_errore me\n    ON e.messaggio_errore_id = me.id;\n</code></pre> 2. Uso in audit_log o procedure</p> <p><pre><code>-- Recupera e formatta un messaggio con placeholder\nSELECT script.fn_get_messaggio(\n  'ERR001', 'it', ARRAY[e.order_id::text]\n);\n</code></pre> 3. Inserimento di un nuovo messaggio</p> <pre><code>INSERT INTO config.messaggi_errore(\n  codice, lingua, messaggio, causa, soluzione\n) VALUES (\n  'WARN_DISCOUNT', 'en',\n  'Order %s has no discount applied',\n  'Nessuna regola di sconto trovata',\n  'Verificare la configurazione delle promozioni'\n);\n</code></pre>"},{"location":"dbzero/config/manual/messaggi_errore/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Manutenzione semplificata: testi gestiti in un\u2019unica tabella.</li> <li>Consistenza e coerenza: unico punto di verit\u00e0 per i messaggi.</li> <li>Internazionalizzazione: aggiunta di nuove lingue facile e veloce.</li> <li>Parametrizzazione: placeholder <code>%s</code> consentono messaggi contestualizzati.</li> <li>Integrazione con log: collegamento trasparente a tabelle di log per ricostruire flussi e storici.</li> </ul> <p>\ud83e\udde0 \u201cUn catalogo centralizzato, multilingua e parametrizzato dei messaggi applicativi favorisce coerenza, facilit\u00e0 di manutenzione e miglior supporto agli utenti.\u201d</p>"},{"location":"dbzero/config/manual/parameter_overrides/","title":"Parameter overrides","text":""},{"location":"dbzero/config/manual/parameter_overrides/#documentazione-concettuale-tabella-configparameter_overrides","title":"\ud83d\udcda Documentazione Concettuale \u2013 Tabella <code>config.parameter_overrides</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:   - config.parameters </p> <p>Approfondimento funzioni :   - script.fn_get_parameter_full </p>"},{"location":"dbzero/config/manual/parameter_overrides/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>config.parameter_overrides</code> permette di creare override dinamici dei parametri definiti in <code>config.parameters</code> su diversi livelli di contesto (tenant, user, session, function), garantendo che ogni combinazione <code>(parameter_id, scope_type, scope_id)</code> sia unica e tracciata per audit.</p>"},{"location":"dbzero/config/manual/parameter_overrides/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default Descrizione <code>id</code> BIGINT NO IDENTITY Chiave primaria univoca dell\u2019override. <code>parameter_id</code> BIGINT NO \u2014 FK a <code>config.parameters(id)</code>: parametro di cui si esegue l\u2019override. <code>scope_type</code> VARCHAR(20) NO \u2014 Tipo di ambito (<code>tenant</code>,<code>user</code>,<code>session</code>,<code>function</code>, \u2026). <code>scope_id</code> TEXT NO \u2014 Identificativo dell\u2019ambito (ID numerico, session key, nome funzione, \u2026). <code>overridden_value</code> TEXT NO \u2014 Valore che sostituisce <code>default_value</code> per questo ambito. <code>data_insert</code> TIMESTAMP WITHOUT TIME ZONE NO <code>NOW()</code> Timestamp di creazione dell\u2019override. <code>user_insert</code> VARCHAR(80) NO <code>CURRENT_USER</code> Utente che ha creato l\u2019override. <code>data_update</code> TIMESTAMP WITHOUT TIME ZONE NO <code>NOW()</code> Timestamp dell\u2019ultima modifica. <code>user_update</code> VARCHAR(80) NO <code>CURRENT_USER</code> Utente che ha eseguito l\u2019ultima modifica."},{"location":"dbzero/config/manual/parameter_overrides/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne Descrizione PRIMARY KEY <code>parameter_overrides_pkey</code> <code>id</code> Chiave primaria. UNIQUE <code>uq_overrides_param_scope</code> <code>parameter_id, scope_type, scope_id</code> Un solo override per combinazione parametro\u2013ambito. FOREIGN KEY <code>fk_overrides_parameter</code> <code>parameter_id</code> Riferimento a <code>config.parameters(id)</code> con <code>ON UPDATE CASCADE</code> e <code>ON DELETE RESTRICT</code>."},{"location":"dbzero/config/manual/parameter_overrides/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione <code>trg_upd_overrides_audit_data_user</code> BEFORE UPDATE <code>script.trgfn_upd_audit_data_user_generic()</code>"},{"location":"dbzero/config/manual/parameter_overrides/#esempi-di-override","title":"\ud83d\udcdd Esempi di Override","text":""},{"location":"dbzero/config/manual/parameter_overrides/#1-override-parametro-valuta","title":"1. Override Parametro \u201cValuta\u201d","text":"<p>Override del parametro <code>DEFAULT_CURRENCY</code> per un tenant (tenant_id = 100) e un user specifico (user_id = 42):</p> <pre><code>-- Tenant override\nINSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code = 'DEFAULT_CURRENCY'),\n   'tenant', '100', 'USD');\n\n-- User override (Django user_id = 42)\nINSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code = 'DEFAULT_CURRENCY'),\n   'user', '42', 'GBP');\n</code></pre>"},{"location":"dbzero/config/manual/parameter_overrides/#2-override-parametro-stato","title":"2. Override Parametro \u201cStato\u201d","text":"<p>Override del parametro <code>INITIAL_STATE</code> all\u2019interno della funzione <code>invoice_process</code>:</p> <pre><code>INSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code = 'INITIAL_STATE'),\n   'function', 'invoice_process', 'PENDING_APPROVAL');\n</code></pre> <p>\ud83e\udde0 Questa tabella \u00e8 il cuore della personalizzazione runtime dei parametri: ogni override \u00e8 unico per contesto e tracciato per audit, senza duplicare logica nell\u2019applicazione.</p>"},{"location":"dbzero/config/manual/parameters/","title":"Parameters","text":""},{"location":"dbzero/config/manual/parameters/#documentazione-concettuale-tabella-configparameters","title":"\ud83d\udcda Documentazione Concettuale \u2013 Tabella <code>config.parameters</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - config.parameter_overrides </p> <p>Approfondimento funzioni :   - script.fn_get_parameter_full </p> <p>Approfondimento parametri tabellari Vs GUC  - parametri-personalizzati-(GUC)  All'interno del documento viene spiegata la differenza tra parametri GUC e parametri tabellari</p>"},{"location":"dbzero/config/manual/parameters/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>config.parameters</code> implementa un\u2019architettura a due livelli per la configurazione dinamica dell\u2019applicazione:</p> <ol> <li> <p>Parametri di sistema (global defaults)</p> </li> <li> <p>Archiviati in una single source of truth: <code>config.parameters</code> contiene tutti i valori di default e i metadati (descrizione, audit).</p> </li> <li> <p>Parametri di contesto (override)</p> </li> <li> <p>Vengono gestiti in <code>config.parameter_overrides</code> (vedi sezione dedicata).</p> </li> </ol>"},{"location":"dbzero/config/manual/parameters/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default Descrizione <code>id</code> BIGINT NO <code>nextval(...)</code> Chiave primaria univoca. <code>code</code> VARCHAR(100) NO \u2014 Codice univoco del parametro (es. <code>TIMEOUT</code>). <code>default_value</code> TEXT NO \u2014 Valore di default del parametro. <code>description</code> TEXT S\u00cc \u2014 Descrizione estesa. <code>data_insert</code> TIMESTAMP WITHOUT TIME ZONE NO <code>CURRENT_TIMESTAMP</code> Data di creazione del record. <code>user_insert</code> VARCHAR(80) NO <code>CURRENT_USER</code> Utente creazione. <code>data_update</code> TIMESTAMP WITHOUT TIME ZONE NO <code>CURRENT_TIMESTAMP</code> Data ultima modifica. <code>user_update</code> VARCHAR(80) NO <code>CURRENT_USER</code> Utente ultima modifica."},{"location":"dbzero/config/manual/parameters/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne Descrizione PRIMARY KEY <code>pk_parameters</code> <code>id</code> Chiave primaria. UNIQUE <code>uq_parameters_code</code> <code>code</code> Garantisce unicit\u00e0 del codice."},{"location":"dbzero/config/manual/parameters/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ol> <li>Override multi-livello (tenant \u2192 user \u2192 session \u2192 function \u2192 default) garantito dallo schema.</li> <li>Nessuna ripetizione di logica: l\u2019applicazione chiama una funzione centralizzata (es. <code>get_parameter_full</code>) che applica la catena di priorit\u00e0.</li> <li>Config runtime: il tenant o utente pu\u00f2 cambiare comportamenti senza toccare file YAML.</li> <li>Audit: possibili trigger su overrides per tracciare chi modifica cosa.</li> <li>Best practice: separare i secrets (es. password) in un Vault, usare Liquibase e caching lato applicazione per performance.</li> </ol>"},{"location":"dbzero/config/manual/parameters/#approfondimenti-e-esempi-avanzati","title":"\ud83d\udd0d Approfondimenti e Esempi Avanzati","text":""},{"location":"dbzero/config/manual/parameters/#esempio-override-parametro-valuta","title":"Esempio: Override Parametro \u201cValuta\u201d","text":"<p>Supponiamo di avere un parametro globale per la valuta di default:</p> <pre><code>INSERT INTO config.parameters(code, default_value, description)\nVALUES ('DEFAULT_CURRENCY', 'EUR', 'Valuta di default per le transazioni');\n</code></pre> <p>Un tenant specifico (tenant_id = 100) vuole usare USD:</p> <pre><code>INSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code='DEFAULT_CURRENCY'),\n   'tenant', '100', 'USD');\n</code></pre> <p>Per un utente VIP (user_id = 42) si preferisce GBP:</p> <pre><code>INSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code='DEFAULT_CURRENCY'),\n   'user', '42', 'GBP');\n</code></pre> <p>Chiamando:</p> <pre><code>SELECT config.get_parameter_full(\n  'DEFAULT_CURRENCY',\n  p_tenant_id   := 100,\n  p_user_id     := 42,\n  p_session_key := NULL,\n  p_function    := NULL\n);\n</code></pre> <p>otterremo \u2019GBP\u2019, in quanto l\u2019override utente ha priorit\u00e0 su quello tenant.</p>"},{"location":"dbzero/config/manual/parameters/#esempio-override-parametro-stato","title":"Esempio: Override Parametro \u201cStato\u201d","text":"<p>Un parametro che definisce lo stato iniziale di un workflow:</p> <pre><code>INSERT INTO config.parameters(code, default_value, description)\nVALUES ('INITIAL_STATE', 'NEW', 'Stato iniziale del documento');\n</code></pre> <p>Durante l\u2019elaborazione di una particolare funzione <code>invoice_process</code>, vogliamo impostare un override:</p> <pre><code>INSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code='INITIAL_STATE'),\n   'function', 'invoice_process', 'PENDING_APPROVAL');\n</code></pre> <p>La chiamata:</p> <pre><code>SELECT config.get_parameter_full(\n  'INITIAL_STATE',\n  p_tenant_id   := NULL,\n  p_user_id     := NULL,\n  p_session_key := NULL,\n  p_function    := 'invoice_process'\n);\n</code></pre> <p>restituir\u00e0 \u2019PENDING_APPROVAL\u2019, senza impattare la configurazione globale.</p>"},{"location":"dbzero/config/manual/parameters/#confronto-guc-vs-modello-a-tabelle","title":"\u2696\ufe0f Confronto: GUC vs Modello a Tabelle","text":"Caratteristica GUC PostgreSQL Tabella Override (<code>config.parameters</code> + <code>config.parameter_overrides</code>) Livelli di applicazione <code>database</code>, <code>role</code>, <code>session</code>, statici <code>global \u2192 tenant \u2192 user \u2192 session \u2192 function</code> (dinamici) Flessibilit\u00e0 Rigido (solo livelli predefiniti) Altamente estendibile a nuovi scope (es. ruolo, feature, modulo) Versioning No (config file o DDL) S\u00ec (versionato con Liquibase in script SQL) Audit Limitato (no audit built\u2011in) S\u00ec (campi <code>data_insert</code>, <code>user_insert</code>, trigger di audit) Accesso runtime Solo <code>SET</code> o <code>current_setting</code> API/Query dirette a database, integrabili in endpoint REST Use case ideale Parametri DB\u2011centrici (work_mem, search_path) Parametri business\u2011centrici (timeout, currency, workflow, feature flags, etc.) <p>Quando scegliere...</p> <ul> <li>GUC PostgreSQL: per configurazioni strettamente tecniche o performance\u2011oriented, con requisiti statici o legati al ruolo DB.</li> <li>Tabella Override: per impostazioni dinamiche, multi\u2011tenant e variabili in base a\u00a0user/session/function, con tracciamento e versioning completo.</li> </ul> <p>\ud83e\udde0 \u201cQuesti esempi mostrano come il modello a due tabelle gestisca override precisi per valuta, stato o qualunque parametro, mantenendo la scalabilit\u00e0 e la manutenibilit\u00e0.\u201d</p>"},{"location":"dbzero/config/manual/province/","title":"Province","text":""},{"location":"dbzero/config/manual/province/#documentazione-concettuale-tabella-configprovince","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.province</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - config.stati  - config.regioni </p> <p>La tabella <code>config.province</code> censisce le province all\u2019interno di uno stato, fornendo informazioni amministrative, codici ISTAT e dati specifici per il calcolo di accise.</p>"},{"location":"dbzero/config/manual/province/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Elenco delle province   Contiene tutte le province di uno stato (es. in Italia: RM, MI, FI), con sigla e nome descrittivo.</p> </li> <li> <p>Associazione con la regione   Il campo <code>regione_id</code> collega ogni provincia alla propria regione di appartenenza, garantendo coerenza nella gerarchia geografica.</p> </li> <li> <p>Campo <code>extra_country</code> (JSONB)   Permette di memorizzare metadati aggiuntivi, il cui contenuto pu\u00f2 variare a seconda dello stato:</p> </li> <li> <p>Italia: include <code>codice_istat</code> (identificativo ISTAT della provincia) e, se previsto, <code>provincia_accisa_id</code> per indicare la provincia di riferimento nel calcolo delle accise.</p> </li> <li>Altri paesi: pu\u00f2 ospitare informazioni analoghe (es. codici statistici locali, dati fiscali specifici, fasce territoriali esenzioni, ecc.).</li> </ul>"},{"location":"dbzero/config/manual/province/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Gerarchia geografica coerente   Integrando <code>config.province</code> con <code>config.regioni</code> e <code>config.stati</code>, si ottiene una struttura top-down di stati\u2192regioni\u2192province, fondamentale per reportistica territoriale e logistica.</p> </li> <li> <p>Supporto alle accise   Il campo <code>provincia_accisa_id</code> (presente in <code>extra_country</code> per l\u2019Italia) indica quale provincia funge da riferimento per le imposte sulle accise in un\u2019intera regione, semplificando i calcoli fiscali.</p> </li> <li> <p>Flessibilit\u00e0 e adattabilit\u00e0   Grazie a <code>extra_country</code> in formato JSONB, \u00e8 possibile estendere le informazioni di ogni provincia senza modificare lo schema fisico:</p> </li> <li> <p>Esempi: <code>tax_code_format</code>, <code>regional_zone</code>, <code>economic_indicator</code>, ecc.</p> </li> <li> <p>Audit e tracciabilit\u00e0   I trigger associati aggiornano automaticamente <code>data_update</code> e <code>user_update</code>, garantendo la storia completa delle modifiche dei record.</p> </li> </ul> <p>\ud83e\udde0 \"Un elenco strutturato di province, con metadati ISTAT e informazioni fiscali, alla base della gerarchia geografica e dei calcoli di accise in Zero ERP.\"</p>"},{"location":"dbzero/config/manual/regioni/","title":"Regioni","text":""},{"location":"dbzero/config/manual/regioni/#documentazione-concettuale-tabella-configregioni","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.regioni</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  </p> <ul> <li>config.stati </li> </ul> <p>Approfondimento Funzioni:   </p> <ul> <li>config.trgfn_regioni_ins_upd_clean_fields </li> </ul> <p>La tabella <code>config.regioni</code> censisce le regioni (italiane e di altri stati), fornendo informazioni amministrative e metadati utili per la gerarchia territoriale e la gestione delle accise.</p>"},{"location":"dbzero/config/manual/regioni/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Elenco delle regioni   Comprende tutte le regioni appartenenti a uno stato (es. in Italia: <code>Lazio</code>, <code>Campania</code>, <code>Sicilia</code>), con collegamento al rispettivo <code>stato_id</code> in <code>config.stati</code>.</p> </li> <li> <p>Campo <code>extra_country</code> (JSONB)   Contiene metadati aggiuntivi, adattabili a diverse nazionalit\u00e0:</p> </li> <li> <p>Italia: include <code>codice_istat</code> (codice ISTAT della regione) e il flag <code>is_mezzogiorno</code> (booleano) che indica se la regione \u00e8 considerata parte del Mezzogiorno ai fini del calcolo delle accise.</p> </li> <li> <p>Altri stati: pu\u00f2 ospitare attributi analoghi (es. codici statistici regionali, dati fiscali locali, zone economiche speciali, ecc.).</p> </li> <li> <p>Gerarchia territoriale   Collegata a <code>config.stati</code> attraverso <code>stato_id</code>, la tabella definisce la struttura geografica top-down (Stato \u2192 Regione \u2192 Provincia \u2192 Comune \u2192 Stradario).</p> </li> </ul>"},{"location":"dbzero/config/manual/regioni/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Coerenza geografica   Utilizzando <code>config.regioni</code> assieme a <code>config.province</code> e <code>config.comuni</code>, si ottiene una gerarchia completa dei territori, necessaria per reportistica, logistica e compliance fiscale.</p> </li> <li> <p>Flessibilit\u00e0 di configurazione   Grazie al campo <code>extra_country</code>, \u00e8 possibile personalizzare le informazioni di ogni regione senza alterare lo schema:</p> </li> <li> <p>In Italia, il flag <code>is_mezzogiorno</code> permette di includere agevolazioni o calcoli specifici per le regioni meridionali (ad esempio riduzioni sulle accise).</p> </li> <li> <p>Per altri stati si possono definire campi come <code>regional_tax_zone</code>, <code>climate_zone</code>, <code>economic_area</code>, ecc.</p> </li> <li> <p>Supporto per accise   Il valore <code>is_mezzogiorno</code> (true/false) nel JSONB aiuta il modulo accise a determinare se una regione riconosce agevolazioni o differenti aliquote fiscali legate alle aree del Mezzogiorno.</p> </li> <li> <p>Audit e tracciabilit\u00e0   I trigger associati aggiornano automaticamente i campi <code>data_update</code> e <code>user_update</code>, mantenendo uno storico dettagliato di tutte le modifiche dei record di regione.</p> </li> </ul> <p>\ud83e\udde0 \"Un elenco configurabile di regioni, arricchito da metadati specifici per il calcolo delle accise e la gerarchia geografica, alla base di un sistema territoriale completo in Zero ERP.\"</p>"},{"location":"dbzero/config/manual/sistema_codici/","title":"Sistema codici","text":""},{"location":"dbzero/config/manual/sistema_codici/#documentazione-concettuale-tabella-configsistema_codici","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.sistema_codici</code>","text":"<p>La tabella <code>config.sistema_codici</code> definisce le regole per la generazione automatica di codici alfanumerici, utilizzati in vari ambiti (ordini, clienti, fatture, ecc.).</p>"},{"location":"dbzero/config/manual/sistema_codici/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Definizione del formato codice   Consente di specificare per ogni tipo di codice (<code>codice_tipo</code>) un prefisso, un separatore e la lunghezza numerica totale, rendendo parametrica la struttura dei codici generati.</li> <li>Configurazione del meccanismo di sequenza   Tramite il flag <code>usa_sequenza</code> e l\u2019attributo <code>nome_sequenza</code>, si abilita o meno l\u2019utilizzo di una progressione automatica basata su sequenza di database, a garanzia di unicit\u00e0 e ordinariet\u00e0.</li> <li>Attivazione o disattivazione   Il campo <code>attivo</code> permette di abilitare o disabilitare temporaneamente il sistema di generazione per un tipo di codice, senza cancellare la configurazione.</li> </ul>"},{"location":"dbzero/config/manual/sistema_codici/#parametri-di-configurazione","title":"\ud83d\udd04 Parametri di Configurazione","text":"<ul> <li><code>prefisso</code>   Prefisso testuale anteposto alla parte numerica (es. <code>ORD-</code>, <code>CL-</code>).</li> <li><code>separatore</code>   Carattere o stringa utilizzata per separare il prefisso dalla parte numerica (es. <code>-</code>, <code>/</code>, <code>_</code>).</li> <li><code>lunghezza_numero</code>   Numero totale di cifre della parte numerica (es. <code>6</code> \u2192 da <code>000001</code> a <code>999999</code>). Se la sequenza supera lo spazio, si deve aggiornare il parametro.</li> <li><code>usa_sequenza</code>   Booleano che, se true, indica che il codice numerico \u00e8 generato tramite una sequenza di database; se false, occorre gestire manualmente l\u2019incremento.</li> <li><code>nome_sequenza</code>   Nome della sequenza di database (es. <code>seq_ordine</code>) da cui attingere il valore numerico.</li> </ul>"},{"location":"dbzero/config/manual/sistema_codici/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Uniformit\u00e0 dei codici   Garantisce che tutti i codici generati rispettino lo stesso pattern configurato, migliorando la leggibilit\u00e0 e la coerenza aziendale.</li> <li>Flessibilit\u00e0   La parametrizzazione di <code>prefisso</code>, <code>separatore</code> e <code>lunghezza_numero</code> consente di adattarsi a requisiti diversi (es. prefissi stagionali, codifiche diverse per aree di business) senza modifiche al codice.</li> <li>Affidabilit\u00e0 della sequenza   L\u2019uso di una sequenza di database (quando <code>usa_sequenza</code> \u00e8 true) evita collisioni e garantisce incrementi atomici, utili in contesti ad alto carico.</li> <li>Gestione dinamica   Il flag <code>attivo</code> permette di sospendere la generazione di un dato tipo di codice senza rimuoverne la configurazione, utile per archiviare vecchie configurazioni o per esigenze temporanee.</li> </ul> <p>\ud83e\udde0 \"Un sistema configurabile di generazione codici, che separa prefisso, numerazione e logica di sequenza, per codifiche coerenti e facilmente modificabili.\"</p>"},{"location":"dbzero/config/manual/stati/","title":"Stati","text":""},{"location":"dbzero/config/manual/stati/#documentazione-concettuale-tabella-configstati","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.stati</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - config.comuni - config.stradario  - config.stradario_generale - config.toponomastica </p> <p>La tabella <code>config.stati</code> censisce gli stati (o paesi), fornendo codici ufficiali e metadata utili per la gestione geografica e fiscale all\u2019interno di Zero ERP.</p>"},{"location":"dbzero/config/manual/stati/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Elenco degli stati/paesi   Contiene tutte le nazioni riconosciute, con sigle e codici ISO standard (ISO 3166-1 alpha-2 e alpha-3) e prefisso telefonico internazionale.</p> </li> <li> <p>Codici ufficiali</p> </li> <li> <p><code>sigla_stato</code>: sigla convenzionale (es. <code>IT</code>, <code>FR</code>, <code>DE</code>).</p> </li> <li> <p><code>codice_iso2</code> e <code>codice_iso3</code>: codici ISO 3166-1 per identificazioni univoche nei processi internazionali.</p> </li> <li> <p>Campo <code>extra_country</code> (JSONB)   Permette di memorizzare informazioni specifiche del paese, estendendo il record con metadati personalizzati.</p> </li> <li> <p>Italia: contiene <code>codice_istat</code> (utilizzato per statistiche Istat) e <code>codice_catastale</code> (necessario per la composizione del codice fiscale).</p> </li> <li> <p>Altri stati: pu\u00f2 ospitare attributi quali <code>regolamenti fiscali</code>, formati di tassazione, fasce climatiche, particolarit\u00e0 valutarie, ecc.</p> </li> <li> <p>Supporto per continent i   Il campo <code>continente</code> classifica ogni stato nel corrispondente continente (Europa, Asia, Africa, America, Oceania), utile per raggruppamenti e reportistica geografica.</p> </li> </ul>"},{"location":"dbzero/config/manual/stati/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Unicit\u00e0 e interoperabilit\u00e0   L\u2019uso di codici ISO2 e ISO3 standard assicura che tutti i riferimenti geografici siano consistenti e compatibili con sistemi esterni (es. servizi di geolocalizzazione, normative fiscali).</p> </li> <li> <p>Flessibilit\u00e0 tramite <code>extra_country</code>   Grazie al JSONB, ogni stato pu\u00f2 avere dettagli personalizzati:</p> </li> <li> <p>In Italia, il codice catastale \u00e8 essenziale per calcolare correttamente il codice fiscale dei residenti.</p> </li> <li> <p>Per altri paesi potrebbe esserci un campo <code>vat_format</code> (formato delle Partite IVA), <code>tax_rate</code> (aliquota fiscale standard), <code>address_format</code> (formato degli indirizzi), ecc.</p> </li> <li> <p>Strutturazione gerarchica dei dati geografici   La tabella <code>config.stati</code> \u00e8 alla base della gerarchia geografica:</p> </li> <li> <p>Viene utilizzata da <code>config.toponomastica</code> per collegarsi allo stato di appartenenza della toponomastica.</p> </li> <li> <p>Indirettamente, serve per <code>config.comuni</code>, <code>config.stradario_generale</code> e <code>config.stradario</code>, garantendo coerenza top-down nella gestione degli indirizzi.</p> </li> <li> <p>Audit e tracciabilit\u00e0   Trigger di auditing aggiornano i campi <code>data_update</code> e <code>user_update</code> automaticamente, mantenendo lo storico delle modifiche ai dati di definitizione dello stato.</p> </li> </ul> <p>\ud83e\udde0 \"Un catalogo centralizzato degli stati con codici ISO, metadata fiscali e attributi personalizzati, essenziale per la gestione geografica e fiscale globale in Zero ERP.\"</p>"},{"location":"dbzero/config/manual/stradario/","title":"Stradario","text":""},{"location":"dbzero/config/manual/stradario/#documentazione-concettuale-tabella-configstradario","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.stradario</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  </p> <ul> <li>config.comuni </li> <li>config.stradario_generale </li> <li>config.codici_postali </li> <li>storico.stradario</li> </ul> <p>Approfondimento funzioni:    </p> <ul> <li>script.trgfn_upd_dlt_storico_generic </li> </ul> <p>La tabella <code>config.stradario</code> definisce la mappa delle vie e strade di ciascun comune, completando il processo di indirizzamento con informazioni di localizzazione e dettagli aggiuntivi.</p>"},{"location":"dbzero/config/manual/stradario/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Mappa comunale delle vie   Contiene l\u2019elenco delle strade e vie di ogni comune, con riferimento al prefisso e al nome forniti da <code>config.stradario_generale</code>.</li> <li>Geolocalizzazione   Il campo <code>geoloc</code> (geometry Point, SRID 4326) consente di associare ogni via a coordinate geografiche per mappe e ricerche spaziali.</li> <li>Associazione CAP   Collega ogni via a un codice postale obbligatorio (<code>codice_postale_id</code>), gestito nella tabella <code>config.codici_postali</code>.</li> <li>Informazioni estese   Il campo <code>extra_info</code> (JSONB) permette di memorizzare dati aggiuntivi, come eventuali frazioni, indicazioni o note specifiche.</li> <li>Storicizzazione   Il campo <code>storicizza</code> se true attiva il trigger per la storicizzazione delle informazioni sulla tabella <code>storico.stradario</code>. Il front-end dovr\u00e0 sempre impostare a true il valore, solo per funzioni administrator si potr\u00e0 non gestire a true.</li> </ul>"},{"location":"dbzero/config/manual/stradario/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>config.comuni</code>   Il campo <code>comune_id</code> identifica il comune di appartenenza, instaurando la relazione tra strade e territorio.</li> <li><code>config.stradario_generale</code>   Il campo <code>via_id</code> fa riferimento al catalogo neutro di prefissi e nomi delle vie.</li> <li><code>config.codici_postali</code> <code>codice_postale_id</code> impone il CAP di competenza per ciascuna via.</li> <li><code>storico.stradario</code> <code>storico</code> True attiva il trigger per il salvataggio delle informazioni.</li> </ul>"},{"location":"dbzero/config/manual/stradario/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Copertura completa del territorio   Permette di mappare ogni strada all\u2019interno del comune, gestendo situazioni di vie duplicate con CAP diversi.</li> <li>Supporto GIS   Grazie al campo di geometria, rende disponibili servizi di geocoding, routing e rappresentazione cartografica.</li> <li>Flessibilit\u00e0 di estensione   Il JSONB <code>extra_info</code> consente di aggiungere attributi specifici (es. frazioni, note storiche) senza modificare lo schema.</li> <li>Auditing e storicizzazione   Trigger automatici mantengono traccia di modifiche e cancellazioni, garantendo consistenza storica dei dati.</li> </ul> <p>\ud83e\udde0 \"Una vista dettagliata e georeferenziata delle strade comunali, con CAP obbligatorio e informazioni flessibili per ogni via.\"</p>"},{"location":"dbzero/config/manual/stradario_generale/","title":"Stradario generale","text":""},{"location":"dbzero/config/manual/stradario_generale/#documentazione-concettuale-tabella-configstradario_generale","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.stradario_generale</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - config.stradario  - config.toponomastica </p> <p>La tabella <code>config.stradario_generale</code> elenca i nomi delle vie, strade e piazze, associandoli ai tipi di toponimo definiti in <code>config.toponomastica</code>. Agisce come base indipendente dalla localizzazione geografica: per ottenere l\u2019indirizzo completo e posizionarlo su un comune specifico, si collega alla tabella <code>config.stradario</code>.</p>"},{"location":"dbzero/config/manual/stradario_generale/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Composizione del toponimo   Unisce il prefisso toponomastico (es. <code>VIA</code>, <code>PIAZZA</code>) al nome specifico (es. <code>Garibaldi</code>, <code>Roma</code>) per formare la descrizione completa.</li> <li>Indipendenza geografica   Mantiene un catalogo centralizzato dei nomi senza riferimenti a comuni o aree, favorendo il riuso e la coerenza.</li> <li>Integrazione con stradario locale   Collegata a <code>config.stradario</code>, che associa ogni record di <code>stradario_generale</code> al comune di appartenenza, consentendo la geolocalizzazione e l\u2019uso nei processi di indirizzamento.</li> </ul>"},{"location":"dbzero/config/manual/stradario_generale/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Standardizzazione dei nomi   Assicura che tutte le vie e piazze abbiano una descrizione uniforme, evitando varianti e duplicazioni.</li> <li>Flessibilit\u00e0 di utilizzo   Essendo indipendente dal territorio, lo stesso nome pu\u00f2 essere utilizzato in comuni diversi, collegando poi ciascuna occorrenza a un\u2019area specifica.</li> <li>Manutenzione semplificata   Aggiornamenti e aggiunte di nuovi nomi avvengono in un unico luogo, propagandosi a tutti i dataset di indirizzi.</li> </ul> <p>\ud83e\udde0 \"Un catalogo neutro di nomi di vie e piazze, pronta base per costruire indirizzi completi e localizzati attraverso l\u2019associazione con i comuni.\"</p>"},{"location":"dbzero/config/manual/tipi_contatti/","title":"Tipi contatti","text":""},{"location":"dbzero/config/manual/tipi_contatti/#documentazione-concettuale-tabella-configtipi_contatti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.tipi_contatti</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - anagrafiche.contatti </p> <p>Approfondimenti funzioni:  - script.trgfn_lock_columns  - script.trgfn_upd_audit_data_user_generic </p>"},{"location":"dbzero/config/manual/tipi_contatti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>config.tipi_contatti</code> definisce le categorie di contatto utilizzabili nell\u2019anagrafica dei soggetti, fornendo un codice interno non modificabile e una descrizione estesa.</p>"},{"location":"dbzero/config/manual/tipi_contatti/#vincoli-e-caratteristiche-chiave","title":"\ud83d\udd0d Vincoli e Caratteristiche Chiave","text":"<ul> <li>Codice interno (<code>cod_int_tipo_contatto</code>): non modificabile, garantisce stabilit\u00e0 dei riferimenti.</li> <li>Descrizione obbligatoria: la <code>descrizione</code> non pu\u00f2 essere vuota.</li> <li>Unicit\u00e0: ogni codice interno deve essere unico.</li> </ul>"},{"location":"dbzero/config/manual/tipi_contatti/#esempi-di-tipologie","title":"\ud83d\udccb Esempi di Tipologie","text":"<p>Alcuni esempi di tipologie di contatto configurabili:</p> <ul> <li> <p>Ruoli professionali:</p> </li> <li> <p><code>Amministrazione</code></p> </li> <li><code>Tecnico</code></li> <li><code>Legale</code></li> <li><code>Commerciale</code></li> <li> <p>Altri tipi:</p> </li> <li> <p><code>Assistente</code></p> </li> <li><code>Responsabile Clienti</code></li> <li><code>Supporto Tecnico</code></li> </ul>"},{"location":"dbzero/config/manual/tipi_contatti/#relazioni-e-indici","title":"\ud83d\udd17 Relazioni e Indici","text":"<ul> <li> <p>FK in ingresso:</p> </li> <li> <p><code>anagrafiche.contatti.tipo_contatto_id</code> \u2192 <code>config.tipi_contatti(id)</code></p> </li> <li> <p>Indici:</p> </li> <li> <p>Unico su <code>cod_int_tipo_contatto</code></p> </li> </ul>"},{"location":"dbzero/config/manual/tipi_contatti/#trigger-associati","title":"\u2699\ufe0f Trigger Associati","text":"<ol> <li> <p><code>trg_tipi_contatti_upd_lock_cod_interno</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code> su <code>cod_int_tipo_contatto</code></p> </li> <li> <p>Cosa: blocca la modifica del codice interno, utilizzando <code>script.trgfn_lock_columns</code> con error code <code>CODICE_NON_MODIFICABILE</code>.</p> </li> <li> <p><code>trg_upd_tipi_contatti_audit_data_user</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code></p> </li> <li>Cosa: aggiorna i campi di audit <code>data_update</code> e <code>user_update</code> automaticamente.</li> </ol>"},{"location":"dbzero/config/manual/tipi_contatti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Stabilit\u00e0 dei riferimenti: codice interno immutabile garantisce coerenza in interfacce e logica.</li> <li>Integrit\u00e0 dei dati: constraint e trigger impediscono codici duplicati o vuoti.</li> <li>Audit completo: tracciamento automatico delle modifiche.</li> <li>Centralizzazione: un\u2019unica fonte per definire tutte le tipologie di contatto.</li> </ul> <p>\ud83e\udde0 \u201cUna tabella di configurazione per i tipi di contatto assicura coerenza e stabilit\u00e0 nei riferimenti applicativi e semplifica la manutenzione delle logiche di contatto.\u201d</p>"},{"location":"dbzero/config/manual/tipi_indirizzi/","title":"Tipi indirizzi","text":""},{"location":"dbzero/config/manual/tipi_indirizzi/#tabella-configtipi_indirizzi","title":"\ud83d\udcda Tabella <code>config.tipi_indirizzi</code>","text":""},{"location":"dbzero/config/manual/tipi_indirizzi/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>config.tipi_indirizzi</code> centralizza i tipi di indirizzo utilizzabili in Zero ERP, come ad esempio Residenza, Domicilio Fiscale, Sede Legale, Sede Operativa, Corrispondenza Postale, Indirizzo di Fornitura, ecc. </p>"},{"location":"dbzero/config/manual/tipi_indirizzi/#vincoli","title":"\ud83d\udd12 Vincoli","text":"<ul> <li>PRIMARY KEY: <code>pk_tipi_indirizzi</code> su <code>id</code></li> <li>UNIQUE: <code>uq_tipi_indirizzi_cod_int_tipo_indirizzo</code> su <code>cod_int_tipo_indirizzo</code></li> <li>CHECK: <code>chk_cod_int_tipo_indirizzo</code> per garantire che il codice interno non sia vuoto</li> </ul>"},{"location":"dbzero/config/manual/tipi_indirizzi/#trigger","title":"\ud83d\udea8 Trigger","text":"<ul> <li><code>trg_tipi_indirizzi_upd_lock_cod_interno</code> (BEFORE UPDATE): blocca la modifica di <code>cod_int_tipo_indirizzo</code> tramite <code>script.trgfn_lock_columns</code>.</li> <li><code>trg_upd_tipi_indirizzi_audit_data_user</code> (BEFORE UPDATE): aggiorna <code>data_update</code> e <code>user_update</code> con <code>script.trgfn_upd_audit_data_user_generic()</code>.</li> </ul>"},{"location":"dbzero/config/manual/tipi_indirizzi/#esempi-di-tipi-indirizzo","title":"\ud83d\udca1 Esempi di Tipi Indirizzo","text":"<p>I codici interni attualmente definiti in <code>config.tipi_indirizzi</code> sono:</p> Codice Interno Descrizione <code>RES</code> Residenza <code>DOMFISC</code> Domicilio Fiscale <code>SEDELEG</code> Sede Legale <code>SEDEOP</code> Sede Operativa <code>POSTA</code> Corrispondenza Postale <code>FORNITURA</code> Indirizzo Fornitura <p>\u2139\ufe0f Il codice interno (<code>cod_int_tipo_indirizzo</code>) \u00e8 utilizzato in logica applicativa e non pu\u00f2 essere modificato una volta inserito.</p>"},{"location":"dbzero/config/manual/tipi_indirizzi/#uso-e-casi-doro","title":"\u2699\ufe0f Uso e Casi d\u2019Oro","text":"<ul> <li>Assegnazione tipo indirizzo: viene referenziato in tutte le tabelle che gestiscono indirizzi (es. <code>anagrafiche.indirizzi</code>) per identificare il contesto d\u2019uso.</li> <li>Filtri e reportistica: consente di raggruppare gli indirizzi per tipo nelle interfacce utente e nei report.</li> <li>Stradario &amp; Anagrafiche: si integra con la struttura <code>anagrafiche.indirizzi_dettaglio</code> e la master table <code>config.stradario</code>, collegando i tipi di indirizzi alla georeferenziazione completa (via, comune, provincia, regione) e ai soggetti in anagrafica, per avere una vista centralizzata di tutti gli indirizzi.</li> <li>Estendibilit\u00e0: per aggiungere nuovi tipi, basta inserire una nuova riga in questa tabella con il codice interno e la descrizione desiderati.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare i tipi di indirizzo in <code>config.tipi_indirizzi</code> garantisce coerenza, facilit\u00e0 di estensione e chiarezza nell\u2019assegnazione e gestione degli indirizzi in Zero ERP.\u201d</p>"},{"location":"dbzero/config/manual/tipi_ruoli/","title":"Tipi ruoli","text":""},{"location":"dbzero/config/manual/tipi_ruoli/#documentazione-concettuale-tabella-configtipi_ruoli","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.tipi_ruoli</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - anagrafiche.soggetti_ruoli </p> <p>La tabella <code>config.tipi_ruoli</code> serve a definire i ruoli che un soggetto (individuo o societ\u00e0) pu\u00f2 assumere all'interno del software Zero ERP. In questo modo la tabella <code>soggetti</code> rimane generica e memorizza solo i dati anagrafici di base, mentre <code>tipi_ruoli</code> specifica in quali ruoli (cliente, fornitore, gestore, ecc.) ciascun soggetto si trova, a seconda delle esigenze aziendali.</p>"},{"location":"dbzero/config/manual/tipi_ruoli/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Distinzione dei ruoli: consente di assegnare a ogni record della tabella <code>soggetti</code> uno o pi\u00f9 ruoli funzionali (es. cliente, fornitore, gestore).</li> <li>Flessibilit\u00e0 operativa: un soggetto pu\u00f2 assumere ruoli differenti in contesti diversi (ad esempio un fornitore che pu\u00f2 diventare cliente in altre transazioni).</li> <li>Ruolo \"gestore\": l\u2019azienda stessa che utilizza il software viene registrata in <code>soggetti</code> e associata al ruolo interno \u201cgestore\u201d per identificare i dati dell\u2019utente principale o amministratore del sistema.</li> </ul>"},{"location":"dbzero/config/manual/tipi_ruoli/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>anagrafica.soggetti_ruoli</code></p> </li> <li> <p>Un soggetto pu\u00f2 avere pi\u00f9 righe in <code>config.tipi_ruoli</code>, ad esempio:</p> <ul> <li><code>soggetto_id = 5</code>, <code>cd_int_ruolo = \"CLIENTE\"</code></li> <li><code>soggetto_id = 5</code>, <code>cd_int_ruolo = \"FORNITORE\"</code></li> <li>Constraint di unicit\u00e0</li> </ul> </li> <li> <p>Il campo <code>cd_int_ruolo</code> \u00e8 un codice interno univoco (<code>UNIQUE</code>) per ogni riga di <code>tipi_ruoli</code>, utilizzato come riferimento stabile nelle logiche applicative.</p> </li> <li>Il campo <code>cod_ruolo</code> identifica il ruolo in modo testuale/abanndonabile (es. \"CLIE\" per cliente, \"FORN\" per fornitore), anch\u2019esso unico.</li> </ul>"},{"location":"dbzero/config/manual/tipi_ruoli/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Invarianza del codice interno   Grazie al trigger di lock, il <code>cd_int_ruolo</code> rimane stabile, semplificando tutte le logiche applicative che fanno riferimento al codice ruolo (es. permessi, reportistica, workflow).</p> </li> <li> <p>Audit automatico   Il trigger di audit garantisce la tracciabilit\u00e0 delle modifiche, facilitando la diagnostica storica e la sicurezza: ogni aggiornamento registra data e utente di modifica.</p> </li> <li> <p>Supporto multi-ruolo   Un soggetto pu\u00f2 ricoprire pi\u00f9 ruoli contemporaneamente o nel tempo: ad esempio un partner commerciale che \u00e8 sia fornitore che cliente, senza dover duplicare i dati anagrafici di base.</p> </li> <li> <p>Estendibilit\u00e0 futura   Se in futuro si volessero introdurre ruoli nuovi o specifici (es. \u201cpartner logistico\u201d, \u201crappresentante\u201d), \u00e8 sufficiente aggiungere una nuova riga in <code>tipi_ruoli</code>, senza modificare lo schema della tabella <code>soggetti</code>.</p> </li> </ul> <p>\ud83e\udde0 \"Una tabella leggera e versatile per gestire, senza duplicazioni, i ruoli operativi dei soggetti nel sistema Zero ERP, garantendo integrit\u00e0, audit e flessibilit\u00e0.\"</p>"},{"location":"dbzero/config/manual/tipi_soggetto/","title":"Tipi soggetto","text":"<p>\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.tipi_soggetto</code></p> <p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - config.tipi_soggetto_dettaglio  - Impatto su:  <code>anagrafiche.soggetti</code> (colonna <code>tipo_soggetto</code>)</p>"},{"location":"dbzero/config/manual/tipi_soggetto/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Definire le macro-tipologie di soggetto (es. Persona Fisica, Persona Giuridica, Ente, ecc.)</li> <li>Separare la classificazione di alto livello dalla gestione dettagliata dei tipi soggetto (internazionale) tramite la tabella di dettaglio.</li> </ul>"},{"location":"dbzero/config/manual/tipi_soggetto/#problematiche-affrontate","title":"\ud83d\udd0d Problematiche Affrontate","text":"<ol> <li>Verifica CF/P.IVA: alcuni controlli formali (codice fiscale, partita IVA) dipendono dal tipo di soggetto. Centralizzare le macro\u2011tipologie consente di applicare regole diverse a seconda del contesto.</li> <li>Internazionalizzazione: supportare soggetti di paesi diversi richiede descrizioni e regole specifiche. La distinzione macro/dettaglio migliora l\u2019estendibilit\u00e0.</li> <li>Refactoring di <code>anagrafiche.soggetti</code>: la colonna <code>tipo_soggetto</code> passa da valore fisso (<code>F</code>, <code>G</code>, <code>X</code>) a chiave esterna verso <code>config.tipi_soggetto_dettaglio</code>, rendendo il modello pi\u00f9 flessibile.</li> </ol>"},{"location":"dbzero/config/manual/tipi_soggetto/#vincoli-e-audit","title":"\ud83d\udd12 Vincoli e Audit","text":"<ul> <li>PK: <code>tipi_soggetto_pkey</code> su <code>id</code> (VARCHAR(10)).</li> <li>Trigger di auditing: <code>trg_upd_overrides_audit_data_user</code> aggiorna automaticamente i campi <code>data_update</code> e <code>user_update</code> tramite <code>script.trgfn_upd_audit_data_user_generic()</code>.</li> </ul>"},{"location":"dbzero/config/manual/tipi_soggetto/#meccanismo-di-integrazione","title":"\u2699\ufe0f Meccanismo di Integrazione","text":"<ol> <li>Popolamento    Inserire righe con codici standardizzati, es.:</li> </ol> <p><pre><code>INSERT INTO config.tipi_soggetto(id, descrizione)\nVALUES\n  ('PF', 'Persona Fisica'),\n  ('PG', 'Persona Giuridica'),\n  ('EN', 'Ente Pubblico');\n</code></pre> 3. Estensione    La tabella <code>config.tipi_soggetto_dettaglio</code> conterr\u00e0 i sotto-tipi o attributi specifici (nazione, categoria fiscale, ecc.).</p>"},{"location":"dbzero/config/manual/tipi_soggetto/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Modularit\u00e0: separazione chiara tra tipologie di alto livello e dettagli, semplificando manutenzione e versioning.</li> <li>Estendibilit\u00e0 internazionale: aggiungere nuovi paesi o regole fiscali senza alterare la tabella principale dei soggetti.</li> <li>Coerenza dei controlli: applicare regole di validazione CF/P.IVA in base al tipo_soggetto_dettaglio associato, migliorando l\u2019accuratezza.</li> </ul> <p>\ud83e\udde0 \u201cDistinguere le macro-tipologie dai dettagli consente un\u2019architettura pi\u00f9 flessibile, pronta ad adattarsi a normative internazionali e a regole di validazione diverse.\u201d</p>"},{"location":"dbzero/config/manual/tipi_soggetto_dettaglio/","title":"\ud83d\udcda Tabella <code>config.tipi_soggetto_dettaglio</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - config.tipi_soggetto  - config.stati  - Impatto su:   <code>anagrafiche.soggetti</code> (colonna <code>tipo_soggetto_dettaglio_id</code>) </p> <p>La tabella <code>config.tipi_soggetto_dettaglio</code> definisce le tipologie dettagliate di soggetto (persone fisiche, giuridiche, enti, ecc.) in base al paese di appartenenza, specificando i formati validi per Codice Fiscale e Partita IVA.</p>"},{"location":"dbzero/config/manual/tipi_soggetto_dettaglio/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Gestione Internazionale   Permette di adattare la validazione di CF/P.IVA alle regole di ciascuno Stato (<code>stato_iso2</code>).</li> <li>Estendibilit\u00e0   Il collegamento a <code>config.tipi_soggetto</code> garantisce macro-categorie estensibili (Fisico, Giuridico, Ente, \u2026).</li> <li>Controllo Applicativo   Centralizza il formato di CF/P.IVA, evitando logiche duplicate nel backend.</li> </ul>"},{"location":"dbzero/config/manual/tipi_soggetto_dettaglio/#collegamenti","title":"\ud83d\udd0d Collegamenti","text":"<ul> <li>FK \u2192 <code>config.tipi_soggetto(tipo_soggetto_id)</code>   Definisce la macro-tipologia.</li> <li>FK \u2192 <code>config.stati(codice_iso2)</code>   Specifica il Paese di riferimento per il formato.</li> <li>Estensione su <code>anagrafiche.soggetti.tipo_soggetto_dettaglio_id</code>   Associa ogni soggetto al dettaglio corretto, eliminata la colonna <code>tipo_soggetto</code>, \u00e8 stato aggiunto in <code>anagrafiche.soggetti</code> la colonna <code>tipo_soggetto_dettaglio_id</code>.</li> </ul>"},{"location":"dbzero/config/manual/tipi_soggetto_dettaglio/#esempi-di-popolamento-iniziale","title":"\ud83d\udcbe Esempi di Popolamento Iniziale","text":"<p>Questi record sono stati inseriti tramite YAML in <code>migrations/\u2026/20250713-23-insert-tipi-soggetto-dettaglio</code>:</p> <pre><code>- insert:\n    schemaName: config\n    tableName: tipi_soggetto_dettaglio\n    columns:\n      - column: { name: tipo_soggetto_id, value: \"PF\" }\n      - column: { name: stato_iso2, value: \"IT\" }\n      - column: { name: cod_int_tipo_soggetto, value: \"PR\" }\n      - column: { name: descrizione_locale, value: \"Persona Fisica - Privato\" }\n      - column: { name: formato_cf, value: \"ALFANUM_16\" }\n      - column: { name: formato_piva, value: \"NON_APPLICABILE\" }\n\n- insert:\n    schemaName: config\n    tableName: tipi_soggetto_dettaglio\n    columns:\n      - column: { name: tipo_soggetto_id, value: \"PF\" }\n      - column: { name: stato_iso2, value: \"IT\" }\n      - column: { name: cod_int_tipo_soggetto, value: \"DI\" }\n      - column: { name: descrizione_locale, value: \"Persona Fisica - Ditta Individuale\" }\n      - column: { name: formato_cf, value: \"ALFANUM_16\" }\n      - column: { name: formato_piva, value: \"NUM_11\" }\n\n- insert:\n    schemaName: config\n    tableName: tipi_soggetto_dettaglio\n    columns:\n      - column: { name: tipo_soggetto_id, value: \"PG\" }\n      - column: { name: stato_iso2, value: \"IT\" }\n      - column: { name: cod_int_tipo_soggetto, value: \"SC\" }\n      - column: { name: descrizione_locale, value: \"Societ\u00e0 di Capitali\" }\n      - column: { name: formato_cf, value: \"NUM_11\" }\n      - column: { name: formato_piva, value: \"NUM_11\" }\n\n- insert:\n    schemaName: config\n    tableName: tipi_soggetto_dettaglio\n    columns:\n      - column: { name: tipo_soggetto_id, value: \"PG\" }\n      - column: { name: stato_iso2, value: \"IT\" }\n      - column: { name: cod_int_tipo_soggetto, value: \"SP\" }\n      - column: { name: descrizione_locale, value: \"Societ\u00e0 di Persone\" }\n      - column: { name: formato_cf, value: \"NUM_11\" }\n      - column: { name: formato_piva, value: \"NUM_11\" }\n\n- insert:\n    schemaName: config\n    tableName: tipi_soggetto_dettaglio\n    columns:\n      - column: { name: tipo_soggetto_id, value: \"ENC\" }\n      - column: { name: stato_iso2, value: \"IT\" }\n      - column: { name: cod_int_tipo_soggetto, value: \"ENC\" }\n      - column: { name: descrizione_locale, value: \"Ente non Commerciale\" }\n      - column: { name: formato_cf, value: \"NUM_11\" }\n      - column: { name: formato_piva, value: \"NUM_11\" }\n</code></pre>"},{"location":"dbzero/config/manual/tipi_soggetto_dettaglio/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Evita hard\u2011coding dei formati di CF/P.IVA nel codice applicativo.</li> <li>Facilita l\u2019aggiunta di nuovi paesi o categorie nominative.</li> <li>Garantisce coerenza tra DB e validazione backend.</li> </ul>"},{"location":"dbzero/config/manual/titoli_cortesia/","title":"Titoli cortesia","text":""},{"location":"dbzero/config/manual/titoli_cortesia/#documentazione-concettuale-tabella-configtitoli_cortesia","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.titoli_cortesia</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:   - anagrafiche.soggetti   - anagrafiche.contatti   - config.tipi_contatti </p> <p>La tabella <code>config.titoli_cortesia</code> raccoglie i titoli di cortesia (es. \u201cSignore\u201d, \u201cDottore\u201d, \u201cIngegnere\u201d) utilizzabili nei contatti e nelle anagrafiche, separando la forma estesa dalla sua abbreviazione.</p>"},{"location":"dbzero/config/manual/titoli_cortesia/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Uniformare i titoli   Gestire centralmente i titoli di cortesia per tutti i soggetti/contatti, evitando discrepanze tra form, report e stampe.</p> </li> <li> <p>Forma estesa vs. abbreviazione </p> </li> <li><code>descrizione</code>: titolo completo (es. \u201cDottoressa\u201d)  </li> <li><code>descrizione_breve</code>: forma abbreviata (es. \u201cDott.ssa\u201d)  </li> </ul>"},{"location":"dbzero/config/manual/titoli_cortesia/#esempi-di-valori","title":"\ud83d\udd0d Esempi di valori","text":"descrizione descrizione_breve Signore Sig. Signora Sig.ra Dottore Dott. Dottoressa Dott.ssa Ingegnere Ing. Avvocato Avv. Presidente Pres."},{"location":"dbzero/config/manual/titoli_cortesia/#vincoli-e-trigger","title":"\ud83d\udd12 Vincoli e trigger","text":"<ul> <li><code>PK (id)</code>: identificatore univoco del titolo.  </li> <li><code>UNIQUE(descrizione)</code>: garantisce che non esistano duplicati di titolo esteso.  </li> <li>Trigger di audit </li> <li><code>trg_upd_titoli_cortesia_audit_data_user</code>     Aggiorna automaticamente <code>data_update</code> e <code>user_update</code> ad ogni modifica.</li> </ul>"},{"location":"dbzero/config/manual/titoli_cortesia/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Coerenza terminologica   Un unico elenco di titoli di cortesia evita errori di battitura e differenze tra le varie parti dell\u2019applicazione.  </li> <li>Manutenzione semplificata   Nuovi titoli o modifiche si gestiscono in un solo punto.  </li> <li>Flessibilit\u00e0 di presentazione   La doppia descrizione consente di scegliere la forma pi\u00f9 adatta in base al contesto (spazi ridotti vs. documentazione dettagliata).</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare i titoli di cortesia migliora uniformit\u00e0, leggibilit\u00e0 e facilit\u00e0 di gestione dei dati anagrafici.\u201d </p>"},{"location":"dbzero/config/manual/toponomastica/","title":"Toponomastica","text":""},{"location":"dbzero/config/manual/toponomastica/#documentazione-concettuale-tabella-configtoponomastica","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.toponomastica</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - config.stati  - config.comuni  - config.stradario  - config.stradario_generale </p> <p>La tabella <code>config.toponomastica</code> raccoglie i tipi di toponimi utilizzati per la composizione degli indirizzi: \u00e8 la base per lo <code>stradario_generale</code>, dove ogni record di toponimo si combina con un nome specifico per generare l\u2019indirizzo completo.</p>"},{"location":"dbzero/config/manual/toponomastica/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Censimento dei toponimi   Elenco delle tipologie di vie, strade, piazze, viali, ecc., utilizzate come prefisso negli indirizzi.</li> <li>Fondamentale per lo stradario   Fornisce i prefissi standardizzati che, uniti al nome (es. \"Garibaldi\", \"Roma\"), generano i record di <code>stradario_generale</code>.</li> <li>Integrazione con lo stato geografico   Collegato alla tabella <code>config.stati</code> per associare ogni tipo di toponimo all\u2019area amministrativa di riferimento.</li> </ul>"},{"location":"dbzero/config/manual/toponomastica/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Standardizzazione degli indirizzi   Assicura coerenza nella definizione dei prefissi toponomastici, evitando errori di inserimento.</li> <li>Performance nelle ricerche   Indice su <code>stato_id</code> permette filtraggi rapidi per area geografica.</li> <li>Audit e tracciabilit\u00e0   Campi e trigger di audit garantiscono la storia delle modifiche, supportando controlli e rollback in caso di necessit\u00e0.</li> </ul> <p>\ud83e\udde0 \"Un elenco strutturato e referenziato dei prefissi toponomastici, alla base di un sistema di indirizzamento preciso e coerente.\"</p>"},{"location":"dbzero/config/manual/trg_stradario_upd_dlt_storico_stradario/","title":"Trg stradario upd dlt storico stradario","text":""},{"location":"dbzero/config/manual/trg_stradario_upd_dlt_storico_stradario/#documentazione-concettuale-trigger-trg_stradario_upd_dlt_storico_stradario","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger <code>trg_stradario_upd_dlt_storico_stradario</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:  - config.stradario  - storico.stradario </p> <p>Approfondimenti funzioni:  - config.trgfn_stradario_upd_dlt_storico_stradario </p> <p>Il trigger <code>trg_stradario_upd_dlt_storico_stradario</code> collega la logica di storicizzazione definita in <code>config.trgfn_stradario_upd_dlt_storico_stradario()</code> agli eventi di modifica e cancellazione dei record nella tabella <code>config.stradario</code>.</p>"},{"location":"dbzero/config/manual/trg_stradario_upd_dlt_storico_stradario/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Attivare automaticamente la funzione di versioning/storicizzazione su ogni DELETE o UPDATE di <code>config.stradario</code>.</li> <li>Garantire che la logica di storicizzazione sia eseguita in ogni operazione rilevante, senza interventi manuali.</li> </ul>"},{"location":"dbzero/config/manual/trg_stradario_upd_dlt_storico_stradario/#contesto-e-definizione","title":"\ud83d\udd0d Contesto e Definizione","text":"<ul> <li>Oggetto del trigger: tabella <code>config.stradario</code>.</li> <li>Eventi: <code>BEFORE UPDATE OR DELETE</code>.</li> <li>Ambito: <code>FOR EACH ROW</code> (per ogni riga modificata/cancellata).</li> </ul>"},{"location":"dbzero/config/manual/trg_stradario_upd_dlt_storico_stradario/#funzionamento-dettagliato","title":"\u2699\ufe0f Funzionamento Dettagliato","text":"<ol> <li>Prima dell'operazione (<code>BEFORE</code>): il trigger intercetta ogni <code>UPDATE</code> o <code>DELETE</code>.</li> <li> <p>Chiamata della funzione: invoca <code>config.trgfn_stradario_upd_dlt_storico_stradario()</code>, che:</p> </li> <li> <p>Gestisce la chiusura di snapshot aperti o la creazione di nuovi record storici in <code>storico.stradario</code>.</p> </li> <li>Inserisce uno snapshot del nuovo stato (<code>valid_from</code>) dopo un <code>UPDATE</code> con flag <code>storicizza</code>.</li> <li>Pulisce il flag <code>storicizza</code> (impostandolo a <code>false</code>).</li> <li>Restituisce <code>NEW</code> o <code>OLD</code> a seconda del caso.</li> <li>Esecuzione dell'UPDATE/DELETE: una volta restituito il record, l\u2019operazione originale prosegue con il record modificato o eliminato.</li> </ol>"},{"location":"dbzero/config/manual/trg_stradario_upd_dlt_storico_stradario/#valore-di-ritorno-e-impatti","title":"\ud83d\udd12 Valore di Ritorno e Impatti","text":"<ul> <li>Non modifica il flusso delle transazioni oltre l\u2019aggiunta degli snapshot storici.</li> <li>Mantiene integrit\u00e0 e consistenza dei dati di <code>config.stradario</code>.</li> </ul>"},{"location":"dbzero/config/manual/trg_stradario_upd_dlt_storico_stradario/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Attivazione trasparente: nessuna chiamata manuale alla funzione di storicizzazione.</li> <li>Coesione: la logica di versioning rimane centralizzata nella funzione, il trigger ne definisce solo il contesto di esecuzione.</li> <li>Estendibilit\u00e0: per applicare la stessa logica ad altre tabelle, basta creare trigger analoghi.</li> </ul> <p>\ud83e\udde0 \u201cIl trigger rappresenta il punto di connessione tra gli eventi di database e la logica di storicizzazione, automatizzando il versioning dei dati.\u201d</p>"},{"location":"dbzero/config/manual/trgfn_iva_ins_upd_check_conti_iva/","title":"Trgfn iva ins upd check conti iva","text":""},{"location":"dbzero/config/manual/trgfn_iva_ins_upd_check_conti_iva/#documentazione-concettuale-function-configtrgfn_iva_ins_upd_check_conti_iva","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Function <code>config.trgfn_iva_ins_upd_check_conti_iva</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.iva  - config.conti_contabili </p> <p>La trigger function <code>trgfn_iva_ins_upd_check_conti_iva</code> assicura che i conti contabili associati ai codici IVA rispettino le regole aziendali: il conto di acquisto (<code>conto_iva_acquisti_id</code>) deve essere di tipo acquisto, mentre il conto di vendita (<code>conto_iva_vendita_id</code>) deve essere di tipo vendita.</p>"},{"location":"dbzero/config/manual/trgfn_iva_ins_upd_check_conti_iva/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Validazione contestuale: eseguire controlli sui campi contabili prima di inserire o aggiornare un record in <code>config.iva</code>.</li> <li>Coerenza dei dati: evitare associazioni errate tra codici IVA e conti di tipo sbagliato.</li> </ul>"},{"location":"dbzero/config/manual/trgfn_iva_ins_upd_check_conti_iva/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>Nessun parametro esterno: opera sui record <code>NEW</code> del trigger.</li> <li>Trigger associato:</li> </ul> <p><pre><code>CREATE OR REPLACE TRIGGER trg_iva_ins_upd_check_conti_iva\n  BEFORE INSERT OR UPDATE ON config.iva\n  FOR EACH ROW\n  EXECUTE FUNCTION config.trgfn_iva_ins_upd_check_conti_iva();\n</code></pre> * Campi letti:</p> <ul> <li><code>NEW.conto_iva_acquisti_id</code></li> <li><code>NEW.conto_iva_vendita_id</code></li> </ul>"},{"location":"dbzero/config/manual/trgfn_iva_ins_upd_check_conti_iva/#logica-di-controllo","title":"\u2699\ufe0f Logica di Controllo","text":"<ol> <li>Caricamento del tipo conto</li> </ol> <p><pre><code>SELECT tipo_conto INTO v_tipo_acq\n  FROM config.conti_contabili\n WHERE id = NEW.conto_iva_acquisti_id;\n\nSELECT tipo_conto INTO v_tipo_ven\n  FROM config.conti_contabili\n WHERE id = NEW.conto_iva_vendita_id;\n</code></pre> 2. Verifica del conto di acquisto</p> <p><pre><code>IF NEW.conto_iva_acquisti_id IS NOT NULL AND v_tipo_acq &lt;&gt; 'A' THEN\n  RAISE EXCEPTION 'Il conto acquisti (%), non \u00e8 di tipo A', NEW.conto_iva_acquisti_id;\nEND IF;\n</code></pre> 3. Verifica del conto di vendita</p> <p><pre><code>IF NEW.conto_iva_vendita_id IS NOT NULL AND v_tipo_ven &lt;&gt; 'V' THEN\n  RAISE EXCEPTION 'Il conto vendita (%), non \u00e8 di tipo V', NEW.conto_iva_vendita_id;\nEND IF;\n</code></pre> 4. Terminazione</p> <pre><code>RETURN NEW;\n</code></pre> <p>Se uno dei controlli fallisce, la funzione interrompe l\u2019operazione con un errore descrittivo.</p>"},{"location":"dbzero/config/manual/trgfn_iva_ins_upd_check_conti_iva/#valore-di-ritorno","title":"\ud83d\udd12 Valore di Ritorno","text":"<ul> <li>``   Restituisce <code>NEW</code> immutato se tutti i controlli superano, altrimenti solleva un\u2019eccezione.</li> </ul>"},{"location":"dbzero/config/manual/trgfn_iva_ins_upd_check_conti_iva/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Prevenzione di errori: blocca subito associazioni contabili non valide.</li> <li>Feedback immediato: messaggi di errore chiari aiutano lo sviluppatore o l\u2019operatore.</li> <li>Centralizzazione: tutte le validazioni contabili per <code>config.iva</code> risiedono in un unico punto.</li> </ul> <p>\ud83e\udde0 \u201cCon una trigger function dedicata alla validazione dei conti IVA si garantisce che ogni codice IVA sia sempre accoppiato al conto corretto, riducendo i rischi di anomalie contabili.\u201d</p>"},{"location":"dbzero/config/manual/trgfn_iva_stati_ins_upd_clean_fields/","title":"Trgfn iva stati ins upd clean fields","text":""},{"location":"dbzero/config/manual/trgfn_iva_stati_ins_upd_clean_fields/#documentazione-concettuale-funzione-configtrgfn_iva_stati_ins_upd_clean_fields","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>config.trgfn_iva_stati_ins_upd_clean_fields()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>config.iva_stati</li> <li>config.stati</li> </ul> <p>Approfondimento funzioni:</p> <ul> <li>script.fn_get_default_by_param</li> </ul>"},{"location":"dbzero/config/manual/trgfn_iva_stati_ins_upd_clean_fields/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Impostare valori di default per campi mancanti in <code>config.iva_stati</code> (ad esempio, assegnare <code>stato_id</code> da <code>config.stati</code> se <code>NEW.stato_id</code> \u00e8 <code>NULL</code>).</li> <li>Pulire e normalizzare ulteriori campi (es. trimming, uppercasing) seguendo le regole di business.</li> </ul>"},{"location":"dbzero/config/manual/trgfn_iva_stati_ins_upd_clean_fields/#collegamenti","title":"\ud83d\udd17 Collegamenti","text":"<ul> <li><code>config.iva_stati</code> \u2013 tabella su cui si applica il trigger <code>BEFORE INSERT OR UPDATE</code>.</li> <li><code>config.stati</code> \u2013 usata come lookup per recuperare il PK di default tramite <code>codice_iso3</code>.</li> <li><code>script.fn_get_default_by_param</code> \u2013 funzione dinamica che esegue il lookup del valore di default da una tabella di configurazione.</li> <li>Trigger associato: <code>trg_iva_stati_ins_upd_clean_fields</code> (viene creato dal Liquibase changeSet <code>20250730-07-trgfn_iva_stati_ins_upd_clean_fields_v1</code>).</li> </ul>"},{"location":"dbzero/config/manual/trgfn_iva_stati_ins_upd_clean_fields/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Il trigger viene invocato BEFORE INSERT OR UPDATE su <code>config.iva_stati</code> e agisce su <code>NEW</code>.</li> <li>Assegnazione default: utilizza <code>fn_get_default_by_param('config','stati','codice_iso3','state_code_iso3', TG_NAME)::integer</code> per ottenere il <code>stato_id</code>.</li> <li><code>TG_NAME</code> passa automaticamente il nome del trigger alla funzione per migliorare il contesto di log in caso di errore.</li> <li>Estendibilit\u00e0: dopo il lookup di default \u00e8 possibile inserire ulteriori blocchi di cleanup (es. normalizzazione di <code>nome</code>, <code>cognome</code>).</li> <li>Robustezza: la funzione di lookup solleva eccezione se non trova il valore, garantendo coerenza dei dati.</li> </ul> <p>\ud83e\udde0 \u201cAllinea i record di <code>config.iva_stati</code> a regole di default e pulizia automatica: default lookup, normalizzazione e coerenza garantita.\u201d</p>"},{"location":"dbzero/config/manual/trgfn_regioni_ins_upd_clean_fields/","title":"Trgfn regioni ins upd clean fields","text":""},{"location":"dbzero/config/manual/trgfn_regioni_ins_upd_clean_fields/#documentazione-concettuale-funzione-configtrgfn_regioni_ins_upd_clean_fields","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>config.trgfn_regioni_ins_upd_clean_fields()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>config.regioni</li> <li>config.stati</li> </ul> <p>Approfondimento funzioni:</p> <ul> <li>script.fn_get_default_by_param</li> </ul>"},{"location":"dbzero/config/manual/trgfn_regioni_ins_upd_clean_fields/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Impostare valori di default per campi mancanti in <code>config.regioni</code> (ad esempio, assegnare <code>stato_id</code> da <code>config.stati</code> se <code>NEW.stato_id</code> \u00e8 <code>NULL</code>).</li> <li>Pulire e normalizzare ulteriori campi (es. trimming, uppercasing) seguendo le regole di business.</li> </ul>"},{"location":"dbzero/config/manual/trgfn_regioni_ins_upd_clean_fields/#collegamenti","title":"\ud83d\udd17 Collegamenti","text":"<ul> <li><code>config.regioni</code> \u2013 tabella su cui si applica il trigger <code>BEFORE INSERT OR UPDATE</code>.</li> <li><code>config.stati</code> \u2013 usata come lookup per recuperare il PK di default tramite <code>codice_iso3</code>.</li> <li><code>script.fn_get_default_by_param</code> \u2013 funzione dinamica che esegue il lookup del valore di default da una tabella di configurazione.</li> <li>Trigger associato: <code>trg_regioni_ins_upd_clean_fields</code> (viene creato dal Liquibase changeSet <code>20250730-07-trgfn_regioni_ins_upd_clean_fields_v1</code>).</li> </ul>"},{"location":"dbzero/config/manual/trgfn_regioni_ins_upd_clean_fields/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li>Il trigger viene invocato BEFORE INSERT OR UPDATE su <code>config.regioni</code> e agisce su <code>NEW</code>.</li> <li>Assegnazione default: utilizza <code>fn_get_default_by_param('config','stati','codice_iso3','state_code_iso3', TG_NAME)::integer</code> per ottenere il <code>stato_id</code>.</li> <li><code>TG_NAME</code> passa automaticamente il nome del trigger alla funzione per migliorare il contesto di log in caso di errore.</li> <li>Estendibilit\u00e0: dopo il lookup di default \u00e8 possibile inserire ulteriori blocchi di cleanup (es. normalizzazione di <code>nome</code>, <code>cognome</code>).</li> <li>Robustezza: la funzione di lookup solleva eccezione se non trova il valore, garantendo coerenza dei dati.</li> </ul> <p>\ud83e\udde0 \u201cAllinea i record di <code>config.regioni</code> a regole di default e pulizia automatica: default lookup, normalizzazione e coerenza garantita.\u201d</p>"},{"location":"dbzero/config/manual/trgfn_stradario_generale_upd_non_permesso/","title":"Trgfn stradario generale upd non permesso","text":""},{"location":"dbzero/config/manual/trgfn_stradario_generale_upd_non_permesso/#documentazione-concettuale-trigger-function-configtrgfn_stradario_generale_upd_non_permesso","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>config.trgfn_stradario_generale_upd_non_permesso()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:    </p> <ul> <li>config.stradario_generale </li> <li>config.stradario </li> </ul> <p>Approfondimento funzioni:    </p> <ul> <li>script.fn_log_and_raise_error </li> </ul> <p>La trigger function <code>config.trgfn_stradario_generale_upd_non_permesso()</code> impedisce modifiche non consentite sulle colonne critiche di <code>config.stradario_generale</code> (<code>descrizione</code>, <code>descrizione_breve</code>, <code>toponomastica_id</code>) quando esistono vie correlate in <code>config.stradario</code>, segnalando in modo chiaro quale attributo \u00e8 stato alterato.</p>"},{"location":"dbzero/config/manual/trgfn_stradario_generale_upd_non_permesso/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Blocco modifiche non consentite: evitare update di descrizione, descrizione_breve o toponomastica_id in <code>config.stradario_generale</code> se il record \u00e8 gi\u00e0 in uso in <code>config.stradario</code>.</li> <li>Identificazione precisa: indicare tramite JSON il nome della colonna modificata e l\u2019ID del record per diagnosticare efficacemente l\u2019errore.</li> <li>Centralizzazione logica: mantenere il controllo integrit\u00e0 nel database, riducendo complessit\u00e0 lato applicazione.</li> </ul>"},{"location":"dbzero/config/manual/trgfn_stradario_generale_upd_non_permesso/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>INPUT: utilizza il record <code>OLD</code> (pre-update) e <code>NEW</code> (in aggiornamento).</li> <li>Condizione di attivazione: <code>BEFORE UPDATE OF descrizione, descrizione_breve, toponomastica_id</code> su <code>config.stradario_generale</code>.</li> <li> <p>Dipendenze:</p> </li> <li> <p>Tabella <code>config.stradario</code> per la verifica di riferimenti esistenti.</p> </li> <li>Funzione <code>script.fn_log_and_raise_error</code> per logging e segnalazione errori.</li> </ul>"},{"location":"dbzero/config/manual/trgfn_stradario_generale_upd_non_permesso/#logica-di-esecuzione","title":"\u2699\ufe0f Logica di Esecuzione","text":"<ol> <li>Verifica di utilizzo</li> </ol> <pre><code>IF NOT EXISTS (\n  SELECT 1 FROM config.stradario WHERE stradario_generale_id = OLD.id\n) THEN\n  RETURN NEW;\nEND IF;\n</code></pre> <p>Se non ci sono vie correlate, l\u2019UPDATE procede liberamente. 2. Controlli colonna per colonna    Per ciascuna colonna sensibile, confronta <code>OLD</code> vs <code>NEW</code>:</p> <pre><code>IF OLD.descrizione IS DISTINCT FROM NEW.descrizione THEN\n  PERFORM script.fn_log_and_raise_error(\n    'database', TG_NAME, 'E_COLONNA_NON_MODIFICABILE',\n    jsonb_build_object('column','descrizione','id',OLD.id)\n  );\nEND IF;\n</code></pre> <p>Ripete la stessa logica per <code>descrizione_breve</code> e <code>toponomastica_id</code>, specificando sempre il campo modificato. 3. Ritorno del record</p> <pre><code>RETURN NEW;\n</code></pre> <p>Dopo i controlli, se non viene lanciata eccezione, il record aggiornato viene restituito.</p>"},{"location":"dbzero/config/manual/trgfn_stradario_generale_upd_non_permesso/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Integrit\u00e0 referenziale: impedisce modifiche che comprometterebbero la coerenza dei dati stradario.</li> <li>Diagnosi immediata: il payload JSON indica esattamente quale colonna \u00e8 stata alterata e l\u2019ID del record.</li> <li>Centralizzazione: la logica di blocco \u00e8 consolidata nel database, riducendo dipendenze esterne.</li> </ul> <p>\ud83e\udde0 \u201c<code>trgfn_stradario_generale_upd_non_permesso</code> garantisce che le definizioni generali non vengano modificate in modo incongruo, proteggendo la consistenza tra stradario_generale e stradario.\u201d</p>"},{"location":"dbzero/config/manual/trgfn_toponomastica_upd_non_permesso/","title":"Trgfn toponomastica upd non permesso","text":""},{"location":"dbzero/config/manual/trgfn_toponomastica_upd_non_permesso/#documentazione-concettuale-trigger-function-configtrgfn_toponomastica_upd_non_permesso","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>config.trgfn_toponomastica_upd_non_permesso()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:  - config.toponomastica  - config.stradario_generale </p> <p>Approfondimento funzioni:  - script.fn_log_and_raise_error </p> <p>La trigger function <code>config.trgfn_toponomastica_upd_non_permesso()</code> impedisce modifiche non consentite sul catalogo delle toponomastiche, bloccando l\u2019UPDATE di <code>descrizione</code> quando la voce \u00e8 gi\u00e0 in uso in <code>config.stradario_generale</code>.</p>"},{"location":"dbzero/config/manual/trgfn_toponomastica_upd_non_permesso/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Protezione semantica: garantire coerenza tra topografia e stradario evitando rinominazioni dirette di toponomastiche gi\u00e0 in uso.</li> <li>Decisione di design: anzich\u00e9 storicizzare o consentire modifiche parziali, obbligare alla creazione di nuove topograf\u00ece per cambiare descrizione.</li> <li>Centralizzazione: concentrare la logica di blocco in una sola funzione trigger per ridurre complessit\u00e0 applicativa.</li> </ul>"},{"location":"dbzero/config/manual/trgfn_toponomastica_upd_non_permesso/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>Ambito: <code>BEFORE UPDATE OF descrizione</code> sulla tabella <code>config.toponomastica</code>.</li> <li>Condition: attivazione solo se il record \u00e8 referenziato in <code>config.stradario_generale</code> tramite il campo <code>toponomastica_id</code>.</li> <li> <p>Dipendenze:</p> </li> <li> <p>Tabella <code>config.stradario_generale</code> per la verifica dei riferimenti.</p> </li> <li>Funzione <code>script.fn_log_and_raise_error</code> per generare errori strutturati.</li> </ul>"},{"location":"dbzero/config/manual/trgfn_toponomastica_upd_non_permesso/#flusso-di-esecuzione-dettagliato","title":"\u2699\ufe0f Flusso di Esecuzione Dettagliato","text":"<ol> <li>Verifica utilizzo</li> </ol> <pre><code>IF NOT EXISTS (\n  SELECT 1\n    FROM config.stradario_generale\n   WHERE toponomastica_id = OLD.id\n) THEN\n  RETURN NEW;\nEND IF;\n</code></pre> <p>Se la toponomastica non \u00e8 usata, l\u2019UPDATE di <code>descrizione</code> procede normalmente.</p> <ol> <li>Blocco modifica</li> </ol> <pre><code>IF OLD.descrizione IS DISTINCT FROM NEW.descrizione THEN\n  PERFORM script.fn_log_and_raise_error(\n    'database',\n    TG_NAME,\n    'E_COLONNA_NON_MODIFICABILE',\n    jsonb_build_object('column','descrizione','id',OLD.id)\n  );\nEND IF;\n</code></pre> <p>Se la <code>descrizione</code> viene cambiata, la funzione lancia un errore bloccando l\u2019operazione e indicando quale colonna e ID sono coinvolti.</p> <ol> <li>Ritorno</li> </ol> <pre><code>RETURN NEW;\n</code></pre> <p>In ogni caso, il record viene restituito (se l\u2019errore non \u00e8 stato sollevato), anche se normalmente l\u2019operazione si interrompe al lancio dell\u2019eccezione.</p>"},{"location":"dbzero/config/manual/trgfn_toponomastica_upd_non_permesso/#motivazione-e-benefici","title":"\ud83d\udd12 Motivazione e Benefici","text":"<ul> <li>Integrit\u00e0 referenziale logica: impedendo modifiche di descrizioni in uso, si evita la discrepanza tra entit\u00e0 generali e record associati.</li> <li>Chiarezza operativa: chiara segnalazione dell\u2019errore con payload JSON specifico, facilita debug e supporto.</li> <li>Strategia di manutenzione: per modificare la descrizione di una toponomastica esistente, \u00e8 necessario creare un nuovo record, preservando la storia e evitando side effect.</li> <li>Leggerezza: rispetto alla storicizzazione completa, questo approccio \u00e8 pi\u00f9 semplice e leggero quando la modifica non \u00e8 prevista come operazione comune.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>trgfn_toponomastica_upd_non_permesso</code>, Zero ERP tutela la coerenza dello stradario imponendo la creazione di nuove toponomastiche per ogni cambiamento, piuttosto che modifiche in-place.\u201d</p>"},{"location":"dbzero/config/manual/utilities/","title":"Utilities","text":""},{"location":"dbzero/config/manual/utilities/#documentazione-concettuale-tabella-utilities","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>utilities</code>","text":"<p>La tabella <code>utilities</code> costituisce il cuore modulare di Zero ERP: da qui si definiscono i settori funzionali dell\u2019applicazione, sia quelli comuni a tutte le aziende sia le estensioni specifiche per ogni ramo di attivit\u00e0.</p>"},{"location":"dbzero/config/manual/utilities/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Definizione del settore   Tabella dove si definiscono i tipi di \"utilities\" a cui l\u2019azienda \u00e8 rivolta. Ogni record identifica un settore di business specifico: per esempio manifatturiero, gas o telecom.</li> <li>Componente standard e specifica   Per ogni tipo di utility \u00e8 prevista una parte core (funzionalit\u00e0 standard comuni a tutti i settori) e un modulo verticale specifico, progettato per risolvere le problematiche tipiche del settore.</li> </ul>"},{"location":"dbzero/config/manual/utilities/#flessibilita-e-configurabilita","title":"\ud83d\udee0 Flessibilit\u00e0 e Configurabilit\u00e0","text":"<ul> <li>Architettura modulare   Le funzionalit\u00e0 core (anagrafiche, preventivi, magazzino, fatturazione, reportistica, notifiche) costituiscono la base su cui si innestano i moduli verticali.</li> <li>Estendibilit\u00e0 controllata   Per ogni nuovo settore (manifatturiero, gas, acqua, elettricit\u00e0, fonia/telecom, ecc.) si sfruttano gli stessi schemi dati e servizi condivisi, evitando duplicazioni di codice e accelerando i tempi di sviluppo.</li> <li>Configurazione dinamica   La definizione  di un record di <code>utilities</code> abilita  il modulo corrispondente senza intervenire sul codice, permettendo adattamenti rapidi alle esigenze aziendali.</li> </ul>"},{"location":"dbzero/config/manual/utilities/#modalita-base-e-settori-verticali","title":"\ud83d\ude80 Modalit\u00e0 \u201cBase\u201d e Settori Verticali","text":"<ol> <li> <p>Utility \"Base\"</p> </li> <li> <p>Servizi generali e trasversali:</p> <ul> <li>Anagrafiche (clienti, fornitori)</li> <li>Preventivi</li> <li>Magazzino</li> <li>Fatturazione</li> <li>Reportistica</li> <li>Notifiche e log    Questi moduli rappresentano i processi fondamentali per ogni azienda.</li> </ul> </li> <li> <p>Settori Verticali    Moduli specifici attivabili a seconda del settore di business dell\u2019azienda:</p> </li> <li> <p>Manifatturiero: distinte base, cicli di produzione, tracciabilit\u00e0 materie prime</p> </li> <li>Gas, Acqua, Elettricit\u00e0: letture contatori, bollettazione consumi, calcoli tariffazione</li> <li>Fonia / Telecom: contratti, piani tariffari, fatturazione a consumo</li> <li>Altri: logistica, retail, servizi professionali, ecc.</li> </ol>"},{"location":"dbzero/config/manual/utilities/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Deployment Light   Nessun deploy di codice richiesto per attivare o disattivare moduli: basta un update in tabella.</li> <li>Sviluppo Accelerato   Le nuove verticalizzazioni si costruiscono sulle componenti esistenti, riducendo tempi e costi di realizzazione.</li> <li>Manutenzione Semplificata   Tutte le regole di attivazione e configurazione dei moduli risiedono in un\u2019unica tabella, evitando la dispersione in configurazioni multiple.</li> </ul> <p>\ud83e\udde0 \"Una tabella per orchestrare l\u2019intera suite funzionale di Zero ERP, dalla base comune alle specializzazioni verticali.\"</p>"},{"location":"dbzero/config/manual/valute/","title":"Valute","text":""},{"location":"dbzero/config/manual/valute/#documentazione-concettuale-tabella-configvalute","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.valute</code>","text":"<p>La tabella <code>config.valute</code> definisce le valute monetarie utilizzate in Zero ERP, fornendo i codici, i simboli e le informazioni necessarie per la gestione coerente di tutte le transazioni finanziarie.</p>"},{"location":"dbzero/config/manual/valute/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Definizione delle valute   Elenco centralizzato di tutte le valute supportate, con codici interni e standard ISO 4217.</li> <li>Supporto ai moduli finanziari   Garantisce alle aree di fatturazione, contabilit\u00e0 e reporting uniformit\u00e0 nella rappresentazione e conversione delle valute.</li> <li>Tracciabilit\u00e0 e auditing   Memorizza informazioni di inserimento e aggiornamento per mantenere la storicit\u00e0 delle modifiche.</li> </ul>"},{"location":"dbzero/config/manual/valute/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Standardizzazione   Consente a tutti i moduli di usare codici e simboli unificati, evitando errori di conversione.</li> <li>Performance di ricerca   Indice sulla descrizione velocizza lookup e autocomplete nei form.</li> <li>Audit completo   Trigger e campi utente/timestamp garantiscono piena tracciabilit\u00e0 delle variazioni nelle configurazioni.</li> </ul> <p>\ud83e\udde0 \"Una tabella snella e vincolata per garantire coerenza, performance e audit nella gestione delle valute di Zero\u00a0ERP.\"</p>"},{"location":"dbzero/config/tabelle/ambiti/","title":"\ud83d\udcda Tabella <code>ambiti</code>","text":""},{"location":"dbzero/config/tabelle/ambiti/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.ambiti_id_seq'::regclass) codice character NO descrizione character NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER extra_country jsonb YES"},{"location":"dbzero/config/tabelle/ambiti/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_ambiti id UNIQUE uq_ambiti_codice codice"},{"location":"dbzero/config/tabelle/ambiti/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_ambiti_descrizione <code>CREATE INDEX ix_ambiti_descrizione ON config.ambiti USING btree (descrizione)</code> ix_ambiti_extra_country_keys <code>CREATE INDEX ix_ambiti_extra_country_keys ON config.ambiti USING btree (((extra_country -&gt;&gt; 'stato_utilizzo'::text)), ((extra_country -&gt;&gt; 'settore'::text)), ((extra_country -&gt;&gt; 'codice_ambito'::text)))</code> pk_ambiti <code>CREATE UNIQUE INDEX pk_ambiti ON config.ambiti USING btree (id)</code> uq_ambiti_codice <code>CREATE UNIQUE INDEX uq_ambiti_codice ON config.ambiti USING btree (codice)</code>"},{"location":"dbzero/config/tabelle/ambiti/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_ambiti_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/codici_postali/","title":"Codici postali","text":""},{"location":"dbzero/config/tabelle/codici_postali/#documentazione-concettuale-tabella-configcodici_postali","title":"\ud83d\udcda Documentazione Concettuale \u2013 Tabella <code>config.codici_postali</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - config.comuni  - config.stradario  - config.stradario_generale </p> <p>La tabella <code>config.codici_postali</code> censisce i codici di avviamento postale (postal codes o\u00a0ZIP codes) associati ai comuni, fornendo l\u2019elenco completo di CAP per ogni citt\u00e0.</p>"},{"location":"dbzero/config/tabelle/codici_postali/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Elenco dei codici postali   Per ogni comune (city/municipality), memorizza tutti i codici postali (Postal Code o\u00a0ZIP Code) validi per quell\u2019area geografica.</p> </li> <li> <p>Molti CAP per lo stesso comune   Un singolo comune pu\u00f2 avere pi\u00f9 codici postali (ad esempio diverse frazioni o quartieri). Il campo <code>comune_id</code> pu\u00f2 quindi comparire in pi\u00f9 record con CAP differenti.</p> </li> <li> <p>Associazione con il sistema di strade   La relazione tra vie e codici postali avviene tramite la tabella <code>config.stradario</code>, che collega ogni <code>via_id</code> (da <code>config.stradario_generale</code>) al <code>codice_postale_id</code> corrispondente.</p> </li> <li> <p>Terminologia internazionale   Il termine inglese utilizza \u201cPostal Code\u201d in generale, mentre negli Stati Uniti si parla specificamente di \u201cZIP Code\u201d.</p> </li> </ul>"},{"location":"dbzero/config/tabelle/codici_postali/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Copertura capillare del territorio   Gestisce pi\u00f9 CAP per un solo comune, utile per suddividere zone interne come frazioni, quartieri o uffici postali specifici.</p> </li> <li> <p>Precisione nell\u2019indirizzamento   Tramite il collegamento con <code>config.stradario</code>, assicura che ogni via sia abbinata al CAP corretto, migliorando la consegna della corrispondenza e i servizi logistici.</p> </li> <li> <p>Supporto multiregionale   Accoglie diversi formati di codici postali (Italia, USA, altri paesi), permettendo l\u2019uso in contesti internazionali senza modifica del modello dati.</p> </li> <li> <p>Audit e tracciabilit\u00e0   Trigger di auditing aggiornano automaticamente <code>data_update</code> e <code>user_update</code>, garantendo la storia delle modifiche dei CAP.</p> </li> </ul> <p>\ud83e\udde0 \"Una tabella essenziale per associare vie e comuni ai rispettivi codici postali, garantendo indirizzamento preciso e compatibilit\u00e0 internazionale.\"</p>"},{"location":"dbzero/config/tabelle/codici_postali/#tabella-codici_postali","title":"\ud83d\udcda Tabella <code>codici_postali</code>","text":""},{"location":"dbzero/config/tabelle/codici_postali/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.codici_postali_id_seq'::regclass) codice_postale character NO comune_id integer NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER"},{"location":"dbzero/config/tabelle/codici_postali/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_codici_postali_comune_id comune_id PRIMARY KEY pk_codici_postali id"},{"location":"dbzero/config/tabelle/codici_postali/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_codici_postali_codice <code>CREATE INDEX ix_codici_postali_codice ON config.codici_postali USING btree (codice_postale)</code> ix_codici_postali_comune_id <code>CREATE INDEX ix_codici_postali_comune_id ON config.codici_postali USING btree (comune_id)</code> pk_codici_postali <code>CREATE UNIQUE INDEX pk_codici_postali ON config.codici_postali USING btree (id)</code>"},{"location":"dbzero/config/tabelle/codici_postali/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_codici_postali_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/comuni/","title":"Comuni","text":""},{"location":"dbzero/config/tabelle/comuni/#documentazione-concettuale-tabella-configcomuni","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.comuni</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento tabelle:   - config.province   - config.stradario   - config.stradario_generale   - storico.comuni </p> <p>Approfondimento funzione:  - script.trgfn_upd_dlt_storico_generic </p> <p>La tabella <code>config.comuni</code> censisce i comuni (italiani ed esteri) all\u2019interno di uno stato, fornendo la base per la geolocalizzazione degli indirizzi e per l\u2019associazione con lo stradario.</p>"},{"location":"dbzero/config/tabelle/comuni/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Censimento dei comuni   Elenco dei comuni presenti in ciascuno stato, identificati da nome e collegamento gerarchico a provincia e stato.</li> <li>Attributi specifici per stato   La colonna <code>extra_country</code> (JSONB) permette di memorizzare dati aggiuntivi specifici per ogni paese (per l\u2019Italia: codice catastale, codice ISTAT, fascia climatica, ecc.).</li> <li>Integrazione con lo stradario   L\u2019associazione tra <code>config.stradario_generale</code> (prefissi e nomi delle vie) e <code>config.comuni</code> genera la tabella <code>config.stradario</code>, che contiene l\u2019indirizzo completo con la localizzazione geografica sul comune di appartenenza.   Utilizzata per associare i record di <code>config.stradario</code> al comune di appartenenza, completa il percorso di indirizzamento.</li> <li>Storicizzazione   Il campo <code>storicizza</code> se true attiva il trigger per la storicizzazione delle informazioni sulla tabella <code>storico.comuni</code>. Il front-end dovr\u00e0 sempre impostare a true il valore, solo per funzioni administrator si potr\u00e0 non gestire a true.</li> </ul>"},{"location":"dbzero/config/tabelle/comuni/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>config.province</code>   Il campo <code>provincia_id</code> identifica al provincia di appartenenza..</li> <li><code>storico.comuni</code> <code>storico</code> True attiva il trigger per il salvataggio delle informazioni.</li> </ul>"},{"location":"dbzero/config/tabelle/comuni/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Flessibilit\u00e0   L\u2019uso di un campo JSONB per attributi extra consente di adattare la struttura dei dati alle diverse normative nazionali senza modifiche allo schema.</li> <li>Coerenza geografica   Collegamento a tabelle di stato e provincia garantisce una gerarchia amministrativa corretta e uniforme.</li> <li>Facilit\u00e0 di manutenzione   Inserimenti e aggiornamenti automatici tramite trigger di auditing e storicizzazione (se abilitata) assicurano la tracciabilit\u00e0 delle modifiche.</li> </ul> <p>\ud83e\udde0 \"Un catalogo flessibile e gerarchico dei comuni, arricchito da attributi nazionali personalizzabili per supportare indirizzamento e reporting geografico.\"</p>"},{"location":"dbzero/config/tabelle/comuni/#tabella-comuni","title":"\ud83d\udcda Tabella <code>comuni</code>","text":""},{"location":"dbzero/config/tabelle/comuni/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.comuni_id_seq'::regclass) descrizione character varying NO ''::character varying provincia_id integer YES data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER extra_country jsonb YES storicizza boolean NO false tx_id uuid YES"},{"location":"dbzero/config/tabelle/comuni/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_provincia provincia_id PRIMARY KEY pk_comuni id"},{"location":"dbzero/config/tabelle/comuni/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_comuni_provincia_id <code>CREATE INDEX ix_comuni_provincia_id ON config.comuni USING btree (provincia_id)</code> ix_descrizione_comune <code>CREATE INDEX ix_descrizione_comune ON config.comuni USING btree (descrizione)</code> pk_comuni <code>CREATE UNIQUE INDEX pk_comuni ON config.comuni USING btree (id)</code>"},{"location":"dbzero/config/tabelle/comuni/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_comuni_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_comuni_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_upd_comuni_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> trg_z90_comuni_upd_dlt_storico BEFORE DELETE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('comune_id')</code> trg_z90_comuni_upd_dlt_storico BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('comune_id')</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/conti_contabili/","title":"Conti contabili","text":""},{"location":"dbzero/config/tabelle/conti_contabili/#documentazione-concettuale-tabella-configconti_contabili","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.conti_contabili</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - config.iva </p> <p>Approfondimenti funzioni:  - script.trgfn_upd_audit_data_user_generic </p> <p>La tabella <code>config.conti_contabili</code> definisce il piano dei conti utilizzabile per la contabilizzazione delle operazioni, distinguendo tra conti di acquisto e vendita, e supportando l\u2019audit delle modifiche.</p>"},{"location":"dbzero/config/tabelle/conti_contabili/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Mantenere il catalogo centralizzato dei codici conto con descrizioni e tipologia.</li> <li>Supportare la validazione dei riferimenti contabili in altre tabelle (ad esempio <code>config.iva</code>).</li> </ul>"},{"location":"dbzero/config/tabelle/conti_contabili/#vincoli-e-regole-aziendali","title":"\ud83d\udd12 Vincoli e Regole Aziendali","text":"<ul> <li>Unicit\u00e0: <code>codice_conto</code> deve essere univoco.</li> <li> <p>Tipologia: <code>tipo_conto</code> pu\u00f2 essere:</p> </li> <li> <p><code>A</code> (Acquisto)</p> </li> <li><code>V</code> (Vendita)</li> <li>Check Constraint: garantisce che <code>tipo_conto</code> sia solo uno dei valori previsti.</li> </ul>"},{"location":"dbzero/config/tabelle/conti_contabili/#relazioni-e-indici","title":"\ud83d\udd17 Relazioni e Indici","text":"<ul> <li> <p>FK in ingresso:</p> </li> <li> <p><code>config.iva.conto_iva_acquisti_id</code> \u2192 <code>config.conti_contabili(id)</code></p> </li> <li><code>config.iva.conto_iva_vendita_id</code> \u2192 <code>config.conti_contabili(id)</code></li> <li> <p>Indici:</p> </li> <li> <p><code>IX_CONTI_CONTABILI_DESCRIZIONE</code> su <code>descrizione</code> per ricerche testuali rapide</p> </li> <li><code>IX_CONTI_CONTABILI_TIPO_CONTO</code> su <code>tipo_conto</code> per filtrare conti di acquisto/vendita</li> </ul>"},{"location":"dbzero/config/tabelle/conti_contabili/#trigger-associati","title":"\u2699\ufe0f Trigger Associati","text":"<ol> <li> <p><code>trg_upd_conti_contabili_audit_data_user</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code></p> </li> <li>Cosa: aggiorna automaticamente i campi <code>data_update</code> e <code>user_update</code> tramite <code>script.trgfn_upd_audit_data_user_generic()</code></li> </ol>"},{"location":"dbzero/config/tabelle/conti_contabili/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Governance contabile: definizione centralizzata del piano dei conti.</li> <li>Integrit\u00e0 referenziale: associazioni corrette ai conti di acquisto e vendita.</li> <li>Audit completo: tracciamento automatico delle modifiche ai conti.</li> <li>Performante: indici ottimizzati per ricerca e filtro.</li> </ul> <p>\ud83e\udde0 \u201cUn piano dei conti ben strutturato \u00e8 alla base di una contabilit\u00e0 affidabile e facilmente mantenibile.\u201d</p>"},{"location":"dbzero/config/tabelle/conti_contabili/#tabella-conti_contabili","title":"\ud83d\udcda Tabella <code>conti_contabili</code>","text":""},{"location":"dbzero/config/tabelle/conti_contabili/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.conti_contabili_id_seq'::regclass) codice_conto character varying NO descrizione character varying NO tipo_conto character NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert text NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update text NO CURRENT_USER"},{"location":"dbzero/config/tabelle/conti_contabili/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_ftcc_tipo_conto PRIMARY KEY pk_conti_contabili id UNIQUE uq_conti_contabili_codice_conto codice_conto"},{"location":"dbzero/config/tabelle/conti_contabili/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_conti_contabili_descrizione <code>CREATE INDEX ix_conti_contabili_descrizione ON config.conti_contabili USING btree (descrizione)</code> ix_conti_contabili_tipo_conto <code>CREATE INDEX ix_conti_contabili_tipo_conto ON config.conti_contabili USING btree (tipo_conto)</code> pk_conti_contabili <code>CREATE UNIQUE INDEX pk_conti_contabili ON config.conti_contabili USING btree (id)</code> uq_conti_contabili_codice_conto <code>CREATE UNIQUE INDEX uq_conti_contabili_codice_conto ON config.conti_contabili USING btree (codice_conto)</code>"},{"location":"dbzero/config/tabelle/conti_contabili/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_conti_contabili_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/iva/","title":"Iva","text":""},{"location":"dbzero/config/tabelle/iva/#documentazione-concettuale-tabella-configiva","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.iva</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - config.iva_natura  - config.conti_contabili </p> <p>Approfondimenti funzioni:  - config.trgfn_iva_ins_upd_check_conti_iva  - config.fn_get_iva_override  - script.trgfn_upd_audit_data_user_generic </p> <p>La tabella <code>config.iva</code> fornisce il catalogo dei codici IVA, includendo descrizioni, regole di assoggettamento, split payment e mapping necessari per l\u2019invio delle fatture al Sistema di Interscambio (SDI).</p>"},{"location":"dbzero/config/tabelle/iva/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Centralizzare i codici IVA disponibili in un unico repository configurabile.</li> <li> <p>Gestire:</p> </li> <li> <p>Descrizioni estesa e breve</p> </li> <li>Assoggettamento fiscale</li> <li>Aliquota percentuale (quando applicabile)</li> <li>Natura IVA per SDI (<code>natura_iva_id</code>)</li> <li>Conti contabili di acquisto e vendita</li> <li>Split payment (<code>id_iva_split</code>)</li> </ul>"},{"location":"dbzero/config/tabelle/iva/#vincoli-e-logiche-aziendali","title":"\ud83d\udd12 Vincoli e Logiche Aziendali","text":"<ul> <li>Unicit\u00e0: <code>codice_iva</code> deve essere univoco.</li> <li> <p>Assoggettamento: il campo <code>assoggettamento_iva</code> pu\u00f2 assumere solo i valori {<code>NS</code>, <code>NI</code>, <code>ND</code>, <code>ES</code>, <code>RC</code>, <code>ED</code>, <code>NP</code>, <code>T</code>, <code>IM</code>, ``}.   Esempi:</p> </li> <li> <p><code>NS</code> (Non Soggetto)</p> </li> <li><code>NI</code> (Non Imponibile)</li> <li><code>ES</code> (Esente)</li> <li><code>RC</code> (Reverse Charge)</li> <li><code>ED</code> (Esigibilit\u00e0 Differita)</li> <li>\u2026</li> <li>Aliquota vs. assoggettamento: se <code>assoggettamento_iva</code> \u00e8 diverso da vuoto, l\u2019<code>aliquota_iva</code> non pu\u00f2 essere valorizzata (dev\u2019essere zero o lasciata al default).</li> <li>Split payment: <code>id_iva_split</code> pu\u00f2 essere valorizzato per indicare che il codice IVA segue la normativa di split payment. In questo caso punta ricorsivamente a un codice \u201creale\u201d in <code>config.iva</code>, definendo a quale aliquota reale si collega il meccanismo di split.</li> <li>Natura IVA per SDI: <code>natura_iva_id</code> fa riferimento a <code>config.iva_natura(id)</code>, fornendo il codice natura necessario per la trasmissione al SDI.</li> <li> <p>Conti contabili:</p> </li> <li> <p><code>conto_iva_acquisti_id</code> \u2192 deve essere un conto di tipo acquisto</p> </li> <li><code>conto_iva_vendita_id</code> \u2192 deve essere un conto di tipo vendita</li> </ul>"},{"location":"dbzero/config/tabelle/iva/#relazioni-e-indici","title":"\ud83d\udd17 Relazioni e Indici","text":"<ul> <li> <p>FK:</p> </li> <li> <p><code>natura_iva_id</code> \u2192 <code>config.iva_natura(id)</code></p> </li> <li><code>conto_iva_acquisti_id</code> \u2192 <code>config.conti_contabili(id)</code></li> <li><code>conto_iva_vendita_id</code> \u2192 <code>config.conti_contabili(id)</code></li> <li><code>id_iva_split</code> \u2192 <code>config.iva(id)</code> (ricorsivo)</li> <li>Indice: <code>IX_IVA_DESC</code> su <code>desc_iva</code> per ricerche testuali performanti</li> </ul>"},{"location":"dbzero/config/tabelle/iva/#trigger-associati","title":"\u2699\ufe0f Trigger Associati","text":"<ol> <li> <p><code>trg_iva_ins_upd_check_conti_iva</code></p> </li> <li> <p>Quando: <code>BEFORE INSERT OR UPDATE</code></p> </li> <li>Cosa: verifica la corretta tipologia dei conti IVA (acquisto vs vendita).</li> <li> <p><code>trg_upd_iva_audit_data_user</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code></p> </li> <li>Cosa: popola automaticamente i campi <code>data_update</code> e <code>user_update</code> per l\u2019audit.</li> </ol>"},{"location":"dbzero/config/tabelle/iva/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Conformit\u00e0 normativa: split payment e natura IVA per SDI gestiti automaticamente.</li> <li>Integrit\u00e0 referenziale: FK e trigger garantiscono correttezza dei conti e dei codici natura.</li> <li>Riduzione degli errori: constraint e trigger prevengono valori non validi per assoggettamento e aliquota.</li> <li>Velocit\u00e0 di ricerca: indice su <code>desc_iva</code> per filtrare rapidamente le descrizioni.</li> </ul> <p>\ud83e\udde0 \u201cUn modello di dati IVA ben governato semplifica la compliance fiscale e riduce i rischi di errore durante la compilazione e trasmissione delle fatture.\u201d</p>"},{"location":"dbzero/config/tabelle/iva/#tabella-iva","title":"\ud83d\udcda Tabella <code>iva</code>","text":""},{"location":"dbzero/config/tabelle/iva/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.iva_id_seq'::regclass) codice_iva character NO desc_iva character varying NO desc_breve_iva character varying NO aliquota_iva numeric NO 0 assoggettamento_iva character NO ''::bpchar natura_iva_id integer YES conto_iva_acquisti_id integer YES conto_iva_vendita_id integer YES id_iva_split integer YES data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert text NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update text NO CURRENT_USER"},{"location":"dbzero/config/tabelle/iva/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_iva_assoggettamento CHECK chk_iva_assoggettamento_aliquota FOREIGN KEY fk_iva_conto_acq conto_iva_acquisti_id FOREIGN KEY fk_iva_conto_ven conto_iva_vendita_id FOREIGN KEY fk_iva_natura natura_iva_id FOREIGN KEY fk_iva_split id_iva_split PRIMARY KEY pk_iva id UNIQUE uq_iva_codice codice_iva"},{"location":"dbzero/config/tabelle/iva/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_iva_desc <code>CREATE INDEX ix_iva_desc ON config.iva USING btree (desc_iva)</code> pk_iva <code>CREATE UNIQUE INDEX pk_iva ON config.iva USING btree (id)</code> uq_iva_codice <code>CREATE UNIQUE INDEX uq_iva_codice ON config.iva USING btree (codice_iva)</code>"},{"location":"dbzero/config/tabelle/iva/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_iva_ins_upd_check_conti_iva BEFORE INSERT <code>EXECUTE FUNCTION config.trgfn_iva_ins_upd_check_conti_iva()</code> trg_iva_ins_upd_check_conti_iva BEFORE UPDATE <code>EXECUTE FUNCTION config.trgfn_iva_ins_upd_check_conti_iva()</code> trg_upd_iva_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/iva_natura/","title":"Iva natura","text":""},{"location":"dbzero/config/tabelle/iva_natura/#documentazione-concettuale-tabella-configiva_natura","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.iva_natura</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.iva </p> <p>Approfondimenti funzioni:  - config.trgfn_iva_ins_upd_check_conti_iva  - script.trgfn_upd_audit_data_user_generic </p> <p>La tabella <code>config.iva_natura</code> contiene i codici natura IVA utilizzati per l\u2019inoltro delle fatture elettroniche al Sistema di Interscambio (SDI), abbinando ogni codice a una descrizione estesa.</p>"},{"location":"dbzero/config/tabelle/iva_natura/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Fornire il catalogo ufficiale dei codici natura IVA previsti dalla normativa per le fatture elettroniche.</li> <li>Consentire il mapping automatico tra i record di <code>config.iva</code> e il codice natura da inviare al SDI.</li> </ul>"},{"location":"dbzero/config/tabelle/iva_natura/#vincoli-e-regole-aziendali","title":"\ud83d\udd12 Vincoli e Regole Aziendali","text":"<ul> <li>Unicit\u00e0: <code>codice_natura</code> deve essere univoco nel catalogo.</li> <li>Validit\u00e0: ogni codice (<code>codice_natura</code>) corrisponde a uno specifico significato fiscale, es. <code>N1</code> (Esportazioni), <code>N2</code> (Operazioni non imponibili), etc.</li> <li>Audit: ogni modifica al catalogo aggiorna automaticamente <code>data_update</code> e <code>user_update</code> tramite trigger.</li> </ul>"},{"location":"dbzero/config/tabelle/iva_natura/#relazioni","title":"\ud83d\udd17 Relazioni","text":"<ul> <li>I record di <code>config.iva</code> referenziano <code>config.iva_natura(id)</code> per definire la natura fiscale da trasmettere al SDI.</li> </ul>"},{"location":"dbzero/config/tabelle/iva_natura/#trigger-associati","title":"\u2699\ufe0f Trigger Associati","text":"<ol> <li> <p><code>trg_upd_iva_natura_audit_data_user</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code></p> </li> <li>Cosa: aggiorna automaticamente i campi di audit <code>data_update</code> e <code>user_update</code> tramite la funzione generica <code>script.trgfn_upd_audit_data_user_generic()</code>.</li> </ol>"},{"location":"dbzero/config/tabelle/iva_natura/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Conformit\u00e0 SDI: assicura che tutte le fatture riportino codici natura conformi alle specifiche AgID.</li> <li>Tracciabilit\u00e0: audit integrato per monitorare modifiche a codici e descrizioni.</li> <li>Modularit\u00e0: eventuali aggiornamenti o estensioni dei codici natura richiedono solo modifiche a questa tabella.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare i codici natura IVA in un catalogo dedicato semplifica la gestione dei flussi di fatturazione elettronica e garantisce compliance normativa.\u201d</p>"},{"location":"dbzero/config/tabelle/iva_natura/#tabella-iva_natura","title":"\ud83d\udcda Tabella <code>iva_natura</code>","text":""},{"location":"dbzero/config/tabelle/iva_natura/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.iva_natura_id_seq'::regclass) codice_natura character NO descrizione_natura character varying NO data_insert timestamp with time zone NO now() data_update timestamp with time zone NO now()"},{"location":"dbzero/config/tabelle/iva_natura/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_iva_natura id UNIQUE uq_iva_natura_codice codice_natura"},{"location":"dbzero/config/tabelle/iva_natura/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_iva_natura <code>CREATE UNIQUE INDEX pk_iva_natura ON config.iva_natura USING btree (id)</code> uq_iva_natura_codice <code>CREATE UNIQUE INDEX uq_iva_natura_codice ON config.iva_natura USING btree (codice_natura)</code>"},{"location":"dbzero/config/tabelle/iva_natura/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_iva_natura_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/iva_stati/","title":"Iva stati","text":""},{"location":"dbzero/config/tabelle/iva_stati/#documentazione-concettuale-tabella-configiva_stati","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.iva_stati</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - config.iva  - config.stati </p> <p>Approfondimenti funzioni:  - config.fn_get_iva_override - script.trgfn_upd_audit_data_user_generic </p> <p>La tabella <code>config.iva_stati</code> permette di definire override locali di aliquota e assoggettamento IVA per specifici Stati o Paesi, personalizzando il comportamento dei codici IVA principali in base al contesto geografico.</p>"},{"location":"dbzero/config/tabelle/iva_stati/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Sovrascrivere, per ogni coppia <code>(iva_id, stato_id)</code>, i valori di aliquota e assoggettamento di default definiti in <code>config.iva</code>.</li> <li>Gestire scenari in cui normative locali richiedono aliquote differenti o modalit\u00e0 di assoggettamento speciali.</li> </ul>"},{"location":"dbzero/config/tabelle/iva_stati/#vincoli-e-logiche-aziendali","title":"\ud83d\udd12 Vincoli e Logiche Aziendali","text":"<ul> <li>PK composito <code>(iva_id, stato_id)</code>: garantisce un solo override per ciascuna combinazione di codice IVA e Stato.</li> <li>Aliquota e assoggettamento: entrambe sempre valorizzate; <code>aliquota_override</code> rappresenta la percentuale locale, mentre <code>assoggettamento_override</code> segue gli stessi codici di default (<code>NS</code>, <code>NI</code>, <code>ND</code>, <code>ES</code>, <code>RC</code>, <code>ED</code>, ``).</li> <li>Assoggettamento: se <code>assoggettamento_override</code> \u00e8 diverso da vuoto, <code>aliquota_override</code> deve essere 0 o lasciata al default, a indicare che prevale la modalit\u00e0 non imponibile o esente.</li> </ul>"},{"location":"dbzero/config/tabelle/iva_stati/#relazioni-e-indici","title":"\ud83d\udd17 Relazioni e Indici","text":"<ul> <li> <p>FK:</p> </li> <li> <p><code>iva_id</code> \u2192 <code>config.iva(id)</code> (ON UPDATE CASCADE, ON DELETE CASCADE)</p> </li> <li><code>stato_id</code> \u2192 <code>config.stati(id)</code> (ON UPDATE CASCADE, ON DELETE RESTRICT)</li> <li>Indice: <code>IX_IVA_STATI_STATO</code> su <code>stato_id</code> per ricerche per Paese</li> </ul>"},{"location":"dbzero/config/tabelle/iva_stati/#trigger-associati","title":"\u2699\ufe0f Trigger Associati","text":"<ol> <li> <p><code>trg_upd_iva_stati_audit_data_user</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code></p> </li> <li>Cosa: aggiorna i campi di audit <code>data_update</code> e <code>user_update</code> tramite la funzione generica <code>script.trgfn_upd_audit_data_user_generic()</code>.</li> </ol>"},{"location":"dbzero/config/tabelle/iva_stati/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Flessibilit\u00e0 normativa: consente di adattare codici IVA a normative locali diverse senza duplicare codici principali.</li> <li>Integrit\u00e0 referenziale: eliminazione a cascata su <code>iva</code> pulisce automaticamente gli override obsoleti.</li> <li>Chiarezza: la struttura composita PK + FK garantisce coerenza tra codici IVA e Stati di riferimento.</li> </ul> <p>\ud83e\udde0 \u201cUn meccanismo di overriding geografico semplifica la gestione di eccezioni fiscali locali, mantenendo il catalogo IVA principale pulito e centralizzato.\u201d</p>"},{"location":"dbzero/config/tabelle/iva_stati/#tabella-iva_stati","title":"\ud83d\udcda Tabella <code>iva_stati</code>","text":""},{"location":"dbzero/config/tabelle/iva_stati/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default iva_id integer NO stato_id integer NO aliquota_override numeric NO assoggettamento_override character NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert text NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update text NO CURRENT_USER"},{"location":"dbzero/config/tabelle/iva_stati/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_iva_assoggettamento_aliquota_iva_stati CHECK chk_iva_stati_assoggettamento_override FOREIGN KEY fk_iva_stati_iva iva_id FOREIGN KEY fk_iva_stati_stato stato_id PRIMARY KEY pk_iva_stati iva_id, stato_id"},{"location":"dbzero/config/tabelle/iva_stati/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_iva_stati_iva_id <code>CREATE INDEX ix_iva_stati_iva_id ON config.iva_stati USING btree (iva_id)</code> ix_iva_stati_stato_id <code>CREATE INDEX ix_iva_stati_stato_id ON config.iva_stati USING btree (stato_id)</code> pk_iva_stati <code>CREATE UNIQUE INDEX pk_iva_stati ON config.iva_stati USING btree (iva_id, stato_id)</code>"},{"location":"dbzero/config/tabelle/iva_stati/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_iva_stati_ins_upd_clean_fields BEFORE INSERT <code>EXECUTE FUNCTION config.trgfn_iva_stati_ins_upd_clean_fields()</code> trg_iva_stati_ins_upd_clean_fields BEFORE UPDATE <code>EXECUTE FUNCTION config.trgfn_iva_stati_ins_upd_clean_fields()</code> trg_upd_iva_stati_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/messaggi_errore/","title":"Messaggi errore","text":""},{"location":"dbzero/config/tabelle/messaggi_errore/#documentazione-concettuale-tabella-configmessaggi_errore","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.messaggi_errore</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - dbops.error_log  - dbops.audit_log </p> <p>Approfondimenti funzioni:  - script.fn_get_messaggio </p> <p>La tabella <code>config.messaggi_errore</code> \u00e8 il catalogo centralizzato dei testi applicativi (errori, avvisi, messaggi informativi) con supporto per internazionalizzazione (i18n). Ogni record definisce un messaggio univoco, differenziato per codice e lingua, corredato di causa e suggerimenti di soluzione.</p>"},{"location":"dbzero/config/tabelle/messaggi_errore/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Centralizzare i messaggi: evitare hard\u2011coding nei sorgenti SQL, trigger o procedure.</li> <li>Supporto multilingua: gestire versioni localizzate tramite il campo <code>lingua</code> (es. <code>it</code>, <code>en</code>).</li> <li>Placeholder dinamici: usare <code>%s</code> nel campo <code>messaggio</code>, sostituiti a runtime dalla funzione <code>script.fn_get_messaggio</code> con valori contestuali.</li> <li>Collegamento ai log: tabelle come <code>dbops.error_log</code> e <code>dbops.audit_log</code> fanno riferimento a <code>config.messaggi_errore</code> per arricchire i record di log con testi coerenti.</li> </ul>"},{"location":"dbzero/config/tabelle/messaggi_errore/#struttura-dei-campi","title":"\ud83d\udd0d Struttura dei Campi","text":"Nome Tipo Dettagli <code>codice</code> text Codice logico del messaggio (es. <code>ERR001</code>, <code>WARN_TIMEOUT</code>); parte della PK <code>lingua</code> text ISO code della lingua (default: <code>it</code>); parte della PK <code>messaggio</code> text Testo principale, pu\u00f2 contenere placeholder <code>%s</code> <code>causa</code> text Causa del messaggio: breve descrizione del problema riscontrato <code>soluzione</code> text Suggerimenti o passi per risolvere il problema indicato nella causa <code>id</code> bigint PK surrogata, generata automaticamente da sequenza (<code>config.messaggi_errore_id_seq</code>)"},{"location":"dbzero/config/tabelle/messaggi_errore/#vincoli-di-integrita","title":"\ud83d\udd12 Vincoli di Integrit\u00e0","text":"<ul> <li>Primary Key: <code>pk_messaggi_errore (id)</code> garantisce l\u2019identificativo univoco.</li> <li>Unique Constraint: <code>uq_messaggi_errore_codice_lingua (codice, lingua)</code> per evitare duplicati della medesima traduzione.</li> </ul>"},{"location":"dbzero/config/tabelle/messaggi_errore/#relazioni-operative-ed-esempi","title":"\u2699\ufe0f Relazioni Operative ed Esempi","text":"<ol> <li>Collegamento con error_log</li> </ol> <p><pre><code>SELECT e.id,\n       me.codice,\n       me.messaggio,\n       e.context\n  FROM dbops.error_log e\n  JOIN config.messaggi_errore me\n    ON e.messaggio_errore_id = me.id;\n</code></pre> 2. Uso in audit_log o procedure</p> <p><pre><code>-- Recupera e formatta un messaggio con placeholder\nSELECT script.fn_get_messaggio(\n  'ERR001', 'it', ARRAY[e.order_id::text]\n);\n</code></pre> 3. Inserimento di un nuovo messaggio</p> <pre><code>INSERT INTO config.messaggi_errore(\n  codice, lingua, messaggio, causa, soluzione\n) VALUES (\n  'WARN_DISCOUNT', 'en',\n  'Order %s has no discount applied',\n  'Nessuna regola di sconto trovata',\n  'Verificare la configurazione delle promozioni'\n);\n</code></pre>"},{"location":"dbzero/config/tabelle/messaggi_errore/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Manutenzione semplificata: testi gestiti in un\u2019unica tabella.</li> <li>Consistenza e coerenza: unico punto di verit\u00e0 per i messaggi.</li> <li>Internazionalizzazione: aggiunta di nuove lingue facile e veloce.</li> <li>Parametrizzazione: placeholder <code>%s</code> consentono messaggi contestualizzati.</li> <li>Integrazione con log: collegamento trasparente a tabelle di log per ricostruire flussi e storici.</li> </ul> <p>\ud83e\udde0 \u201cUn catalogo centralizzato, multilingua e parametrizzato dei messaggi applicativi favorisce coerenza, facilit\u00e0 di manutenzione e miglior supporto agli utenti.\u201d</p>"},{"location":"dbzero/config/tabelle/messaggi_errore/#tabella-messaggi_errore","title":"\ud83d\udcda Tabella <code>messaggi_errore</code>","text":""},{"location":"dbzero/config/tabelle/messaggi_errore/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default codice text NO lingua text NO 'it'::text messaggio text NO causa text YES soluzione text YES id bigint NO nextval('config.messaggi_errore_id_seq'::regclass)"},{"location":"dbzero/config/tabelle/messaggi_errore/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_messaggi_errore id UNIQUE uq_messaggi_errore_codice_lingua codice, lingua"},{"location":"dbzero/config/tabelle/messaggi_errore/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_messaggi_errore <code>CREATE UNIQUE INDEX pk_messaggi_errore ON config.messaggi_errore USING btree (id)</code> uq_messaggi_errore_codice_lingua <code>CREATE UNIQUE INDEX uq_messaggi_errore_codice_lingua ON config.messaggi_errore USING btree (codice, lingua)</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/modalita_pagamento/","title":"\ud83d\udcda Tabella <code>modalita_pagamento</code>","text":""},{"location":"dbzero/config/tabelle/modalita_pagamento/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.modalita_pagamento_id_seq'::regclass) cod_modalita character NO descrizione character varying NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER"},{"location":"dbzero/config/tabelle/modalita_pagamento/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_modalita_pagamento id UNIQUE uq_modalita_pagamento_cod cod_modalita"},{"location":"dbzero/config/tabelle/modalita_pagamento/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_modalita_pagamento <code>CREATE UNIQUE INDEX pk_modalita_pagamento ON config.modalita_pagamento USING btree (id)</code> uq_modalita_pagamento_cod <code>CREATE UNIQUE INDEX uq_modalita_pagamento_cod ON config.modalita_pagamento USING btree (cod_modalita)</code>"},{"location":"dbzero/config/tabelle/modalita_pagamento/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_modalita_pagamento_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/parameter_overrides/","title":"Parameter overrides","text":""},{"location":"dbzero/config/tabelle/parameter_overrides/#documentazione-concettuale-tabella-configparameter_overrides","title":"\ud83d\udcda Documentazione Concettuale \u2013 Tabella <code>config.parameter_overrides</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:   - config.parameters </p> <p>Approfondimento funzioni :   - script.fn_get_parameter_full </p>"},{"location":"dbzero/config/tabelle/parameter_overrides/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>config.parameter_overrides</code> permette di creare override dinamici dei parametri definiti in <code>config.parameters</code> su diversi livelli di contesto (tenant, user, session, function), garantendo che ogni combinazione <code>(parameter_id, scope_type, scope_id)</code> sia unica e tracciata per audit.</p>"},{"location":"dbzero/config/tabelle/parameter_overrides/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default Descrizione <code>id</code> BIGINT NO IDENTITY Chiave primaria univoca dell\u2019override. <code>parameter_id</code> BIGINT NO \u2014 FK a <code>config.parameters(id)</code>: parametro di cui si esegue l\u2019override. <code>scope_type</code> VARCHAR(20) NO \u2014 Tipo di ambito (<code>tenant</code>,<code>user</code>,<code>session</code>,<code>function</code>, \u2026). <code>scope_id</code> TEXT NO \u2014 Identificativo dell\u2019ambito (ID numerico, session key, nome funzione, \u2026). <code>overridden_value</code> TEXT NO \u2014 Valore che sostituisce <code>default_value</code> per questo ambito. <code>data_insert</code> TIMESTAMP WITHOUT TIME ZONE NO <code>NOW()</code> Timestamp di creazione dell\u2019override. <code>user_insert</code> VARCHAR(80) NO <code>CURRENT_USER</code> Utente che ha creato l\u2019override. <code>data_update</code> TIMESTAMP WITHOUT TIME ZONE NO <code>NOW()</code> Timestamp dell\u2019ultima modifica. <code>user_update</code> VARCHAR(80) NO <code>CURRENT_USER</code> Utente che ha eseguito l\u2019ultima modifica."},{"location":"dbzero/config/tabelle/parameter_overrides/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne Descrizione PRIMARY KEY <code>parameter_overrides_pkey</code> <code>id</code> Chiave primaria. UNIQUE <code>uq_overrides_param_scope</code> <code>parameter_id, scope_type, scope_id</code> Un solo override per combinazione parametro\u2013ambito. FOREIGN KEY <code>fk_overrides_parameter</code> <code>parameter_id</code> Riferimento a <code>config.parameters(id)</code> con <code>ON UPDATE CASCADE</code> e <code>ON DELETE RESTRICT</code>."},{"location":"dbzero/config/tabelle/parameter_overrides/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione <code>trg_upd_overrides_audit_data_user</code> BEFORE UPDATE <code>script.trgfn_upd_audit_data_user_generic()</code>"},{"location":"dbzero/config/tabelle/parameter_overrides/#esempi-di-override","title":"\ud83d\udcdd Esempi di Override","text":""},{"location":"dbzero/config/tabelle/parameter_overrides/#1-override-parametro-valuta","title":"1. Override Parametro \u201cValuta\u201d","text":"<p>Override del parametro <code>DEFAULT_CURRENCY</code> per un tenant (tenant_id = 100) e un user specifico (user_id = 42):</p> <pre><code>-- Tenant override\nINSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code = 'DEFAULT_CURRENCY'),\n   'tenant', '100', 'USD');\n\n-- User override (Django user_id = 42)\nINSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code = 'DEFAULT_CURRENCY'),\n   'user', '42', 'GBP');\n</code></pre>"},{"location":"dbzero/config/tabelle/parameter_overrides/#2-override-parametro-stato","title":"2. Override Parametro \u201cStato\u201d","text":"<p>Override del parametro <code>INITIAL_STATE</code> all\u2019interno della funzione <code>invoice_process</code>:</p> <pre><code>INSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code = 'INITIAL_STATE'),\n   'function', 'invoice_process', 'PENDING_APPROVAL');\n</code></pre> <p>\ud83e\udde0 Questa tabella \u00e8 il cuore della personalizzazione runtime dei parametri: ogni override \u00e8 unico per contesto e tracciato per audit, senza duplicare logica nell\u2019applicazione.</p>"},{"location":"dbzero/config/tabelle/parameter_overrides/#tabella-parameter_overrides","title":"\ud83d\udcda Tabella <code>parameter_overrides</code>","text":""},{"location":"dbzero/config/tabelle/parameter_overrides/#campi-principali_1","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id bigint NO parameter_id bigint NO overridden_value text NO data_insert timestamp without time zone NO now() user_insert character varying NO 'CURRENT_USER'::character varying data_update timestamp without time zone NO now() user_update character varying NO 'CURRENT_USER'::character varying tenant_id integer YES user_id integer YES session_key text YES function_name text YES tx_id uuid YES storicizza boolean YES true"},{"location":"dbzero/config/tabelle/parameter_overrides/#vincoli_1","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_overrides_parameter parameter_id PRIMARY KEY parameter_overrides_pkey id UNIQUE uq_overrides_full_scope user_id, session_key, function_name, tenant_id, parameter_id"},{"location":"dbzero/config/tabelle/parameter_overrides/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione parameter_overrides_pkey <code>CREATE UNIQUE INDEX parameter_overrides_pkey ON config.parameter_overrides USING btree (id)</code> uq_overrides_full_scope <code>CREATE UNIQUE INDEX uq_overrides_full_scope ON config.parameter_overrides USING btree (parameter_id, tenant_id, user_id, session_key, function_name)</code>"},{"location":"dbzero/config/tabelle/parameter_overrides/#trigger_1","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_parameter_overrides_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_parameter_overrides_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_upd_overrides_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> trg_z90_parameter_overrides_upd_dlt_storico BEFORE DELETE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('parameter_override_id')</code> trg_z90_parameter_overrides_upd_dlt_storico BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('parameter_override_id')</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/parameters/","title":"Parameters","text":""},{"location":"dbzero/config/tabelle/parameters/#documentazione-concettuale-tabella-configparameters","title":"\ud83d\udcda Documentazione Concettuale \u2013 Tabella <code>config.parameters</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - config.parameter_overrides </p> <p>Approfondimento funzioni :   - script.fn_get_parameter_full </p> <p>Approfondimento parametri tabellari Vs GUC  - parametri-personalizzati-(GUC)  All'interno del documento viene spiegata la differenza tra parametri GUC e parametri tabellari</p>"},{"location":"dbzero/config/tabelle/parameters/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>config.parameters</code> implementa un\u2019architettura a due livelli per la configurazione dinamica dell\u2019applicazione:</p> <ol> <li> <p>Parametri di sistema (global defaults)</p> </li> <li> <p>Archiviati in una single source of truth: <code>config.parameters</code> contiene tutti i valori di default e i metadati (descrizione, audit).</p> </li> <li> <p>Parametri di contesto (override)</p> </li> <li> <p>Vengono gestiti in <code>config.parameter_overrides</code> (vedi sezione dedicata).</p> </li> </ol>"},{"location":"dbzero/config/tabelle/parameters/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default Descrizione <code>id</code> BIGINT NO <code>nextval(...)</code> Chiave primaria univoca. <code>code</code> VARCHAR(100) NO \u2014 Codice univoco del parametro (es. <code>TIMEOUT</code>). <code>default_value</code> TEXT NO \u2014 Valore di default del parametro. <code>description</code> TEXT S\u00cc \u2014 Descrizione estesa. <code>data_insert</code> TIMESTAMP WITHOUT TIME ZONE NO <code>CURRENT_TIMESTAMP</code> Data di creazione del record. <code>user_insert</code> VARCHAR(80) NO <code>CURRENT_USER</code> Utente creazione. <code>data_update</code> TIMESTAMP WITHOUT TIME ZONE NO <code>CURRENT_TIMESTAMP</code> Data ultima modifica. <code>user_update</code> VARCHAR(80) NO <code>CURRENT_USER</code> Utente ultima modifica."},{"location":"dbzero/config/tabelle/parameters/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne Descrizione PRIMARY KEY <code>pk_parameters</code> <code>id</code> Chiave primaria. UNIQUE <code>uq_parameters_code</code> <code>code</code> Garantisce unicit\u00e0 del codice."},{"location":"dbzero/config/tabelle/parameters/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ol> <li>Override multi-livello (tenant \u2192 user \u2192 session \u2192 function \u2192 default) garantito dallo schema.</li> <li>Nessuna ripetizione di logica: l\u2019applicazione chiama una funzione centralizzata (es. <code>get_parameter_full</code>) che applica la catena di priorit\u00e0.</li> <li>Config runtime: il tenant o utente pu\u00f2 cambiare comportamenti senza toccare file YAML.</li> <li>Audit: possibili trigger su overrides per tracciare chi modifica cosa.</li> <li>Best practice: separare i secrets (es. password) in un Vault, usare Liquibase e caching lato applicazione per performance.</li> </ol>"},{"location":"dbzero/config/tabelle/parameters/#approfondimenti-e-esempi-avanzati","title":"\ud83d\udd0d Approfondimenti e Esempi Avanzati","text":""},{"location":"dbzero/config/tabelle/parameters/#esempio-override-parametro-valuta","title":"Esempio: Override Parametro \u201cValuta\u201d","text":"<p>Supponiamo di avere un parametro globale per la valuta di default:</p> <pre><code>INSERT INTO config.parameters(code, default_value, description)\nVALUES ('DEFAULT_CURRENCY', 'EUR', 'Valuta di default per le transazioni');\n</code></pre> <p>Un tenant specifico (tenant_id = 100) vuole usare USD:</p> <pre><code>INSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code='DEFAULT_CURRENCY'),\n   'tenant', '100', 'USD');\n</code></pre> <p>Per un utente VIP (user_id = 42) si preferisce GBP:</p> <pre><code>INSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code='DEFAULT_CURRENCY'),\n   'user', '42', 'GBP');\n</code></pre> <p>Chiamando:</p> <pre><code>SELECT config.get_parameter_full(\n  'DEFAULT_CURRENCY',\n  p_tenant_id   := 100,\n  p_user_id     := 42,\n  p_session_key := NULL,\n  p_function    := NULL\n);\n</code></pre> <p>otterremo \u2019GBP\u2019, in quanto l\u2019override utente ha priorit\u00e0 su quello tenant.</p>"},{"location":"dbzero/config/tabelle/parameters/#esempio-override-parametro-stato","title":"Esempio: Override Parametro \u201cStato\u201d","text":"<p>Un parametro che definisce lo stato iniziale di un workflow:</p> <pre><code>INSERT INTO config.parameters(code, default_value, description)\nVALUES ('INITIAL_STATE', 'NEW', 'Stato iniziale del documento');\n</code></pre> <p>Durante l\u2019elaborazione di una particolare funzione <code>invoice_process</code>, vogliamo impostare un override:</p> <pre><code>INSERT INTO config.parameter_overrides\n  (parameter_id, scope_type, scope_id, overridden_value)\nVALUES\n  ((SELECT id FROM config.parameters WHERE code='INITIAL_STATE'),\n   'function', 'invoice_process', 'PENDING_APPROVAL');\n</code></pre> <p>La chiamata:</p> <pre><code>SELECT config.get_parameter_full(\n  'INITIAL_STATE',\n  p_tenant_id   := NULL,\n  p_user_id     := NULL,\n  p_session_key := NULL,\n  p_function    := 'invoice_process'\n);\n</code></pre> <p>restituir\u00e0 \u2019PENDING_APPROVAL\u2019, senza impattare la configurazione globale.</p>"},{"location":"dbzero/config/tabelle/parameters/#confronto-guc-vs-modello-a-tabelle","title":"\u2696\ufe0f Confronto: GUC vs Modello a Tabelle","text":"Caratteristica GUC PostgreSQL Tabella Override (<code>config.parameters</code> + <code>config.parameter_overrides</code>) Livelli di applicazione <code>database</code>, <code>role</code>, <code>session</code>, statici <code>global \u2192 tenant \u2192 user \u2192 session \u2192 function</code> (dinamici) Flessibilit\u00e0 Rigido (solo livelli predefiniti) Altamente estendibile a nuovi scope (es. ruolo, feature, modulo) Versioning No (config file o DDL) S\u00ec (versionato con Liquibase in script SQL) Audit Limitato (no audit built\u2011in) S\u00ec (campi <code>data_insert</code>, <code>user_insert</code>, trigger di audit) Accesso runtime Solo <code>SET</code> o <code>current_setting</code> API/Query dirette a database, integrabili in endpoint REST Use case ideale Parametri DB\u2011centrici (work_mem, search_path) Parametri business\u2011centrici (timeout, currency, workflow, feature flags, etc.) <p>Quando scegliere...</p> <ul> <li>GUC PostgreSQL: per configurazioni strettamente tecniche o performance\u2011oriented, con requisiti statici o legati al ruolo DB.</li> <li>Tabella Override: per impostazioni dinamiche, multi\u2011tenant e variabili in base a\u00a0user/session/function, con tracciamento e versioning completo.</li> </ul> <p>\ud83e\udde0 \u201cQuesti esempi mostrano come il modello a due tabelle gestisca override precisi per valuta, stato o qualunque parametro, mantenendo la scalabilit\u00e0 e la manutenibilit\u00e0.\u201d</p>"},{"location":"dbzero/config/tabelle/parameters/#tabella-parameters","title":"\ud83d\udcda Tabella <code>parameters</code>","text":""},{"location":"dbzero/config/tabelle/parameters/#campi-principali_1","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id bigint NO code character varying NO default_value text NO description text YES data_insert timestamp without time zone NO now() user_insert character varying NO 'CURRENT_USER'::character varying data_update timestamp without time zone NO now() user_update character varying NO 'CURRENT_USER'::character varying tx_id uuid YES storicizza boolean YES true"},{"location":"dbzero/config/tabelle/parameters/#vincoli_1","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY parameters_pkey id UNIQUE uq_parameters_code code"},{"location":"dbzero/config/tabelle/parameters/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione parameters_pkey <code>CREATE UNIQUE INDEX parameters_pkey ON config.parameters USING btree (id)</code> uq_parameters_code <code>CREATE UNIQUE INDEX uq_parameters_code ON config.parameters USING btree (code)</code>"},{"location":"dbzero/config/tabelle/parameters/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_parameters_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_parameters_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_upd_parameters_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> trg_z90_parameters_upd_dlt_storico BEFORE DELETE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('parameter_id')</code> trg_z90_parameters_upd_dlt_storico BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('parameter_id')</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/province/","title":"Province","text":""},{"location":"dbzero/config/tabelle/province/#documentazione-concettuale-tabella-configprovince","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.province</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - config.stati  - config.regioni </p> <p>La tabella <code>config.province</code> censisce le province all\u2019interno di uno stato, fornendo informazioni amministrative, codici ISTAT e dati specifici per il calcolo di accise.</p>"},{"location":"dbzero/config/tabelle/province/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Elenco delle province   Contiene tutte le province di uno stato (es. in Italia: RM, MI, FI), con sigla e nome descrittivo.</p> </li> <li> <p>Associazione con la regione   Il campo <code>regione_id</code> collega ogni provincia alla propria regione di appartenenza, garantendo coerenza nella gerarchia geografica.</p> </li> <li> <p>Campo <code>extra_country</code> (JSONB)   Permette di memorizzare metadati aggiuntivi, il cui contenuto pu\u00f2 variare a seconda dello stato:</p> </li> <li> <p>Italia: include <code>codice_istat</code> (identificativo ISTAT della provincia) e, se previsto, <code>provincia_accisa_id</code> per indicare la provincia di riferimento nel calcolo delle accise.</p> </li> <li>Altri paesi: pu\u00f2 ospitare informazioni analoghe (es. codici statistici locali, dati fiscali specifici, fasce territoriali esenzioni, ecc.).</li> </ul>"},{"location":"dbzero/config/tabelle/province/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Gerarchia geografica coerente   Integrando <code>config.province</code> con <code>config.regioni</code> e <code>config.stati</code>, si ottiene una struttura top-down di stati\u2192regioni\u2192province, fondamentale per reportistica territoriale e logistica.</p> </li> <li> <p>Supporto alle accise   Il campo <code>provincia_accisa_id</code> (presente in <code>extra_country</code> per l\u2019Italia) indica quale provincia funge da riferimento per le imposte sulle accise in un\u2019intera regione, semplificando i calcoli fiscali.</p> </li> <li> <p>Flessibilit\u00e0 e adattabilit\u00e0   Grazie a <code>extra_country</code> in formato JSONB, \u00e8 possibile estendere le informazioni di ogni provincia senza modificare lo schema fisico:</p> </li> <li> <p>Esempi: <code>tax_code_format</code>, <code>regional_zone</code>, <code>economic_indicator</code>, ecc.</p> </li> <li> <p>Audit e tracciabilit\u00e0   I trigger associati aggiornano automaticamente <code>data_update</code> e <code>user_update</code>, garantendo la storia completa delle modifiche dei record.</p> </li> </ul> <p>\ud83e\udde0 \"Un elenco strutturato di province, con metadati ISTAT e informazioni fiscali, alla base della gerarchia geografica e dei calcoli di accise in Zero ERP.\"</p>"},{"location":"dbzero/config/tabelle/province/#tabella-province","title":"\ud83d\udcda Tabella <code>province</code>","text":""},{"location":"dbzero/config/tabelle/province/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.province_id_seq'::regclass) descrizione character NO sigla character NO regione_id integer YES data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER extra_country jsonb YES"},{"location":"dbzero/config/tabelle/province/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_province_regione_id regione_id PRIMARY KEY pk_province id UNIQUE uq_province_sigla sigla"},{"location":"dbzero/config/tabelle/province/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_descrizione_provincia <code>CREATE INDEX ix_descrizione_provincia ON config.province USING btree (descrizione)</code> ix_province_regione_id <code>CREATE INDEX ix_province_regione_id ON config.province USING btree (regione_id)</code> ix_province_stato_utilizzo_jsonb <code>CREATE INDEX ix_province_stato_utilizzo_jsonb ON config.province USING btree (((extra_country -&gt;&gt; 'stato_utilizzo'::text)))</code> pk_province <code>CREATE UNIQUE INDEX pk_province ON config.province USING btree (id)</code> uq_province_sigla <code>CREATE UNIQUE INDEX uq_province_sigla ON config.province USING btree (sigla)</code>"},{"location":"dbzero/config/tabelle/province/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_province_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/regioni/","title":"Regioni","text":""},{"location":"dbzero/config/tabelle/regioni/#documentazione-concettuale-tabella-configregioni","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.regioni</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  </p> <ul> <li>config.stati </li> </ul> <p>Approfondimento Funzioni:   </p> <ul> <li>config.trgfn_regioni_ins_upd_clean_fields </li> </ul> <p>La tabella <code>config.regioni</code> censisce le regioni (italiane e di altri stati), fornendo informazioni amministrative e metadati utili per la gerarchia territoriale e la gestione delle accise.</p>"},{"location":"dbzero/config/tabelle/regioni/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Elenco delle regioni   Comprende tutte le regioni appartenenti a uno stato (es. in Italia: <code>Lazio</code>, <code>Campania</code>, <code>Sicilia</code>), con collegamento al rispettivo <code>stato_id</code> in <code>config.stati</code>.</p> </li> <li> <p>Campo <code>extra_country</code> (JSONB)   Contiene metadati aggiuntivi, adattabili a diverse nazionalit\u00e0:</p> </li> <li> <p>Italia: include <code>codice_istat</code> (codice ISTAT della regione) e il flag <code>is_mezzogiorno</code> (booleano) che indica se la regione \u00e8 considerata parte del Mezzogiorno ai fini del calcolo delle accise.</p> </li> <li> <p>Altri stati: pu\u00f2 ospitare attributi analoghi (es. codici statistici regionali, dati fiscali locali, zone economiche speciali, ecc.).</p> </li> <li> <p>Gerarchia territoriale   Collegata a <code>config.stati</code> attraverso <code>stato_id</code>, la tabella definisce la struttura geografica top-down (Stato \u2192 Regione \u2192 Provincia \u2192 Comune \u2192 Stradario).</p> </li> </ul>"},{"location":"dbzero/config/tabelle/regioni/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Coerenza geografica   Utilizzando <code>config.regioni</code> assieme a <code>config.province</code> e <code>config.comuni</code>, si ottiene una gerarchia completa dei territori, necessaria per reportistica, logistica e compliance fiscale.</p> </li> <li> <p>Flessibilit\u00e0 di configurazione   Grazie al campo <code>extra_country</code>, \u00e8 possibile personalizzare le informazioni di ogni regione senza alterare lo schema:</p> </li> <li> <p>In Italia, il flag <code>is_mezzogiorno</code> permette di includere agevolazioni o calcoli specifici per le regioni meridionali (ad esempio riduzioni sulle accise).</p> </li> <li> <p>Per altri stati si possono definire campi come <code>regional_tax_zone</code>, <code>climate_zone</code>, <code>economic_area</code>, ecc.</p> </li> <li> <p>Supporto per accise   Il valore <code>is_mezzogiorno</code> (true/false) nel JSONB aiuta il modulo accise a determinare se una regione riconosce agevolazioni o differenti aliquote fiscali legate alle aree del Mezzogiorno.</p> </li> <li> <p>Audit e tracciabilit\u00e0   I trigger associati aggiornano automaticamente i campi <code>data_update</code> e <code>user_update</code>, mantenendo uno storico dettagliato di tutte le modifiche dei record di regione.</p> </li> </ul> <p>\ud83e\udde0 \"Un elenco configurabile di regioni, arricchito da metadati specifici per il calcolo delle accise e la gerarchia geografica, alla base di un sistema territoriale completo in Zero ERP.\"</p>"},{"location":"dbzero/config/tabelle/regioni/#tabella-regioni","title":"\ud83d\udcda Tabella <code>regioni</code>","text":""},{"location":"dbzero/config/tabelle/regioni/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.regioni_id_seq'::regclass) descrizione character NO stato_id integer NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER extra_country jsonb YES"},{"location":"dbzero/config/tabelle/regioni/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_regioni_stato_id stato_id PRIMARY KEY pk_regioni id"},{"location":"dbzero/config/tabelle/regioni/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_descrizione_regione <code>CREATE INDEX ix_descrizione_regione ON config.regioni USING btree (descrizione)</code> ix_regioni_stato_id <code>CREATE INDEX ix_regioni_stato_id ON config.regioni USING btree (stato_id)</code> pk_regioni <code>CREATE UNIQUE INDEX pk_regioni ON config.regioni USING btree (id)</code>"},{"location":"dbzero/config/tabelle/regioni/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_regioni_ins_upd_clean_fields BEFORE INSERT <code>EXECUTE FUNCTION config.trgfn_regioni_ins_upd_clean_fields()</code> trg_regioni_ins_upd_clean_fields BEFORE UPDATE <code>EXECUTE FUNCTION config.trgfn_regioni_ins_upd_clean_fields()</code> trg_upd_regioni_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/sistema_codici/","title":"Sistema codici","text":""},{"location":"dbzero/config/tabelle/sistema_codici/#documentazione-concettuale-tabella-configsistema_codici","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.sistema_codici</code>","text":"<p>La tabella <code>config.sistema_codici</code> definisce le regole per la generazione automatica di codici alfanumerici, utilizzati in vari ambiti (ordini, clienti, fatture, ecc.).</p>"},{"location":"dbzero/config/tabelle/sistema_codici/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Definizione del formato codice   Consente di specificare per ogni tipo di codice (<code>codice_tipo</code>) un prefisso, un separatore e la lunghezza numerica totale, rendendo parametrica la struttura dei codici generati.</li> <li>Configurazione del meccanismo di sequenza   Tramite il flag <code>usa_sequenza</code> e l\u2019attributo <code>nome_sequenza</code>, si abilita o meno l\u2019utilizzo di una progressione automatica basata su sequenza di database, a garanzia di unicit\u00e0 e ordinariet\u00e0.</li> <li>Attivazione o disattivazione   Il campo <code>attivo</code> permette di abilitare o disabilitare temporaneamente il sistema di generazione per un tipo di codice, senza cancellare la configurazione.</li> </ul>"},{"location":"dbzero/config/tabelle/sistema_codici/#parametri-di-configurazione","title":"\ud83d\udd04 Parametri di Configurazione","text":"<ul> <li><code>prefisso</code>   Prefisso testuale anteposto alla parte numerica (es. <code>ORD-</code>, <code>CL-</code>).</li> <li><code>separatore</code>   Carattere o stringa utilizzata per separare il prefisso dalla parte numerica (es. <code>-</code>, <code>/</code>, <code>_</code>).</li> <li><code>lunghezza_numero</code>   Numero totale di cifre della parte numerica (es. <code>6</code> \u2192 da <code>000001</code> a <code>999999</code>). Se la sequenza supera lo spazio, si deve aggiornare il parametro.</li> <li><code>usa_sequenza</code>   Booleano che, se true, indica che il codice numerico \u00e8 generato tramite una sequenza di database; se false, occorre gestire manualmente l\u2019incremento.</li> <li><code>nome_sequenza</code>   Nome della sequenza di database (es. <code>seq_ordine</code>) da cui attingere il valore numerico.</li> </ul>"},{"location":"dbzero/config/tabelle/sistema_codici/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Uniformit\u00e0 dei codici   Garantisce che tutti i codici generati rispettino lo stesso pattern configurato, migliorando la leggibilit\u00e0 e la coerenza aziendale.</li> <li>Flessibilit\u00e0   La parametrizzazione di <code>prefisso</code>, <code>separatore</code> e <code>lunghezza_numero</code> consente di adattarsi a requisiti diversi (es. prefissi stagionali, codifiche diverse per aree di business) senza modifiche al codice.</li> <li>Affidabilit\u00e0 della sequenza   L\u2019uso di una sequenza di database (quando <code>usa_sequenza</code> \u00e8 true) evita collisioni e garantisce incrementi atomici, utili in contesti ad alto carico.</li> <li>Gestione dinamica   Il flag <code>attivo</code> permette di sospendere la generazione di un dato tipo di codice senza rimuoverne la configurazione, utile per archiviare vecchie configurazioni o per esigenze temporanee.</li> </ul> <p>\ud83e\udde0 \"Un sistema configurabile di generazione codici, che separa prefisso, numerazione e logica di sequenza, per codifiche coerenti e facilmente modificabili.\"</p>"},{"location":"dbzero/config/tabelle/sistema_codici/#tabella-sistema_codici","title":"\ud83d\udcda Tabella <code>sistema_codici</code>","text":""},{"location":"dbzero/config/tabelle/sistema_codici/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.sistema_codici_id_seq'::regclass) codice_tipo text NO descrizione text YES prefisso text NO ''::text separatore text YES ''::text lunghezza_numero integer NO 6 usa_sequenza boolean YES true nome_sequenza text YES attivo boolean NO true data_insert timestamp with time zone YES CURRENT_TIMESTAMP user_insert text YES CURRENT_USER data_update timestamp with time zone YES CURRENT_TIMESTAMP user_update text YES CURRENT_USER"},{"location":"dbzero/config/tabelle/sistema_codici/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_sistema_codici id UNIQUE uq_sistema_codici_codice_tipo codice_tipo"},{"location":"dbzero/config/tabelle/sistema_codici/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_sistema_codici <code>CREATE UNIQUE INDEX pk_sistema_codici ON config.sistema_codici USING btree (id)</code> uq_sistema_codici_codice_tipo <code>CREATE UNIQUE INDEX uq_sistema_codici_codice_tipo ON config.sistema_codici USING btree (codice_tipo)</code>"},{"location":"dbzero/config/tabelle/sistema_codici/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_sistema_codici_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/stati/","title":"Stati","text":""},{"location":"dbzero/config/tabelle/stati/#documentazione-concettuale-tabella-configstati","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.stati</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - config.comuni - config.stradario  - config.stradario_generale - config.toponomastica </p> <p>La tabella <code>config.stati</code> censisce gli stati (o paesi), fornendo codici ufficiali e metadata utili per la gestione geografica e fiscale all\u2019interno di Zero ERP.</p>"},{"location":"dbzero/config/tabelle/stati/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Elenco degli stati/paesi   Contiene tutte le nazioni riconosciute, con sigle e codici ISO standard (ISO 3166-1 alpha-2 e alpha-3) e prefisso telefonico internazionale.</p> </li> <li> <p>Codici ufficiali</p> </li> <li> <p><code>sigla_stato</code>: sigla convenzionale (es. <code>IT</code>, <code>FR</code>, <code>DE</code>).</p> </li> <li> <p><code>codice_iso2</code> e <code>codice_iso3</code>: codici ISO 3166-1 per identificazioni univoche nei processi internazionali.</p> </li> <li> <p>Campo <code>extra_country</code> (JSONB)   Permette di memorizzare informazioni specifiche del paese, estendendo il record con metadati personalizzati.</p> </li> <li> <p>Italia: contiene <code>codice_istat</code> (utilizzato per statistiche Istat) e <code>codice_catastale</code> (necessario per la composizione del codice fiscale).</p> </li> <li> <p>Altri stati: pu\u00f2 ospitare attributi quali <code>regolamenti fiscali</code>, formati di tassazione, fasce climatiche, particolarit\u00e0 valutarie, ecc.</p> </li> <li> <p>Supporto per continent i   Il campo <code>continente</code> classifica ogni stato nel corrispondente continente (Europa, Asia, Africa, America, Oceania), utile per raggruppamenti e reportistica geografica.</p> </li> </ul>"},{"location":"dbzero/config/tabelle/stati/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Unicit\u00e0 e interoperabilit\u00e0   L\u2019uso di codici ISO2 e ISO3 standard assicura che tutti i riferimenti geografici siano consistenti e compatibili con sistemi esterni (es. servizi di geolocalizzazione, normative fiscali).</p> </li> <li> <p>Flessibilit\u00e0 tramite <code>extra_country</code>   Grazie al JSONB, ogni stato pu\u00f2 avere dettagli personalizzati:</p> </li> <li> <p>In Italia, il codice catastale \u00e8 essenziale per calcolare correttamente il codice fiscale dei residenti.</p> </li> <li> <p>Per altri paesi potrebbe esserci un campo <code>vat_format</code> (formato delle Partite IVA), <code>tax_rate</code> (aliquota fiscale standard), <code>address_format</code> (formato degli indirizzi), ecc.</p> </li> <li> <p>Strutturazione gerarchica dei dati geografici   La tabella <code>config.stati</code> \u00e8 alla base della gerarchia geografica:</p> </li> <li> <p>Viene utilizzata da <code>config.toponomastica</code> per collegarsi allo stato di appartenenza della toponomastica.</p> </li> <li> <p>Indirettamente, serve per <code>config.comuni</code>, <code>config.stradario_generale</code> e <code>config.stradario</code>, garantendo coerenza top-down nella gestione degli indirizzi.</p> </li> <li> <p>Audit e tracciabilit\u00e0   Trigger di auditing aggiornano i campi <code>data_update</code> e <code>user_update</code> automaticamente, mantenendo lo storico delle modifiche ai dati di definitizione dello stato.</p> </li> </ul> <p>\ud83e\udde0 \"Un catalogo centralizzato degli stati con codici ISO, metadata fiscali e attributi personalizzati, essenziale per la gestione geografica e fiscale globale in Zero ERP.\"</p>"},{"location":"dbzero/config/tabelle/stati/#tabella-stati","title":"\ud83d\udcda Tabella <code>stati</code>","text":""},{"location":"dbzero/config/tabelle/stati/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.stati_id_seq'::regclass) sigla_stato character varying YES descrizione character varying NO codice_iso2 character YES codice_iso3 character YES codice_telefonico character varying YES continente character varying YES data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER extra_country jsonb YES"},{"location":"dbzero/config/tabelle/stati/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_stati id"},{"location":"dbzero/config/tabelle/stati/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_descrizione_stato <code>CREATE INDEX ix_descrizione_stato ON config.stati USING btree (descrizione)</code> ix_iso2 <code>CREATE INDEX ix_iso2 ON config.stati USING btree (codice_iso2)</code> ix_iso3 <code>CREATE INDEX ix_iso3 ON config.stati USING btree (codice_iso3)</code> ix_sigla_stato <code>CREATE INDEX ix_sigla_stato ON config.stati USING btree (sigla_stato)</code> ix_stato_utilizzo_jsonb <code>CREATE INDEX ix_stato_utilizzo_jsonb ON config.stati USING btree (((extra_country -&gt;&gt; 'stato_utilizzo'::text)))</code> pk_stati <code>CREATE UNIQUE INDEX pk_stati ON config.stati USING btree (id)</code>"},{"location":"dbzero/config/tabelle/stati/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_stati_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/stati_cliente/","title":"\ud83d\udcda Tabella <code>stati_cliente</code>","text":""},{"location":"dbzero/config/tabelle/stati_cliente/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.stati_cliente_id_seq'::regclass) cod_int_stato_cliente character NO desc_stato_cliente character varying NO ''::character varying desc_breve_stato character NO check_lettura character NO 'S'::bpchar abilita_fattura character NO 'S'::bpchar stato_cliente character NO 'IS'::bpchar stato_cliente_ia character NO 'I'::bpchar data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert text NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update text NO CURRENT_USER"},{"location":"dbzero/config/tabelle/stati_cliente/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_stati_cli_abilita_fattura CHECK chk_stati_cli_check_lettura CHECK chk_stati_cli_stato_cliente CHECK chk_stati_cli_stato_cliente_pc PRIMARY KEY pk_stati_cliente id UNIQUE uq_stati_cli_cod_unq cod_int_stato_cliente"},{"location":"dbzero/config/tabelle/stati_cliente/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_config_stati_cli_desc <code>CREATE INDEX ix_config_stati_cli_desc ON config.stati_cliente USING btree (desc_stato_cliente)</code> pk_stati_cliente <code>CREATE UNIQUE INDEX pk_stati_cliente ON config.stati_cliente USING btree (id)</code> uq_stati_cli_cod_unq <code>CREATE UNIQUE INDEX uq_stati_cli_cod_unq ON config.stati_cliente USING btree (cod_int_stato_cliente)</code>"},{"location":"dbzero/config/tabelle/stati_cliente/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_stati_cliente_upd_lock_codiceinterno BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_lock_columns('cod_int_stato_cliente', 'CODICE_NON_MODIFICABILE')</code> trg_upd_stati_cliente_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/stati_pratiche/","title":"\ud83d\udcda Tabella <code>stati_pratiche</code>","text":""},{"location":"dbzero/config/tabelle/stati_pratiche/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.stati_pratiche_id_seq'::regclass) cod_stato character varying NO descrizione character varying NO cd_int_stato character varying NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER"},{"location":"dbzero/config/tabelle/stati_pratiche/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_stati_pratiche id UNIQUE uq_stati_pratiche_cd_int_stato cd_int_stato UNIQUE uq_stati_pratiche_cod_stato cod_stato"},{"location":"dbzero/config/tabelle/stati_pratiche/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_stati_pratiche <code>CREATE UNIQUE INDEX pk_stati_pratiche ON config.stati_pratiche USING btree (id)</code> uq_stati_pratiche_cd_int_stato <code>CREATE UNIQUE INDEX uq_stati_pratiche_cd_int_stato ON config.stati_pratiche USING btree (cd_int_stato)</code> uq_stati_pratiche_cod_stato <code>CREATE UNIQUE INDEX uq_stati_pratiche_cod_stato ON config.stati_pratiche USING btree (cod_stato)</code>"},{"location":"dbzero/config/tabelle/stati_pratiche/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_stati_pratiche_upd_lock_codiceinterno BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_lock_columns('cod_int_stato', 'CODICE_NON_MODIFICABILE')</code> trg_upd_stati_pratiche_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/stradario/","title":"Stradario","text":""},{"location":"dbzero/config/tabelle/stradario/#documentazione-concettuale-tabella-configstradario","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.stradario</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  </p> <ul> <li>config.comuni </li> <li>config.stradario_generale </li> <li>config.codici_postali </li> <li>storico.stradario</li> </ul> <p>Approfondimento funzioni:    </p> <ul> <li>script.trgfn_upd_dlt_storico_generic </li> </ul> <p>La tabella <code>config.stradario</code> definisce la mappa delle vie e strade di ciascun comune, completando il processo di indirizzamento con informazioni di localizzazione e dettagli aggiuntivi.</p>"},{"location":"dbzero/config/tabelle/stradario/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Mappa comunale delle vie   Contiene l\u2019elenco delle strade e vie di ogni comune, con riferimento al prefisso e al nome forniti da <code>config.stradario_generale</code>.</li> <li>Geolocalizzazione   Il campo <code>geoloc</code> (geometry Point, SRID 4326) consente di associare ogni via a coordinate geografiche per mappe e ricerche spaziali.</li> <li>Associazione CAP   Collega ogni via a un codice postale obbligatorio (<code>codice_postale_id</code>), gestito nella tabella <code>config.codici_postali</code>.</li> <li>Informazioni estese   Il campo <code>extra_info</code> (JSONB) permette di memorizzare dati aggiuntivi, come eventuali frazioni, indicazioni o note specifiche.</li> <li>Storicizzazione   Il campo <code>storicizza</code> se true attiva il trigger per la storicizzazione delle informazioni sulla tabella <code>storico.stradario</code>. Il front-end dovr\u00e0 sempre impostare a true il valore, solo per funzioni administrator si potr\u00e0 non gestire a true.</li> </ul>"},{"location":"dbzero/config/tabelle/stradario/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>config.comuni</code>   Il campo <code>comune_id</code> identifica il comune di appartenenza, instaurando la relazione tra strade e territorio.</li> <li><code>config.stradario_generale</code>   Il campo <code>via_id</code> fa riferimento al catalogo neutro di prefissi e nomi delle vie.</li> <li><code>config.codici_postali</code> <code>codice_postale_id</code> impone il CAP di competenza per ciascuna via.</li> <li><code>storico.stradario</code> <code>storico</code> True attiva il trigger per il salvataggio delle informazioni.</li> </ul>"},{"location":"dbzero/config/tabelle/stradario/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Copertura completa del territorio   Permette di mappare ogni strada all\u2019interno del comune, gestendo situazioni di vie duplicate con CAP diversi.</li> <li>Supporto GIS   Grazie al campo di geometria, rende disponibili servizi di geocoding, routing e rappresentazione cartografica.</li> <li>Flessibilit\u00e0 di estensione   Il JSONB <code>extra_info</code> consente di aggiungere attributi specifici (es. frazioni, note storiche) senza modificare lo schema.</li> <li>Auditing e storicizzazione   Trigger automatici mantengono traccia di modifiche e cancellazioni, garantendo consistenza storica dei dati.</li> </ul> <p>\ud83e\udde0 \"Una vista dettagliata e georeferenziata delle strade comunali, con CAP obbligatorio e informazioni flessibili per ogni via.\"</p>"},{"location":"dbzero/config/tabelle/stradario/#tabella-stradario","title":"\ud83d\udcda Tabella <code>stradario</code>","text":""},{"location":"dbzero/config/tabelle/stradario/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.stradario_id_seq'::regclass) comune_id integer NO stradario_generale_id integer NO geoloc USER-DEFINED YES extra_info jsonb YES data_insert timestamp with time zone YES CURRENT_TIMESTAMP user_insert character varying YES CURRENT_USER data_update timestamp with time zone YES CURRENT_TIMESTAMP user_update character varying YES CURRENT_USER codice_postale_id integer NO storicizza boolean NO false tx_id uuid YES"},{"location":"dbzero/config/tabelle/stradario/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_geoloc_srid FOREIGN KEY fk_stradario_codice_postale_id codice_postale_id FOREIGN KEY fk_stradario_comune_id comune_id FOREIGN KEY fk_stradario_stradario_generale_id stradario_generale_id PRIMARY KEY pk_stradario id UNIQUE uq_stradario_comune_stradario_gen_cp stradario_generale_id, codice_postale_id, comune_id"},{"location":"dbzero/config/tabelle/stradario/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_stradario_codice_postale_id <code>CREATE INDEX ix_stradario_codice_postale_id ON config.stradario USING btree (codice_postale_id)</code> ix_stradario_comune_id <code>CREATE INDEX ix_stradario_comune_id ON config.stradario USING btree (comune_id)</code> ix_stradario_geoloc <code>CREATE INDEX ix_stradario_geoloc ON config.stradario USING gist (geoloc)</code> ix_stradario_stradario_generale_id <code>CREATE INDEX ix_stradario_stradario_generale_id ON config.stradario USING btree (stradario_generale_id)</code> pk_stradario <code>CREATE UNIQUE INDEX pk_stradario ON config.stradario USING btree (id)</code> uq_stradario_comune_stradario_gen_cp <code>CREATE UNIQUE INDEX uq_stradario_comune_stradario_gen_cp ON config.stradario USING btree (comune_id, stradario_generale_id, codice_postale_id)</code>"},{"location":"dbzero/config/tabelle/stradario/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_stradario_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_stradario_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_upd_stradario_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> trg_z90_stradario_upd_dlt_storico BEFORE DELETE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('stradario_id')</code> trg_z90_stradario_upd_dlt_storico BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('stradario_id')</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/stradario_generale/","title":"Stradario generale","text":""},{"location":"dbzero/config/tabelle/stradario_generale/#documentazione-concettuale-tabella-configstradario_generale","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.stradario_generale</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - config.stradario  - config.toponomastica </p> <p>La tabella <code>config.stradario_generale</code> elenca i nomi delle vie, strade e piazze, associandoli ai tipi di toponimo definiti in <code>config.toponomastica</code>. Agisce come base indipendente dalla localizzazione geografica: per ottenere l\u2019indirizzo completo e posizionarlo su un comune specifico, si collega alla tabella <code>config.stradario</code>.</p>"},{"location":"dbzero/config/tabelle/stradario_generale/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Composizione del toponimo   Unisce il prefisso toponomastico (es. <code>VIA</code>, <code>PIAZZA</code>) al nome specifico (es. <code>Garibaldi</code>, <code>Roma</code>) per formare la descrizione completa.</li> <li>Indipendenza geografica   Mantiene un catalogo centralizzato dei nomi senza riferimenti a comuni o aree, favorendo il riuso e la coerenza.</li> <li>Integrazione con stradario locale   Collegata a <code>config.stradario</code>, che associa ogni record di <code>stradario_generale</code> al comune di appartenenza, consentendo la geolocalizzazione e l\u2019uso nei processi di indirizzamento.</li> </ul>"},{"location":"dbzero/config/tabelle/stradario_generale/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Standardizzazione dei nomi   Assicura che tutte le vie e piazze abbiano una descrizione uniforme, evitando varianti e duplicazioni.</li> <li>Flessibilit\u00e0 di utilizzo   Essendo indipendente dal territorio, lo stesso nome pu\u00f2 essere utilizzato in comuni diversi, collegando poi ciascuna occorrenza a un\u2019area specifica.</li> <li>Manutenzione semplificata   Aggiornamenti e aggiunte di nuovi nomi avvengono in un unico luogo, propagandosi a tutti i dataset di indirizzi.</li> </ul> <p>\ud83e\udde0 \"Un catalogo neutro di nomi di vie e piazze, pronta base per costruire indirizzi completi e localizzati attraverso l\u2019associazione con i comuni.\"</p>"},{"location":"dbzero/config/tabelle/stradario_generale/#tabella-stradario_generale","title":"\ud83d\udcda Tabella <code>stradario_generale</code>","text":""},{"location":"dbzero/config/tabelle/stradario_generale/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.stradario_generale_id_seq'::regclass) toponomastica_id integer NO descrizione character varying NO descrizione_breve character varying NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER"},{"location":"dbzero/config/tabelle/stradario_generale/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_stradario_generale_toponomastica_id toponomastica_id PRIMARY KEY pk_stradario_generale id UNIQUE uq_toponomastica_descr toponomastica_id, descrizione"},{"location":"dbzero/config/tabelle/stradario_generale/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_stradario_generale_toponomastica_id <code>CREATE INDEX ix_stradario_generale_toponomastica_id ON config.stradario_generale USING btree (toponomastica_id)</code> pk_stradario_generale <code>CREATE UNIQUE INDEX pk_stradario_generale ON config.stradario_generale USING btree (id)</code> uq_toponomastica_descr <code>CREATE UNIQUE INDEX uq_toponomastica_descr ON config.stradario_generale USING btree (toponomastica_id, descrizione)</code>"},{"location":"dbzero/config/tabelle/stradario_generale/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_stradario_generale_upd_non_permesso BEFORE UPDATE <code>EXECUTE FUNCTION config.trgfn_stradario_generale_upd_non_permesso()</code> trg_upd_stradario_generale_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/tipi_attivita/","title":"\ud83d\udcda Tabella <code>tipi_attivita</code>","text":""},{"location":"dbzero/config/tabelle/tipi_attivita/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.tipi_attivita_id_seq'::regclass) cod_tipo_attivita character varying NO descrizione character varying NO cd_int_tipo_attivita character varying NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER"},{"location":"dbzero/config/tabelle/tipi_attivita/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_tipi_attivita id UNIQUE uq_tipi_attivita_cd_int_tipo_attivita cd_int_tipo_attivita UNIQUE uq_tipi_attivita_cod_tipo_attivita cod_tipo_attivita"},{"location":"dbzero/config/tabelle/tipi_attivita/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_tipi_attivita <code>CREATE UNIQUE INDEX pk_tipi_attivita ON config.tipi_attivita USING btree (id)</code> uq_tipi_attivita_cd_int_tipo_attivita <code>CREATE UNIQUE INDEX uq_tipi_attivita_cd_int_tipo_attivita ON config.tipi_attivita USING btree (cd_int_tipo_attivita)</code> uq_tipi_attivita_cod_tipo_attivita <code>CREATE UNIQUE INDEX uq_tipi_attivita_cod_tipo_attivita ON config.tipi_attivita USING btree (cod_tipo_attivita)</code>"},{"location":"dbzero/config/tabelle/tipi_attivita/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_tipi_attivita_upd_lock_codiceinterno BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_lock_columns('cd_int_tipo_attivita', 'CODICE_NON_MODIFICABILE')</code> trg_upd_tipi_attivita_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/tipi_contatti/","title":"Tipi contatti","text":""},{"location":"dbzero/config/tabelle/tipi_contatti/#documentazione-concettuale-tabella-configtipi_contatti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.tipi_contatti</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - anagrafiche.contatti </p> <p>Approfondimenti funzioni:  - script.trgfn_lock_columns  - script.trgfn_upd_audit_data_user_generic </p>"},{"location":"dbzero/config/tabelle/tipi_contatti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>config.tipi_contatti</code> definisce le categorie di contatto utilizzabili nell\u2019anagrafica dei soggetti, fornendo un codice interno non modificabile e una descrizione estesa.</p>"},{"location":"dbzero/config/tabelle/tipi_contatti/#vincoli-e-caratteristiche-chiave","title":"\ud83d\udd0d Vincoli e Caratteristiche Chiave","text":"<ul> <li>Codice interno (<code>cod_int_tipo_contatto</code>): non modificabile, garantisce stabilit\u00e0 dei riferimenti.</li> <li>Descrizione obbligatoria: la <code>descrizione</code> non pu\u00f2 essere vuota.</li> <li>Unicit\u00e0: ogni codice interno deve essere unico.</li> </ul>"},{"location":"dbzero/config/tabelle/tipi_contatti/#esempi-di-tipologie","title":"\ud83d\udccb Esempi di Tipologie","text":"<p>Alcuni esempi di tipologie di contatto configurabili:</p> <ul> <li> <p>Ruoli professionali:</p> </li> <li> <p><code>Amministrazione</code></p> </li> <li><code>Tecnico</code></li> <li><code>Legale</code></li> <li><code>Commerciale</code></li> <li> <p>Altri tipi:</p> </li> <li> <p><code>Assistente</code></p> </li> <li><code>Responsabile Clienti</code></li> <li><code>Supporto Tecnico</code></li> </ul>"},{"location":"dbzero/config/tabelle/tipi_contatti/#relazioni-e-indici","title":"\ud83d\udd17 Relazioni e Indici","text":"<ul> <li> <p>FK in ingresso:</p> </li> <li> <p><code>anagrafiche.contatti.tipo_contatto_id</code> \u2192 <code>config.tipi_contatti(id)</code></p> </li> <li> <p>Indici:</p> </li> <li> <p>Unico su <code>cod_int_tipo_contatto</code></p> </li> </ul>"},{"location":"dbzero/config/tabelle/tipi_contatti/#trigger-associati","title":"\u2699\ufe0f Trigger Associati","text":"<ol> <li> <p><code>trg_tipi_contatti_upd_lock_cod_interno</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code> su <code>cod_int_tipo_contatto</code></p> </li> <li> <p>Cosa: blocca la modifica del codice interno, utilizzando <code>script.trgfn_lock_columns</code> con error code <code>CODICE_NON_MODIFICABILE</code>.</p> </li> <li> <p><code>trg_upd_tipi_contatti_audit_data_user</code></p> </li> <li> <p>Quando: <code>BEFORE UPDATE</code></p> </li> <li>Cosa: aggiorna i campi di audit <code>data_update</code> e <code>user_update</code> automaticamente.</li> </ol>"},{"location":"dbzero/config/tabelle/tipi_contatti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Stabilit\u00e0 dei riferimenti: codice interno immutabile garantisce coerenza in interfacce e logica.</li> <li>Integrit\u00e0 dei dati: constraint e trigger impediscono codici duplicati o vuoti.</li> <li>Audit completo: tracciamento automatico delle modifiche.</li> <li>Centralizzazione: un\u2019unica fonte per definire tutte le tipologie di contatto.</li> </ul> <p>\ud83e\udde0 \u201cUna tabella di configurazione per i tipi di contatto assicura coerenza e stabilit\u00e0 nei riferimenti applicativi e semplifica la manutenzione delle logiche di contatto.\u201d</p>"},{"location":"dbzero/config/tabelle/tipi_contatti/#tabella-tipi_contatti","title":"\ud83d\udcda Tabella <code>tipi_contatti</code>","text":""},{"location":"dbzero/config/tabelle/tipi_contatti/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.tipi_contatti_id_seq'::regclass) descrizione text NO cod_int_tipo_contatto character varying NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert text NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update text NO CURRENT_USER"},{"location":"dbzero/config/tabelle/tipi_contatti/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_tipi_contatti_descr_non_vuota PRIMARY KEY pk_tipi_contatti id UNIQUE uq_tipi_contatti_cod_int_contatto cod_int_tipo_contatto"},{"location":"dbzero/config/tabelle/tipi_contatti/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_tipi_contatti <code>CREATE UNIQUE INDEX pk_tipi_contatti ON config.tipi_contatti USING btree (id)</code> uq_tipi_contatti_cod_int_contatto <code>CREATE UNIQUE INDEX uq_tipi_contatti_cod_int_contatto ON config.tipi_contatti USING btree (cod_int_tipo_contatto)</code>"},{"location":"dbzero/config/tabelle/tipi_contatti/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_tipi_contatti_upd_lock_cod_interno BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_lock_columns('cd_int_tipo_attivita', 'CODICE_NON_MODIFICABILE')</code> trg_upd_tipi_contatti_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/tipi_documenti/","title":"\ud83d\udcda Tabella <code>tipi_documenti</code>","text":""},{"location":"dbzero/config/tabelle/tipi_documenti/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.tipi_documenti_id_seq'::regclass) cod_tipo_documento character varying NO descrizione character varying NO cd_int_tipo_documento character varying NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER"},{"location":"dbzero/config/tabelle/tipi_documenti/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_tipi_documenti id UNIQUE uq_tipi_documenti_cd_int_tipo_documento cd_int_tipo_documento UNIQUE uq_tipi_documenti_cod_tipo_documento cod_tipo_documento"},{"location":"dbzero/config/tabelle/tipi_documenti/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_tipi_documenti <code>CREATE UNIQUE INDEX pk_tipi_documenti ON config.tipi_documenti USING btree (id)</code> uq_tipi_documenti_cd_int_tipo_documento <code>CREATE UNIQUE INDEX uq_tipi_documenti_cd_int_tipo_documento ON config.tipi_documenti USING btree (cd_int_tipo_documento)</code> uq_tipi_documenti_cod_tipo_documento <code>CREATE UNIQUE INDEX uq_tipi_documenti_cod_tipo_documento ON config.tipi_documenti USING btree (cod_tipo_documento)</code>"},{"location":"dbzero/config/tabelle/tipi_documenti/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_tipi_contatti_upd_lock_cod_interno BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_lock_columns('cd_int_tipo_documento', 'CODICE_NON_MODIFICABILE')</code> trg_upd_tipi_documenti_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/tipi_indirizzi/","title":"Tipi indirizzi","text":""},{"location":"dbzero/config/tabelle/tipi_indirizzi/#tabella-configtipi_indirizzi","title":"\ud83d\udcda Tabella <code>config.tipi_indirizzi</code>","text":""},{"location":"dbzero/config/tabelle/tipi_indirizzi/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>config.tipi_indirizzi</code> centralizza i tipi di indirizzo utilizzabili in Zero ERP, come ad esempio Residenza, Domicilio Fiscale, Sede Legale, Sede Operativa, Corrispondenza Postale, Indirizzo di Fornitura, ecc. </p>"},{"location":"dbzero/config/tabelle/tipi_indirizzi/#vincoli","title":"\ud83d\udd12 Vincoli","text":"<ul> <li>PRIMARY KEY: <code>pk_tipi_indirizzi</code> su <code>id</code></li> <li>UNIQUE: <code>uq_tipi_indirizzi_cod_int_tipo_indirizzo</code> su <code>cod_int_tipo_indirizzo</code></li> <li>CHECK: <code>chk_cod_int_tipo_indirizzo</code> per garantire che il codice interno non sia vuoto</li> </ul>"},{"location":"dbzero/config/tabelle/tipi_indirizzi/#trigger","title":"\ud83d\udea8 Trigger","text":"<ul> <li><code>trg_tipi_indirizzi_upd_lock_cod_interno</code> (BEFORE UPDATE): blocca la modifica di <code>cod_int_tipo_indirizzo</code> tramite <code>script.trgfn_lock_columns</code>.</li> <li><code>trg_upd_tipi_indirizzi_audit_data_user</code> (BEFORE UPDATE): aggiorna <code>data_update</code> e <code>user_update</code> con <code>script.trgfn_upd_audit_data_user_generic()</code>.</li> </ul>"},{"location":"dbzero/config/tabelle/tipi_indirizzi/#esempi-di-tipi-indirizzo","title":"\ud83d\udca1 Esempi di Tipi Indirizzo","text":"<p>I codici interni attualmente definiti in <code>config.tipi_indirizzi</code> sono:</p> Codice Interno Descrizione <code>RES</code> Residenza <code>DOMFISC</code> Domicilio Fiscale <code>SEDELEG</code> Sede Legale <code>SEDEOP</code> Sede Operativa <code>POSTA</code> Corrispondenza Postale <code>FORNITURA</code> Indirizzo Fornitura <p>\u2139\ufe0f Il codice interno (<code>cod_int_tipo_indirizzo</code>) \u00e8 utilizzato in logica applicativa e non pu\u00f2 essere modificato una volta inserito.</p>"},{"location":"dbzero/config/tabelle/tipi_indirizzi/#uso-e-casi-doro","title":"\u2699\ufe0f Uso e Casi d\u2019Oro","text":"<ul> <li>Assegnazione tipo indirizzo: viene referenziato in tutte le tabelle che gestiscono indirizzi (es. <code>anagrafiche.indirizzi</code>) per identificare il contesto d\u2019uso.</li> <li>Filtri e reportistica: consente di raggruppare gli indirizzi per tipo nelle interfacce utente e nei report.</li> <li>Stradario &amp; Anagrafiche: si integra con la struttura <code>anagrafiche.indirizzi_dettaglio</code> e la master table <code>config.stradario</code>, collegando i tipi di indirizzi alla georeferenziazione completa (via, comune, provincia, regione) e ai soggetti in anagrafica, per avere una vista centralizzata di tutti gli indirizzi.</li> <li>Estendibilit\u00e0: per aggiungere nuovi tipi, basta inserire una nuova riga in questa tabella con il codice interno e la descrizione desiderati.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare i tipi di indirizzo in <code>config.tipi_indirizzi</code> garantisce coerenza, facilit\u00e0 di estensione e chiarezza nell\u2019assegnazione e gestione degli indirizzi in Zero ERP.\u201d</p>"},{"location":"dbzero/config/tabelle/tipi_indirizzi/#tabella-tipi_indirizzi","title":"\ud83d\udcda Tabella <code>tipi_indirizzi</code>","text":""},{"location":"dbzero/config/tabelle/tipi_indirizzi/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.tipi_indirizzi_id_seq'::regclass) cod_int_tipo_indirizzo character varying NO descrizione text NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert text NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update text NO CURRENT_USER"},{"location":"dbzero/config/tabelle/tipi_indirizzi/#vincoli_1","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_cod_int_tipo_indirizzo PRIMARY KEY pk_tipi_indirizzi id UNIQUE uq_tipi_indirizzi_cod_int_tipo_indirizzo cod_int_tipo_indirizzo"},{"location":"dbzero/config/tabelle/tipi_indirizzi/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_tipi_indirizzi <code>CREATE UNIQUE INDEX pk_tipi_indirizzi ON config.tipi_indirizzi USING btree (id)</code> uq_tipi_indirizzi_cod_int_tipo_indirizzo <code>CREATE UNIQUE INDEX uq_tipi_indirizzi_cod_int_tipo_indirizzo ON config.tipi_indirizzi USING btree (cod_int_tipo_indirizzo)</code>"},{"location":"dbzero/config/tabelle/tipi_indirizzi/#trigger_1","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_tipi_indirizzi_upd_lock_cod_interno BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_lock_columns('cod_int_tipo_indirizzo', 'CODICE_NON_MODIFICABILE')</code> trg_upd_tipi_indirizzi_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/tipi_ruoli/","title":"Tipi ruoli","text":""},{"location":"dbzero/config/tabelle/tipi_ruoli/#documentazione-concettuale-tabella-configtipi_ruoli","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.tipi_ruoli</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - anagrafiche.soggetti_ruoli </p> <p>La tabella <code>config.tipi_ruoli</code> serve a definire i ruoli che un soggetto (individuo o societ\u00e0) pu\u00f2 assumere all'interno del software Zero ERP. In questo modo la tabella <code>soggetti</code> rimane generica e memorizza solo i dati anagrafici di base, mentre <code>tipi_ruoli</code> specifica in quali ruoli (cliente, fornitore, gestore, ecc.) ciascun soggetto si trova, a seconda delle esigenze aziendali.</p>"},{"location":"dbzero/config/tabelle/tipi_ruoli/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Distinzione dei ruoli: consente di assegnare a ogni record della tabella <code>soggetti</code> uno o pi\u00f9 ruoli funzionali (es. cliente, fornitore, gestore).</li> <li>Flessibilit\u00e0 operativa: un soggetto pu\u00f2 assumere ruoli differenti in contesti diversi (ad esempio un fornitore che pu\u00f2 diventare cliente in altre transazioni).</li> <li>Ruolo \"gestore\": l\u2019azienda stessa che utilizza il software viene registrata in <code>soggetti</code> e associata al ruolo interno \u201cgestore\u201d per identificare i dati dell\u2019utente principale o amministratore del sistema.</li> </ul>"},{"location":"dbzero/config/tabelle/tipi_ruoli/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>anagrafica.soggetti_ruoli</code></p> </li> <li> <p>Un soggetto pu\u00f2 avere pi\u00f9 righe in <code>config.tipi_ruoli</code>, ad esempio:</p> <ul> <li><code>soggetto_id = 5</code>, <code>cd_int_ruolo = \"CLIENTE\"</code></li> <li><code>soggetto_id = 5</code>, <code>cd_int_ruolo = \"FORNITORE\"</code></li> <li>Constraint di unicit\u00e0</li> </ul> </li> <li> <p>Il campo <code>cd_int_ruolo</code> \u00e8 un codice interno univoco (<code>UNIQUE</code>) per ogni riga di <code>tipi_ruoli</code>, utilizzato come riferimento stabile nelle logiche applicative.</p> </li> <li>Il campo <code>cod_ruolo</code> identifica il ruolo in modo testuale/abanndonabile (es. \"CLIE\" per cliente, \"FORN\" per fornitore), anch\u2019esso unico.</li> </ul>"},{"location":"dbzero/config/tabelle/tipi_ruoli/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Invarianza del codice interno   Grazie al trigger di lock, il <code>cd_int_ruolo</code> rimane stabile, semplificando tutte le logiche applicative che fanno riferimento al codice ruolo (es. permessi, reportistica, workflow).</p> </li> <li> <p>Audit automatico   Il trigger di audit garantisce la tracciabilit\u00e0 delle modifiche, facilitando la diagnostica storica e la sicurezza: ogni aggiornamento registra data e utente di modifica.</p> </li> <li> <p>Supporto multi-ruolo   Un soggetto pu\u00f2 ricoprire pi\u00f9 ruoli contemporaneamente o nel tempo: ad esempio un partner commerciale che \u00e8 sia fornitore che cliente, senza dover duplicare i dati anagrafici di base.</p> </li> <li> <p>Estendibilit\u00e0 futura   Se in futuro si volessero introdurre ruoli nuovi o specifici (es. \u201cpartner logistico\u201d, \u201crappresentante\u201d), \u00e8 sufficiente aggiungere una nuova riga in <code>tipi_ruoli</code>, senza modificare lo schema della tabella <code>soggetti</code>.</p> </li> </ul> <p>\ud83e\udde0 \"Una tabella leggera e versatile per gestire, senza duplicazioni, i ruoli operativi dei soggetti nel sistema Zero ERP, garantendo integrit\u00e0, audit e flessibilit\u00e0.\"</p>"},{"location":"dbzero/config/tabelle/tipi_ruoli/#tabella-tipi_ruoli","title":"\ud83d\udcda Tabella <code>tipi_ruoli</code>","text":""},{"location":"dbzero/config/tabelle/tipi_ruoli/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.tipi_ruoli_id_seq'::regclass) cod_ruolo character varying NO descrizione character varying NO cd_int_ruolo character varying NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER"},{"location":"dbzero/config/tabelle/tipi_ruoli/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_tipi_ruoli id UNIQUE uq_tipi_ruoli_cd_int_ruolo cd_int_ruolo UNIQUE uq_tipi_ruoli_cod_ruolo cod_ruolo"},{"location":"dbzero/config/tabelle/tipi_ruoli/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_tipi_ruoli <code>CREATE UNIQUE INDEX pk_tipi_ruoli ON config.tipi_ruoli USING btree (id)</code> uq_tipi_ruoli_cd_int_ruolo <code>CREATE UNIQUE INDEX uq_tipi_ruoli_cd_int_ruolo ON config.tipi_ruoli USING btree (cd_int_ruolo)</code> uq_tipi_ruoli_cod_ruolo <code>CREATE UNIQUE INDEX uq_tipi_ruoli_cod_ruolo ON config.tipi_ruoli USING btree (cod_ruolo)</code>"},{"location":"dbzero/config/tabelle/tipi_ruoli/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_tipi_ruoli_upd_lock_codiceinterno BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_lock_columns('cd_int_ruolo', 'CODICE_NON_MODIFICABILE')</code> trg_upd_tipi_ruoli_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/tipi_soggetto/","title":"Tipi soggetto","text":"<p>\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.tipi_soggetto</code></p> <p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - config.tipi_soggetto_dettaglio  - Impatto su:  <code>anagrafiche.soggetti</code> (colonna <code>tipo_soggetto</code>)</p>"},{"location":"dbzero/config/tabelle/tipi_soggetto/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Definire le macro-tipologie di soggetto (es. Persona Fisica, Persona Giuridica, Ente, ecc.)</li> <li>Separare la classificazione di alto livello dalla gestione dettagliata dei tipi soggetto (internazionale) tramite la tabella di dettaglio.</li> </ul>"},{"location":"dbzero/config/tabelle/tipi_soggetto/#problematiche-affrontate","title":"\ud83d\udd0d Problematiche Affrontate","text":"<ol> <li>Verifica CF/P.IVA: alcuni controlli formali (codice fiscale, partita IVA) dipendono dal tipo di soggetto. Centralizzare le macro\u2011tipologie consente di applicare regole diverse a seconda del contesto.</li> <li>Internazionalizzazione: supportare soggetti di paesi diversi richiede descrizioni e regole specifiche. La distinzione macro/dettaglio migliora l\u2019estendibilit\u00e0.</li> <li>Refactoring di <code>anagrafiche.soggetti</code>: la colonna <code>tipo_soggetto</code> passa da valore fisso (<code>F</code>, <code>G</code>, <code>X</code>) a chiave esterna verso <code>config.tipi_soggetto_dettaglio</code>, rendendo il modello pi\u00f9 flessibile.</li> </ol>"},{"location":"dbzero/config/tabelle/tipi_soggetto/#vincoli-e-audit","title":"\ud83d\udd12 Vincoli e Audit","text":"<ul> <li>PK: <code>tipi_soggetto_pkey</code> su <code>id</code> (VARCHAR(10)).</li> <li>Trigger di auditing: <code>trg_upd_overrides_audit_data_user</code> aggiorna automaticamente i campi <code>data_update</code> e <code>user_update</code> tramite <code>script.trgfn_upd_audit_data_user_generic()</code>.</li> </ul>"},{"location":"dbzero/config/tabelle/tipi_soggetto/#meccanismo-di-integrazione","title":"\u2699\ufe0f Meccanismo di Integrazione","text":"<ol> <li>Popolamento    Inserire righe con codici standardizzati, es.:</li> </ol> <p><pre><code>INSERT INTO config.tipi_soggetto(id, descrizione)\nVALUES\n  ('PF', 'Persona Fisica'),\n  ('PG', 'Persona Giuridica'),\n  ('EN', 'Ente Pubblico');\n</code></pre> 3. Estensione    La tabella <code>config.tipi_soggetto_dettaglio</code> conterr\u00e0 i sotto-tipi o attributi specifici (nazione, categoria fiscale, ecc.).</p>"},{"location":"dbzero/config/tabelle/tipi_soggetto/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Modularit\u00e0: separazione chiara tra tipologie di alto livello e dettagli, semplificando manutenzione e versioning.</li> <li>Estendibilit\u00e0 internazionale: aggiungere nuovi paesi o regole fiscali senza alterare la tabella principale dei soggetti.</li> <li>Coerenza dei controlli: applicare regole di validazione CF/P.IVA in base al tipo_soggetto_dettaglio associato, migliorando l\u2019accuratezza.</li> </ul> <p>\ud83e\udde0 \u201cDistinguere le macro-tipologie dai dettagli consente un\u2019architettura pi\u00f9 flessibile, pronta ad adattarsi a normative internazionali e a regole di validazione diverse.\u201d</p>"},{"location":"dbzero/config/tabelle/tipi_soggetto/#tabella-tipi_soggetto","title":"\ud83d\udcda Tabella <code>tipi_soggetto</code>","text":""},{"location":"dbzero/config/tabelle/tipi_soggetto/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id character varying NO descrizione character varying NO user_insert text NO CURRENT_USER data_insert timestamp with time zone NO now() user_update text YES data_update timestamp with time zone YES"},{"location":"dbzero/config/tabelle/tipi_soggetto/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_tipi_soggetto id"},{"location":"dbzero/config/tabelle/tipi_soggetto/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_tipi_soggetto <code>CREATE UNIQUE INDEX pk_tipi_soggetto ON config.tipi_soggetto USING btree (id)</code>"},{"location":"dbzero/config/tabelle/tipi_soggetto/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_overrides_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/tipi_soggetto_dettaglio/","title":"\ud83d\udcda Tabella <code>config.tipi_soggetto_dettaglio</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - config.tipi_soggetto  - config.stati  - Impatto su:   <code>anagrafiche.soggetti</code> (colonna <code>tipo_soggetto_dettaglio_id</code>) </p> <p>La tabella <code>config.tipi_soggetto_dettaglio</code> definisce le tipologie dettagliate di soggetto (persone fisiche, giuridiche, enti, ecc.) in base al paese di appartenenza, specificando i formati validi per Codice Fiscale e Partita IVA.</p>"},{"location":"dbzero/config/tabelle/tipi_soggetto_dettaglio/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Gestione Internazionale   Permette di adattare la validazione di CF/P.IVA alle regole di ciascuno Stato (<code>stato_iso2</code>).</li> <li>Estendibilit\u00e0   Il collegamento a <code>config.tipi_soggetto</code> garantisce macro-categorie estensibili (Fisico, Giuridico, Ente, \u2026).</li> <li>Controllo Applicativo   Centralizza il formato di CF/P.IVA, evitando logiche duplicate nel backend.</li> </ul>"},{"location":"dbzero/config/tabelle/tipi_soggetto_dettaglio/#collegamenti","title":"\ud83d\udd0d Collegamenti","text":"<ul> <li>FK \u2192 <code>config.tipi_soggetto(tipo_soggetto_id)</code>   Definisce la macro-tipologia.</li> <li>FK \u2192 <code>config.stati(codice_iso2)</code>   Specifica il Paese di riferimento per il formato.</li> <li>Estensione su <code>anagrafiche.soggetti.tipo_soggetto_dettaglio_id</code>   Associa ogni soggetto al dettaglio corretto, eliminata la colonna <code>tipo_soggetto</code>, \u00e8 stato aggiunto in <code>anagrafiche.soggetti</code> la colonna <code>tipo_soggetto_dettaglio_id</code>.</li> </ul>"},{"location":"dbzero/config/tabelle/tipi_soggetto_dettaglio/#esempi-di-popolamento-iniziale","title":"\ud83d\udcbe Esempi di Popolamento Iniziale","text":"<p>Questi record sono stati inseriti tramite YAML in <code>migrations/\u2026/20250713-23-insert-tipi-soggetto-dettaglio</code>:</p> <pre><code>- insert:\n    schemaName: config\n    tableName: tipi_soggetto_dettaglio\n    columns:\n      - column: { name: tipo_soggetto_id, value: \"PF\" }\n      - column: { name: stato_iso2, value: \"IT\" }\n      - column: { name: cod_int_tipo_soggetto, value: \"PR\" }\n      - column: { name: descrizione_locale, value: \"Persona Fisica - Privato\" }\n      - column: { name: formato_cf, value: \"ALFANUM_16\" }\n      - column: { name: formato_piva, value: \"NON_APPLICABILE\" }\n\n- insert:\n    schemaName: config\n    tableName: tipi_soggetto_dettaglio\n    columns:\n      - column: { name: tipo_soggetto_id, value: \"PF\" }\n      - column: { name: stato_iso2, value: \"IT\" }\n      - column: { name: cod_int_tipo_soggetto, value: \"DI\" }\n      - column: { name: descrizione_locale, value: \"Persona Fisica - Ditta Individuale\" }\n      - column: { name: formato_cf, value: \"ALFANUM_16\" }\n      - column: { name: formato_piva, value: \"NUM_11\" }\n\n- insert:\n    schemaName: config\n    tableName: tipi_soggetto_dettaglio\n    columns:\n      - column: { name: tipo_soggetto_id, value: \"PG\" }\n      - column: { name: stato_iso2, value: \"IT\" }\n      - column: { name: cod_int_tipo_soggetto, value: \"SC\" }\n      - column: { name: descrizione_locale, value: \"Societ\u00e0 di Capitali\" }\n      - column: { name: formato_cf, value: \"NUM_11\" }\n      - column: { name: formato_piva, value: \"NUM_11\" }\n\n- insert:\n    schemaName: config\n    tableName: tipi_soggetto_dettaglio\n    columns:\n      - column: { name: tipo_soggetto_id, value: \"PG\" }\n      - column: { name: stato_iso2, value: \"IT\" }\n      - column: { name: cod_int_tipo_soggetto, value: \"SP\" }\n      - column: { name: descrizione_locale, value: \"Societ\u00e0 di Persone\" }\n      - column: { name: formato_cf, value: \"NUM_11\" }\n      - column: { name: formato_piva, value: \"NUM_11\" }\n\n- insert:\n    schemaName: config\n    tableName: tipi_soggetto_dettaglio\n    columns:\n      - column: { name: tipo_soggetto_id, value: \"ENC\" }\n      - column: { name: stato_iso2, value: \"IT\" }\n      - column: { name: cod_int_tipo_soggetto, value: \"ENC\" }\n      - column: { name: descrizione_locale, value: \"Ente non Commerciale\" }\n      - column: { name: formato_cf, value: \"NUM_11\" }\n      - column: { name: formato_piva, value: \"NUM_11\" }\n</code></pre>"},{"location":"dbzero/config/tabelle/tipi_soggetto_dettaglio/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Evita hard\u2011coding dei formati di CF/P.IVA nel codice applicativo.</li> <li>Facilita l\u2019aggiunta di nuovi paesi o categorie nominative.</li> <li>Garantisce coerenza tra DB e validazione backend.</li> </ul>"},{"location":"dbzero/config/tabelle/tipi_soggetto_dettaglio/#tabella-tipi_soggetto_dettaglio","title":"\ud83d\udcda Tabella <code>tipi_soggetto_dettaglio</code>","text":""},{"location":"dbzero/config/tabelle/tipi_soggetto_dettaglio/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id bigint NO nextval('config.tipi_soggetto_dettaglio_id_seq'::regclass) tipo_soggetto_id character varying NO stato_iso2 character varying NO cod_int_tipo_soggetto character varying NO descrizione_locale character varying YES formato_cf character varying YES formato_piva character varying YES user_insert text NO CURRENT_USER data_insert timestamp with time zone NO now() user_update text YES data_update timestamp with time zone YES stato_id bigint YES"},{"location":"dbzero/config/tabelle/tipi_soggetto_dettaglio/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_tipi_soggetto_dettaglio_stato_id stato_id FOREIGN KEY fk_tipi_soggetto_dettaglio_tipi_soggetto_id tipo_soggetto_id PRIMARY KEY pk_tipi_soggetto_dettaglio id UNIQUE uq_tipi_soggetto_dettaglio_cod_int_tipo_soggetto cod_int_tipo_soggetto"},{"location":"dbzero/config/tabelle/tipi_soggetto_dettaglio/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_tipi_soggetto_dettaglio_stato_id <code>CREATE INDEX ix_tipi_soggetto_dettaglio_stato_id ON config.tipi_soggetto_dettaglio USING btree (stato_id)</code> ix_tipi_soggetto_dettaglio_tipo_soggetto_id <code>CREATE INDEX ix_tipi_soggetto_dettaglio_tipo_soggetto_id ON config.tipi_soggetto_dettaglio USING btree (tipo_soggetto_id)</code> pk_tipi_soggetto_dettaglio <code>CREATE UNIQUE INDEX pk_tipi_soggetto_dettaglio ON config.tipi_soggetto_dettaglio USING btree (id)</code> uq_tipi_soggetto_dettaglio_cod_int_tipo_soggetto <code>CREATE UNIQUE INDEX uq_tipi_soggetto_dettaglio_cod_int_tipo_soggetto ON config.tipi_soggetto_dettaglio USING btree (cod_int_tipo_soggetto)</code>"},{"location":"dbzero/config/tabelle/tipi_soggetto_dettaglio/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_sync_stato_iso2 BEFORE INSERT <code>EXECUTE FUNCTION config.trgfn_sync_stato_iso2()</code> trg_sync_stato_iso2 BEFORE UPDATE <code>EXECUTE FUNCTION config.trgfn_sync_stato_iso2()</code> trg_tipi_soggetto_dettaglio_upd_lock_codiceinterno BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_lock_columns('cod_int_tipo_soggetto', 'CODICE_NON_MODIFICABILE')</code> trg_upd_overrides_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/titoli_cortesia/","title":"Titoli cortesia","text":""},{"location":"dbzero/config/tabelle/titoli_cortesia/#documentazione-concettuale-tabella-configtitoli_cortesia","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.titoli_cortesia</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:   - anagrafiche.soggetti   - anagrafiche.contatti   - config.tipi_contatti </p> <p>La tabella <code>config.titoli_cortesia</code> raccoglie i titoli di cortesia (es. \u201cSignore\u201d, \u201cDottore\u201d, \u201cIngegnere\u201d) utilizzabili nei contatti e nelle anagrafiche, separando la forma estesa dalla sua abbreviazione.</p>"},{"location":"dbzero/config/tabelle/titoli_cortesia/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Uniformare i titoli   Gestire centralmente i titoli di cortesia per tutti i soggetti/contatti, evitando discrepanze tra form, report e stampe.</p> </li> <li> <p>Forma estesa vs. abbreviazione </p> </li> <li><code>descrizione</code>: titolo completo (es. \u201cDottoressa\u201d)  </li> <li><code>descrizione_breve</code>: forma abbreviata (es. \u201cDott.ssa\u201d)  </li> </ul>"},{"location":"dbzero/config/tabelle/titoli_cortesia/#esempi-di-valori","title":"\ud83d\udd0d Esempi di valori","text":"descrizione descrizione_breve Signore Sig. Signora Sig.ra Dottore Dott. Dottoressa Dott.ssa Ingegnere Ing. Avvocato Avv. Presidente Pres."},{"location":"dbzero/config/tabelle/titoli_cortesia/#vincoli-e-trigger","title":"\ud83d\udd12 Vincoli e trigger","text":"<ul> <li><code>PK (id)</code>: identificatore univoco del titolo.  </li> <li><code>UNIQUE(descrizione)</code>: garantisce che non esistano duplicati di titolo esteso.  </li> <li>Trigger di audit </li> <li><code>trg_upd_titoli_cortesia_audit_data_user</code>     Aggiorna automaticamente <code>data_update</code> e <code>user_update</code> ad ogni modifica.</li> </ul>"},{"location":"dbzero/config/tabelle/titoli_cortesia/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Coerenza terminologica   Un unico elenco di titoli di cortesia evita errori di battitura e differenze tra le varie parti dell\u2019applicazione.  </li> <li>Manutenzione semplificata   Nuovi titoli o modifiche si gestiscono in un solo punto.  </li> <li>Flessibilit\u00e0 di presentazione   La doppia descrizione consente di scegliere la forma pi\u00f9 adatta in base al contesto (spazi ridotti vs. documentazione dettagliata).</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare i titoli di cortesia migliora uniformit\u00e0, leggibilit\u00e0 e facilit\u00e0 di gestione dei dati anagrafici.\u201d </p>"},{"location":"dbzero/config/tabelle/titoli_cortesia/#tabella-titoli_cortesia","title":"\ud83d\udcda Tabella <code>titoli_cortesia</code>","text":""},{"location":"dbzero/config/tabelle/titoli_cortesia/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.titoli_cortesia_id_seq'::regclass) descrizione text NO descrizione_breve text NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert text NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update text NO CURRENT_USER"},{"location":"dbzero/config/tabelle/titoli_cortesia/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_contatto_ruolo id UNIQUE uq_contatto_ruolo_contatto_ruolo_descrizione descrizione"},{"location":"dbzero/config/tabelle/titoli_cortesia/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_contatto_ruolo <code>CREATE UNIQUE INDEX pk_contatto_ruolo ON config.titoli_cortesia USING btree (id)</code> uq_contatto_ruolo_contatto_ruolo_descrizione <code>CREATE UNIQUE INDEX uq_contatto_ruolo_contatto_ruolo_descrizione ON config.titoli_cortesia USING btree (descrizione)</code>"},{"location":"dbzero/config/tabelle/titoli_cortesia/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_titoli_cortesia_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/toponomastica/","title":"Toponomastica","text":""},{"location":"dbzero/config/tabelle/toponomastica/#documentazione-concettuale-tabella-configtoponomastica","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.toponomastica</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle: - config.stati  - config.comuni  - config.stradario  - config.stradario_generale </p> <p>La tabella <code>config.toponomastica</code> raccoglie i tipi di toponimi utilizzati per la composizione degli indirizzi: \u00e8 la base per lo <code>stradario_generale</code>, dove ogni record di toponimo si combina con un nome specifico per generare l\u2019indirizzo completo.</p>"},{"location":"dbzero/config/tabelle/toponomastica/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Censimento dei toponimi   Elenco delle tipologie di vie, strade, piazze, viali, ecc., utilizzate come prefisso negli indirizzi.</li> <li>Fondamentale per lo stradario   Fornisce i prefissi standardizzati che, uniti al nome (es. \"Garibaldi\", \"Roma\"), generano i record di <code>stradario_generale</code>.</li> <li>Integrazione con lo stato geografico   Collegato alla tabella <code>config.stati</code> per associare ogni tipo di toponimo all\u2019area amministrativa di riferimento.</li> </ul>"},{"location":"dbzero/config/tabelle/toponomastica/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Standardizzazione degli indirizzi   Assicura coerenza nella definizione dei prefissi toponomastici, evitando errori di inserimento.</li> <li>Performance nelle ricerche   Indice su <code>stato_id</code> permette filtraggi rapidi per area geografica.</li> <li>Audit e tracciabilit\u00e0   Campi e trigger di audit garantiscono la storia delle modifiche, supportando controlli e rollback in caso di necessit\u00e0.</li> </ul> <p>\ud83e\udde0 \"Un elenco strutturato e referenziato dei prefissi toponomastici, alla base di un sistema di indirizzamento preciso e coerente.\"</p>"},{"location":"dbzero/config/tabelle/toponomastica/#tabella-toponomastica","title":"\ud83d\udcda Tabella <code>toponomastica</code>","text":""},{"location":"dbzero/config/tabelle/toponomastica/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.toponomastica_id_seq'::regclass) descrizione character varying NO stato_id integer YES data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER"},{"location":"dbzero/config/tabelle/toponomastica/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_toponomastica_stato_id stato_id PRIMARY KEY pk_toponomastica id UNIQUE uq_toponomastica_descrizione descrizione"},{"location":"dbzero/config/tabelle/toponomastica/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_toponomastica_stato_id <code>CREATE INDEX ix_toponomastica_stato_id ON config.toponomastica USING btree (stato_id)</code> pk_toponomastica <code>CREATE UNIQUE INDEX pk_toponomastica ON config.toponomastica USING btree (id)</code> uq_toponomastica_descrizione <code>CREATE UNIQUE INDEX uq_toponomastica_descrizione ON config.toponomastica USING btree (descrizione)</code>"},{"location":"dbzero/config/tabelle/toponomastica/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_toponomastica_upd_non_permesso BEFORE UPDATE <code>EXECUTE FUNCTION config.trgfn_toponomastica_upd_non_permesso()</code> trg_upd_toponomastica_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/utilities/","title":"Utilities","text":""},{"location":"dbzero/config/tabelle/utilities/#documentazione-concettuale-tabella-utilities","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>utilities</code>","text":"<p>La tabella <code>utilities</code> costituisce il cuore modulare di Zero ERP: da qui si definiscono i settori funzionali dell\u2019applicazione, sia quelli comuni a tutte le aziende sia le estensioni specifiche per ogni ramo di attivit\u00e0.</p>"},{"location":"dbzero/config/tabelle/utilities/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Definizione del settore   Tabella dove si definiscono i tipi di \"utilities\" a cui l\u2019azienda \u00e8 rivolta. Ogni record identifica un settore di business specifico: per esempio manifatturiero, gas o telecom.</li> <li>Componente standard e specifica   Per ogni tipo di utility \u00e8 prevista una parte core (funzionalit\u00e0 standard comuni a tutti i settori) e un modulo verticale specifico, progettato per risolvere le problematiche tipiche del settore.</li> </ul>"},{"location":"dbzero/config/tabelle/utilities/#flessibilita-e-configurabilita","title":"\ud83d\udee0 Flessibilit\u00e0 e Configurabilit\u00e0","text":"<ul> <li>Architettura modulare   Le funzionalit\u00e0 core (anagrafiche, preventivi, magazzino, fatturazione, reportistica, notifiche) costituiscono la base su cui si innestano i moduli verticali.</li> <li>Estendibilit\u00e0 controllata   Per ogni nuovo settore (manifatturiero, gas, acqua, elettricit\u00e0, fonia/telecom, ecc.) si sfruttano gli stessi schemi dati e servizi condivisi, evitando duplicazioni di codice e accelerando i tempi di sviluppo.</li> <li>Configurazione dinamica   La definizione  di un record di <code>utilities</code> abilita  il modulo corrispondente senza intervenire sul codice, permettendo adattamenti rapidi alle esigenze aziendali.</li> </ul>"},{"location":"dbzero/config/tabelle/utilities/#modalita-base-e-settori-verticali","title":"\ud83d\ude80 Modalit\u00e0 \u201cBase\u201d e Settori Verticali","text":"<ol> <li> <p>Utility \"Base\"</p> </li> <li> <p>Servizi generali e trasversali:</p> <ul> <li>Anagrafiche (clienti, fornitori)</li> <li>Preventivi</li> <li>Magazzino</li> <li>Fatturazione</li> <li>Reportistica</li> <li>Notifiche e log    Questi moduli rappresentano i processi fondamentali per ogni azienda.</li> </ul> </li> <li> <p>Settori Verticali    Moduli specifici attivabili a seconda del settore di business dell\u2019azienda:</p> </li> <li> <p>Manifatturiero: distinte base, cicli di produzione, tracciabilit\u00e0 materie prime</p> </li> <li>Gas, Acqua, Elettricit\u00e0: letture contatori, bollettazione consumi, calcoli tariffazione</li> <li>Fonia / Telecom: contratti, piani tariffari, fatturazione a consumo</li> <li>Altri: logistica, retail, servizi professionali, ecc.</li> </ol>"},{"location":"dbzero/config/tabelle/utilities/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Deployment Light   Nessun deploy di codice richiesto per attivare o disattivare moduli: basta un update in tabella.</li> <li>Sviluppo Accelerato   Le nuove verticalizzazioni si costruiscono sulle componenti esistenti, riducendo tempi e costi di realizzazione.</li> <li>Manutenzione Semplificata   Tutte le regole di attivazione e configurazione dei moduli risiedono in un\u2019unica tabella, evitando la dispersione in configurazioni multiple.</li> </ul> <p>\ud83e\udde0 \"Una tabella per orchestrare l\u2019intera suite funzionale di Zero ERP, dalla base comune alle specializzazioni verticali.\"</p>"},{"location":"dbzero/config/tabelle/utilities/#tabella-utilities","title":"\ud83d\udcda Tabella <code>utilities</code>","text":""},{"location":"dbzero/config/tabelle/utilities/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.utilities_id_seq'::regclass) cod_utility character varying NO descrizione character varying NO cd_int_utility character varying NO data_insert timestamp with time zone NO CURRENT_TIMESTAMP user_insert character varying NO CURRENT_USER data_update timestamp with time zone NO CURRENT_TIMESTAMP user_update character varying NO CURRENT_USER"},{"location":"dbzero/config/tabelle/utilities/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne CHECK chk_cd_int_utility CHECK chk_cod_utility_non_vuoto CHECK chk_descrizione_non_vuota PRIMARY KEY pk_utilities id UNIQUE uq_utilities_cd_int_utility cd_int_utility UNIQUE uq_utilities_cod_utility cod_utility"},{"location":"dbzero/config/tabelle/utilities/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_utilities <code>CREATE UNIQUE INDEX pk_utilities ON config.utilities USING btree (id)</code> uq_utilities_cd_int_utility <code>CREATE UNIQUE INDEX uq_utilities_cd_int_utility ON config.utilities USING btree (cd_int_utility)</code> uq_utilities_cod_utility <code>CREATE UNIQUE INDEX uq_utilities_cod_utility ON config.utilities USING btree (cod_utility)</code>"},{"location":"dbzero/config/tabelle/utilities/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_utilities_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> trg_utilities_upd_lock_codiceinterno BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_lock_columns('cd_int_utility', 'CODICE_NON_MODIFICABILE')</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/config/tabelle/valute/","title":"Valute","text":""},{"location":"dbzero/config/tabelle/valute/#documentazione-concettuale-tabella-configvalute","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>config.valute</code>","text":"<p>La tabella <code>config.valute</code> definisce le valute monetarie utilizzate in Zero ERP, fornendo i codici, i simboli e le informazioni necessarie per la gestione coerente di tutte le transazioni finanziarie.</p>"},{"location":"dbzero/config/tabelle/valute/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Definizione delle valute   Elenco centralizzato di tutte le valute supportate, con codici interni e standard ISO 4217.</li> <li>Supporto ai moduli finanziari   Garantisce alle aree di fatturazione, contabilit\u00e0 e reporting uniformit\u00e0 nella rappresentazione e conversione delle valute.</li> <li>Tracciabilit\u00e0 e auditing   Memorizza informazioni di inserimento e aggiornamento per mantenere la storicit\u00e0 delle modifiche.</li> </ul>"},{"location":"dbzero/config/tabelle/valute/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Standardizzazione   Consente a tutti i moduli di usare codici e simboli unificati, evitando errori di conversione.</li> <li>Performance di ricerca   Indice sulla descrizione velocizza lookup e autocomplete nei form.</li> <li>Audit completo   Trigger e campi utente/timestamp garantiscono piena tracciabilit\u00e0 delle variazioni nelle configurazioni.</li> </ul> <p>\ud83e\udde0 \"Una tabella snella e vincolata per garantire coerenza, performance e audit nella gestione delle valute di Zero\u00a0ERP.\"</p>"},{"location":"dbzero/config/tabelle/valute/#tabella-valute","title":"\ud83d\udcda Tabella <code>valute</code>","text":""},{"location":"dbzero/config/tabelle/valute/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('config.valute_id_seq'::regclass) cd_valuta character NO iso_code character NO iso_num_code smallint YES descrizione_valuta character varying NO simbolo character varying NO user_insert character varying NO CURRENT_USER user_update character varying YES CURRENT_USER data_insert timestamp with time zone NO now() data_update timestamp with time zone NO now()"},{"location":"dbzero/config/tabelle/valute/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_valute id UNIQUE uq_cd_valuta cd_valuta UNIQUE uq_iso_code iso_code"},{"location":"dbzero/config/tabelle/valute/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_config_valute_desc_valuta <code>CREATE INDEX ix_config_valute_desc_valuta ON config.valute USING btree (descrizione_valuta)</code> pk_valute <code>CREATE UNIQUE INDEX pk_valute ON config.valute USING btree (id)</code> uq_cd_valuta <code>CREATE UNIQUE INDEX uq_cd_valuta ON config.valute USING btree (cd_valuta)</code> uq_iso_code <code>CREATE UNIQUE INDEX uq_iso_code ON config.valute USING btree (iso_code)</code>"},{"location":"dbzero/config/tabelle/valute/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_upd_valute_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/","title":"Schema <code>dbops</code>","text":""},{"location":"dbzero/dbops/#tabelle","title":"\ud83d\udcda Tabelle","text":"<ul> <li>audit_log \u2014 * Monitorare e storicizzare ogni chiamata a funzioni, job e API interne. * Fornire dettagli su utente, parametri e performance di esecuzione. * Collegare gli eventi di audit agli errori e ad altri log tramite <code>tx_id</code> gestito dal trigger.</li> <li>error_log \u2014 * Raccogliere in un unico punto gli errori generati da funzioni, trigger o applicazioni, permettendo analisi e allineamento con il catalogo di messaggi di errore. * Consentire il collegamento transazionale tramite <code>tx_id</code>, per ricostruire l\u2019intero flusso di operazioni (ad esempio un job batch) incrociando tabelle come <code>dbops.audit_log</code>.</li> <li>fk_index_policy \u2014 La tabella <code>dbops.fk_index_policy</code> definisce una policy centralizzata per la gestione degli index sulle foreign key, consentendo di abilitare o disabilitare la creazione/uso di indici per specifici vincoli referenziali.</li> <li>transaction_ids \u2014 La tabella <code>dbops.transaction_ids</code> funge da registro centrale di tutti gli identificativi di transazione (UUID) utilizzati in Zero ERP: ogni volta che viene avviata un\u2019operazione di modifica dati (inserimento, aggiornamento o cancellazione) che coinvolge pi\u00f9 tabelle, si genera un nuovo <code>tx_id</code> in questa tabella e lo si propaga a tutte le righe interessate, garantendo la tracciabilit\u00e0 e il raggruppamento coerente delle modifiche.</li> </ul>"},{"location":"dbzero/dbops/#funzioni","title":"\u2699\ufe0f Funzioni","text":"<ul> <li>apply_fk_index_policy \u2014 Applicare in modo automatico le regole di indicizzazione definite nella tabella <code>dbops.fk_index_policy</code>:   </li> <li>fn_admin_merge_comune</li> <li>fn_admin_merge_stradario</li> <li>fn_create_gestore</li> <li>fn_find_file_usage \u2014 * Analisi d\u2019impatto     Identificare rapidamente tutte le relazioni di FK verso una tabella, utile per valutare dipendenze e conseguenze di modifiche, cancellazioni o refactoring di schema.</li> <li>fn_find_function_usage \u2014 * Discovery delle dipendenze: individuare tutte le occorrenze di una funzione all\u2019interno del codice PL/pgSQL, dei trigger e degli event trigger. * Supporto al refactoring: identificare facilmente i punti di utilizzo prima di rinominare o modificare una funzione.</li> <li>fn_foreign_keys_info</li> <li>fn_generate_tx_id \u2014 * Unico punto di generazione   Evitare duplicazioni di logica ed errori creando sempre il <code>tx_id</code> tramite una function dedicata. * Contestualizzazione   Conservare il nome della funzione applicativa (<code>generating_function</code>) e dati di sessione JSON (   <code>session_info</code>), per migliorare la tracciabilit\u00e0. * Sicurezza   Impostando <code>SECURITY DEFINER</code>, la function pu\u00f2 essere invocata da ruoli meno privilegiati mantenendo i permessi di inserimento.</li> <li>fn_get_or_create_session_tx_id \u2014 * Unicit\u00e0 per sessione: restituisce un <code>tx_id</code> costante per la durata della connessione, evitando chiamate ripetute a generatori esterni. * Fallback sicuro: in caso di errori di connessione o in contesti di migrazione/test, restituisce un UUID \u201cnil\u201d per non bloccare i processi. * Contesto centralizzato: memorizza il <code>tx_id</code> in una GUC di sessione (<code>dbops.tx_id</code>) per accessi successivi.</li> <li>fn_list_indices</li> <li>fn_migrate_add_indirizzo_normalizzato</li> <li>fn_normalize_indirizzo</li> <li>fn_populate_fk_index_policy \u2014 * Coerenza iniziale   Garantire che ogni FK rilevata nella view senza indice abbia la propria entry di policy, evitando omissioni. * Popolamento \u201ca freddo\u201d   Tutti i nuovi record vengono creati con <code>consentito = false</code>, lasciando in carico all\u2019operatore la decisione di abilitare o meno l\u2019indice. * Automazione   Riduce il lavoro manuale di inserimento di policy per nuove FKs.</li> <li>fn_search_column_usage \u2014 * Individuare rapidamente tutte le occorrenze di un campo in definizioni SQL presenti nel database. * Facilitare attivit\u00e0 di refactoring, pulizia del codice, e verifica di dipendenze tra oggetti del database.</li> <li>fn_seed_fk_index_policy \u2014 * Sincronizzazione iniziale   Aggiunge in <code>fk_index_policy</code> tutte le FK con indice esistente rilevate in <code>vw_fk_con_indice_missing_policy</code>. * Automazione   Evita inserimenti manuali per policy gi\u00e0 coperte da indice. * Flag di origine   Imposta <code>generated_by_script = true</code> per distinguere le righe create automaticamente.</li> <li>trgfn_tx_id_managed \u2014 La trigger function <code>dbops.trgfn_tx_id_managed()</code> viene eseguita <code>BEFORE INSERT OR UPDATE</code> su ogni tabella che contiene la colonna <code>tx_id</code> e centralizza la logica di validazione, generazione e assegnazione dell\u2019UUID di transazione per la riga in corso di inserimento/aggiornamento.</li> </ul>"},{"location":"dbzero/dbops/#views","title":"\ud83d\udd0d Views","text":"<ul> <li>vw_catalogo_oggetti \u2014 * Offrire una vista unificata degli oggetti PostgreSQL definiti nei due schemi principali di amministrazione. * Agevolare operazioni di discovery e auditing, bypassando query dirette sulle catalog tables.</li> <li>vw_duplicate_indexes \u2014 * Individuare indici ridondanti   Scoprire indici che hanno lo stesso set di colonne e possono quindi essere unificati o rimossi. * Ottimizzazione dello storage e delle performance   Ridurre overhead di manutenzione e migliorare le prestazioni di scrittura eliminando duplicazioni. * Governance della struttura   Supportare analisi periodiche per mantenere lo schema pulito e coerente.</li> <li>vw_fk_con_indice_missing_policy \u2014 * Identificare gli indici esistenti   Trova le FK gi\u00e0 indicizzate che non dispongono di una policy dedicata. * Suggerimento DDL   Genera automaticamente la stringa <code>CREATE INDEX ...</code> per uniformare naming e struttura. * Supporto auditing e governance   Permette di scoprire eventuali indici non tracciati, inserendoli poi in <code>fk_index_policy</code>.</li> <li>vw_fk_senza_indice \u2014 * Individuare automaticamente vincoli di integrit\u00e0 referenziale (FK) privi di indice, potenziali colli di bottiglia nelle operazioni di JOIN e DELETE. * Fornire suggerimenti di creazione indice coerenti, facilitando l\u2019ottimizzazione delle performance. * Applicare eventuali policy di esclusione gestite in <code>dbops.fk_index_policy</code>.</li> <li>vw_function_list \u2014 * Agevolare il discovery delle funzioni personalizzate per manutenzione e documentazione. * Rendere immediatamente disponibili:</li> <li>vw_trigger_functions \u2014 * Fornire una panoramica centralizzata dei trigger utente presenti in ogni tabella del database. * Rendere immediatamente accessibili:</li> </ul>"},{"location":"dbzero/dbops/funzioni/apply_fk_index_policy/","title":"Apply fk index policy","text":""},{"location":"dbzero/dbops/funzioni/apply_fk_index_policy/#documentazione-concettuale-procedura-dbopsapply_fk_index_policy","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Procedura <code>dbops.apply_fk_index_policy()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.fk_index_policy </p> <p>Approfondimento funzioni :   - dbops.fn_populate_fk_index_policy  - dbops.vw_fk_senza_indice </p>"},{"location":"dbzero/dbops/funzioni/apply_fk_index_policy/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Applicare in modo automatico le regole di indicizzazione definite nella tabella <code>dbops.fk_index_policy</code>:   </p> <ul> <li>Creare gli indici sulle foreign key contrassegnate come <code>consentito = true</code>.</li> <li>Rimuovere gli indici non pi\u00f9 approvati (<code>consentito = false</code>).</li> </ul>"},{"location":"dbzero/dbops/funzioni/apply_fk_index_policy/#descrizione-del-flusso","title":"\ud83d\udd0d Descrizione del Flusso","text":"<ol> <li>Scansione    Itera su ogni riga di <code>dbops.fk_index_policy</code> (schema, tabella, constraint, comando).</li> <li>Creazione    Se <code>rec.consentito = true</code>, esegue direttamente il SQL in <code>rec.dll_command</code> (tipicamente un <code>CREATE INDEX \u2026</code>).</li> <li>Rimozione    Se <code>rec.consentito = false</code>, estrae il nome dell\u2019indice dal sesto token di <code>dll_command</code> e invoca:</li> </ol> <p><pre><code>DROP INDEX IF EXISTS &lt;schema&gt;.&lt;index_name&gt;;\n</code></pre> 4. Fine    Continua fino all\u2019ultima riga, garantendo che la policy definita in tabella sia sempre rispettata.</p>"},{"location":"dbzero/dbops/funzioni/apply_fk_index_policy/#invocazione","title":"\u2699\ufe0f Invocazione","text":"<pre><code>CALL dbops.apply_fk_index_policy();\n</code></pre>"},{"location":"dbzero/dbops/funzioni/apply_fk_index_policy/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Centralizzazione: tutte le regole di indicizzazione FK risiedono in un\u2019unica tabella.</li> <li>Automazione: evita script manuali di <code>CREATE/DROP INDEX</code>, riducendo errori e incongruenze.</li> <li>Flessibilit\u00e0: modificando la colonna <code>consentito</code> si abilita o disabilita subito l\u2019indice, senza alterare codice.</li> <li>Integrazione CI/CD: \u00e8 chiamata in un changeSet <code>90-end</code> per assicurarsi che, a ogni deploy, la policy sia applicata.</li> </ul>"},{"location":"dbzero/dbops/funzioni/apply_fk_index_policy/#funzione-apply_fk_index_policy","title":"\u2699\ufe0f Funzione <code>apply_fk_index_policy</code>","text":"<pre><code>CREATE FUNCTION apply_fk_index_policy()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/apply_fk_index_policy/#create-or-replace-procedure-dbopsapply_fk_index_policy-language-plpgsql-as-procedure-declare-rec-record-idx_name-text-begin-for-rec-in-select-from-dbopsfk_index_policy-loop-if-recconsentito-then-execute-recdll_command-else-estraggo-solo-il-nome-dellindice-idx_name-split_partrecdll_command-6-execute-format-drop-index-if-exists-ii-recschema_name-idx_name-end-if-end-loop-end-procedure","title":"<pre><code>CREATE OR REPLACE PROCEDURE dbops.apply_fk_index_policy()\n LANGUAGE plpgsql\nAS $procedure$\nDECLARE\n  rec RECORD;\n  idx_name TEXT;\nBEGIN\n  FOR rec IN SELECT * FROM dbops.fk_index_policy LOOP\n    IF rec.consentito THEN\n      EXECUTE rec.dll_command;\n    ELSE\n         -- estraggo solo il nome dell'indice\n        idx_name := split_part(rec.dll_command, ' ', 6);\n        EXECUTE format(\n          'DROP INDEX IF EXISTS %I.%I',\n          rec.schema_name,\n          idx_name\n      );\n    END IF;\n  END LOOP;\nEND;\n$procedure$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_admin_merge_comune/","title":"\u2699\ufe0f Funzione <code>fn_admin_merge_comune</code>","text":"<pre><code>CREATE FUNCTION fn_admin_merge_comune(p_id_orig integer, p_id_target integer, p_event_type character, p_event_date date, p_note text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_admin_merge_comune/#create-or-replace-function-dbopsfn_admin_merge_comunep_id_orig-integer-p_id_target-integer-p_event_type-character-default-fbpchar-p_event_date-date-default-current_date-p_note-text-default-nulltext-returns-void-language-plpgsql-as-function-declare-v_audit_id-bigint-v_start_ts-timestamptz-clock_timestamp-begin-audit-log-inserimento-iniziale-insert-into-dbopsaudit_logfunction_name-params-status-values-admin_merge_comune-json_build_object-p_id_orig-p_id_orig-p_id_target-p_id_target-p_event_type-p_event_type-p_event_date-p_event_date-p_note-p_note-started-returning-id-into-v_audit_id-validazioni-if-p_id_orig-p_id_target-then-raise-exception-origine-e-destinazione-devono-differire-end-if-perform-1-from-configcomuni-where-id-p_id_orig-if-not-found-then-raise-exception-comune-non-trovato-p_id_orig-end-if-perform-1-from-configcomuni-where-id-p_id_target-if-not-found-then-raise-exception-comune-non-trovato-p_id_target-end-if-inserimento-in-storicocomune_trasformazioni-insert-into-storicocomune_trasformazioni-id_comune_orig-id_comune_nuovo-tipo_evento-data_evento-note-values-p_id_orig-p_id_target-p_event_type-p_event_date-p_note-propagazione-su-configstradario-update-configstradario-set-comune_id-p_id_target-where-comune_id-p_id_orig-audit-log-success-update-dbopsaudit_log-set-status-ok-duration_ms-floorextractepoch-from-clock_timestamp-v_start_ts-1000-where-id-v_audit_id-exception-when-others-then-audit-log-errore-update-dbopsaudit_log-set-status-error-message-sqlerrm-duration_ms-floorextractepoch-from-clock_timestamp-v_start_ts-1000-where-id-v_audit_id-raise-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_admin_merge_comune(p_id_orig integer, p_id_target integer, p_event_type character DEFAULT 'F'::bpchar, p_event_date date DEFAULT CURRENT_DATE, p_note text DEFAULT NULL::text)\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n  v_audit_id  BIGINT;\n  v_start_ts  TIMESTAMPTZ := clock_timestamp();\nBEGIN\n  -- Audit log: inserimento iniziale\n  INSERT INTO dbops.audit_log(function_name, params, status)\n  VALUES(\n    'admin_merge_comune',\n    json_build_object(\n      'p_id_orig', p_id_orig,\n      'p_id_target', p_id_target,\n      'p_event_type', p_event_type,\n      'p_event_date', p_event_date,\n      'p_note', p_note\n    ),\n    'STARTED'\n  ) RETURNING id INTO v_audit_id;\n\n  -- Validazioni\n  IF p_id_orig = p_id_target THEN\n    RAISE EXCEPTION 'Origine e destinazione devono differire';\n  END IF;\n  PERFORM 1 FROM config.comuni WHERE id = p_id_orig;\n  IF NOT FOUND THEN\n    RAISE EXCEPTION 'Comune % non trovato', p_id_orig;\n  END IF;\n  PERFORM 1 FROM config.comuni WHERE id = p_id_target;\n  IF NOT FOUND THEN\n    RAISE EXCEPTION 'Comune % non trovato', p_id_target;\n  END IF;\n\n  -- Inserimento in storico.comune_trasformazioni\n  INSERT INTO storico.comune_trasformazioni(\n    id_comune_orig,\n    id_comune_nuovo,\n    tipo_evento,\n    data_evento,\n    note\n  ) VALUES (\n    p_id_orig,\n    p_id_target,\n    p_event_type,\n    p_event_date,\n    p_note\n  );\n\n  -- Propagazione su config.stradario\n  UPDATE config.stradario\n     SET comune_id = p_id_target\n   WHERE comune_id = p_id_orig;\n\n  -- Audit log: success\n  UPDATE dbops.audit_log\n     SET status     = 'OK',\n         duration_ms = FLOOR(EXTRACT(EPOCH FROM clock_timestamp() - v_start_ts) * 1000)\n   WHERE id = v_audit_id;\n\nEXCEPTION WHEN OTHERS THEN\n  -- Audit log: errore\n  UPDATE dbops.audit_log\n     SET status     = 'ERROR',\n         message    = SQLERRM,\n         duration_ms = FLOOR(EXTRACT(EPOCH FROM clock_timestamp() - v_start_ts) * 1000)\n   WHERE id = v_audit_id;\n  RAISE;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_admin_merge_stradario/","title":"\u2699\ufe0f Funzione <code>fn_admin_merge_stradario</code>","text":"<pre><code>CREATE FUNCTION fn_admin_merge_stradario(p_id_orig integer, p_id_target integer, p_event_type character, p_event_date date, p_note text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_admin_merge_stradario/#create-or-replace-function-dbopsfn_admin_merge_stradariop_id_orig-integer-p_id_target-integer-p_event_type-character-default-fbpchar-p_event_date-date-default-current_date-p_note-text-default-nulltext-returns-void-language-plpgsql-as-function-declare-v_audit_id-bigint-v_start_ts-timestamptz-clock_timestamp-begin-audit-log-inserimento-iniziale-insert-into-dbopsaudit_logfunction_name-params-status-values-admin_merge_stradario-json_build_object-p_id_orig-p_id_orig-p_id_target-p_id_target-p_event_type-p_event_type-p_event_date-p_event_date-p_note-p_note-started-returning-id-into-v_audit_id-validazioni-if-p_id_orig-p_id_target-then-raise-exception-origine-e-destinazione-devono-differire-end-if-perform-1-from-configstradario-where-id-p_id_orig-if-not-found-then-raise-exception-stradario-non-trovato-p_id_orig-end-if-perform-1-from-configstradario-where-id-p_id_target-if-not-found-then-raise-exception-stradario-non-trovato-p_id_target-end-if-inserimento-in-storicostradario_trasformazioni-insert-into-storicostradario_trasformazioni-id_comune_orig-id_comune_nuovo-tipo_evento-data_evento-note-values-select-comune_id-from-configstradario-where-id-p_id_orig-select-comune_id-from-configstradario-where-id-p_id_target-p_event_type-p_event_date-p_note-propagazione-su-indirizzi_dettaglio-update-anagraficheindirizzi_dettaglio-set-stradario_id-p_id_target-where-stradario_id-p_id_orig-audit-log-success-update-dbopsaudit_log-set-status-ok-duration_ms-floorextractepoch-from-clock_timestamp-v_start_ts-1000-where-id-v_audit_id-exception-when-others-then-audit-log-errore-update-dbopsaudit_log-set-status-error-message-sqlerrm-duration_ms-floorextractepoch-from-clock_timestamp-v_start_ts-1000-where-id-v_audit_id-raise-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_admin_merge_stradario(p_id_orig integer, p_id_target integer, p_event_type character DEFAULT 'F'::bpchar, p_event_date date DEFAULT CURRENT_DATE, p_note text DEFAULT NULL::text)\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n  v_audit_id  BIGINT;\n  v_start_ts  TIMESTAMPTZ := clock_timestamp();\nBEGIN\n  -- Audit log: inserimento iniziale\n  INSERT INTO dbops.audit_log(function_name, params, status)\n  VALUES(\n    'admin_merge_stradario',\n    json_build_object(\n      'p_id_orig', p_id_orig,\n      'p_id_target', p_id_target,\n      'p_event_type', p_event_type,\n      'p_event_date', p_event_date,\n      'p_note', p_note\n    ),\n    'STARTED'\n  ) RETURNING id INTO v_audit_id;\n\n  -- Validazioni\n  IF p_id_orig = p_id_target THEN\n    RAISE EXCEPTION 'Origine e destinazione devono differire';\n  END IF;\n  PERFORM 1 FROM config.stradario WHERE id = p_id_orig;\n  IF NOT FOUND THEN\n    RAISE EXCEPTION 'Stradario % non trovato', p_id_orig;\n  END IF;\n  PERFORM 1 FROM config.stradario WHERE id = p_id_target;\n  IF NOT FOUND THEN\n    RAISE EXCEPTION 'Stradario % non trovato', p_id_target;\n  END IF;\n\n  -- Inserimento in storico.stradario_trasformazioni\n  INSERT INTO storico.stradario_trasformazioni(\n    id_comune_orig,\n    id_comune_nuovo,\n    tipo_evento,\n    data_evento,\n    note\n  ) VALUES (\n    (SELECT comune_id FROM config.stradario WHERE id = p_id_orig),\n    (SELECT comune_id FROM config.stradario WHERE id = p_id_target),\n    p_event_type,\n    p_event_date,\n    p_note\n  );\n\n  -- Propagazione su indirizzi_dettaglio\n  UPDATE anagrafiche.indirizzi_dettaglio\n     SET stradario_id = p_id_target\n   WHERE stradario_id = p_id_orig;\n\n  -- Audit log: success\n  UPDATE dbops.audit_log\n     SET status     = 'OK',\n         duration_ms = FLOOR(EXTRACT(EPOCH FROM clock_timestamp() - v_start_ts) * 1000)\n   WHERE id = v_audit_id;\n\nEXCEPTION WHEN OTHERS THEN\n  -- Audit log: errore\n  UPDATE dbops.audit_log\n     SET status     = 'ERROR',\n         message    = SQLERRM,\n         duration_ms = FLOOR(EXTRACT(EPOCH FROM clock_timestamp() - v_start_ts) * 1000)\n   WHERE id = v_audit_id;\n  RAISE;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_create_gestore/","title":"\u2699\ufe0f Funzione <code>fn_create_gestore</code>","text":"<pre><code>CREATE FUNCTION fn_create_gestore(p_codice text, p_ragione_sociale text, p_partita_iva character, p_codice_fiscale character, p_tipo_soggetto character, p_forma_giuridica text, p_capitale_sociale numeric, p_id_prov_iscri_rea integer, p_iscrizione_rea character varying, p_destinatario_fe character, p_cd_software text, p_valuta_id integer, p_iban character, p_cd_int_utility text, p_cd_int_ruolo_funzionale text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_create_gestore/#create-or-replace-function-dbopsfn_create_gestorep_codice-text-p_ragione_sociale-text-p_partita_iva-character-p_codice_fiscale-character-p_tipo_soggetto-character-p_forma_giuridica-text-p_capitale_sociale-numeric-p_id_prov_iscri_rea-integer-p_iscrizione_rea-character-varying-p_destinatario_fe-character-p_cd_software-text-p_valuta_id-integer-p_iban-character-p_cd_int_utility-text-p_cd_int_ruolo_funzionale-text-returns-uuid-language-plpgsql-as-function-declare-v_soggetto_id-uuid-v_soggetto_ruolo_id-integer-v_gestore_id-integer-begin-funzione-factory-per-creare-un-gestore-endtoend-con-assegnazione-utilityruolo-inserisce-in-anagrafichesoggetti-tipo_soggetto-g-popola-anagrafichedati_societari-assegna-il-ruolo-ge-in-anagrafichesoggetti_ruoli-inserisce-il-record-in-anagrafichegestori-associa-il-gestore-a-utility-specifica-e-ruolo-funzionale-restituisce-il-uuid-del-soggetto-creato-schema-dbops-esempio-di-chiamata-19042025-la-funzione-non-e-stata-testata-al-momento-di-questa-data-sviluppo-quando-si-genererrano-i-dati-si-prega-di-aggiornarla-e-indicare-un-esempio-funzionante-select-dbopscreate_gestore-1-p_codice-null-2-p_ragione_sociale-zero-erp-srl-3-p_partita_iva-01234567890-4-p_codice_fiscale-rssmra85m01h501u-5-p_tipo_soggetto-g-6-p_forma_giuridica-srl-7-p_capitale_sociale-10000000-8-p_id_prov_iscri_rea-1-9-p_iscrizione_rea-rea123456-10-p_destinatario_fe-abc123xyz-11-p_cd_software-zeroerp-12-p_valuta_id-select-id_valuta-from-configpa_valute-where-iso_code-eur-13-p_iban-it60x0542811101000000123456-14-p_cd_int_utility-gas-15-p_cd_int_ruolo_funzionale-gas_dist-1-creo-il-soggetto-insert-into-anagrafichesoggetti-id-codice-ragione_sociale-tipo_soggetto-partita_iva-codice_fiscale-values-gen_random_uuid-p_codice-p_ragione_sociale-p_tipo_soggetto-p_partita_iva-p_codice_fiscale-returning-id-into-v_soggetto_id-2-popolo-i-dati-societari-insert-into-anagrafichedati_societari-soggetto_id-forma_giuridica-capitale_sociale-id_prov_iscri_rea-iscrizione_rea-destinatario_fe-values-v_soggetto_id-p_forma_giuridica-p_capitale_sociale-p_id_prov_iscri_rea-p_iscrizione_rea-p_destinatario_fe-3-assegno-il-ruolo-ge-gestore-in-soggetti_ruoli-insert-into-anagrafichesoggetti_ruoli-soggetto_id-ruolo_id-values-v_soggetto_id-select-id-from-configtipi_ruoli-where-cd_int_ruolo-ge-returning-id_soggetto_ruolo-into-v_soggetto_ruolo_id-4-inserisco-il-record-in-gestori-insert-into-anagrafichegestori-soggetto_id-soggetto_ruolo_id-descrizione-cd_prod_software-valuta_id-iban-values-v_soggetto_id-v_soggetto_ruolo_id-p_ragione_sociale-p_cd_software-p_valuta_id-p_iban-returning-id-into-v_gestore_id-5-associo-il-gestore-a-utility-e-ruolo-funzionale-insert-into-anagrafichegestori_utilities_ruoli-gestore_id-utility_id-ruolo_id-extra-values-v_gestore_id-select-id_utility-from-configutilities-where-cd_int_utility-p_cd_int_utility-select-id-from-configtipi_ruoli-where-cd_int_ruolo-p_cd_int_ruolo_funzionale-jsonb-return-v_soggetto_id-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_create_gestore(p_codice text, p_ragione_sociale text, p_partita_iva character, p_codice_fiscale character, p_tipo_soggetto character, p_forma_giuridica text, p_capitale_sociale numeric, p_id_prov_iscri_rea integer, p_iscrizione_rea character varying, p_destinatario_fe character, p_cd_software text, p_valuta_id integer, p_iban character, p_cd_int_utility text, p_cd_int_ruolo_funzionale text)\n RETURNS uuid\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    v_soggetto_id            UUID;\n    v_soggetto_ruolo_id      INTEGER;\n    v_gestore_id             INTEGER;\nBEGIN\n-- ====================================================================\n-- Funzione factory per creare un Gestore \u201cend\u2011to\u2011end\u201d con assegnazione utility/ruolo\n--   \u2022 Inserisce in anagrafiche.soggetti (tipo_soggetto = 'G')\n--   \u2022 Popola anagrafiche.dati_societari\n--   \u2022 Assegna il ruolo GE in anagrafiche.soggetti_ruoli\n--   \u2022 Inserisce il record in anagrafiche.gestori\n--   \u2022 Associa il gestore a utility specifica e ruolo funzionale\n-- Restituisce il UUID del soggetto creato.\n-- Schema: dbops\n-- ====================================================================\n\n/* \nesempio di chiamata\n19/04/2025 la funzione non \u00e8 stata testata  al momento di questa \ndata sviluppo. Quando si genererrano i dati si prega di aggiornarla e\nindicare un esempio funzionante\n\n\nSELECT dbops.create_gestore(\n  -- 1. p_codice\n  NULL,\n  -- 2. p_ragione_sociale\n  'Zero ERP Srl',\n  -- 3. p_partita_iva\n  '01234567890',\n  -- 4. p_codice_fiscale\n  'RSSMRA85M01H501U',\n  -- 5. p_tipo_soggetto\n  'G',\n  -- 6. p_forma_giuridica\n  'SRL',\n  -- 7. p_capitale_sociale\n  100000.00,\n  -- 8. p_id_prov_iscri_rea\n  1,\n  -- 9. p_iscrizione_rea\n  'REA123456',\n  -- 10. p_destinatario_fe\n  'ABC123XYZ',\n  -- 11. p_cd_software\n  'ZEROERP',\n  -- 12. p_valuta_id\n  (SELECT id_valuta FROM config.pa_valute WHERE iso_code = 'EUR'),\n  -- 13. p_iban\n  'IT60X0542811101000000123456',\n  -- 14. p_cd_int_utility\n  'GAS',\n  -- 15. p_cd_int_ruolo_funzionale\n  'GAS_DIST'\n);\n\n\n*/\n\n    -- 1) Creo il soggetto\n    INSERT INTO anagrafiche.soggetti (\n        id, codice, ragione_sociale, tipo_soggetto,\n        partita_iva, codice_fiscale\n    ) VALUES (\n        gen_random_uuid(), p_codice, p_ragione_sociale, p_tipo_soggetto,\n        p_partita_iva, p_codice_fiscale\n    )\n    RETURNING id INTO v_soggetto_id;\n\n    -- 2) Popolo i dati societari\n    INSERT INTO anagrafiche.dati_societari (\n        soggetto_id, forma_giuridica, capitale_sociale,\n        id_prov_iscri_rea, iscrizione_rea, destinatario_fe\n    ) VALUES (\n        v_soggetto_id, p_forma_giuridica, p_capitale_sociale,\n        p_id_prov_iscri_rea, p_iscrizione_rea, p_destinatario_fe\n    );\n\n    -- 3) Assegno il ruolo \u201cGE\u201d (Gestore) in soggetti_ruoli\n    INSERT INTO anagrafiche.soggetti_ruoli (\n        soggetto_id, ruolo_id\n    ) VALUES (\n        v_soggetto_id,\n        (SELECT id FROM config.tipi_ruoli WHERE cd_int_ruolo = 'GE')\n    )\n    RETURNING id_soggetto_ruolo INTO v_soggetto_ruolo_id;\n\n    -- 4) Inserisco il record in gestori\n    INSERT INTO anagrafiche.gestori (\n        soggetto_id, soggetto_ruolo_id,\n        descrizione, cd_prod_software, valuta_id, iban\n    ) VALUES (\n        v_soggetto_id, v_soggetto_ruolo_id,\n        p_ragione_sociale, p_cd_software, p_valuta_id, p_iban\n    )\n    RETURNING id INTO v_gestore_id;\n\n    -- 5) Associo il gestore a utility e ruolo funzionale\n    INSERT INTO anagrafiche.gestori_utilities_ruoli (\n        gestore_id, utility_id, ruolo_id, extra\n    ) VALUES (\n        v_gestore_id,\n        (SELECT id_utility FROM config.utilities WHERE cd_int_utility = p_cd_int_utility),\n        (SELECT id FROM config.tipi_ruoli WHERE cd_int_ruolo = p_cd_int_ruolo_funzionale),\n        '{}'::jsonb\n    );\n\n    RETURN v_soggetto_id;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_find_file_usage/","title":"Fn find file usage","text":""},{"location":"dbzero/dbops/funzioni/fn_find_file_usage/#documentazione-concettuale-funzione-dbopsfn_find_file_usage","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>dbops.fn_find_file_usage</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti funzioni:  - dbops.fn_search_column_usage  - dbops.fn_find_function_usage </p> <p>La funzione <code>dbops.fn_find_file_usage(p_target_table regclass)</code> individua tutte le constraint di tipo foreign key che puntano alla tabella specificata in input, restituendo per ciascuna: - La tabella che contiene la FK - La colonna FK stessa - La tabella referenziata (che sar\u00e0 sempre la stessa in tutti i record, ovvero <code>p_target_table</code>) - La colonna PK referenziata</p>"},{"location":"dbzero/dbops/funzioni/fn_find_file_usage/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Analisi d\u2019impatto   Identificare rapidamente tutte le relazioni di FK verso una tabella, utile per valutare dipendenze e conseguenze di modifiche, cancellazioni o refactoring di schema.</p> </li> <li> <p>Documentazione automatica   Fornire un\u2019elenco puntuale di constraint FK anzich\u00e9 esplorare manualmente il catalogo di sistema.</p> </li> </ul>"},{"location":"dbzero/dbops/funzioni/fn_find_file_usage/#parametri","title":"\ud83d\udd0d Parametri","text":"Nome Tipo Descrizione <code>p_target_table</code> <code>regclass</code> Nome (con schema) della tabella di cui cercare le FK in ingresso."},{"location":"dbzero/dbops/funzioni/fn_find_file_usage/#struttura-del-risultato","title":"\ud83d\udd0d Struttura del risultato","text":"Colonna Tipo Descrizione <code>table_with_fk</code> <code>regclass</code> Schema e nome della tabella che definisce la foreign key. <code>fk_column</code> <code>name</code> Nome della colonna all\u2019interno di <code>table_with_fk</code> che \u00e8 la foreign key. <code>referenced_table</code> <code>regclass</code> Tabella referenziata (identica a <code>p_target_table</code>). <code>pk_column</code> <code>name</code> Nome della colonna PK di <code>referenced_table</code> a cui punta la FK."},{"location":"dbzero/dbops/funzioni/fn_find_file_usage/#dettaglio-del-flusso","title":"\u2699\ufe0f Dettaglio del flusso","text":"<ol> <li>La funzione interroga cataloghi di sistema (<code>pg_constraint</code>, <code>pg_class</code>, <code>pg_attribute</code>) filtrando <code>contype = 'f'</code> (foreign key).  </li> <li>Converte gli OID in <code>regclass</code> per ottenere il nome schema.tabella.  </li> <li>Estrae, per ogni FK rilevata, la colonna chiave nella tabella figlia e la colonna chiave primaria nella tabella padre.</li> </ol>"},{"location":"dbzero/dbops/funzioni/fn_find_file_usage/#esempi-di-utilizzo","title":"\ud83d\udca1 Esempi di utilizzo","text":"<pre><code>-- Trova tutte le FK che puntano alla tabella config.iva\nSELECT *\n  FROM dbops.fn_find_file_usage('config.iva'::regclass);\n\n-- Verifica dipendenze verso la tabella anagrafiche.contatti\nSELECT table_with_fk, fk_column\n  FROM dbops.fn_find_file_usage('anagrafiche.contatti'::regclass);\n\n-- Usando direttamente OID o regclass senza cast esplicito:\nSELECT * \n  FROM dbops.fn_find_file_usage(anagrafiche.contatti);\n</code></pre>"},{"location":"dbzero/dbops/funzioni/fn_find_file_usage/#i-vantaggi-operativi","title":"\u2139\ufe0f Vantaggi Operativi","text":"<pre><code>Rapidit\u00e0: un\u2019unica query per esplorare tutte le FK in ingresso.\n\nAffidabilit\u00e0: si basa su cataloghi di sistema ufficiali, aggiornati in tempo reale.\n\nAutomazione: integrabile in script di migrazione o tool di analisi schema.\n</code></pre> <p>\ud83e\udde0 \u201cCon fn_find_file_usage puoi eseguire in pochi secondi un\u2019analisi completa delle dipendenze tra tabelle, fondamentale per il refactoring e la gestione sicura delle migrazioni.\u201d</p>"},{"location":"dbzero/dbops/funzioni/fn_find_file_usage/#funzione-fn_find_file_usage","title":"\u2699\ufe0f Funzione <code>fn_find_file_usage</code>","text":"<pre><code>CREATE FUNCTION fn_find_file_usage(p_target_table regclass)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_find_file_usage/#create-or-replace-function-dbopsfn_find_file_usagep_target_table-regclass-returns-tabletable_with_fk-regclass-fk_column-name-referenced_table-regclass-pk_column-name-language-sql-stable-as-function-funzione-dbopsfn_find_file_usageregclass-scopo-trova-tutte-le-foreign-key-che-fanno-riferimento-ad-una-tabella-specificata-in-input-select-cconrelidregclass-as-table_with_fk-aattname-as-fk_column-cconfrelidregclass-as-referenced_table-afattname-as-pk_column-from-pg_constraint-c-join-pg_class-t-on-cconrelid-toid-join-pg_attribute-a-on-aattrelid-toid-and-aattnum-anycconkey-join-pg_class-ft-on-cconfrelid-ftoid-join-pg_attribute-af-on-afattrelid-ftoid-and-afattnum-anycconfkey-where-ccontype-f-and-cconfrelid-p_target_table-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_find_file_usage(p_target_table regclass)\n RETURNS TABLE(table_with_fk regclass, fk_column name, referenced_table regclass, pk_column name)\n LANGUAGE sql\n STABLE\nAS $function$\n  -- ================================================\n  -- Funzione: dbops.fn_find_file_usage(regclass)\n  -- Scopo:   trova tutte le foreign key che fanno riferimento\n  --          ad una tabella specificata in input\n  -- ================================================\n\n  SELECT\n    c.conrelid::regclass               AS table_with_fk,\n    a.attname                          AS fk_column,\n    c.confrelid::regclass             AS referenced_table,\n    af.attname                         AS pk_column\n  FROM pg_constraint c\n  JOIN pg_class t   ON c.conrelid = t.oid\n  JOIN pg_attribute a ON a.attrelid = t.oid\n                    AND a.attnum = ANY(c.conkey)\n  JOIN pg_class ft  ON c.confrelid = ft.oid\n  JOIN pg_attribute af ON af.attrelid = ft.oid\n                      AND af.attnum = ANY(c.confkey)\n  WHERE c.contype = 'f'\n    AND c.confrelid = p_target_table;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_find_function_usage/","title":"Fn find function usage","text":""},{"location":"dbzero/dbops/funzioni/fn_find_function_usage/#documentazione-concettuale-function-dbopsfn_find_function_usagep_function_name-text","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Function <code>dbops.fn_find_function_usage(p_function_name TEXT)</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Altre view di catalogazione: - dbops.vw_function_list - dbops.vw_trigger_functions </p> <p>La funzione <code>dbops.fn_find_function_usage</code> restituisce l\u2019elenco delle entit\u00e0 del database (funzioni, trigger, event trigger) che fanno riferimento a una specifica funzione indicata dal nome, facilitando l\u2019analisi delle dipendenze e degli impatti di modifiche o refactoring.</p>"},{"location":"dbzero/dbops/funzioni/fn_find_function_usage/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Discovery delle dipendenze: individuare tutte le occorrenze di una funzione all\u2019interno del codice PL/pgSQL, dei trigger e degli event trigger.</li> <li>Supporto al refactoring: identificare facilmente i punti di utilizzo prima di rinominare o modificare una funzione.</li> </ul>"},{"location":"dbzero/dbops/funzioni/fn_find_function_usage/#firma-e-restituzione","title":"\ud83d\udd0d Firma e Restituzione","text":"<pre><code>fn_find_function_usage(\n  p_function_name TEXT\n) RETURNS TABLE(\n  object_type TEXT,   -- 'function', 'trigger' o 'event_trigger'\n  schema_name TEXT,   -- schema di appartenenza (NULL per event trigger)\n  object_name TEXT    -- nome dell\u2019oggetto o firma della funzione\n);\n</code></pre> <ul> <li><code>p_function_name</code>: nome della funzione da ricercare.</li> <li>object_type: tipo di oggetto che invoca la funzione.</li> <li>schema_name: schema in cui risiede l\u2019oggetto (event trigger non ha schema).</li> <li>object_name: per le funzioni, include firma e argomenti; per trigger/event trigger, nome dell\u2019oggetto.</li> </ul>"},{"location":"dbzero/dbops/funzioni/fn_find_function_usage/#logica-di-esecuzione","title":"\u2699\ufe0f Logica di Esecuzione","text":"<ol> <li>Funzioni: cerca all\u2019interno di <code>pg_proc.prosrc</code> le dichiarazioni che contengono il nome <code>p_function_name</code>, escludendo la funzione stessa.</li> <li>Trigger: individua i trigger definiti in <code>pg_trigger</code> che richiamano la funzione <code>p_function_name</code>.</li> <li>Event Trigger: include gli event trigger di <code>pg_event_trigger</code> associati a <code>p_function_name</code>.</li> </ol> <p>I risultati di ciascuna ricerca vengono uniti con <code>UNION ALL</code> e restituiti in un unico set.</p>"},{"location":"dbzero/dbops/funzioni/fn_find_function_usage/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Ricerca generale di dipendenze</li> </ol> <pre><code>SELECT *\n  FROM dbops.fn_find_function_usage('process_order');\n</code></pre> <ol> <li>Filtrare solo i trigger</li> </ol> <pre><code>SELECT schema_name, object_name\n  FROM dbops.fn_find_function_usage('audit_update')\n WHERE object_type = 'trigger';\n</code></pre> <ol> <li>Contare le dipendenze per schema</li> </ol> <pre><code>SELECT object_type, schema_name, COUNT(*) AS usage_count\n  FROM dbops.fn_find_function_usage('compute_tax')\n GROUP BY object_type, schema_name;\n</code></pre>"},{"location":"dbzero/dbops/funzioni/fn_find_function_usage/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Chiarezza delle dipendenze: evita ricerche manuali tra cataloghi multipli.</li> <li>Riduzione degli errori: garantisce che nessun utilizzo venga trascurato in fase di modifica.</li> <li>Automazione: integrabile in script di migrazione o refactoring per validare l\u2019assenza di riferimenti obsoleti.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>fn_find_function_usage</code>, refactoring e manutenzione del codice PL/pgSQL diventano operazioni sicure e documentate, grazie all\u2019individuazione automatica delle dipendenze.\u201d</p>"},{"location":"dbzero/dbops/funzioni/fn_find_function_usage/#funzione-fn_find_function_usage","title":"\u2699\ufe0f Funzione <code>fn_find_function_usage</code>","text":"<pre><code>CREATE FUNCTION fn_find_function_usage(p_function_name text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_find_function_usage/#create-or-replace-function-dbopsfn_find_function_usagep_function_name-text-returns-tableobject_type-text-schema_name-text-object_name-text-language-sql-stable-as-function-1-funzioni-che-richiamano-p_function_name-nel-loro-corpo-select-functiontext-as-object_type-nsnspname-as-schema_name-pproname-pg_get_function_identity_argumentspoid-as-object_name-from-pg_proc-p-join-pg_namespace-ns-on-nsoid-ppronamespace-where-pprosrc-like-p_function_name-presenza-del-nome-nel-sorgente-plpgsql-and-pproname-p_function_name-union-all-2-trigger-che-invocano-p_function_name-select-triggertext-as-object_type-nsnspname-as-schema_name-relrelname-as-object_name-from-pg_trigger-tr-join-pg_proc-tgt-on-tgtoid-trtgfoid-join-pg_class-rel-on-reloid-trtgrelid-join-pg_namespace-ns-on-nsoid-relrelnamespace-where-tgtproname-p_function_name-union-all-3-event-trigger-che-invocano-p_function_name-select-event_triggertext-as-object_type-nulltext-as-schema_name-etevtevent-on-tgtproname-as-object_name-from-pg_event_trigger-et-join-pg_proc-tgt-on-tgtoid-etevtfoid-where-tgtproname-p_function_name-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_find_function_usage(p_function_name text)\n RETURNS TABLE(object_type text, schema_name text, object_name text)\n LANGUAGE sql\n STABLE\nAS $function$\n  -- 1) Funzioni che richiamano p_function_name nel loro corpo\n  SELECT\n    'function'::TEXT AS object_type,\n    ns.nspname AS schema_name,\n    p.proname || '(' || pg_get_function_identity_arguments(p.oid) || ')' AS object_name\n  FROM pg_proc p\n  JOIN pg_namespace ns ON ns.oid = p.pronamespace\n  WHERE p.prosrc LIKE '%' || p_function_name || '%'  -- presenza del nome nel sorgente PL/pgSQL\n    AND p.proname &lt;&gt; p_function_name\n\n  UNION ALL\n\n  -- 2) Trigger che invocano p_function_name\n  SELECT\n    'trigger'::TEXT AS object_type,\n    ns.nspname AS schema_name,\n    rel.relname AS object_name\n  FROM pg_trigger tr\n  JOIN pg_proc tgt ON tgt.oid = tr.tgfoid\n  JOIN pg_class rel  ON rel.oid = tr.tgrelid\n  JOIN pg_namespace ns ON ns.oid = rel.relnamespace\n  WHERE tgt.proname = p_function_name\n\n  UNION ALL\n\n  -- 3) Event trigger che invocano p_function_name\n  SELECT\n    'event_trigger'::TEXT AS object_type,\n    NULL::TEXT AS schema_name,\n    et.evtevent || ' on ' || tgt.proname AS object_name\n  FROM pg_event_trigger et\n  JOIN pg_proc tgt ON tgt.oid = et.evtfoid\n  WHERE tgt.proname = p_function_name\n  $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_foreign_keys_info/","title":"\u2699\ufe0f Funzione <code>fn_foreign_keys_info</code>","text":"<pre><code>CREATE FUNCTION fn_foreign_keys_info(tabella text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_foreign_keys_info/#create-or-replace-function-dbopsfn_foreign_keys_infotabella-text-returns-tablerelazione-text-constraint_name-text-source_table-text-source_column-text-target_table-text-target_column-text-language-plpgsql-as-function-begin-incoming-fk-altre-tabelle-che-puntano-alla-tabella-indicata-return-query-select-incomingtext-as-relazione-tcconstraint_nametext-tctable_nametext-kcucolumn_nametext-ccutable_nametext-ccucolumn_nametext-from-information_schematable_constraints-as-tc-join-information_schemakey_column_usage-as-kcu-on-tcconstraint_name-kcuconstraint_name-and-tcconstraint_schema-kcuconstraint_schema-join-information_schemaconstraint_column_usage-as-ccu-on-ccuconstraint_name-tcconstraint_name-and-ccuconstraint_schema-tcconstraint_schema-where-tcconstraint_type-foreign-key-and-ccutable_name-tabella-outgoing-fk-chiavi-esterne-definite-nella-tabella-specificata-return-query-select-outgoingtext-as-relazione-tcconstraint_nametext-tctable_nametext-kcucolumn_nametext-ccutable_nametext-ccucolumn_nametext-from-information_schematable_constraints-as-tc-join-information_schemakey_column_usage-as-kcu-on-tcconstraint_name-kcuconstraint_name-and-tcconstraint_schema-kcuconstraint_schema-join-information_schemaconstraint_column_usage-as-ccu-on-ccuconstraint_name-tcconstraint_name-and-ccuconstraint_schema-tcconstraint_schema-where-tcconstraint_type-foreign-key-and-tctable_name-tabella-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_foreign_keys_info(tabella text)\n RETURNS TABLE(relazione text, constraint_name text, source_table text, source_column text, target_table text, target_column text)\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n    -- INCOMING FK (altre tabelle che puntano alla tabella indicata)\n    RETURN QUERY\n    SELECT\n        'incoming'::TEXT AS relazione,\n        tc.constraint_name::TEXT,\n        tc.table_name::TEXT,\n        kcu.column_name::TEXT,\n        ccu.table_name::TEXT,\n        ccu.column_name::TEXT\n    FROM\n        information_schema.table_constraints AS tc\n        JOIN information_schema.key_column_usage AS kcu\n            ON tc.constraint_name = kcu.constraint_name\n           AND tc.constraint_schema = kcu.constraint_schema\n        JOIN information_schema.constraint_column_usage AS ccu\n            ON ccu.constraint_name = tc.constraint_name\n           AND ccu.constraint_schema = tc.constraint_schema\n    WHERE\n        tc.constraint_type = 'FOREIGN KEY'\n        AND ccu.table_name = tabella;\n\n    -- OUTGOING FK (chiavi esterne definite nella tabella specificata)\n    RETURN QUERY\n    SELECT\n        'outgoing'::TEXT AS relazione,\n        tc.constraint_name::TEXT,\n        tc.table_name::TEXT,\n        kcu.column_name::TEXT,\n        ccu.table_name::TEXT,\n        ccu.column_name::TEXT\n    FROM\n        information_schema.table_constraints AS tc\n        JOIN information_schema.key_column_usage AS kcu\n            ON tc.constraint_name = kcu.constraint_name\n           AND tc.constraint_schema = kcu.constraint_schema\n        JOIN information_schema.constraint_column_usage AS ccu\n            ON ccu.constraint_name = tc.constraint_name\n           AND ccu.constraint_schema = tc.constraint_schema\n    WHERE\n        tc.constraint_type = 'FOREIGN KEY'\n        AND tc.table_name = tabella;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_generate_tx_id/","title":"Fn generate tx id","text":""},{"location":"dbzero/dbops/funzioni/fn_generate_tx_id/#documentazione-concettuale-funzione-dbopsfn_generate_tx_id","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>dbops.fn_generate_tx_id</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.transaction_ids </p> <p>Approfondimento funzioni :   - dbops.fn_get_or_create_session_tx_id </p> <p>La funzione <code>dbops.fn_generate_tx_id(p_generating_function TEXT, p_session_info JSONB DEFAULT '{}'::jsonb)</code> centralizza la generazione e la memorizzazione di un nuovo identificativo di transazione (UUID) in <code>dbops.transaction_ids</code>, associando il contesto di chiamata e le informazioni di sessione.</p>"},{"location":"dbzero/dbops/funzioni/fn_generate_tx_id/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Unico punto di generazione   Evitare duplicazioni di logica ed errori creando sempre il <code>tx_id</code> tramite una function dedicata.</li> <li>Contestualizzazione   Conservare il nome della funzione applicativa (<code>generating_function</code>) e dati di sessione JSON (   <code>session_info</code>), per migliorare la tracciabilit\u00e0.</li> <li>Sicurezza   Impostando <code>SECURITY DEFINER</code>, la function pu\u00f2 essere invocata da ruoli meno privilegiati mantenendo i permessi di inserimento.</li> </ul>"},{"location":"dbzero/dbops/funzioni/fn_generate_tx_id/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Default Descrizione <code>p_generating_function</code> <code>TEXT</code> \u2014 Nome (o identificativo) della funzione/procedura che richiede il <code>tx_id</code>. <code>p_session_info</code> <code>JSONB</code> <code>'{}'::jsonb</code> Oggetto JSON con dati di contesto (es. utente, IP, informazioni di sessione)."},{"location":"dbzero/dbops/funzioni/fn_generate_tx_id/#flusso-di-esecuzione","title":"\u2699\ufe0f Flusso di Esecuzione","text":"<ol> <li>Generazione UUID</li> </ol> <p><pre><code>v_tx := gen_random_uuid();\n</code></pre> 2. Inserimento record    Inserisce in <code>dbops.transaction_ids</code> un nuovo rigo con:</p> <ul> <li><code>id</code> = <code>v_tx</code></li> <li><code>generating_function</code> = <code>p_generating_function</code></li> <li><code>session_info</code> = <code>p_session_info</code></li> <li>Restituzione    Ritorna il valore <code>v_tx</code>, da utilizzare come chiave di correlazione nelle altre tabelle.</li> </ul>"},{"location":"dbzero/dbops/funzioni/fn_generate_tx_id/#esempio-di-utilizzo","title":"\ud83d\ude80 Esempio di Utilizzo","text":"<pre><code>-- Genera un nuovo tx_id e ne visualizza il valore:\nSELECT dbops.fn_generate_tx_id(\n  'app.create_invoice',\n  jsonb_build_object('user','mario','ip','10.0.0.5')\n) AS tx_id;\n</code></pre>"},{"location":"dbzero/dbops/funzioni/fn_generate_tx_id/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Centralizzazione: un\u2019unica entry point per la creazione dei <code>tx_id</code>, evitando duplicazioni nella logica applicativa.</li> <li>Tracciabilit\u00e0 avanzata: conserva contesto funzionale e dati di sessione per ogni transazione.</li> <li>Sicurezza: grazie a <code>SECURITY DEFINER</code>, i ruoli applicativi possono invocare la function senza privilegi diretti su <code>transaction_ids</code>.</li> <li>Estendibilit\u00e0: ulteriori parametri di contesto possono essere aggiunti a <code>session_info</code> senza modificare la logica di generazione.</li> </ul> <p>\ud83e\udde0 \u201cLa funzione <code>fn_generate_tx_id</code> semplifica e uniforma la creazione dei transaction IDs, assicurando tracciabilit\u00e0, sicurezza e facilit\u00e0 di integrazione nell\u2019architettura Zero ERP.\u201d</p>"},{"location":"dbzero/dbops/funzioni/fn_generate_tx_id/#funzione-fn_generate_tx_id","title":"\u2699\ufe0f Funzione <code>fn_generate_tx_id</code>","text":"<pre><code>CREATE FUNCTION fn_generate_tx_id(p_generating_function text, p_session_info jsonb)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_generate_tx_id/#create-or-replace-function-dbopsfn_generate_tx_idp_generating_function-text-p_session_info-jsonb-default-jsonb-returns-uuid-language-plpgsql-security-definer-as-function-declare-v_tx-uuid-gen_random_uuid-begin-genera-un-nuovo-uuid-e-lo-inserisce-in-dbopstransaction_ids-insert-into-dbopstransaction_ids-id-generating_function-session_info-values-v_tx-p_generating_function-p_session_info-return-v_tx-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_generate_tx_id(p_generating_function text, p_session_info jsonb DEFAULT '{}'::jsonb)\n RETURNS uuid\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    v_tx UUID := gen_random_uuid();\nBEGIN\n    -- Genera un nuovo UUID e lo inserisce in dbops.transaction_ids\n    INSERT INTO dbops.transaction_ids (\n        id,\n        generating_function,\n        session_info\n    ) VALUES (\n        v_tx,\n        p_generating_function,\n        p_session_info\n    );\n\n    RETURN v_tx;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_get_or_create_session_tx_id/","title":"Fn get or create session tx id","text":""},{"location":"dbzero/dbops/funzioni/fn_get_or_create_session_tx_id/#documentazione-concettuale-funzione-dbopsfn_get_or_create_session_tx_id","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>dbops.fn_get_or_create_session_tx_id()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.transaction_ids </p> <p>Approfondimento funzioni :   - dbops.fn_generate_tx_id  - script.uuid_nil  - script.fn_ensure_logconn </p> <p>La funzione <code>dbops.fn_get_or_create_session_tx_id()</code> fornisce un UUID di transazione persistente per l\u2019intera sessione database, generandone uno nuovo solo se non gi\u00e0 impostato. Questo meccanismo garantisce che tutte le operazioni eseguite nella medesima connessione possano condividere lo stesso <code>tx_id</code>, semplificando log, tracciabilit\u00e0 e rollback in scenari complessi.</p>"},{"location":"dbzero/dbops/funzioni/fn_get_or_create_session_tx_id/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Unicit\u00e0 per sessione: restituisce un <code>tx_id</code> costante per la durata della connessione, evitando chiamate ripetute a generatori esterni.</li> <li>Fallback sicuro: in caso di errori di connessione o in contesti di migrazione/test, restituisce un UUID \u201cnil\u201d per non bloccare i processi.</li> <li>Contesto centralizzato: memorizza il <code>tx_id</code> in una GUC di sessione (<code>dbops.tx_id</code>) per accessi successivi.</li> </ul>"},{"location":"dbzero/dbops/funzioni/fn_get_or_create_session_tx_id/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"<p>Questa funzione non richiede parametri. Tutta la logica utilizza variabili di sessione e la funzione di generazione:</p> Parametro Tipo Default Descrizione nessuno \u2013 \u2013 La funzione auto-determina se creare o restituire il <code>tx_id</code>."},{"location":"dbzero/dbops/funzioni/fn_get_or_create_session_tx_id/#flusso-di-esecuzione-dettagliato","title":"\u2699\ufe0f Flusso di Esecuzione Dettagliato","text":"<ol> <li>Verifica connessione di logging</li> </ol> <pre><code>PERFORM script.fn_ensure_logconn();\n</code></pre> <p>Garantisce che il database sia pronto per eventuali chiamate <code>dblink</code> di audit o generazione remota.</p> <ol> <li>Lettura <code>dbops.tx_id</code> dalla sessione</li> </ol> <pre><code>v_tx_id := current_setting('dbops.tx_id', TRUE)::UUID;\n</code></pre> <ul> <li>Se esiste e vale un UUID, lo restituisce subito.</li> <li> <p>In caso di eccezione (non settato), <code>v_tx_id</code> rimane <code>NULL</code>.</p> </li> <li> <p>Generazione on\u2011demand tramite <code>dblink</code></p> </li> </ul> <pre><code>SELECT tx_id\n  INTO v_tx_id\n  FROM dblink(\n    current_setting('dblink.log_connection', TRUE),\n    $gen$\n      SELECT dbops.fn_generate_tx_id(\n        'dbops.fn_get_or_create_session_tx_id',\n        jsonb_build_object('source','fn_get_or_create')\n      )\n    $gen$\n  ) AS t(tx_id UUID);\n</code></pre> <ul> <li>La chiamata <code>dblink</code> esegue la function remota per creare e registrare un nuovo <code>tx_id</code>.</li> <li> <p>Imposta la GUC di sessione:</p> <p><pre><code>PERFORM set_config('dbops.tx_id', v_tx_id::text, TRUE);\n</code></pre>    * Casistiche di fallimento: su qualunque eccezione di <code>dblink</code>, cattura l\u2019errore e assegna:</p> <pre><code>v_tx_id := script.uuid_nil();\n</code></pre> <p>restituendo un UUID \u201cnil\u201d (<code>00000000-0000-0000-0000-000000000000</code>).</p> </li> <li> <p>Restituzione del <code>tx_id</code></p> </li> </ul> <pre><code>RETURN v_tx_id;\n</code></pre>"},{"location":"dbzero/dbops/funzioni/fn_get_or_create_session_tx_id/#esempio-di-utilizzo","title":"\ud83d\ude80 Esempio di Utilizzo","text":"<pre><code>-- Prima invocazione in sessione nuova:\nSELECT dbops.fn_get_or_create_session_tx_id() AS tx_id;\n-- Restituisce e memorizza un nuovo UUID.\n\n-- Invocazione successiva nella medesima sessione:\nSELECT dbops.fn_get_or_create_session_tx_id() AS tx_id;\n-- Restituisce lo stesso UUID senza creare nuovi record.\n</code></pre>"},{"location":"dbzero/dbops/funzioni/fn_get_or_create_session_tx_id/#vantaggi-e-considerazioni","title":"\ud83d\udca1 Vantaggi e Considerazioni","text":"<ul> <li>Tracciabilit\u00e0 coerente: tutte le chiamate in sessione condividono lo stesso <code>tx_id</code>, semplificando log e correlazione.</li> <li>Performance: riduce chiamate ridondanti a <code>fn_generate_tx_id</code>.</li> <li>Fallback controllato: restituisce <code>uuid_nil()</code> in caso di errori, utile in test o migrazioni dove non si desidera popolare la tabella <code>transaction_ids</code>.</li> <li>Estendibilit\u00e0: pu\u00f2 essere temporaneamente disattivata impostando manualmente <code>dbops.tx_id</code> su un valore predefinito o <code>000...0</code>, evitando side\u2011effect in contesti speciali.</li> </ul> <p>\ud83e\udde0 \u201c<code>fn_get_or_create_session_tx_id</code> garantisce un unico punto di controllo per il transaction ID di sessione, unendo performance, sicurezza e fallback affidabile.\u201d</p>"},{"location":"dbzero/dbops/funzioni/fn_get_or_create_session_tx_id/#funzione-fn_get_or_create_session_tx_id","title":"\u2699\ufe0f Funzione <code>fn_get_or_create_session_tx_id</code>","text":"<pre><code>CREATE FUNCTION fn_get_or_create_session_tx_id()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_get_or_create_session_tx_id/#create-or-replace-function-dbopsfn_get_or_create_session_tx_id-returns-uuid-language-plpgsql-security-definer-as-function-declare-v_tx_id-uuid-begin-0-assicurati-connessione-logconn-perform-scriptfn_ensure_logconn-raise-notice-dbg-fn_ensure_logconn-invocata-1-provo-a-leggere-dalla-sessione-begin-v_tx_id-current_settingdbopstx_id-trueuuid-raise-notice-dbg-dbopstx_id-in-sessione-v_tx_id-exception-when-others-then-raise-notice-dbg-dbopstx_id-non-settato-sqlerrm-v_tx_id-null-end-2-se-non-esiste-genero-uno-nuovo-tramite-dblink-if-v_tx_id-is-null-then-raise-notice-dbg-entrato-ramo-generazione-nuovo-tx_id-begin-select-tx_id-into-v_tx_id-from-dblink-current_settingmyappdblink_log_connection-true-gen-select-dbopsfn_generate_tx_id-dbopsfn_get_or_create_session_tx_id-jsonb_build_objectsourcefn_get_or_create-gen-as-ttx_id-uuid-raise-notice-dbg-dblink-ha-restituito-tx_id-v_tx_id-perform-set_configdbopstx_id-v_tx_idtext-true-raise-notice-dbg-set_config-dbopstx_id-v_tx_id-exception-when-others-then-raise-warning-dbg-errore-in-dblink-sqlerrm-v_tx_id-scriptuuid_nil-end-end-if-3-ritorna-raise-notice-dbg-fn_get_or_create_session_tx_id-restituisce-v_tx_id-return-v_tx_id-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_get_or_create_session_tx_id()\n RETURNS uuid\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    v_tx_id UUID;\nBEGIN\n        -- 0) Assicurati connessione logconn\n    PERFORM script.fn_ensure_logconn();\n    -- RAISE NOTICE '[DBG] fn_ensure_logconn() invocata';\n\n    -- 1) Provo a leggere dalla sessione\n    BEGIN\n        v_tx_id := current_setting('dbops.tx_id', TRUE)::UUID;\n        -- RAISE NOTICE '[DBG] dbops.tx_id in sessione = %', v_tx_id;\n    EXCEPTION WHEN OTHERS THEN\n        -- RAISE NOTICE '[DBG] dbops.tx_id non settato: %', SQLERRM;\n        v_tx_id := NULL;\n    END;\n\n    -- 2) Se non esiste, genero uno nuovo tramite dblink\n    IF v_tx_id IS NULL THEN\n        -- RAISE NOTICE '[DBG] Entrato ramo generazione nuovo tx_id';\n        BEGIN\n            SELECT tx_id INTO v_tx_id\n              FROM dblink(\n                current_setting('myapp.dblink_log_connection', TRUE),\n                $gen$\n                  SELECT dbops.fn_generate_tx_id(\n                    'dbops.fn_get_or_create_session_tx_id',\n                    jsonb_build_object('source','fn_get_or_create')\n                  )\n                $gen$\n              ) AS t(tx_id UUID);\n\n            -- RAISE NOTICE '[DBG] dblink ha restituito tx_id = %', v_tx_id;\n            PERFORM set_config('dbops.tx_id', v_tx_id::text, TRUE);\n            -- RAISE NOTICE '[DBG] set_config dbops.tx_id = %', v_tx_id;\n        EXCEPTION WHEN OTHERS THEN\n            -- RAISE WARNING '[DBG] Errore in dblink: %', SQLERRM;\n            v_tx_id := script.uuid_nil();\n        END;\n    END IF;\n\n    -- 3) Ritorna\n    -- RAISE NOTICE '[DBG] fn_get_or_create_session_tx_id restituisce %', v_tx_id;\n    RETURN v_tx_id;\n\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_list_indices/","title":"\u2699\ufe0f Funzione <code>fn_list_indices</code>","text":"<pre><code>CREATE FUNCTION fn_list_indices(p_schema text, p_table text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_list_indices/#create-or-replace-function-dbopsfn_list_indicesp_schema-text-p_table-text-default-nulltext-returns-tableschema_name-text-table_name-text-index_name-text-is_unique-boolean-is_primary-boolean-index_def-text-language-sql-as-function-select-nsnspnametext-as-schema_name-tblrelnametext-as-table_name-idxrelnametext-as-index_name-ixindisunique-as-is_unique-ixindisprimary-as-is_primary-pg_get_indexdefixindexrelid-as-index_def-from-pg_index-ix-join-pg_class-tbl-on-tbloid-ixindrelid-join-pg_class-idx-on-idxoid-ixindexrelid-join-pg_namespace-ns-on-nsoid-tblrelnamespace-where-nsnspname-p_schema-and-p_table-is-null-or-tblrelname-p_table-order-by-tblrelname-idxrelname-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_list_indices(p_schema text, p_table text DEFAULT NULL::text)\n RETURNS TABLE(schema_name text, table_name text, index_name text, is_unique boolean, is_primary boolean, index_def text)\n LANGUAGE sql\nAS $function$\n    SELECT\n      ns.nspname::TEXT        AS schema_name,\n      tbl.relname::TEXT       AS table_name,\n      idx.relname::TEXT       AS index_name,\n      ix.indisunique          AS is_unique,\n      ix.indisprimary         AS is_primary,\n      pg_get_indexdef(ix.indexrelid) AS index_def\n    FROM pg_index ix\n    JOIN pg_class tbl  ON tbl.oid = ix.indrelid\n    JOIN pg_class idx  ON idx.oid = ix.indexrelid\n    JOIN pg_namespace ns ON ns.oid = tbl.relnamespace\n    WHERE ns.nspname = p_schema\n      AND (p_table IS NULL OR tbl.relname = p_table)\n    ORDER BY tbl.relname, idx.relname;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_migrate_add_indirizzo_normalizzato/","title":"\u2699\ufe0f Funzione <code>fn_migrate_add_indirizzo_normalizzato</code>","text":"<pre><code>CREATE FUNCTION fn_migrate_add_indirizzo_normalizzato()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_migrate_add_indirizzo_normalizzato/#create-or-replace-function-dbopsfn_migrate_add_indirizzo_normalizzato-returns-void-language-plpgsql-as-function-begin-verifico-se-la-colonna-e-gia-stata-creata-if-not-exists-select-1-from-information_schemacolumns-where-table_schema-anagrafiche-and-table_name-indirizzi_dettaglio-and-column_name-indirizzo_normalizzato-then-eseguo-il-ddl-execute-ddl-alter-table-anagraficheindirizzi_dettaglio-add-column-indirizzo_normalizzato-text-generated-always-as-trim-via_norm-coalesce-civico_norm-coalesce-pal-palazzina-coalesce-scala-scala-coalesce-p-piano-coalesce-int-interno-stored-ddl-end-if-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_migrate_add_indirizzo_normalizzato()\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  -- verifico se la colonna \u00e8 gi\u00e0 stata creata\n  IF NOT EXISTS (\n    SELECT 1\n      FROM information_schema.columns\n     WHERE table_schema = 'anagrafiche'\n       AND table_name   = 'indirizzi_dettaglio'\n       AND column_name  = 'indirizzo_normalizzato'\n  ) THEN\n    -- eseguo il DDL\n    EXECUTE $ddl$\n      ALTER TABLE anagrafiche.indirizzi_dettaglio\n        ADD COLUMN indirizzo_normalizzato text\n          GENERATED ALWAYS AS (\n            TRIM(\n              via_norm\n              || COALESCE(', '     || civico_norm,      '')\n              || COALESCE(', Pal.' || palazzina,        '')\n              || COALESCE(', Scala '  || scala,         '')\n              || COALESCE(', P'      || piano,          '')\n              || COALESCE(', Int.'   || interno,        '')\n            )\n          ) STORED;\n    $ddl$;\n  END IF;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_normalize_indirizzo/","title":"\u2699\ufe0f Funzione <code>fn_normalize_indirizzo</code>","text":"<pre><code>CREATE FUNCTION fn_normalize_indirizzo(p_comune_id integer, p_indirizzo_libero text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_normalize_indirizzo/#create-or-replace-function-dbopsfn_normalize_indirizzop_comune_id-integer-p_indirizzo_libero-text-returns-tableindirizzo_dettaglio_id-integer-via_norm-text-civico_norm-text-codice_postale_id-integer-geoloc-geometry-language-plpgsql-as-function-declare-rec-record-begin-usage-example-select-from-dbopsfn_normalize_indirizzo123-via-roma-10-attenzione-questa-e-una-base-perche-lastringa-indirizzo-sara-piu-complessa-e-successivamente-dovra-prevedere-piu-eccezioni-esemmpi-via-roma-10e-batt4-int7-piano-4-ecc-select-into-rec-from-scriptfn_get_stradariop_comune_id-p_indirizzo_libero-limit-1-if-found-then-indirizzo_dettaglio_id-recstradario_id-via_norm-uppertrimrecdescrizione_completa-civico_norm-select-id-into-codice_postale_id-from-configcodici_postali-where-codice_postale-reccod_postale-and-comune_id-p_comune_id-limit-1-geoloc-recgeoloc-else-indirizzo_dettaglio_id-null-via_norm-null-civico_norm-null-codice_postale_id-null-geoloc-null-end-if-return-next-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_normalize_indirizzo(p_comune_id integer, p_indirizzo_libero text)\n RETURNS TABLE(indirizzo_dettaglio_id integer, via_norm text, civico_norm text, codice_postale_id integer, geoloc geometry)\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    rec RECORD;\nBEGIN\n\n-- Usage Example:\n-- SELECT * FROM dbops.fn_normalize_indirizzo(123, 'Via Roma 10');\n-- Attenzione questa \u00e8 una base perch\u00e8 lastringa indirizzo sar\u00e0 pi\u00f9 \n-- complessa e successivamente dovr\u00e0 prevedere pi\u00f9 eccezioni.\n-- esemmpi 'Via Roma 10/e batt.4 int.7 piano 4 ecc.'\n    SELECT * INTO rec\n    FROM script.fn_get_stradario(p_comune_id, p_indirizzo_libero)\n    LIMIT 1;\n\n    IF FOUND THEN\n        indirizzo_dettaglio_id := rec.stradario_id;\n        via_norm := UPPER(TRIM(rec.descrizione_completa));\n        civico_norm := '';\n\n        SELECT id INTO codice_postale_id \n        FROM config.codici_postali\n        WHERE codice_postale = rec.cod_postale\n          AND comune_id = p_comune_id\n        LIMIT 1;\n\n        geoloc := rec.geoloc;\n    ELSE\n        indirizzo_dettaglio_id := NULL;\n        via_norm := NULL;\n        civico_norm := NULL;\n        codice_postale_id := NULL;\n        geoloc := NULL;\n    END IF;\n\n    RETURN NEXT;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_populate_fk_index_policy/","title":"Fn populate fk index policy","text":""},{"location":"dbzero/dbops/funzioni/fn_populate_fk_index_policy/#documentazione-concettuale-funzione-dbopsfn_populate_fk_index_policy","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>dbops.fn_populate_fk_index_policy()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.fk_index_policy </p> <p>Approfondimento view:  - dbops.vw_fk_senza_indice </p> <p>La funzione <code>dbops.fn_populate_fk_index_policy()</code> esegue il popolamento automatico di <code>dbops.fk_index_policy</code> aggiungendo tutte le foreign key presenti in <code>dbops.vw_fk_senza_indice</code> che non hanno ancora un record in policy, impostando per ciascuna <code>consentito = false</code>.</p>"},{"location":"dbzero/dbops/funzioni/fn_populate_fk_index_policy/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Coerenza iniziale   Garantire che ogni FK rilevata nella view senza indice abbia la propria entry di policy, evitando omissioni.</li> <li>Popolamento \u201ca freddo\u201d   Tutti i nuovi record vengono creati con <code>consentito = false</code>, lasciando in carico all\u2019operatore la decisione di abilitare o meno l\u2019indice.</li> <li>Automazione   Riduce il lavoro manuale di inserimento di policy per nuove FKs.</li> </ul>"},{"location":"dbzero/dbops/funzioni/fn_populate_fk_index_policy/#flusso-logico","title":"\ud83d\udd0d Flusso Logico","text":"<ol> <li>Lettura FKs senza policy    Seleziona dalla view <code>dbops.vw_fk_senza_indice</code> tutte le tuple <code>(schema_name, table_name, constraint_name)</code> non ancora presenti in <code>dbops.fk_index_policy</code>.</li> <li>Inserimento in <code>fk_index_policy</code>    Per ciascuna riga, esegue:</li> </ol> <pre><code>INSERT INTO dbops.fk_index_policy(\n  schema_name,\n  table_name,\n  constraint_name,\n  consentito,\n  note\n) VALUES (\n  rec.schema_name,\n  rec.table_name,\n  rec.constraint_name,\n  false,\n  'Popolamento automatico: indice ix_&lt;table&gt;_&lt;constraint&gt; non ancora presente'\n);\n</code></pre>"},{"location":"dbzero/dbops/funzioni/fn_populate_fk_index_policy/#funzione-sql","title":"\ud83d\udd16 Funzione SQL","text":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_populate_fk_index_policy()\nRETURNS void\nLANGUAGE plpgsql\nAS $$\nDECLARE\n  rec RECORD;\nBEGIN\n  FOR rec IN\n    SELECT schema_name, table_name, constraint_name\n      FROM dbops.vw_fk_senza_indice\n     WHERE (schema_name, table_name, constraint_name)\n       NOT IN (\n         SELECT schema_name, table_name, constraint_name\n           FROM dbops.fk_index_policy\n       )\n  LOOP\n    INSERT INTO dbops.fk_index_policy(\n      schema_name,\n      table_name,\n      constraint_name,\n      consentito,\n      note\n    ) VALUES (\n      rec.schema_name,\n      rec.table_name,\n      rec.constraint_name,\n      false,\n      format(\n        'Autopopulated: missing ix_%s_%s index',\n        rec.table_name,\n        rec.constraint_name\n      )\n    );\n  END LOOP;\nEND;\n$$;\n\nCOMMENT ON FUNCTION dbops.fn_populate_fk_index_policy() IS\n  'Popola automaticamente dbops.fk_index_policy per tutte le FK senza indice, con consentito=false.';\n</code></pre>"},{"location":"dbzero/dbops/funzioni/fn_populate_fk_index_policy/#utilizzo","title":"\ud83d\ude80 Utilizzo","text":"<p>Essendo una funzione che restituisce <code>void</code>, puoi eseguirla direttamente con:</p> <pre><code>SELECT dbops.fn_populate_fk_index_policy();\n</code></pre> <p>In alternativa, in un contesto PL/pgSQL o in un DO block:</p> <pre><code>DO $$\nBEGIN\n  PERFORM dbops.fn_populate_fk_index_policy();\nEND;\n$$;\n</code></pre> <p>Nota: non usare <code>SELECT * FROM dbops.fn_populate_fk_index_policy()</code>, poich\u00e9 la funzione non restituisce righe tabellari. Se preferisci invocarla con <code>CALL</code>, puoi convertirla in procedura:</p> <pre><code>CREATE PROCEDURE dbops.apply_population()\nLANGUAGE plpgsql AS $$\nBEGIN\n  PERFORM dbops.fn_populate_fk_index_policy();\nEND;\n$$;\n</code></pre> <p>E poi eseguire:</p> <pre><code>CALL dbops.apply_population();\n</code></pre> <p>\ud83e\udde0 \u201cEsegui la funzione con <code>SELECT</code> o <code>PERFORM</code>: non \u00e8 necessario usare <code>SELECT * FROM</code>. Converti in procedura se vuoi chiamare con <code>CALL</code>.\u201d</p>"},{"location":"dbzero/dbops/funzioni/fn_populate_fk_index_policy/#funzione-fn_populate_fk_index_policy","title":"\u2699\ufe0f Funzione <code>fn_populate_fk_index_policy</code>","text":"<pre><code>CREATE FUNCTION fn_populate_fk_index_policy()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_populate_fk_index_policy/#create-or-replace-function-dbopsfn_populate_fk_index_policy-returns-void-language-plpgsql-as-function-declare-rec-record-begin-for-rec-in-select-schema_name-table_name-constraint_name-create_index_suggestion-from-dbopsvw_fk_senza_indice-where-schema_name-table_name-constraint_name-not-in-select-schema_name-table_name-constraint_name-from-dbopsfk_index_policy-loop-insert-into-dbopsfk_index_policy-schema_name-table_name-constraint_name-consentito-dll_command-values-recschema_name-rectable_name-recconstraint_name-false-reccreate_index_suggestion-end-loop-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_populate_fk_index_policy()\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n  rec RECORD;\nBEGIN\n  FOR rec IN\n    SELECT schema_name, table_name, constraint_name, create_index_suggestion  \n      FROM dbops.vw_fk_senza_indice\n    WHERE (schema_name, table_name, constraint_name)\n      NOT IN (\n        SELECT schema_name, table_name, constraint_name\n          FROM dbops.fk_index_policy\n      )\n  LOOP\n    INSERT INTO dbops.fk_index_policy(\n      schema_name,\n      table_name,\n      constraint_name,\n      consentito,\n      dll_command\n    ) VALUES (\n      rec.schema_name,\n      rec.table_name,\n      rec.constraint_name,\n      false,\n      rec.create_index_suggestion\n    );\n  END LOOP;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_search_column_usage/","title":"Fn search column usage","text":""},{"location":"dbzero/dbops/funzioni/fn_search_column_usage/#documentazione-concettuale-function-dbopsfn_search_column_usagep_column_name-text","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Function <code>dbops.fn_search_column_usage(p_column_name TEXT)</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <ul> <li>Catalogo delle view (<code>pg_catalog.pg_views</code>, <code>pg_catalog.pg_matviews</code>)</li> <li>Catalogo delle funzioni e regole (<code>pg_catalog.pg_proc</code>, <code>pg_catalog.pg_rules</code>)</li> <li>Constraint system (<code>pg_catalog.pg_constraint</code>)</li> </ul> <p>La funzione <code>dbops.fn_search_column_usage</code> consente di ricercare riferimenti a un determinato nome di colonna all\u2019interno di viste, materialized view, regole, funzioni e vincoli, restituendo il tipo di oggetto, lo schema e il nome dell\u2019oggetto che la contiene.</p>"},{"location":"dbzero/dbops/funzioni/fn_search_column_usage/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Individuare rapidamente tutte le occorrenze di un campo in definizioni SQL presenti nel database.</li> <li>Facilitare attivit\u00e0 di refactoring, pulizia del codice, e verifica di dipendenze tra oggetti del database.</li> </ul>"},{"location":"dbzero/dbops/funzioni/fn_search_column_usage/#parametri-e-firma","title":"\ud83d\udd0d Parametri e Firma","text":"<pre><code>fn_search_column_usage(\n  p_column_name TEXT\n) RETURNS TABLE(\n  object_type TEXT,\n  schema_name TEXT,\n  object_name TEXT\n)\nLANGUAGE sql\nSTABLE\nROWS 1000;\n</code></pre> <ul> <li><code>p_column_name</code>: nome della colonna (o frammento) da ricercare nelle definizioni.</li> <li> <p>Return: una tabella con i seguenti campi:</p> </li> <li> <p><code>object_type</code>: tipo di oggetto (<code>view</code>, <code>materialized_view</code>, <code>rule</code>, <code>function</code>, <code>constraint</code>)</p> </li> <li><code>schema_name</code>: schema di appartenenza dell\u2019oggetto</li> <li><code>object_name</code>: nome dell\u2019oggetto in cui viene utilizzata la colonna</li> </ul>"},{"location":"dbzero/dbops/funzioni/fn_search_column_usage/#logica-e-flusso-di-esecuzione","title":"\u2699\ufe0f Logica e Flusso di Esecuzione","text":"<ol> <li>Viste Standard (<code>pg_views</code>): cerca la stringa in <code>definition</code> per individuare colonne referenziate.</li> <li>Materialized Views (<code>pg_matviews</code>): analogamente alle view.</li> <li>Regole (<code>pg_rules</code>): verifica il testo delle regole.</li> <li>Funzioni (<code>pg_proc</code>): esamina il sorgente PL/pgSQL (<code>prosrc</code>).</li> <li>Constraint di Check (<code>pg_constraint</code>): controlla la condizione BOOLEAN (<code>conbin</code>).</li> </ol> <p>Tutti i risultati vengono uniti (<code>UNION ALL</code>) e restituiti come un unico set.</p>"},{"location":"dbzero/dbops/funzioni/fn_search_column_usage/#esempi-di-utilizzo","title":"\ud83d\udd0d Esempi di Utilizzo","text":"<ol> <li>Ricerca generica</li> </ol> <pre><code>SELECT *\n  FROM dbops.fn_search_column_usage('customer_id');\n</code></pre> <p>Restituisce tutte le view, funzioni, regole e vincoli che contengono la stringa <code>customer_id</code>.</p> <ol> <li>Filtrare solo le funzioni</li> </ol> <pre><code>SELECT schema_name, object_name\n  FROM dbops.fn_search_column_usage('amount')\n WHERE object_type = 'function';\n</code></pre> <ol> <li>Verificare vincoli che utilizzano un campo</li> </ol> <pre><code>SELECT schema_name, object_name\n  FROM dbops.fn_search_column_usage('status')\n WHERE object_type = 'constraint';\n</code></pre> <ol> <li>Esempio in contesto di refactoring</li> </ol> <pre><code>-- Trovare tutte le dipendenze di 'data_insert'\nWITH deps AS (\n  SELECT *\n    FROM dbops.fn_search_column_usage('data_insert')\n)\nSELECT * FROM deps;\n-- Procedi ad aggiornare o eliminare i riferimenti identificati\n</code></pre>"},{"location":"dbzero/dbops/funzioni/fn_search_column_usage/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Refactoring sicuro: individua tutte le dipendenze di un campo prima di rinominarlo o rimuoverlo.</li> <li>Documentazione: mappa le dipendenze tra oggetti di database per audit e analisi.</li> <li>Efficienza: evita di ispezionare manualmente definizioni distribuite in pi\u00f9 cataloghi.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>fn_search_column_usage</code> \u00e8 possibile gestire in modo centralizzato l\u2019analisi degli utilizzi di un campo, semplificando manutenzione e refactoring a livello di schema.\u201d</p>"},{"location":"dbzero/dbops/funzioni/fn_search_column_usage/#funzione-fn_search_column_usage","title":"\u2699\ufe0f Funzione <code>fn_search_column_usage</code>","text":"<pre><code>CREATE FUNCTION fn_search_column_usage(p_column_name text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_search_column_usage/#create-or-replace-function-dbopsfn_search_column_usagep_column_name-text-returns-tableobject_type-text-schema_name-text-object_name-text-language-sql-stable-as-function-function-dbopsfn_search_column_usage-purpose-given-a-column-name-returns-references-in-views-materialized-views-rules-functions-and-constraints-usage-example-select-from-dbopsfn_search_column_usagenome_campo-search-standard-views-select-view-as-object_type-schemaname-as-schema_name-viewname-as-object_name-from-pg_catalogpg_views-where-definition-ilike-p_column_name-union-all-search-materialized-views-select-materialized_view-as-object_type-schemaname-as-schema_name-matviewname-as-object_name-from-pg_catalogpg_matviews-where-definition-ilike-p_column_name-union-all-search-rules-select-rule-as-object_type-schemaname-as-schema_name-rulename-as-object_name-from-pg_catalogpg_rules-where-definition-ilike-p_column_name-union-all-search-functions-source-code-select-function-as-object_type-nnspname-as-schema_name-pproname-as-object_name-from-pg_catalogpg_proc-p-join-pg_catalogpg_namespace-n-on-noid-ppronamespace-where-pprosrc-ilike-p_column_name-union-all-search-check-constraints-select-constraint-as-object_type-nnspname-as-schema_name-conname-as-object_name-from-pg_catalogpg_constraint-con-join-pg_catalogpg_namespace-n-on-noid-conconnamespace-where-conconbin-ilike-p_column_name-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_search_column_usage(p_column_name text)\n RETURNS TABLE(object_type text, schema_name text, object_name text)\n LANGUAGE sql\n STABLE\nAS $function$\n-- Function: dbops.fn_search_column_usage\n-- Purpose: Given a column name, returns references in views, materialized views, rules, functions, and constraints.\n-- Usage example:\n-- SELECT * FROM dbops.fn_search_column_usage('nome_campo');\n\n    -- SEARCH STANDARD VIEWS\n    SELECT\n        'view'          AS object_type,\n        schemaname      AS schema_name,\n        viewname        AS object_name\n    FROM pg_catalog.pg_views\n    WHERE definition ILIKE '%' || p_column_name || '%'\n\n    UNION ALL\n\n    -- SEARCH MATERIALIZED VIEWS\n    SELECT\n        'materialized_view' AS object_type,\n        schemaname          AS schema_name,\n        matviewname         AS object_name\n    FROM pg_catalog.pg_matviews\n    WHERE definition ILIKE '%' || p_column_name || '%'\n\n    UNION ALL\n\n    -- SEARCH RULES\n    SELECT\n        'rule'           AS object_type,\n        schemaname       AS schema_name,\n        rulename         AS object_name\n    FROM pg_catalog.pg_rules\n    WHERE definition ILIKE '%' || p_column_name || '%'\n\n    UNION ALL\n\n    -- SEARCH FUNCTIONS (source code)\n    SELECT\n        'function'      AS object_type,\n        n.nspname       AS schema_name,\n        p.proname       AS object_name\n    FROM pg_catalog.pg_proc p\n    JOIN pg_catalog.pg_namespace n ON n.oid = p.pronamespace\n    WHERE p.prosrc ILIKE '%' || p_column_name || '%'\n\n    UNION ALL\n\n    -- SEARCH CHECK CONSTRAINTS\n    SELECT\n        'constraint'    AS object_type,\n        n.nspname       AS schema_name,\n        conname         AS object_name\n    FROM pg_catalog.pg_constraint con\n    JOIN pg_catalog.pg_namespace n ON n.oid = con.connamespace\n    WHERE con.conbin ILIKE '%' || p_column_name || '%';\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/fn_seed_fk_index_policy/","title":"Fn seed fk index policy","text":""},{"location":"dbzero/dbops/funzioni/fn_seed_fk_index_policy/#documentazione-concettuale-funzione-dbopsfn_seed_fk_index_policy","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>dbops.fn_seed_fk_index_policy()</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - dbops.fk_index_policy </p> <p>Approfondimento funzioni:  - dbops.vw_fk_con_indice_missing_policy </p> <p>La funzione <code>dbops.fn_seed_fk_index_policy()</code> popola automaticamente la tabella <code>dbops.fk_index_policy</code> con le foreign key gi\u00e0 indicizzate ma non ancora presenti in policy, marcandole come <code>consentito = true</code> e <code>generated_by_script = true</code>.</p>"},{"location":"dbzero/dbops/funzioni/fn_seed_fk_index_policy/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Sincronizzazione iniziale   Aggiunge in <code>fk_index_policy</code> tutte le FK con indice esistente rilevate in <code>vw_fk_con_indice_missing_policy</code>.</li> <li>Automazione   Evita inserimenti manuali per policy gi\u00e0 coperte da indice.</li> <li>Flag di origine   Imposta <code>generated_by_script = true</code> per distinguere le righe create automaticamente.</li> </ul>"},{"location":"dbzero/dbops/funzioni/fn_seed_fk_index_policy/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"<p>Questa funzione non richiede parametri: agisce su tutti i record presenti nella view <code>dbops.vw_fk_con_indice_missing_policy</code>.</p>"},{"location":"dbzero/dbops/funzioni/fn_seed_fk_index_policy/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Selezione FK da view    Recupera <code>schema_name</code>, <code>table_name</code>, <code>constraint_name</code> e <code>create_index_suggestion</code> dalla view.</li> <li> <p>Inserimento con ON CONFLICT    Usa <code>INSERT ... ON CONFLICT (schema_name, table_name, constraint_name) DO NOTHING</code> per:</p> </li> <li> <p><code>consentito = true</code></p> </li> <li><code>generated_by_script = true</code></li> <li>mantenere qualsiasi <code>note</code> o valore preesistente se gi\u00e0 presente.</li> </ol>"},{"location":"dbzero/dbops/funzioni/fn_seed_fk_index_policy/#utilizzo","title":"\ud83d\ude80 Utilizzo","text":"<pre><code>-- Esegui il popolamento iniziale:\nSELECT dbops.fn_seed_fk_index_policy();\n</code></pre> <p>Pu\u00f2 essere integrata in un changeSet Liquibase con <code>runAlways: false</code> (solo esecuzione iniziale) per assicurare che tutte le FK con indice siano registrate in policy.</p>"},{"location":"dbzero/dbops/funzioni/fn_seed_fk_index_policy/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Completezza: nessuna FK indicizzata resta scoperta da policy.</li> <li>Tracciabilit\u00e0: <code>generated_by_script</code> segnala le policy create automaticamente.</li> <li>Semplicit\u00e0: un\u2019unica chiamata per inizializzare la policy.</li> <li>Integrazione CI/CD: pu\u00f2 essere collocata in uno step di migrazione finale senza duplicare record.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>fn_seed_fk_index_policy()</code> automatizziamo la scoperta e l\u2019inclusione delle FK gi\u00e0 indicizzate, mantenendo la policy sempre completa e allineata.\u201d</p>"},{"location":"dbzero/dbops/funzioni/fn_seed_fk_index_policy/#funzione-fn_seed_fk_index_policy","title":"\u2699\ufe0f Funzione <code>fn_seed_fk_index_policy</code>","text":"<pre><code>CREATE FUNCTION fn_seed_fk_index_policy()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/fn_seed_fk_index_policy/#create-or-replace-function-dbopsfn_seed_fk_index_policy-returns-void-language-plpgsql-as-function-begin-insert-into-dbopsfk_index_policy-schema_name-table_name-constraint_name-dll_command-consentito-generated_by_script-select-vwschema_name-vwtable_name-vwconstraint_name-vwcreate_index_suggestion-true-true-from-dbopsvw_fk_con_indice_missing_policy-vw-on-conflict-schema_name-table_name-constraint_name-do-nothing-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_seed_fk_index_policy()\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\n    BEGIN\n      INSERT INTO dbops.fk_index_policy(\n        schema_name,\n        table_name,\n        constraint_name,\n        dll_command,\n        consentito,\n        generated_by_script\n\n      )\n      SELECT\n        vw.schema_name,\n        vw.table_name,\n        vw.constraint_name,\n        vw.create_index_suggestion,\n        true,\n        true\n\n      FROM dbops.vw_fk_con_indice_missing_policy vw\n      ON CONFLICT (schema_name, table_name, constraint_name) DO NOTHING;\n    END;\n    $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/funzioni/trgfn_tx_id_managed/","title":"Trgfn tx id managed","text":""},{"location":"dbzero/dbops/funzioni/trgfn_tx_id_managed/#documentazione-concettuale-trigger-function-dbopstrgfn_tx_id_managed","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>dbops.trgfn_tx_id_managed()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.transaction_ids </p> <p>Approfondimento funzioni :   - dbops.fn_get_or_create_session_tx_id  - script.fn_log_and_raise_error </p>"},{"location":"dbzero/dbops/funzioni/trgfn_tx_id_managed/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La trigger function <code>dbops.trgfn_tx_id_managed()</code> viene eseguita <code>BEFORE INSERT OR UPDATE</code> su ogni tabella che contiene la colonna <code>tx_id</code> e centralizza la logica di validazione, generazione e assegnazione dell\u2019UUID di transazione per la riga in corso di inserimento/aggiornamento.</p>"},{"location":"dbzero/dbops/funzioni/trgfn_tx_id_managed/#obiettivi-e-ruolo","title":"\ud83c\udfaf Obiettivi e Ruolo","text":"<ol> <li>Bypass configurabile: permette di saltare la generazione e verifica del <code>tx_id</code> in contesti speciali (es. test, migrazioni, debug).</li> <li>Validazione integrit\u00e0: garantisce che un <code>tx_id</code> presente in sessione esista gi\u00e0 in <code>dbops.transaction_ids</code>, altrimenti segnala un warning e resetta a <code>nil</code>.</li> <li>Generazione on-demand: se non \u00e8 presente alcun <code>tx_id</code> in sessione e il bypass \u00e8 disabilitato, invoca <code>dbops.fn_get_or_create_session_tx_id()</code> per creare un nuovo identificativo.</li> <li>Assegnazione uniforme: popola la colonna <code>NEW.tx_id</code> con il valore deciso dal flusso, assicurando coerenza transazionale.</li> </ol>"},{"location":"dbzero/dbops/funzioni/trgfn_tx_id_managed/#variabili-di-contesto-e-configurazione","title":"\ud83d\udd0d Variabili di Contesto e Configurazione","text":"Variabile Scopo <code>tx_id_bypass_enabled</code> Parametro (<code>config.parameters</code>) che abilita il bypass completo: se <code>TRUE</code>, non viene generato n\u00e9 verificato un nuovo <code>tx_id</code>. <code>app.bypass_tx_id_check</code> GUC di sessione: pu\u00f2 essere usata per override temporanei del bypass senza cambiare il parametro globale. <code>current_setting('dbops.tx_id', TRUE)</code> Legge il valore di <code>tx_id</code> salvato in sessione, se presente; altrimenti solleva eccezione interna. <code>script.uuid_nil()</code> Funzione helper che restituisce l\u2019UUID nil (<code>00000000-0000-0000-0000-000000000000</code>)."},{"location":"dbzero/dbops/funzioni/trgfn_tx_id_managed/#flusso-di-esecuzione-dettagliato","title":"\u2699\ufe0f Flusso di Esecuzione Dettagliato","text":"<ol> <li> <p>Verifica bypass globale</p> </li> <li> <p>Legge <code>config.parameters</code> per il parametro <code>tx_id_bypass_enabled</code>.</p> </li> <li> <p>In caso di mancanza o di errore, logga via <code>fn_log_and_raise_error</code> e prosegue con bypass disabilitato.</p> </li> <li> <p>Override bypass a sessione</p> </li> <li> <p>Se il bypass non \u00e8 gi\u00e0 abilitato, prova a leggere <code>app.bypass_tx_id_check</code> dalla GUC di sessione.</p> </li> <li> <p>Eventuali errori di lettura vengono ignorati (assume bypass disabilitato).</p> </li> <li> <p>Recupero <code>tx_id</code> di sessione</p> </li> <li> <p>Tenta <code>current_setting('dbops.tx_id', TRUE)</code> per ottenere un <code>tx_id</code> gi\u00e0 presente in sessione.</p> </li> <li> <p>In caso di errore o non esistenza, <code>v_session_tx_id</code> = <code>NULL</code>.</p> </li> <li> <p>Determinazione del nuovo <code>tx_id</code></p> </li> <li> <p>Bypass attivo: usa <code>v_session_tx_id</code> se esistente, altrimenti <code>uuid_nil()</code>.</p> </li> <li> <p>Bypass disabilitato:</p> <ul> <li> <p>Se <code>v_session_tx_id</code> non \u00e8 NULL: verifica in <code>dbops.transaction_ids</code>.</p> </li> <li> <p>Se esiste, lo riutilizza.</p> </li> <li>Se non esiste, logga warning (<code>W_TXID_NOT_REGISTERED</code>) e assegna <code>uuid_nil()</code>.</li> <li> <p>Se <code>v_session_tx_id</code> \u00e8 NULL: genera uno nuovo con <code>dbops.fn_get_or_create_session_tx_id()</code>.</p> </li> <li> <p>In caso di errori di generazione, logga errore (<code>E_TXID_GENERATION</code>) e usa <code>uuid_nil()</code>.</p> </li> </ul> </li> <li> <p>Assegnazione a NEW.tx_id</p> </li> </ol> <pre><code>NEW.tx_id := v_new_tx_id;\n</code></pre> <p>Garantisce che ogni riga inserita o aggiornata abbia sempre un <code>tx_id</code> valido secondo la logica centralizzata.</p>"},{"location":"dbzero/dbops/funzioni/trgfn_tx_id_managed/#esempio-di-trigger-ddl","title":"\ud83d\udd16 Esempio di Trigger DDL","text":"<pre><code>DROP TRIGGER IF EXISTS trg_managed_tx_id ON my_schema.my_table;\nCREATE TRIGGER trg_managed_tx_id\n  BEFORE INSERT OR UPDATE\n  ON my_schema.my_table\n  FOR EACH ROW\n  EXECUTE FUNCTION dbops.trgfn_tx_id_managed();\n</code></pre>"},{"location":"dbzero/dbops/funzioni/trgfn_tx_id_managed/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Centralizzazione logica: nessuna duplicazione di codice di generazione/validazione del <code>tx_id</code> across tabelle.</li> <li>Flessibilit\u00e0: gestisce bypass globali e di sessione per scenari di test, migrazione o debug.</li> <li>Affidabilit\u00e0: verifica sempre l\u2019esistenza del <code>tx_id</code> e assicura fallback pulito a <code>uuid_nil()</code>.</li> <li>Tracciabilit\u00e0 avanzata: associa ogni record al giusto <code>tx_id</code>, mantenendo coerenza con il registro centrale <code>transaction_ids</code>.</li> </ul> <p>\ud83e\udde0 \u201c<code>trgfn_tx_id_managed</code> \u00e8 il cuore della gestione transazionale in Zero ERP: garantisce consistenza, controlli configurabili e fallback sicuri, mantenendo la logica di correlazione centralizzata.\u201d</p>"},{"location":"dbzero/dbops/funzioni/trgfn_tx_id_managed/#funzione-trgfn_tx_id_managed","title":"\u2699\ufe0f Funzione <code>trgfn_tx_id_managed</code>","text":"<pre><code>CREATE FUNCTION trgfn_tx_id_managed()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/dbops/funzioni/trgfn_tx_id_managed/#create-or-replace-function-dbopstrgfn_tx_id_managed-returns-trigger-language-plpgsql-security-definer-as-function-declare-v_bypass_enabled-boolean-false-v_session_tx_id-uuid-v_new_tx_id-uuid-begin-1-verifica-stato-bypass-config-sessione-legge-da-configparameters-begin-select-default_valueboolean-into-v_bypass_enabled-from-configparameters-where-code-tx_id_bypass_enabled-if-not-found-then-parametro-mancante-log-e-prosegui-con-bypass-disabilitato-perform-scriptfn_log_and_raise_error-database-dbopstrgfn_tx_id_managed-errore_parametri_tabella-jsonb_build_object-codice_parametro-tx_id_bypass_enabled-nome_tabella-configparameters-action-default-bypassfalse-nulluuid-tx_id_bypass_enabled-configparameters-end-if-exception-when-others-then-errore-reale-nella-lettura-del-parametro-log-e-abort-perform-scriptfn_log_and_raise_error-database-dbopstrgfn_tx_id_managed-e_sql_read_table-jsonb_build_object-parameter-tx_id_bypass_enabled-error-sqlerrm-nulluuid-tg_table_nametext-sqlerrmtext-rilascia-eccezione-per-non-proseguire-raise-end-2-override-da-sessione-se-non-attivo-if-not-v_bypass_enabled-then-begin-v_bypass_enabled-current_settingmyappbypass_tx_id_check-trueboolean-exception-when-others-then-variabile-sessione-non-impostata-procedi-senza-bypass-null-end-end-if-3-lettura-tx_id-da-variabile-di-sessione-begin-v_session_tx_id-current_settingdbopstx_id-trueuuid-exception-when-others-then-v_session_tx_id-null-end-4-assegnazione-tx_id-in-base-alla-modalita-if-v_bypass_enabled-then-caso-a-bypass-attivo-usa-nil-o-valore-in-sessione-v_new_tx_id-coalescev_session_tx_id-scriptuuid_nil-else-if-v_session_tx_id-is-not-null-then-caso-b-modalita-normale-con-tx_id-in-sessione-verifica-esistenza-in-transaction_ids-perform-1-from-dbopstransaction_ids-where-id-v_session_tx_id-if-found-then-v_new_tx_id-v_session_tx_id-else-caso-c-id-non-registrato-log-warning-e-assegna-nil-perform-scriptfn_log_and_raise_error-database-dbopstrgfn_tx_id_managed-w_txid_not_registered-jsonb_build_object-tx_id-v_session_tx_id-nulluuid-variadic-arraytext-v_new_tx_id-scriptuuid_nil-end-if-else-caso-d-nessun-tx_id-in-sessione-generazione-tramite-dblink-assegna-nuovo-modalita-standard-begin-invochiamo-il-helper-che-fa-dblink-set_config-v_new_tx_id-dbopsfn_get_or_create_session_tx_id-exception-when-others-then-errore-generazione-tx_id-log-e-assegna-nil-perform-scriptfn_log_and_raise_error-database-dbopstrgfn_tx_id_managed-e_txid_generation-jsonb_build_object-error-sqlerrm-nulluuid-variadic-arraytext-v_new_tx_id-scriptuuid_nil-end-end-if-end-if-5-assegna-tx_id-al-record-newtx_id-v_new_tx_id-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION dbops.trgfn_tx_id_managed()\n RETURNS trigger\n LANGUAGE plpgsql\n SECURITY DEFINER\nAS $function$\nDECLARE\n    v_bypass_enabled BOOLEAN := FALSE;\n    v_session_tx_id     UUID;\n    v_new_tx_id      UUID;\nBEGIN\n    -- --------------------------------------\n    -- 1. Verifica stato bypass (config + sessione)\n    -- --------------------------------------\n    -- Legge da config.parameters\n    BEGIN\n        SELECT default_value::BOOLEAN\n          INTO v_bypass_enabled\n          FROM config.parameters\n        WHERE code = 'tx_id_bypass_enabled';\n\n        IF NOT FOUND THEN\n            -- Parametro mancante: log e prosegui con bypass disabilitato\n\n            PERFORM script.fn_log_and_raise_error(\n                'database',\n                'dbops.trgfn_tx_id_managed',\n                'ERRORE_PARAMETRI_TABELLA',\n                jsonb_build_object(\n                    'codice_parametro', 'tx_id_bypass_enabled',\n                    'nome_tabella',      'config.parameters',\n                    'action', 'default bypass=false' \n                ),\n                   NULL::uuid,\n                  'tx_id_bypass_enabled',\n                  'config.parameters'\n              );\n        END IF;\n\n    EXCEPTION WHEN OTHERS THEN\n        -- Errore reale nella lettura del parametro: log e abort\n        PERFORM script.fn_log_and_raise_error(\n            'database',\n            'dbops.trgfn_tx_id_managed',\n            'E_SQL_READ_TABLE',\n            jsonb_build_object(\n              'parameter', 'tx_id_bypass_enabled',\n              'error', SQLERRM\n            ),\n            NULL::uuid,\n            TG_TABLE_NAME::text,\n            SQLERRM::text\n        );\n        -- Rilascia eccezione per non proseguire\n        RAISE;\n    END;\n\n      -- --------------------------------------\n    -- 2.  Override da sessione se non attivo\n      -- --------------------------------------\n    IF NOT v_bypass_enabled THEN\n        BEGIN\n            v_bypass_enabled := current_setting('myapp.bypass_tx_id_check', TRUE)::BOOLEAN;\n        EXCEPTION WHEN OTHERS THEN\n            -- Variabile sessione non impostata: procedi senza bypass\n            NULL;\n        END;\n    END IF;\n      -- --------------------------------------\n   -- 3. Lettura tx_id da variabile di sessione\n      -- --------------------------------------\n    BEGIN\n        v_session_tx_id := current_setting('dbops.tx_id', TRUE)::UUID;\n    EXCEPTION WHEN OTHERS THEN\n        v_session_tx_id := NULL;\n    END;\n      -- --------------------------------------\n    -- 4. Assegnazione tx_id in base alla modalit\u00e0\n      -- --------------------------------------\n    IF v_bypass_enabled THEN\n        -- Caso A) Bypass attivo: usa nil o valore in sessione\n        v_new_tx_id := COALESCE(v_session_tx_id, script.uuid_nil());\n\n    ELSE\n        IF v_session_tx_id IS NOT NULL THEN\n            -- Caso B)  Modalit\u00e0 normale con tx_id in sessione\n            -- Verifica esistenza in transaction_ids\n            PERFORM 1 \n              FROM dbops.transaction_ids \n             WHERE id = v_session_tx_id;\n            IF FOUND THEN\n                v_new_tx_id := v_session_tx_id;\n\n            ELSE\n                 -- Caso C)\n                -- ID non registrato: log warning e assegna nil\n                PERFORM script.fn_log_and_raise_error(\n                    'database',\n                    'dbops.trgfn_tx_id_managed',\n                    'W_TXID_NOT_REGISTERED',\n                    jsonb_build_object( 'tx_id', v_session_tx_id ),\n                    NULL::uuid,\n                    VARIADIC ARRAY[]::text[] \n                );\n                v_new_tx_id := script.uuid_nil();\n\n            END IF;\n\n        ELSE\n            -- Caso D)\n            -- Nessun tx_id in sessione: generazione tramite dblink (assegna nuovo)\n            --  modalita standard\n            BEGIN  \n              -- Invochiamo il helper che fa dblink + set_config\n              v_new_tx_id := dbops.fn_get_or_create_session_tx_id();\n\n            EXCEPTION WHEN OTHERS THEN\n\n                -- Errore generazione tx_id: log e assegna nil\n                PERFORM script.fn_log_and_raise_error(\n                    'database',\n                    'dbops.trgfn_tx_id_managed',\n                    'E_TXID_GENERATION',\n                    jsonb_build_object(\n                      'error', SQLERRM\n                    ) ,\n                    NULL::uuid,\n                    VARIADIC ARRAY[]::text[]\n                );\n                v_new_tx_id := script.uuid_nil();\n            END;\n        END IF;\n    END IF;\n      -- --------------------------------------\n    -- 5. Assegna tx_id al record\n      -- --------------------------------------\n    NEW.tx_id := v_new_tx_id;\n    RETURN NEW;\n\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/manual/apply_fk_index_policy/","title":"Apply fk index policy","text":""},{"location":"dbzero/dbops/manual/apply_fk_index_policy/#documentazione-concettuale-procedura-dbopsapply_fk_index_policy","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Procedura <code>dbops.apply_fk_index_policy()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.fk_index_policy </p> <p>Approfondimento funzioni :   - dbops.fn_populate_fk_index_policy  - dbops.vw_fk_senza_indice </p>"},{"location":"dbzero/dbops/manual/apply_fk_index_policy/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Applicare in modo automatico le regole di indicizzazione definite nella tabella <code>dbops.fk_index_policy</code>:   </p> <ul> <li>Creare gli indici sulle foreign key contrassegnate come <code>consentito = true</code>.</li> <li>Rimuovere gli indici non pi\u00f9 approvati (<code>consentito = false</code>).</li> </ul>"},{"location":"dbzero/dbops/manual/apply_fk_index_policy/#descrizione-del-flusso","title":"\ud83d\udd0d Descrizione del Flusso","text":"<ol> <li>Scansione    Itera su ogni riga di <code>dbops.fk_index_policy</code> (schema, tabella, constraint, comando).</li> <li>Creazione    Se <code>rec.consentito = true</code>, esegue direttamente il SQL in <code>rec.dll_command</code> (tipicamente un <code>CREATE INDEX \u2026</code>).</li> <li>Rimozione    Se <code>rec.consentito = false</code>, estrae il nome dell\u2019indice dal sesto token di <code>dll_command</code> e invoca:</li> </ol> <p><pre><code>DROP INDEX IF EXISTS &lt;schema&gt;.&lt;index_name&gt;;\n</code></pre> 4. Fine    Continua fino all\u2019ultima riga, garantendo che la policy definita in tabella sia sempre rispettata.</p>"},{"location":"dbzero/dbops/manual/apply_fk_index_policy/#invocazione","title":"\u2699\ufe0f Invocazione","text":"<pre><code>CALL dbops.apply_fk_index_policy();\n</code></pre>"},{"location":"dbzero/dbops/manual/apply_fk_index_policy/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Centralizzazione: tutte le regole di indicizzazione FK risiedono in un\u2019unica tabella.</li> <li>Automazione: evita script manuali di <code>CREATE/DROP INDEX</code>, riducendo errori e incongruenze.</li> <li>Flessibilit\u00e0: modificando la colonna <code>consentito</code> si abilita o disabilita subito l\u2019indice, senza alterare codice.</li> <li>Integrazione CI/CD: \u00e8 chiamata in un changeSet <code>90-end</code> per assicurarsi che, a ogni deploy, la policy sia applicata.</li> </ul>"},{"location":"dbzero/dbops/manual/audit_log/","title":"Audit log","text":""},{"location":"dbzero/dbops/manual/audit_log/#documentazione-concettuale-tabella-dbopsaudit_log","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>dbops.audit_log</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - dbops.error_log </p> <p>Approfondimento funzioni:   - dbops.trgfn_tx_id_managed </p> <p>La tabella <code>dbops.audit_log</code> registra le esecuzioni di processi, funzioni e job, consentendo di tracciare chi ha eseguito cosa, quando e con quali parametri, nonch\u00e9 l\u2019esito e la durata. Il campo <code>tx_id</code> non possiede pi\u00f9 un valore di default: viene assegnato automaticamente dal trigger <code>trg_assign_tx_id_audit_log</code> utilizzando la trigger function <code>dbops.trgfn_tx_id_managed()</code>, garantendo coerenza con il modello di <code>error_log</code>.</p>"},{"location":"dbzero/dbops/manual/audit_log/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Monitorare e storicizzare ogni chiamata a funzioni, job e API interne.</li> <li>Fornire dettagli su utente, parametri e performance di esecuzione.</li> <li>Collegare gli eventi di audit agli errori e ad altri log tramite <code>tx_id</code> gestito dal trigger.</li> </ul>"},{"location":"dbzero/dbops/manual/audit_log/#significato-dei-campi","title":"\ud83d\udd0d Significato dei Campi","text":"Campo Tipo Descrizione <code>id</code> <code>bigint</code> Chiave primaria, sequenza automatica. <code>function_name</code> <code>text</code> Nome della funzione/method/app che \u00e8 stata eseguita. <code>executed_by</code> <code>text</code> Utente o ruolo che ha avviato l\u2019esecuzione (default <code>CURRENT_USER</code>). <code>executed_at</code> <code>timestamp with tz</code> Timestamp di inizio esecuzione (default <code>now()</code>). <code>params</code> <code>jsonb</code> Parametri in ingresso o contesto di esecuzione (JSONB). <code>status</code> <code>text</code> Esito dell\u2019esecuzione (<code>SUCCESS</code>, <code>FAILED</code>, <code>WARNING</code>). <code>message</code> <code>text</code> Messaggio descrittivo dell\u2019esito. <code>duration_ms</code> <code>integer</code> Durata dell\u2019esecuzione in millisecondi. <code>tx_id</code> <code>uuid</code> Identificativo di transazione: valorizzato dal trigger <code>trg_assign_tx_id_audit_log</code> con <code>trgfn_tx_id_managed()</code>."},{"location":"dbzero/dbops/manual/audit_log/#vincoli-e-comportamenti-di-default","title":"\ud83d\udd12 Vincoli e Comportamenti di Default","text":"<ul> <li>PK: <code>pk_audit_log</code> su <code>id</code>.</li> <li> <p>Default (solo se non assegnati da applicazione o trigger):</p> </li> <li> <p><code>executed_by</code> \u2192 <code>CURRENT_USER</code></p> </li> <li><code>executed_at</code> \u2192 <code>now()</code></li> <li><code>tx_id</code> non ha default DDL: il valore \u00e8 sempre gestito dal trigger <code>trg_assign_tx_id_audit_log</code>.</li> </ul>"},{"location":"dbzero/dbops/manual/audit_log/#trigger","title":"\ud83d\udea8 Trigger","text":"<ul> <li> <p><code>trg_assign_tx_id_audit_log</code> (BEFORE INSERT OR UPDATE):</p> </li> <li> <p>Esegue: <code>dbops.trgfn_tx_id_managed()</code></p> </li> <li>Scopo: genera o recupera il corretto <code>tx_id</code> (sessione o nuovo) secondo la logica centralizzata.</li> </ul>"},{"location":"dbzero/dbops/manual/audit_log/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Inserimento manuale (il trigger assegna <code>tx_id</code>):</li> </ol> <pre><code>INSERT INTO dbops.audit_log(\n  function_name, params, status, duration_ms\n) VALUES (\n  'process_invoices', '{\"count\":200}'::jsonb, 'SUCCESS', 1200\n);\n</code></pre> <ol> <li>Recuperare audit di una transazione:</li> </ol> <pre><code>SELECT *\n  FROM dbops.audit_log\n WHERE tx_id = '123e4567-e89b-12d3-a456-426614174000';\n</code></pre> <ol> <li>Performance media per funzione:</li> </ol> <pre><code>SELECT function_name,\n       AVG(duration_ms) AS avg_ms,\n       COUNT(*)       AS executions\n  FROM dbops.audit_log\n WHERE executed_at &gt;= now() - INTERVAL '7 days'\n GROUP BY function_name\n ORDER BY avg_ms DESC;\n</code></pre>"},{"location":"dbzero/dbops/manual/audit_log/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Coerenza transazionale: <code>tx_id</code> \u00e8 sempre allineato al registro centrale e a <code>error_log</code>.</li> <li>Centralizzazione: nessuna logica di generazione/assegnazione duplicata in tabelle diverse.</li> <li>Tracciabilit\u00e0 integrata: un unico flusso di audit ed errori tramite <code>tx_id</code>.</li> <li>Analisi semplificata: i campi <code>params</code> e <code>duration_ms</code> permettono metriche e dashboard di performance.</li> </ul> <p>\ud83e\udde0 \u201cCon il trigger <code>trg_assign_tx_id_audit_log</code>, ogni record di audit \u00e8 automaticamente correlato al contesto transazionale, semplificando debug, monitoraggio e analisi dei processi.\u201d</p>"},{"location":"dbzero/dbops/manual/error_log/","title":"Error log","text":""},{"location":"dbzero/dbops/manual/error_log/#documentazione-concettuale-tabella-dbopserror_log","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>dbops.error_log</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - config.messaggi_errore  - dbops.audit_log </p> <p>Approfondimento funzioni:   - dbops.trgfn_tx_id_managed  - script.trgfn_prevent_modification_generic </p> <p>La tabella <code>dbops.error_log</code> serve a centralizzare la registrazione degli errori che si verificano nelle diverse aree dell\u2019applicazione (database, backend, frontend, job, ecc.), fornendo un quadro completo del contesto, della fonte e della transazione coinvolta.</p>"},{"location":"dbzero/dbops/manual/error_log/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Raccogliere in un unico punto gli errori generati da funzioni, trigger o applicazioni, permettendo analisi e allineamento con il catalogo di messaggi di errore.</li> <li>Consentire il collegamento transazionale tramite <code>tx_id</code>, per ricostruire l\u2019intero flusso di operazioni (ad esempio un job batch) incrociando tabelle come <code>dbops.audit_log</code>.</li> </ul>"},{"location":"dbzero/dbops/manual/error_log/#significato-dei-campi-chiave","title":"\ud83d\udd0d Significato dei Campi Chiave","text":"<ul> <li><code>id</code>: identificativo univoco del record di errore.</li> <li><code>occurred_at</code>: timestamp con timezone dell\u2019evento di errore.</li> <li><code>area</code>: ambito di origine (es. <code>database</code>, <code>backend</code>, <code>frontend</code>, <code>job</code>).</li> <li><code>function_name</code>: nome della funzione o metodo che ha generato l\u2019errore (trigger, procedure, job, endpoint).</li> <li><code>messaggio_errore_id</code>: FK verso <code>config.messaggi_errore(id)</code>, collega il record al testo di errore e alle eventuali traduzioni.</li> <li><code>context</code>: campo JSONB in cui si registrano parametri di input, valori di variabili, utente esecutore o altri metadati rilevanti.</li> <li><code>tx_id</code>: UUID di transazione corrente, utile per tracciare errori in contesti transazionali e correlare con altri log.</li> </ul>"},{"location":"dbzero/dbops/manual/error_log/#vincoli-e-relazioni","title":"\ud83d\udd12 Vincoli e Relazioni","text":"<ul> <li>PK: vincolo <code>error_log_pkey</code> su <code>id</code>.</li> <li>FK: <code>messaggio_errore_id</code> \u2192 <code>config.messaggi_errore(id)</code> (senza azioni di update o delete).</li> <li> <p>Generazione automatica:</p> </li> <li> <p><code>occurred_at</code> default <code>now()</code></p> </li> <li><code>tx_id</code> </li> <li><code>context</code> default a JSONB vuoto <code>{}</code></li> </ul>"},{"location":"dbzero/dbops/manual/error_log/#trigger","title":"\ud83d\udea8 Trigger","text":"<ul> <li><code>trg_assign_tx_id_error_log</code> (BEFORE INSERT OR UPDATE): assegna automaticamente il valore di <code>tx_id</code> tramite la trigger function <code>dbops.trgfn_tx_id_managed()</code>, garantendo che ogni record di errore sia correlato all\u2019identificativo di transazione.</li> <li>Protezione modifiche: implementare, se necessario, trigger di tipo <code>script.trgfn_prevent_modification_generic()</code> per bloccare UPDATE/DELETE e preservare l\u2019integrit\u00e0 storica.</li> </ul>"},{"location":"dbzero/dbops/manual/error_log/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Recuperare tutti gli errori di una specifica transazione:</li> </ol> <pre><code>SELECT *\n  FROM dbops.error_log\n WHERE tx_id = '123e4567-e89b-12d3-a456-426614174000';\n</code></pre> <ol> <li>Unire gli errori con il catalogo dei messaggi:</li> </ol> <pre><code>SELECT e.id, e.occurred_at, m.codice, m.messaggio, e.context\n  FROM dbops.error_log e\n  JOIN config.messaggi_errore m ON e.messaggio_errore_id = m.id;\n</code></pre> <ol> <li>Cronologia completa di una transazione:</li> </ol> <pre><code>WITH errs AS (\n  SELECT * FROM dbops.error_log WHERE tx_id = :tx\n), audits AS (\n  SELECT * FROM dbops.audit_log WHERE tx_id = :tx\n)\nSELECT * FROM errs\nUNION ALL\nSELECT * FROM audits\nORDER BY occurred_at;\n</code></pre>"},{"location":"dbzero/dbops/manual/error_log/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Tracciabilit\u00e0 a 360\u00b0: unisce errori e transazioni in un unico flusso temporale.</li> <li>Analisi rapida: il campo <code>context</code> permette filtri e aggregazioni sui metadati.</li> <li>Integrit\u00e0 delle informazioni: i trigger automatici garantiscono corretto popolamento di <code>tx_id</code> e audit inalterabile.</li> <li>Coerenza semantica: l\u2019uso di FK verso <code>config.messaggi_errore</code> assicura messaggi uniformi e localizzati.</li> </ul> <p>\ud83e\udde0 \u201cUn error log strutturato con identit\u00e0 transazionale e contesto dettagliato semplifica il debug e il monitoraggio degli incidenti applicativi.\u201d</p>"},{"location":"dbzero/dbops/manual/fk_index_policy/","title":"Fk index policy","text":""},{"location":"dbzero/dbops/manual/fk_index_policy/#documentazione-concettuale-tabella-dbopsfk_index_policy","title":"\ud83d\udcda Documentazione concettuale - Tabella <code>dbops.fk_index_policy</code>","text":""},{"location":"dbzero/dbops/manual/fk_index_policy/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>dbops.fk_index_policy</code> definisce una policy centralizzata per la gestione degli index sulle foreign key, consentendo di abilitare o disabilitare la creazione/uso di indici per specifici vincoli referenziali.</p>"},{"location":"dbzero/dbops/manual/fk_index_policy/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne Descrizione PRIMARY KEY <code>fk_index_policy_pkey</code> <code>schema_name, table_name, constraint_name</code> Chiave primaria composita per identificare univocamente la policy."},{"location":"dbzero/dbops/manual/fk_index_policy/#uso-e-casi-doro","title":"\ud83d\udca1 Uso e Casi d\u2019Oro","text":"<ul> <li>Controllo centralizzato: gestire in un unico punto l\u2019abilitazione o meno degli indici sui vincoli referenziali, evitando di creare indici non necessari o ridondanti.</li> <li>Ottimizzazione delle performance: disabilitare index su FK poco usati per ridurre overhead in scrittura, o forzare index su FK critici per migliorare le join.</li> <li>Audit e documentazione: con la colonna <code>dll_command</code> si tiene traccia delle motivazioni alla base delle scelte, facilitando review e manutenzione.</li> <li>Integrazione con script di DBOps: gli script di deployment possono leggere questa tabella e generare dinamicamente DDL <code>CREATE INDEX</code> o <code>DROP INDEX</code> per applicare la policy.</li> </ul>"},{"location":"dbzero/dbops/manual/fk_index_policy/#esempio-di-utilizzo","title":"\ud83d\udd27 Esempio di Utilizzo","text":"<ol> <li>Disabilitare index su un vincolo</li> </ol> <pre><code>INSERT INTO dbops.fk_index_policy(\n  schema_name,\n  table_name,\n  constraint_name,\n  consentito,\n  dll_command\n) VALUES (\n  'anagrafiche',\n  'soggetti_ruoli',\n  'fk_soggetti_anagrafiche',\n  false,\n  'FK su soggetti_ruoli non usata frequentemente, evita overhead in insert'\n);\n</code></pre> <ol> <li>Abilitare index su un vincolo critico</li> </ol> <pre><code>INSERT INTO dbops.fk_index_policy(\n  schema_name,\n  table_name,\n  constraint_name,\n  consentito\n) VALUES (\n  'dbops',\n  'audit_logs',\n  'fk_logs_user_id',\n  true\n);\n</code></pre> <ol> <li>Script di applicazione policy</li> </ol> <pre><code>-- Pseudocodice PL/pgSQL per applicare la policy:\nDO $$\nDECLARE\n  rec RECORD;\nBEGIN\n  FOR rec IN SELECT * FROM dbops.fk_index_policy LOOP\n    IF rec.consentito THEN\n      EXECUTE format('CREATE INDEX IF NOT EXISTS ix_%I_%I ON %I.%I USING btree ((%I))',\n        rec.table_name, rec.constraint_name, rec.schema_name, rec.table_name, rec.constraint_name);\n    ELSE\n      EXECUTE format('DROP INDEX IF EXISTS ix_%I_%I', rec.table_name, rec.constraint_name);\n    END IF;\n  END LOOP;\nEND$$;\n</code></pre> <p>\ud83e\udde0 \u201cUtilizzare <code>fk_index_policy</code> consente di adattare dinamicamente la presenza di indici su foreign key per ottimizzare scritture e letture, centralizzando le decisioni e mantenendo tracciabilit\u00e0.\u201d</p>"},{"location":"dbzero/dbops/manual/fn_find_file_usage/","title":"Fn find file usage","text":""},{"location":"dbzero/dbops/manual/fn_find_file_usage/#documentazione-concettuale-funzione-dbopsfn_find_file_usage","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>dbops.fn_find_file_usage</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti funzioni:  - dbops.fn_search_column_usage  - dbops.fn_find_function_usage </p> <p>La funzione <code>dbops.fn_find_file_usage(p_target_table regclass)</code> individua tutte le constraint di tipo foreign key che puntano alla tabella specificata in input, restituendo per ciascuna: - La tabella che contiene la FK - La colonna FK stessa - La tabella referenziata (che sar\u00e0 sempre la stessa in tutti i record, ovvero <code>p_target_table</code>) - La colonna PK referenziata</p>"},{"location":"dbzero/dbops/manual/fn_find_file_usage/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Analisi d\u2019impatto   Identificare rapidamente tutte le relazioni di FK verso una tabella, utile per valutare dipendenze e conseguenze di modifiche, cancellazioni o refactoring di schema.</p> </li> <li> <p>Documentazione automatica   Fornire un\u2019elenco puntuale di constraint FK anzich\u00e9 esplorare manualmente il catalogo di sistema.</p> </li> </ul>"},{"location":"dbzero/dbops/manual/fn_find_file_usage/#parametri","title":"\ud83d\udd0d Parametri","text":"Nome Tipo Descrizione <code>p_target_table</code> <code>regclass</code> Nome (con schema) della tabella di cui cercare le FK in ingresso."},{"location":"dbzero/dbops/manual/fn_find_file_usage/#struttura-del-risultato","title":"\ud83d\udd0d Struttura del risultato","text":"Colonna Tipo Descrizione <code>table_with_fk</code> <code>regclass</code> Schema e nome della tabella che definisce la foreign key. <code>fk_column</code> <code>name</code> Nome della colonna all\u2019interno di <code>table_with_fk</code> che \u00e8 la foreign key. <code>referenced_table</code> <code>regclass</code> Tabella referenziata (identica a <code>p_target_table</code>). <code>pk_column</code> <code>name</code> Nome della colonna PK di <code>referenced_table</code> a cui punta la FK."},{"location":"dbzero/dbops/manual/fn_find_file_usage/#dettaglio-del-flusso","title":"\u2699\ufe0f Dettaglio del flusso","text":"<ol> <li>La funzione interroga cataloghi di sistema (<code>pg_constraint</code>, <code>pg_class</code>, <code>pg_attribute</code>) filtrando <code>contype = 'f'</code> (foreign key).  </li> <li>Converte gli OID in <code>regclass</code> per ottenere il nome schema.tabella.  </li> <li>Estrae, per ogni FK rilevata, la colonna chiave nella tabella figlia e la colonna chiave primaria nella tabella padre.</li> </ol>"},{"location":"dbzero/dbops/manual/fn_find_file_usage/#esempi-di-utilizzo","title":"\ud83d\udca1 Esempi di utilizzo","text":"<pre><code>-- Trova tutte le FK che puntano alla tabella config.iva\nSELECT *\n  FROM dbops.fn_find_file_usage('config.iva'::regclass);\n\n-- Verifica dipendenze verso la tabella anagrafiche.contatti\nSELECT table_with_fk, fk_column\n  FROM dbops.fn_find_file_usage('anagrafiche.contatti'::regclass);\n\n-- Usando direttamente OID o regclass senza cast esplicito:\nSELECT * \n  FROM dbops.fn_find_file_usage(anagrafiche.contatti);\n</code></pre>"},{"location":"dbzero/dbops/manual/fn_find_file_usage/#i-vantaggi-operativi","title":"\u2139\ufe0f Vantaggi Operativi","text":"<pre><code>Rapidit\u00e0: un\u2019unica query per esplorare tutte le FK in ingresso.\n\nAffidabilit\u00e0: si basa su cataloghi di sistema ufficiali, aggiornati in tempo reale.\n\nAutomazione: integrabile in script di migrazione o tool di analisi schema.\n</code></pre> <p>\ud83e\udde0 \u201cCon fn_find_file_usage puoi eseguire in pochi secondi un\u2019analisi completa delle dipendenze tra tabelle, fondamentale per il refactoring e la gestione sicura delle migrazioni.\u201d</p>"},{"location":"dbzero/dbops/manual/fn_find_function_usage/","title":"Fn find function usage","text":""},{"location":"dbzero/dbops/manual/fn_find_function_usage/#documentazione-concettuale-function-dbopsfn_find_function_usagep_function_name-text","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Function <code>dbops.fn_find_function_usage(p_function_name TEXT)</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Altre view di catalogazione: - dbops.vw_function_list - dbops.vw_trigger_functions </p> <p>La funzione <code>dbops.fn_find_function_usage</code> restituisce l\u2019elenco delle entit\u00e0 del database (funzioni, trigger, event trigger) che fanno riferimento a una specifica funzione indicata dal nome, facilitando l\u2019analisi delle dipendenze e degli impatti di modifiche o refactoring.</p>"},{"location":"dbzero/dbops/manual/fn_find_function_usage/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Discovery delle dipendenze: individuare tutte le occorrenze di una funzione all\u2019interno del codice PL/pgSQL, dei trigger e degli event trigger.</li> <li>Supporto al refactoring: identificare facilmente i punti di utilizzo prima di rinominare o modificare una funzione.</li> </ul>"},{"location":"dbzero/dbops/manual/fn_find_function_usage/#firma-e-restituzione","title":"\ud83d\udd0d Firma e Restituzione","text":"<pre><code>fn_find_function_usage(\n  p_function_name TEXT\n) RETURNS TABLE(\n  object_type TEXT,   -- 'function', 'trigger' o 'event_trigger'\n  schema_name TEXT,   -- schema di appartenenza (NULL per event trigger)\n  object_name TEXT    -- nome dell\u2019oggetto o firma della funzione\n);\n</code></pre> <ul> <li><code>p_function_name</code>: nome della funzione da ricercare.</li> <li>object_type: tipo di oggetto che invoca la funzione.</li> <li>schema_name: schema in cui risiede l\u2019oggetto (event trigger non ha schema).</li> <li>object_name: per le funzioni, include firma e argomenti; per trigger/event trigger, nome dell\u2019oggetto.</li> </ul>"},{"location":"dbzero/dbops/manual/fn_find_function_usage/#logica-di-esecuzione","title":"\u2699\ufe0f Logica di Esecuzione","text":"<ol> <li>Funzioni: cerca all\u2019interno di <code>pg_proc.prosrc</code> le dichiarazioni che contengono il nome <code>p_function_name</code>, escludendo la funzione stessa.</li> <li>Trigger: individua i trigger definiti in <code>pg_trigger</code> che richiamano la funzione <code>p_function_name</code>.</li> <li>Event Trigger: include gli event trigger di <code>pg_event_trigger</code> associati a <code>p_function_name</code>.</li> </ol> <p>I risultati di ciascuna ricerca vengono uniti con <code>UNION ALL</code> e restituiti in un unico set.</p>"},{"location":"dbzero/dbops/manual/fn_find_function_usage/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Ricerca generale di dipendenze</li> </ol> <pre><code>SELECT *\n  FROM dbops.fn_find_function_usage('process_order');\n</code></pre> <ol> <li>Filtrare solo i trigger</li> </ol> <pre><code>SELECT schema_name, object_name\n  FROM dbops.fn_find_function_usage('audit_update')\n WHERE object_type = 'trigger';\n</code></pre> <ol> <li>Contare le dipendenze per schema</li> </ol> <pre><code>SELECT object_type, schema_name, COUNT(*) AS usage_count\n  FROM dbops.fn_find_function_usage('compute_tax')\n GROUP BY object_type, schema_name;\n</code></pre>"},{"location":"dbzero/dbops/manual/fn_find_function_usage/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Chiarezza delle dipendenze: evita ricerche manuali tra cataloghi multipli.</li> <li>Riduzione degli errori: garantisce che nessun utilizzo venga trascurato in fase di modifica.</li> <li>Automazione: integrabile in script di migrazione o refactoring per validare l\u2019assenza di riferimenti obsoleti.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>fn_find_function_usage</code>, refactoring e manutenzione del codice PL/pgSQL diventano operazioni sicure e documentate, grazie all\u2019individuazione automatica delle dipendenze.\u201d</p>"},{"location":"dbzero/dbops/manual/fn_generate_tx_id/","title":"Fn generate tx id","text":""},{"location":"dbzero/dbops/manual/fn_generate_tx_id/#documentazione-concettuale-funzione-dbopsfn_generate_tx_id","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>dbops.fn_generate_tx_id</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.transaction_ids </p> <p>Approfondimento funzioni :   - dbops.fn_get_or_create_session_tx_id </p> <p>La funzione <code>dbops.fn_generate_tx_id(p_generating_function TEXT, p_session_info JSONB DEFAULT '{}'::jsonb)</code> centralizza la generazione e la memorizzazione di un nuovo identificativo di transazione (UUID) in <code>dbops.transaction_ids</code>, associando il contesto di chiamata e le informazioni di sessione.</p>"},{"location":"dbzero/dbops/manual/fn_generate_tx_id/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Unico punto di generazione   Evitare duplicazioni di logica ed errori creando sempre il <code>tx_id</code> tramite una function dedicata.</li> <li>Contestualizzazione   Conservare il nome della funzione applicativa (<code>generating_function</code>) e dati di sessione JSON (   <code>session_info</code>), per migliorare la tracciabilit\u00e0.</li> <li>Sicurezza   Impostando <code>SECURITY DEFINER</code>, la function pu\u00f2 essere invocata da ruoli meno privilegiati mantenendo i permessi di inserimento.</li> </ul>"},{"location":"dbzero/dbops/manual/fn_generate_tx_id/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Default Descrizione <code>p_generating_function</code> <code>TEXT</code> \u2014 Nome (o identificativo) della funzione/procedura che richiede il <code>tx_id</code>. <code>p_session_info</code> <code>JSONB</code> <code>'{}'::jsonb</code> Oggetto JSON con dati di contesto (es. utente, IP, informazioni di sessione)."},{"location":"dbzero/dbops/manual/fn_generate_tx_id/#flusso-di-esecuzione","title":"\u2699\ufe0f Flusso di Esecuzione","text":"<ol> <li>Generazione UUID</li> </ol> <p><pre><code>v_tx := gen_random_uuid();\n</code></pre> 2. Inserimento record    Inserisce in <code>dbops.transaction_ids</code> un nuovo rigo con:</p> <ul> <li><code>id</code> = <code>v_tx</code></li> <li><code>generating_function</code> = <code>p_generating_function</code></li> <li><code>session_info</code> = <code>p_session_info</code></li> <li>Restituzione    Ritorna il valore <code>v_tx</code>, da utilizzare come chiave di correlazione nelle altre tabelle.</li> </ul>"},{"location":"dbzero/dbops/manual/fn_generate_tx_id/#esempio-di-utilizzo","title":"\ud83d\ude80 Esempio di Utilizzo","text":"<pre><code>-- Genera un nuovo tx_id e ne visualizza il valore:\nSELECT dbops.fn_generate_tx_id(\n  'app.create_invoice',\n  jsonb_build_object('user','mario','ip','10.0.0.5')\n) AS tx_id;\n</code></pre>"},{"location":"dbzero/dbops/manual/fn_generate_tx_id/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Centralizzazione: un\u2019unica entry point per la creazione dei <code>tx_id</code>, evitando duplicazioni nella logica applicativa.</li> <li>Tracciabilit\u00e0 avanzata: conserva contesto funzionale e dati di sessione per ogni transazione.</li> <li>Sicurezza: grazie a <code>SECURITY DEFINER</code>, i ruoli applicativi possono invocare la function senza privilegi diretti su <code>transaction_ids</code>.</li> <li>Estendibilit\u00e0: ulteriori parametri di contesto possono essere aggiunti a <code>session_info</code> senza modificare la logica di generazione.</li> </ul> <p>\ud83e\udde0 \u201cLa funzione <code>fn_generate_tx_id</code> semplifica e uniforma la creazione dei transaction IDs, assicurando tracciabilit\u00e0, sicurezza e facilit\u00e0 di integrazione nell\u2019architettura Zero ERP.\u201d</p>"},{"location":"dbzero/dbops/manual/fn_get_or_create_session_tx_id/","title":"Fn get or create session tx id","text":""},{"location":"dbzero/dbops/manual/fn_get_or_create_session_tx_id/#documentazione-concettuale-funzione-dbopsfn_get_or_create_session_tx_id","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>dbops.fn_get_or_create_session_tx_id()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.transaction_ids </p> <p>Approfondimento funzioni :   - dbops.fn_generate_tx_id  - script.uuid_nil  - script.fn_ensure_logconn </p> <p>La funzione <code>dbops.fn_get_or_create_session_tx_id()</code> fornisce un UUID di transazione persistente per l\u2019intera sessione database, generandone uno nuovo solo se non gi\u00e0 impostato. Questo meccanismo garantisce che tutte le operazioni eseguite nella medesima connessione possano condividere lo stesso <code>tx_id</code>, semplificando log, tracciabilit\u00e0 e rollback in scenari complessi.</p>"},{"location":"dbzero/dbops/manual/fn_get_or_create_session_tx_id/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Unicit\u00e0 per sessione: restituisce un <code>tx_id</code> costante per la durata della connessione, evitando chiamate ripetute a generatori esterni.</li> <li>Fallback sicuro: in caso di errori di connessione o in contesti di migrazione/test, restituisce un UUID \u201cnil\u201d per non bloccare i processi.</li> <li>Contesto centralizzato: memorizza il <code>tx_id</code> in una GUC di sessione (<code>dbops.tx_id</code>) per accessi successivi.</li> </ul>"},{"location":"dbzero/dbops/manual/fn_get_or_create_session_tx_id/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"<p>Questa funzione non richiede parametri. Tutta la logica utilizza variabili di sessione e la funzione di generazione:</p> Parametro Tipo Default Descrizione nessuno \u2013 \u2013 La funzione auto-determina se creare o restituire il <code>tx_id</code>."},{"location":"dbzero/dbops/manual/fn_get_or_create_session_tx_id/#flusso-di-esecuzione-dettagliato","title":"\u2699\ufe0f Flusso di Esecuzione Dettagliato","text":"<ol> <li>Verifica connessione di logging</li> </ol> <pre><code>PERFORM script.fn_ensure_logconn();\n</code></pre> <p>Garantisce che il database sia pronto per eventuali chiamate <code>dblink</code> di audit o generazione remota.</p> <ol> <li>Lettura <code>dbops.tx_id</code> dalla sessione</li> </ol> <pre><code>v_tx_id := current_setting('dbops.tx_id', TRUE)::UUID;\n</code></pre> <ul> <li>Se esiste e vale un UUID, lo restituisce subito.</li> <li> <p>In caso di eccezione (non settato), <code>v_tx_id</code> rimane <code>NULL</code>.</p> </li> <li> <p>Generazione on\u2011demand tramite <code>dblink</code></p> </li> </ul> <pre><code>SELECT tx_id\n  INTO v_tx_id\n  FROM dblink(\n    current_setting('dblink.log_connection', TRUE),\n    $gen$\n      SELECT dbops.fn_generate_tx_id(\n        'dbops.fn_get_or_create_session_tx_id',\n        jsonb_build_object('source','fn_get_or_create')\n      )\n    $gen$\n  ) AS t(tx_id UUID);\n</code></pre> <ul> <li>La chiamata <code>dblink</code> esegue la function remota per creare e registrare un nuovo <code>tx_id</code>.</li> <li> <p>Imposta la GUC di sessione:</p> <p><pre><code>PERFORM set_config('dbops.tx_id', v_tx_id::text, TRUE);\n</code></pre>    * Casistiche di fallimento: su qualunque eccezione di <code>dblink</code>, cattura l\u2019errore e assegna:</p> <pre><code>v_tx_id := script.uuid_nil();\n</code></pre> <p>restituendo un UUID \u201cnil\u201d (<code>00000000-0000-0000-0000-000000000000</code>).</p> </li> <li> <p>Restituzione del <code>tx_id</code></p> </li> </ul> <pre><code>RETURN v_tx_id;\n</code></pre>"},{"location":"dbzero/dbops/manual/fn_get_or_create_session_tx_id/#esempio-di-utilizzo","title":"\ud83d\ude80 Esempio di Utilizzo","text":"<pre><code>-- Prima invocazione in sessione nuova:\nSELECT dbops.fn_get_or_create_session_tx_id() AS tx_id;\n-- Restituisce e memorizza un nuovo UUID.\n\n-- Invocazione successiva nella medesima sessione:\nSELECT dbops.fn_get_or_create_session_tx_id() AS tx_id;\n-- Restituisce lo stesso UUID senza creare nuovi record.\n</code></pre>"},{"location":"dbzero/dbops/manual/fn_get_or_create_session_tx_id/#vantaggi-e-considerazioni","title":"\ud83d\udca1 Vantaggi e Considerazioni","text":"<ul> <li>Tracciabilit\u00e0 coerente: tutte le chiamate in sessione condividono lo stesso <code>tx_id</code>, semplificando log e correlazione.</li> <li>Performance: riduce chiamate ridondanti a <code>fn_generate_tx_id</code>.</li> <li>Fallback controllato: restituisce <code>uuid_nil()</code> in caso di errori, utile in test o migrazioni dove non si desidera popolare la tabella <code>transaction_ids</code>.</li> <li>Estendibilit\u00e0: pu\u00f2 essere temporaneamente disattivata impostando manualmente <code>dbops.tx_id</code> su un valore predefinito o <code>000...0</code>, evitando side\u2011effect in contesti speciali.</li> </ul> <p>\ud83e\udde0 \u201c<code>fn_get_or_create_session_tx_id</code> garantisce un unico punto di controllo per il transaction ID di sessione, unendo performance, sicurezza e fallback affidabile.\u201d</p>"},{"location":"dbzero/dbops/manual/fn_populate_fk_index_policy/","title":"Fn populate fk index policy","text":""},{"location":"dbzero/dbops/manual/fn_populate_fk_index_policy/#documentazione-concettuale-funzione-dbopsfn_populate_fk_index_policy","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>dbops.fn_populate_fk_index_policy()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.fk_index_policy </p> <p>Approfondimento view:  - dbops.vw_fk_senza_indice </p> <p>La funzione <code>dbops.fn_populate_fk_index_policy()</code> esegue il popolamento automatico di <code>dbops.fk_index_policy</code> aggiungendo tutte le foreign key presenti in <code>dbops.vw_fk_senza_indice</code> che non hanno ancora un record in policy, impostando per ciascuna <code>consentito = false</code>.</p>"},{"location":"dbzero/dbops/manual/fn_populate_fk_index_policy/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Coerenza iniziale   Garantire che ogni FK rilevata nella view senza indice abbia la propria entry di policy, evitando omissioni.</li> <li>Popolamento \u201ca freddo\u201d   Tutti i nuovi record vengono creati con <code>consentito = false</code>, lasciando in carico all\u2019operatore la decisione di abilitare o meno l\u2019indice.</li> <li>Automazione   Riduce il lavoro manuale di inserimento di policy per nuove FKs.</li> </ul>"},{"location":"dbzero/dbops/manual/fn_populate_fk_index_policy/#flusso-logico","title":"\ud83d\udd0d Flusso Logico","text":"<ol> <li>Lettura FKs senza policy    Seleziona dalla view <code>dbops.vw_fk_senza_indice</code> tutte le tuple <code>(schema_name, table_name, constraint_name)</code> non ancora presenti in <code>dbops.fk_index_policy</code>.</li> <li>Inserimento in <code>fk_index_policy</code>    Per ciascuna riga, esegue:</li> </ol> <pre><code>INSERT INTO dbops.fk_index_policy(\n  schema_name,\n  table_name,\n  constraint_name,\n  consentito,\n  note\n) VALUES (\n  rec.schema_name,\n  rec.table_name,\n  rec.constraint_name,\n  false,\n  'Popolamento automatico: indice ix_&lt;table&gt;_&lt;constraint&gt; non ancora presente'\n);\n</code></pre>"},{"location":"dbzero/dbops/manual/fn_populate_fk_index_policy/#funzione-sql","title":"\ud83d\udd16 Funzione SQL","text":"<pre><code>CREATE OR REPLACE FUNCTION dbops.fn_populate_fk_index_policy()\nRETURNS void\nLANGUAGE plpgsql\nAS $$\nDECLARE\n  rec RECORD;\nBEGIN\n  FOR rec IN\n    SELECT schema_name, table_name, constraint_name\n      FROM dbops.vw_fk_senza_indice\n     WHERE (schema_name, table_name, constraint_name)\n       NOT IN (\n         SELECT schema_name, table_name, constraint_name\n           FROM dbops.fk_index_policy\n       )\n  LOOP\n    INSERT INTO dbops.fk_index_policy(\n      schema_name,\n      table_name,\n      constraint_name,\n      consentito,\n      note\n    ) VALUES (\n      rec.schema_name,\n      rec.table_name,\n      rec.constraint_name,\n      false,\n      format(\n        'Autopopulated: missing ix_%s_%s index',\n        rec.table_name,\n        rec.constraint_name\n      )\n    );\n  END LOOP;\nEND;\n$$;\n\nCOMMENT ON FUNCTION dbops.fn_populate_fk_index_policy() IS\n  'Popola automaticamente dbops.fk_index_policy per tutte le FK senza indice, con consentito=false.';\n</code></pre>"},{"location":"dbzero/dbops/manual/fn_populate_fk_index_policy/#utilizzo","title":"\ud83d\ude80 Utilizzo","text":"<p>Essendo una funzione che restituisce <code>void</code>, puoi eseguirla direttamente con:</p> <pre><code>SELECT dbops.fn_populate_fk_index_policy();\n</code></pre> <p>In alternativa, in un contesto PL/pgSQL o in un DO block:</p> <pre><code>DO $$\nBEGIN\n  PERFORM dbops.fn_populate_fk_index_policy();\nEND;\n$$;\n</code></pre> <p>Nota: non usare <code>SELECT * FROM dbops.fn_populate_fk_index_policy()</code>, poich\u00e9 la funzione non restituisce righe tabellari. Se preferisci invocarla con <code>CALL</code>, puoi convertirla in procedura:</p> <pre><code>CREATE PROCEDURE dbops.apply_population()\nLANGUAGE plpgsql AS $$\nBEGIN\n  PERFORM dbops.fn_populate_fk_index_policy();\nEND;\n$$;\n</code></pre> <p>E poi eseguire:</p> <pre><code>CALL dbops.apply_population();\n</code></pre> <p>\ud83e\udde0 \u201cEsegui la funzione con <code>SELECT</code> o <code>PERFORM</code>: non \u00e8 necessario usare <code>SELECT * FROM</code>. Converti in procedura se vuoi chiamare con <code>CALL</code>.\u201d</p>"},{"location":"dbzero/dbops/manual/fn_search_column_usage/","title":"Fn search column usage","text":""},{"location":"dbzero/dbops/manual/fn_search_column_usage/#documentazione-concettuale-function-dbopsfn_search_column_usagep_column_name-text","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Function <code>dbops.fn_search_column_usage(p_column_name TEXT)</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <ul> <li>Catalogo delle view (<code>pg_catalog.pg_views</code>, <code>pg_catalog.pg_matviews</code>)</li> <li>Catalogo delle funzioni e regole (<code>pg_catalog.pg_proc</code>, <code>pg_catalog.pg_rules</code>)</li> <li>Constraint system (<code>pg_catalog.pg_constraint</code>)</li> </ul> <p>La funzione <code>dbops.fn_search_column_usage</code> consente di ricercare riferimenti a un determinato nome di colonna all\u2019interno di viste, materialized view, regole, funzioni e vincoli, restituendo il tipo di oggetto, lo schema e il nome dell\u2019oggetto che la contiene.</p>"},{"location":"dbzero/dbops/manual/fn_search_column_usage/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Individuare rapidamente tutte le occorrenze di un campo in definizioni SQL presenti nel database.</li> <li>Facilitare attivit\u00e0 di refactoring, pulizia del codice, e verifica di dipendenze tra oggetti del database.</li> </ul>"},{"location":"dbzero/dbops/manual/fn_search_column_usage/#parametri-e-firma","title":"\ud83d\udd0d Parametri e Firma","text":"<pre><code>fn_search_column_usage(\n  p_column_name TEXT\n) RETURNS TABLE(\n  object_type TEXT,\n  schema_name TEXT,\n  object_name TEXT\n)\nLANGUAGE sql\nSTABLE\nROWS 1000;\n</code></pre> <ul> <li><code>p_column_name</code>: nome della colonna (o frammento) da ricercare nelle definizioni.</li> <li> <p>Return: una tabella con i seguenti campi:</p> </li> <li> <p><code>object_type</code>: tipo di oggetto (<code>view</code>, <code>materialized_view</code>, <code>rule</code>, <code>function</code>, <code>constraint</code>)</p> </li> <li><code>schema_name</code>: schema di appartenenza dell\u2019oggetto</li> <li><code>object_name</code>: nome dell\u2019oggetto in cui viene utilizzata la colonna</li> </ul>"},{"location":"dbzero/dbops/manual/fn_search_column_usage/#logica-e-flusso-di-esecuzione","title":"\u2699\ufe0f Logica e Flusso di Esecuzione","text":"<ol> <li>Viste Standard (<code>pg_views</code>): cerca la stringa in <code>definition</code> per individuare colonne referenziate.</li> <li>Materialized Views (<code>pg_matviews</code>): analogamente alle view.</li> <li>Regole (<code>pg_rules</code>): verifica il testo delle regole.</li> <li>Funzioni (<code>pg_proc</code>): esamina il sorgente PL/pgSQL (<code>prosrc</code>).</li> <li>Constraint di Check (<code>pg_constraint</code>): controlla la condizione BOOLEAN (<code>conbin</code>).</li> </ol> <p>Tutti i risultati vengono uniti (<code>UNION ALL</code>) e restituiti come un unico set.</p>"},{"location":"dbzero/dbops/manual/fn_search_column_usage/#esempi-di-utilizzo","title":"\ud83d\udd0d Esempi di Utilizzo","text":"<ol> <li>Ricerca generica</li> </ol> <pre><code>SELECT *\n  FROM dbops.fn_search_column_usage('customer_id');\n</code></pre> <p>Restituisce tutte le view, funzioni, regole e vincoli che contengono la stringa <code>customer_id</code>.</p> <ol> <li>Filtrare solo le funzioni</li> </ol> <pre><code>SELECT schema_name, object_name\n  FROM dbops.fn_search_column_usage('amount')\n WHERE object_type = 'function';\n</code></pre> <ol> <li>Verificare vincoli che utilizzano un campo</li> </ol> <pre><code>SELECT schema_name, object_name\n  FROM dbops.fn_search_column_usage('status')\n WHERE object_type = 'constraint';\n</code></pre> <ol> <li>Esempio in contesto di refactoring</li> </ol> <pre><code>-- Trovare tutte le dipendenze di 'data_insert'\nWITH deps AS (\n  SELECT *\n    FROM dbops.fn_search_column_usage('data_insert')\n)\nSELECT * FROM deps;\n-- Procedi ad aggiornare o eliminare i riferimenti identificati\n</code></pre>"},{"location":"dbzero/dbops/manual/fn_search_column_usage/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Refactoring sicuro: individua tutte le dipendenze di un campo prima di rinominarlo o rimuoverlo.</li> <li>Documentazione: mappa le dipendenze tra oggetti di database per audit e analisi.</li> <li>Efficienza: evita di ispezionare manualmente definizioni distribuite in pi\u00f9 cataloghi.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>fn_search_column_usage</code> \u00e8 possibile gestire in modo centralizzato l\u2019analisi degli utilizzi di un campo, semplificando manutenzione e refactoring a livello di schema.\u201d</p>"},{"location":"dbzero/dbops/manual/fn_seed_fk_index_policy/","title":"Fn seed fk index policy","text":""},{"location":"dbzero/dbops/manual/fn_seed_fk_index_policy/#documentazione-concettuale-funzione-dbopsfn_seed_fk_index_policy","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>dbops.fn_seed_fk_index_policy()</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - dbops.fk_index_policy </p> <p>Approfondimento funzioni:  - dbops.vw_fk_con_indice_missing_policy </p> <p>La funzione <code>dbops.fn_seed_fk_index_policy()</code> popola automaticamente la tabella <code>dbops.fk_index_policy</code> con le foreign key gi\u00e0 indicizzate ma non ancora presenti in policy, marcandole come <code>consentito = true</code> e <code>generated_by_script = true</code>.</p>"},{"location":"dbzero/dbops/manual/fn_seed_fk_index_policy/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Sincronizzazione iniziale   Aggiunge in <code>fk_index_policy</code> tutte le FK con indice esistente rilevate in <code>vw_fk_con_indice_missing_policy</code>.</li> <li>Automazione   Evita inserimenti manuali per policy gi\u00e0 coperte da indice.</li> <li>Flag di origine   Imposta <code>generated_by_script = true</code> per distinguere le righe create automaticamente.</li> </ul>"},{"location":"dbzero/dbops/manual/fn_seed_fk_index_policy/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"<p>Questa funzione non richiede parametri: agisce su tutti i record presenti nella view <code>dbops.vw_fk_con_indice_missing_policy</code>.</p>"},{"location":"dbzero/dbops/manual/fn_seed_fk_index_policy/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Selezione FK da view    Recupera <code>schema_name</code>, <code>table_name</code>, <code>constraint_name</code> e <code>create_index_suggestion</code> dalla view.</li> <li> <p>Inserimento con ON CONFLICT    Usa <code>INSERT ... ON CONFLICT (schema_name, table_name, constraint_name) DO NOTHING</code> per:</p> </li> <li> <p><code>consentito = true</code></p> </li> <li><code>generated_by_script = true</code></li> <li>mantenere qualsiasi <code>note</code> o valore preesistente se gi\u00e0 presente.</li> </ol>"},{"location":"dbzero/dbops/manual/fn_seed_fk_index_policy/#utilizzo","title":"\ud83d\ude80 Utilizzo","text":"<pre><code>-- Esegui il popolamento iniziale:\nSELECT dbops.fn_seed_fk_index_policy();\n</code></pre> <p>Pu\u00f2 essere integrata in un changeSet Liquibase con <code>runAlways: false</code> (solo esecuzione iniziale) per assicurare che tutte le FK con indice siano registrate in policy.</p>"},{"location":"dbzero/dbops/manual/fn_seed_fk_index_policy/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Completezza: nessuna FK indicizzata resta scoperta da policy.</li> <li>Tracciabilit\u00e0: <code>generated_by_script</code> segnala le policy create automaticamente.</li> <li>Semplicit\u00e0: un\u2019unica chiamata per inizializzare la policy.</li> <li>Integrazione CI/CD: pu\u00f2 essere collocata in uno step di migrazione finale senza duplicare record.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>fn_seed_fk_index_policy()</code> automatizziamo la scoperta e l\u2019inclusione delle FK gi\u00e0 indicizzate, mantenendo la policy sempre completa e allineata.\u201d</p>"},{"location":"dbzero/dbops/manual/pr_apply_fk_index_policy/","title":"Pr apply fk index policy","text":""},{"location":"dbzero/dbops/manual/pr_apply_fk_index_policy/#documentazione-concettuale-procedura-dbopsapply_fk_index_policy","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Procedura <code>dbops.apply_fk_index_policy()</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - dbops.fk_index_policy </p> <p>La procedura <code>dbops.apply_fk_index_policy()</code> incapsula la logica di creazione o rimozione dinamica degli indici sulle foreign key, in base alle policy definite in <code>dbops.fk_index_policy</code>.</p>"},{"location":"dbzero/dbops/manual/pr_apply_fk_index_policy/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Centralizzare la gestione degli indici FK   Evitare di duplicare script DDL e consentire modifiche runtime delle policy.</li> <li>Allineare schema e policy   Creare solo gli indici consentiti e rimuovere quelli non pi\u00f9 autorizzati.</li> <li>Integrazione con Liquibase   Pu\u00f2 essere richiamata in un changeSet <code>runAlways</code> per applicare le policy ad ogni deploy.</li> </ul>"},{"location":"dbzero/dbops/manual/pr_apply_fk_index_policy/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"<p>Questa procedura non richiede parametri: agisce su tutte le righe di <code>dbops.fk_index_policy</code>.</p>"},{"location":"dbzero/dbops/manual/pr_apply_fk_index_policy/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Iterazione su ogni policy    Scorre tutte le righe di <code>dbops.fk_index_policy</code>.</li> <li> <p>Verifica flag <code>consentito</code></p> </li> <li> <p>Se <code>TRUE</code>, esegue <code>CREATE INDEX IF NOT EXISTS</code> con nome coerente a <code>&lt;table&gt;_&lt;constraint&gt;</code>.</p> </li> <li>Se <code>FALSE</code>, esegue <code>DROP INDEX IF EXISTS</code> per rimuovere eventuale indice esistente.</li> <li>Naming uniforme    Gli indici sono denominati <code>ix_&lt;table_name&gt;_&lt;constraint_name&gt;</code>, garantendo predicibilit\u00e0.</li> </ol>"},{"location":"dbzero/dbops/manual/pr_apply_fk_index_policy/#procedura-sql","title":"\ud83d\udd16 Procedura SQL","text":"<pre><code>CREATE OR REPLACE PROCEDURE dbops.apply_fk_index_policy()\n              LANGUAGE plpgsql\n              AS $$\n              DECLARE\n                rec RECORD;\n                idx_name TEXT;\n              BEGIN\n                FOR rec IN SELECT * FROM dbops.fk_index_policy LOOP\n                  IF rec.consentito THEN\n                    EXECUTE rec.dll_command;\n                  ELSE\n                       -- estraggo solo il nome dell'indice\n                      idx_name := split_part(rec.dll_command, ' ', 6);\n                      EXECUTE format(\n                        'DROP INDEX IF EXISTS %I.%I',\n                        rec.schema_name,\n                        idx_name\n                    );\n                  END IF;\n                END LOOP;\n              END;\n              $$;\n\nCOMMENT ON PROCEDURE dbops.apply_fk_index_policy() IS\n  'Applica le policy di indicizzazione definite in dbops.fk_index_policy: crea o rimuove gli indici sulle foreign key secondo il flag consentito.';\n</code></pre>"},{"location":"dbzero/dbops/manual/pr_apply_fk_index_policy/#utilizzo","title":"\ud83d\ude80 Utilizzo","text":"<ul> <li>Manuale:</li> </ul> <p><pre><code>CALL dbops.apply_fk_index_policy();\n</code></pre> * In Liquibase (changeSet <code>runAlways: true</code>):</p> <pre><code>- changeSet:\n    id: apply-fk-index-policy\n    author: mctit\n    runAlways: true\n    sql:\n      splitStatements: false\n      sql: |\n        CALL dbops.apply_fk_index_policy();\n</code></pre>"},{"location":"dbzero/dbops/manual/pr_apply_fk_index_policy/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Flessibilit\u00e0: policy modificabili in tabella, senza toccare DDL statici.</li> <li>Automazione: supporto a deploy automatizzati con Liquibase.</li> <li>Tracciabilit\u00e0: log delle modifiche in <code>fk_index_policy</code>, con <code>note</code> e timestamp.</li> <li>Manutenibilit\u00e0: unico punto di gestione per tutti gli indici FK.</li> </ul> <p>\ud83e\udde0 \u201cEncapsulando il DO-block in una procedura, rendiamo il processo di applicazione delle policy pi\u00f9 leggibile, riutilizzabile e integrabile nei flussi CI/CD.\u201d</p>"},{"location":"dbzero/dbops/manual/transaction_ids/","title":"Transaction ids","text":""},{"location":"dbzero/dbops/manual/transaction_ids/#documentazione-concettuale-tabella-dbopstransaction_ids","title":"\ud83d\udcda Documentazione Concettuale \u2013 Tabella <code>dbops.transaction_ids</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - config.parameter_overrides </p> <p>Approfondimento funzioni :   - script.fn_get_parameter_full  - script.trgfn_prevent_modification_generic </p>"},{"location":"dbzero/dbops/manual/transaction_ids/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>dbops.transaction_ids</code> funge da registro centrale di tutti gli identificativi di transazione (UUID) utilizzati in Zero ERP: ogni volta che viene avviata un\u2019operazione di modifica dati (inserimento, aggiornamento o cancellazione) che coinvolge pi\u00f9 tabelle, si genera un nuovo <code>tx_id</code> in questa tabella e lo si propaga a tutte le righe interessate, garantendo la tracciabilit\u00e0 e il raggruppamento coerente delle modifiche.</p>"},{"location":"dbzero/dbops/manual/transaction_ids/#vincoli","title":"\ud83d\udd12 Vincoli","text":"<ul> <li>PRIMARY KEY: <code>transaction_ids_pkey</code> sulla colonna <code>id</code> (UUID).</li> </ul>"},{"location":"dbzero/dbops/manual/transaction_ids/#protezione-dati-di-audit","title":"\ud83d\udea8 Protezione Dati di Audit","text":"<ul> <li>Trigger: <code>trg_prevent_mod_parameters_audit</code> (BEFORE UPDATE OR DELETE) su <code>config.parameters_audit</code>.   Esegue la funzione <code>script.trgfn_prevent_modification_generic()</code>, che impedisce qualsiasi modifica o cancellazione dei record di audit, assicurando l\u2019inalterabilit\u00e0 della cronologia.</li> </ul>"},{"location":"dbzero/dbops/manual/transaction_ids/#meccanismo-di-utilizzo","title":"\u2699\ufe0f Meccanismo di Utilizzo","text":"<ol> <li>Generazione del <code>tx_id</code></li> </ol> <p><pre><code>INSERT INTO dbops.transaction_ids DEFAULT VALUES\nRETURNING id;\n</code></pre> 2. Propagazione    Il valore restituito (<code>tx_id</code>) viene passato alle colonne omonime (<code>tx_id</code>) nelle altre tabelle coinvolte, assicurando che tutte le operazioni riferiscano la stessa transazione. 3. Auditing</p> <ul> <li><code>user_insert</code> e <code>data_insert</code> registrano chi e quando ha creato il <code>tx_id</code>.</li> <li><code>user_update</code> e <code>data_update</code> vengono aggiornati ad ogni modifica grazie al trigger di audit.</li> <li><code>generating_function</code> pu\u00f2 contenere il nome della funzione o procedura DB che ha generato il <code>tx_id</code>.</li> <li><code>session_info</code> pu\u00f2 immagazzinare JSONB con ulteriori informazioni di contesto (es. utente applicativo, IP, dettagli di sessione).</li> </ul>"},{"location":"dbzero/dbops/manual/transaction_ids/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Coerenza transazionale: un singolo <code>tx_id</code> per raggruppare operazioni correlate su pi\u00f9 tabelle.</li> <li>Inalterabilit\u00e0: la cronologia rimane immutata grazie al trigger di prevenzione.</li> <li>Tracciabilit\u00e0: facilit\u00e0 di debug e audit, risalendo a tutte le modifiche di una stessa transazione.</li> <li>Flessibilit\u00e0: il campo <code>session_info</code> consente di allegare dati custom alla transazione.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare gli UUID di transazione in <code>dbops.transaction_ids</code> semplifica la gestione e l\u2019analisi delle operazioni distribuite, garantendo un\u2019unica chiave di correlazione per l\u2019intera applicazione.\u201d</p>"},{"location":"dbzero/dbops/manual/trgfn_tx_id_managed/","title":"Trgfn tx id managed","text":""},{"location":"dbzero/dbops/manual/trgfn_tx_id_managed/#documentazione-concettuale-trigger-function-dbopstrgfn_tx_id_managed","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>dbops.trgfn_tx_id_managed()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.transaction_ids </p> <p>Approfondimento funzioni :   - dbops.fn_get_or_create_session_tx_id  - script.fn_log_and_raise_error </p>"},{"location":"dbzero/dbops/manual/trgfn_tx_id_managed/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La trigger function <code>dbops.trgfn_tx_id_managed()</code> viene eseguita <code>BEFORE INSERT OR UPDATE</code> su ogni tabella che contiene la colonna <code>tx_id</code> e centralizza la logica di validazione, generazione e assegnazione dell\u2019UUID di transazione per la riga in corso di inserimento/aggiornamento.</p>"},{"location":"dbzero/dbops/manual/trgfn_tx_id_managed/#obiettivi-e-ruolo","title":"\ud83c\udfaf Obiettivi e Ruolo","text":"<ol> <li>Bypass configurabile: permette di saltare la generazione e verifica del <code>tx_id</code> in contesti speciali (es. test, migrazioni, debug).</li> <li>Validazione integrit\u00e0: garantisce che un <code>tx_id</code> presente in sessione esista gi\u00e0 in <code>dbops.transaction_ids</code>, altrimenti segnala un warning e resetta a <code>nil</code>.</li> <li>Generazione on-demand: se non \u00e8 presente alcun <code>tx_id</code> in sessione e il bypass \u00e8 disabilitato, invoca <code>dbops.fn_get_or_create_session_tx_id()</code> per creare un nuovo identificativo.</li> <li>Assegnazione uniforme: popola la colonna <code>NEW.tx_id</code> con il valore deciso dal flusso, assicurando coerenza transazionale.</li> </ol>"},{"location":"dbzero/dbops/manual/trgfn_tx_id_managed/#variabili-di-contesto-e-configurazione","title":"\ud83d\udd0d Variabili di Contesto e Configurazione","text":"Variabile Scopo <code>tx_id_bypass_enabled</code> Parametro (<code>config.parameters</code>) che abilita il bypass completo: se <code>TRUE</code>, non viene generato n\u00e9 verificato un nuovo <code>tx_id</code>. <code>app.bypass_tx_id_check</code> GUC di sessione: pu\u00f2 essere usata per override temporanei del bypass senza cambiare il parametro globale. <code>current_setting('dbops.tx_id', TRUE)</code> Legge il valore di <code>tx_id</code> salvato in sessione, se presente; altrimenti solleva eccezione interna. <code>script.uuid_nil()</code> Funzione helper che restituisce l\u2019UUID nil (<code>00000000-0000-0000-0000-000000000000</code>)."},{"location":"dbzero/dbops/manual/trgfn_tx_id_managed/#flusso-di-esecuzione-dettagliato","title":"\u2699\ufe0f Flusso di Esecuzione Dettagliato","text":"<ol> <li> <p>Verifica bypass globale</p> </li> <li> <p>Legge <code>config.parameters</code> per il parametro <code>tx_id_bypass_enabled</code>.</p> </li> <li> <p>In caso di mancanza o di errore, logga via <code>fn_log_and_raise_error</code> e prosegue con bypass disabilitato.</p> </li> <li> <p>Override bypass a sessione</p> </li> <li> <p>Se il bypass non \u00e8 gi\u00e0 abilitato, prova a leggere <code>app.bypass_tx_id_check</code> dalla GUC di sessione.</p> </li> <li> <p>Eventuali errori di lettura vengono ignorati (assume bypass disabilitato).</p> </li> <li> <p>Recupero <code>tx_id</code> di sessione</p> </li> <li> <p>Tenta <code>current_setting('dbops.tx_id', TRUE)</code> per ottenere un <code>tx_id</code> gi\u00e0 presente in sessione.</p> </li> <li> <p>In caso di errore o non esistenza, <code>v_session_tx_id</code> = <code>NULL</code>.</p> </li> <li> <p>Determinazione del nuovo <code>tx_id</code></p> </li> <li> <p>Bypass attivo: usa <code>v_session_tx_id</code> se esistente, altrimenti <code>uuid_nil()</code>.</p> </li> <li> <p>Bypass disabilitato:</p> <ul> <li> <p>Se <code>v_session_tx_id</code> non \u00e8 NULL: verifica in <code>dbops.transaction_ids</code>.</p> </li> <li> <p>Se esiste, lo riutilizza.</p> </li> <li>Se non esiste, logga warning (<code>W_TXID_NOT_REGISTERED</code>) e assegna <code>uuid_nil()</code>.</li> <li> <p>Se <code>v_session_tx_id</code> \u00e8 NULL: genera uno nuovo con <code>dbops.fn_get_or_create_session_tx_id()</code>.</p> </li> <li> <p>In caso di errori di generazione, logga errore (<code>E_TXID_GENERATION</code>) e usa <code>uuid_nil()</code>.</p> </li> </ul> </li> <li> <p>Assegnazione a NEW.tx_id</p> </li> </ol> <pre><code>NEW.tx_id := v_new_tx_id;\n</code></pre> <p>Garantisce che ogni riga inserita o aggiornata abbia sempre un <code>tx_id</code> valido secondo la logica centralizzata.</p>"},{"location":"dbzero/dbops/manual/trgfn_tx_id_managed/#esempio-di-trigger-ddl","title":"\ud83d\udd16 Esempio di Trigger DDL","text":"<pre><code>DROP TRIGGER IF EXISTS trg_managed_tx_id ON my_schema.my_table;\nCREATE TRIGGER trg_managed_tx_id\n  BEFORE INSERT OR UPDATE\n  ON my_schema.my_table\n  FOR EACH ROW\n  EXECUTE FUNCTION dbops.trgfn_tx_id_managed();\n</code></pre>"},{"location":"dbzero/dbops/manual/trgfn_tx_id_managed/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Centralizzazione logica: nessuna duplicazione di codice di generazione/validazione del <code>tx_id</code> across tabelle.</li> <li>Flessibilit\u00e0: gestisce bypass globali e di sessione per scenari di test, migrazione o debug.</li> <li>Affidabilit\u00e0: verifica sempre l\u2019esistenza del <code>tx_id</code> e assicura fallback pulito a <code>uuid_nil()</code>.</li> <li>Tracciabilit\u00e0 avanzata: associa ogni record al giusto <code>tx_id</code>, mantenendo coerenza con il registro centrale <code>transaction_ids</code>.</li> </ul> <p>\ud83e\udde0 \u201c<code>trgfn_tx_id_managed</code> \u00e8 il cuore della gestione transazionale in Zero ERP: garantisce consistenza, controlli configurabili e fallback sicuri, mantenendo la logica di correlazione centralizzata.\u201d</p>"},{"location":"dbzero/dbops/manual/vw_catalogo_oggetti/","title":"Vw catalogo oggetti","text":""},{"location":"dbzero/dbops/manual/vw_catalogo_oggetti/#documentazione-concettuale-view-dbopsvw_catalogo_oggetti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_catalogo_oggetti</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <ul> <li>Sistema di catalogazione cataloghi di sistema (<code>pg_class</code>, <code>pg_namespace</code>)</li> <li>Schema <code>dbops</code> e schema <code>script</code></li> </ul> <p>La view <code>dbops.vw_catalogo_oggetti</code> fornisce un elenco centralizzato degli oggetti presenti negli schemi <code>dbops</code> e <code>script</code>, includendo tabelle, viste, indici, sequenze, materialized views e funzioni, con informazioni sul tipo, sul proprietario e sulla descrizione.</p>"},{"location":"dbzero/dbops/manual/vw_catalogo_oggetti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Offrire una vista unificata degli oggetti PostgreSQL definiti nei due schemi principali di amministrazione.</li> <li>Agevolare operazioni di discovery e auditing, bypassando query dirette sulle catalog tables.</li> </ul>"},{"location":"dbzero/dbops/manual/vw_catalogo_oggetti/#definizione-ddl","title":"\ud83d\udd0d Definizione (DDL)","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_catalogo_oggetti AS\nSELECT\n  n.nspname            AS schema,\n  c.relkind            AS tipo_oggetto,\n  c.relname            AS nome_oggetto,\n  CASE c.relkind\n    WHEN 'r' THEN 't'  -- table\n    WHEN 'v' THEN 'v'  -- view\n    WHEN 'm' THEN 'm'  -- materialized view\n    WHEN 'i' THEN 'i'  -- index\n    WHEN 'S' THEN 's'  -- sequence\n    WHEN 'f' THEN 'f'  -- function\n    ELSE c.relkind\n  END                   AS tipo_descrizione,\n  pg_roles.rolname      AS proprietario,\n  obj_description(c.oid, 'pg_class') AS descrizione\nFROM pg_class c\nJOIN pg_namespace n ON n.oid = c.relnamespace\nLEFT JOIN pg_roles ON pg_roles.oid = c.relowner\nWHERE n.nspname = ANY (ARRAY['dbops', 'script']);\n</code></pre> <p>Owner: <code>postgres</code></p> <p>Commento: \"Vista degli oggetti presenti negli schemi dbops,script (tabelle, viste, sequenze, indici ecc.)\"</p>"},{"location":"dbzero/dbops/manual/vw_catalogo_oggetti/#colonne-e-significato","title":"\ud83d\udd0d Colonne e Significato","text":"Colonna Descrizione <code>schema</code> Nome dello schema in cui risiede l\u2019oggetto (<code>dbops</code> o <code>script</code>). <code>tipo_oggetto</code> Codice interno (<code>relkind</code>) che indica il tipo: <code>r</code>, <code>v</code>, <code>m</code>, <code>i</code>, <code>S</code>, <code>f</code>. <code>nome_oggetto</code> Nome dell\u2019oggetto nel catalogo (<code>relname</code>). <code>tipo_descrizione</code> Versione sintetica del tipo (stessa lettera) per filtro pi\u00f9 leggibile. <code>proprietario</code> Utente/role che possiede l\u2019oggetto (<code>rolname</code>). <code>descrizione</code> Commento associato all\u2019oggetto, se presente (da <code>obj_description</code>)."},{"location":"dbzero/dbops/manual/vw_catalogo_oggetti/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Elencare tutte le tabelle dei due schemi:</li> </ol> <pre><code>SELECT nome_oggetto, descrizione\n  FROM dbops.vw_catalogo_oggetti\n WHERE tipo_oggetto = 'r';\n</code></pre> <ol> <li>Filtrare le view (oggetti di tipo <code>v</code>) e mostrarne il proprietario:</li> </ol> <pre><code>SELECT schema, nome_oggetto, proprietario\n  FROM dbops.vw_catalogo_oggetti\n WHERE tipo_oggetto = 'v'\n   AND schema = 'dbops';\n</code></pre> <ol> <li>Trovare oggetti senza descrizione (per manutenzione commenti):</li> </ol> <pre><code>SELECT schema, nome_oggetto\n  FROM dbops.vw_catalogo_oggetti\n WHERE descrizione IS NULL;\n</code></pre>"},{"location":"dbzero/dbops/manual/vw_catalogo_oggetti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Rapidit\u00e0 di analisi: evita join manuali su <code>pg_class</code>, <code>pg_namespace</code> e <code>pg_roles</code>.</li> <li>Auditing e documentazione: consente di scoprire oggetti orfani o privi di commento.</li> <li>Scripting: facilita la generazione di report ad-hoc sul catalogo di sistema.</li> </ul> <p>\ud83e\udde0 \u201cUna view di catalogo centralizzato semplifica il discovery e il governo degli oggetti di database, favorendo manutenzione e compliance.\u201d</p>"},{"location":"dbzero/dbops/manual/vw_duplicate_indexes/","title":"Vw duplicate indexes","text":""},{"location":"dbzero/dbops/manual/vw_duplicate_indexes/#documentazione-concettuale-view-dbopsvw_duplicate_indexes","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_duplicate_indexes</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento funzioni:  - dbops.vw_fk_senza_indice  - dbops.vw_fk_con_indice_missing_policy </p> <p>La view <code>dbops.vw_duplicate_indexes</code> identifica gli indici duplicati all\u2019interno dello stesso schema e tabella, cio\u00e8 quegli indici che coprono esattamente lo stesso insieme di colonne (<code>cols</code>). Per ciascun gruppo di colonne con pi\u00f9 indici, la view restituisce i nomi degli indici coinvolti e il numero totale di occorrenze.</p>"},{"location":"dbzero/dbops/manual/vw_duplicate_indexes/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Individuare indici ridondanti   Scoprire indici che hanno lo stesso set di colonne e possono quindi essere unificati o rimossi.</li> <li>Ottimizzazione dello storage e delle performance   Ridurre overhead di manutenzione e migliorare le prestazioni di scrittura eliminando duplicazioni.</li> <li>Governance della struttura   Supportare analisi periodiche per mantenere lo schema pulito e coerente.</li> </ul>"},{"location":"dbzero/dbops/manual/vw_duplicate_indexes/#flusso-di-costruzione","title":"\u2699\ufe0f Flusso di Costruzione","text":"<ol> <li> <p>CTE <code>index_cols</code></p> </li> <li> <p>Estrae da <code>pg_index</code> le informazioni sugli indici:</p> <ul> <li><code>index_oid</code>, <code>schema_name</code>, <code>table_name</code>, <code>index_name</code></li> <li>Flag <code>is_unique</code>, <code>is_primary</code></li> <li>Array <code>cols</code> con i nomi delle colonne indicizzate (ordinati).</li> <li>Filtra fuori gli indici primari (<code>indisprimary</code>) e considera solo gli indici di tipo <code>i</code>.</li> <li>Aggregazione e raggruppamento</li> </ul> </li> <li> <p>Raggruppa per <code>schema_name</code>, <code>table_name</code> e <code>cols</code>.</p> </li> <li> <p>Calcola:</p> <ul> <li><code>duplicate_index_names</code>: array dei nomi degli indici che condividono le colonne.</li> <li><code>count_of_indexes</code>: conteggio degli indici nel gruppo.</li> <li>Applica <code>HAVING count(*) &gt; 1</code> per ottenere solo i gruppi con pi\u00f9 di un indice.</li> </ul> </li> </ol>"},{"location":"dbzero/dbops/manual/vw_duplicate_indexes/#ddl-della-view","title":"\ud83d\udd16 DDL della View","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_duplicate_indexes AS\nWITH index_cols AS (\n  SELECT\n    i.oid                    AS index_oid,\n    n.nspname                AS schema_name,\n    t.relname                AS table_name,\n    i.relname                AS index_name,\n    ix.indisunique           AS is_unique,\n    ix.indisprimary          AS is_primary,\n    array_agg(a.attname ORDER BY x.ordinality) AS cols\n  FROM pg_index ix\n  JOIN pg_class i    ON i.oid = ix.indexrelid\n  JOIN pg_class t    ON t.oid = ix.indrelid\n  JOIN pg_namespace n ON n.oid = t.relnamespace\n  JOIN LATERAL unnest(ix.indkey) WITH ORDINALITY x(attnum, ordinality) ON true\n  JOIN pg_attribute a ON a.attrelid = t.oid AND a.attnum = x.attnum\n  WHERE NOT ix.indisprimary    -- escludi indici PK\n    AND i.relkind = 'i'         -- solo indici\n  GROUP BY i.oid, n.nspname, t.relname, i.relname, ix.indisunique, ix.indisprimary\n)\nSELECT\n  schema_name,\n  table_name,\n  cols                 AS index_columns,\n  array_agg(index_name) AS duplicate_index_names,\n  count(*)             AS count_of_indexes\nFROM index_cols\nGROUP BY schema_name, table_name, cols\nHAVING count(*) &gt; 1\nORDER BY schema_name, table_name, count_of_indexes DESC;\n\nCOMMENT ON VIEW dbops.vw_duplicate_indexes IS\n  'Elenca gli indici duplicati (stesso insieme di colonne) per schema e tabella, mostrando i nomi degli indici e il conteggio.';\n</code></pre>"},{"location":"dbzero/dbops/manual/vw_duplicate_indexes/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Riduzione di ridondanze: facilita la rimozione di indici duplicati per liberare spazio e ridurre costi di manutenzione.</li> <li>Chiarezza: fornisce un elenco immediato dei gruppi di indici da esaminare.</li> <li>Automazione: utile in script di auditing o pulizia periodica.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>vw_duplicate_indexes</code>, tenere sotto controllo gli indici duplicati diventa semplice, supportando azioni di consolidamento per ottimizzare il database.\u201d</p>"},{"location":"dbzero/dbops/manual/vw_fk_con_indice_missing_policy/","title":"Vw fk con indice missing policy","text":""},{"location":"dbzero/dbops/manual/vw_fk_con_indice_missing_policy/#documentazione-concettuale-view-dbopsvw_fk_con_indice_missing_policy","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_fk_con_indice_missing_policy</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.fk_index_policy </p> <p>Approfondimento funzioni:  - dbops.vw_fk_senza_indice  - dbops.vw_duplicate_indexes </p> <p>La view <code>dbops.vw_fk_con_indice_missing_policy</code> elenca tutte le foreign key che hanno un indice (prefisso <code>ix_</code>) ma non sono ancora gestite dalla tabella di policy <code>dbops.fk_index_policy</code>. Per ciascuna FK, viene suggerito il comando SQL di creazione dell\u2019indice.</p>"},{"location":"dbzero/dbops/manual/vw_fk_con_indice_missing_policy/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Identificare gli indici esistenti   Trova le FK gi\u00e0 indicizzate che non dispongono di una policy dedicata.</li> <li>Suggerimento DDL   Genera automaticamente la stringa <code>CREATE INDEX ...</code> per uniformare naming e struttura.</li> <li>Supporto auditing e governance   Permette di scoprire eventuali indici non tracciati, inserendoli poi in <code>fk_index_policy</code>.</li> </ul>"},{"location":"dbzero/dbops/manual/vw_fk_con_indice_missing_policy/#flusso-di-costruzione","title":"\u2699\ufe0f Flusso di Costruzione","text":"<ol> <li>CTE <code>fk_columns</code> e <code>fk_fields</code>    Estrae schema, tabella, nome del vincolo FK e lista delle colonne coinvolte.</li> <li>CTE <code>indexed_columns</code>    Elenca gli indici esistenti sulle tabelle, raggruppando le colonne per ciascun indice.</li> <li>CTE <code>fk_grouped</code>    Raggruppa le colonne di ogni FK in array ordinate.</li> <li>Join tra FK e indici    Seleziona le FK le cui colonne coincidono con un indice (array di colonne uguali).</li> <li>Left join su <code>fk_index_policy</code>    Filtra solo quelle FK senza entry in policy (<code>pol.constraint_name IS NULL</code>).</li> <li> <p>Output    Restituisce:</p> </li> <li> <p><code>schema_name</code>, <code>table_name</code>, <code>constraint_name</code></p> </li> <li><code>fk_cols</code> (array delle colonne FK)</li> <li><code>index_name</code> (nome indice esistente)</li> <li> <p><code>create_index_suggestion</code> con formato:</p> <pre><code>CREATE INDEX ix_&lt;schema&gt;_&lt;table&gt;_&lt;columns&gt; ON &lt;schema&gt;.&lt;table&gt;(&lt;columns&gt;);\n</code></pre> </li> </ol>"},{"location":"dbzero/dbops/manual/vw_fk_con_indice_missing_policy/#ddl-della-view","title":"\ud83d\udd16 DDL della View","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_fk_con_indice_missing_policy AS\nWITH\n  fk_columns AS (...),\n  fk_fields  AS (...),\n  indexed_columns AS (...),\n  fk_grouped AS (...)\nSELECT\n  fk.schema_name,\n  fk.table_name,\n  fk.constraint_name,\n  fk.fk_cols,\n  idx.index_name,\n  format(\n    'CREATE INDEX ix_%I_%I_%s ON %I.%I(%s);',\n    fk.schema_name,\n    fk.table_name,\n    array_to_string(fk.fk_cols, '_'),\n    fk.schema_name,\n    fk.table_name,\n    array_to_string(fk.fk_cols, ', ')\n  ) AS create_index_suggestion\nFROM fk_grouped fk\n  JOIN indexed_columns idx\n    ON fk.schema_name = idx.schema_name\n   AND fk.table_name  = idx.table_name\n   AND fk.fk_cols     = idx.indexed_cols\n  LEFT JOIN dbops.fk_index_policy pol\n    ON fk.schema_name     = pol.schema_name\n   AND fk.table_name      = pol.table_name\n   AND fk.constraint_name = pol.constraint_name\nWHERE pol.constraint_name IS NULL\nORDER BY fk.schema_name, fk.table_name;\n\nCOMMENT ON VIEW dbops.vw_fk_con_indice_missing_policy IS\n  'Elenco dei vincoli foreign key gi\u00e0 indicizzati (prefisso ix_) che non sono ancora definiti in fk_index_policy';\n</code></pre>"},{"location":"dbzero/dbops/manual/vw_fk_con_indice_missing_policy/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Individuazione rapida: mostra subito le FK con indice esistente ma senza policy.</li> <li>Governance: aiuta a mantenere <code>fk_index_policy</code> completa e aggiornata.</li> <li>Coerenza naming: suggerimento DDL uniforme con prefisso <code>ix_</code>.</li> <li>Automazione: integrabile in processi CI/CD o script di auditing.</li> </ul> <p>\ud83e\udde0 \u201cQuesta view facilita la scoperta di indici FK non ancora tracciati, supportando una gestione centralizzata e coerente delle policy di indicizzazione.\u201d</p>"},{"location":"dbzero/dbops/manual/vw_fk_senza_indice/","title":"Vw fk senza indice","text":""},{"location":"dbzero/dbops/manual/vw_fk_senza_indice/#documentazione-concettuale-view-dbopsvw_fk_senza_indice","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_fk_senza_indice</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.fk_index_policy </p> <p>Approfondimento funzioni:  - dbops.fn_populate_fk_index_policy  - dbops.vw_fk_senza_indice  - dbops.vw_duplicate_indexes </p> <ul> <li>Catalogo dei vincoli FK in PostgreSQL (<code>pg_constraint</code>, <code>pg_class</code>, <code>pg_namespace</code>)</li> </ul> <p>La view <code>dbops.vw_fk_senza_indice</code> elenca tutte le foreign key definite negli schemi monitorati che non hanno un indice associato sulle colonne di riferimento, suggerendo lo statement <code>CREATE INDEX</code> corrispondente e rispettando eventuali eccezioni definite in <code>dbops.fk_index_policy</code>.</p>"},{"location":"dbzero/dbops/manual/vw_fk_senza_indice/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Individuare automaticamente vincoli di integrit\u00e0 referenziale (FK) privi di indice, potenziali colli di bottiglia nelle operazioni di JOIN e DELETE.</li> <li>Fornire suggerimenti di creazione indice coerenti, facilitando l\u2019ottimizzazione delle performance.</li> <li>Applicare eventuali policy di esclusione gestite in <code>dbops.fk_index_policy</code>.</li> </ul>"},{"location":"dbzero/dbops/manual/vw_fk_senza_indice/#definizione-ddl","title":"\ud83d\udd0d Definizione (DDL)","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_fk_senza_indice AS\nWITH fk_columns AS (\n  SELECT con.oid AS constraint_oid,\n         con.conname AS constraint_name,\n         nsp.nspname AS schema_name,\n         rel.relname AS table_name,\n         unnest(con.conkey) AS attnum,\n         con.conrelid\n    FROM pg_constraint con\n    JOIN pg_class rel ON rel.oid = con.conrelid\n    JOIN pg_namespace nsp ON nsp.oid = rel.relnamespace\n   WHERE con.contype = 'f'\n), fk_fields AS (\n  SELECT fk.constraint_name,\n         fk.schema_name,\n         fk.table_name,\n         a.attname AS column_name,\n         fk.conrelid,\n         fk.constraint_oid\n    FROM fk_columns fk\n    JOIN pg_attribute a ON a.attrelid = fk.conrelid AND a.attnum = fk.attnum\n), indexed_columns AS (\n  SELECT i.relname AS index_name,\n         n.nspname AS schema_name,\n         t.relname AS table_name,\n         array_agg(a.attname ORDER BY x.ordinality) AS indexed_cols\n    FROM pg_index ix\n    JOIN pg_class i ON i.oid = ix.indexrelid\n    JOIN pg_class t ON t.oid = ix.indrelid\n    JOIN pg_namespace n ON n.oid = t.relnamespace\n    JOIN LATERAL unnest(ix.indkey) WITH ORDINALITY x(attnum, ordinality) ON true\n    JOIN pg_attribute a ON a.attrelid = t.oid AND a.attnum = x.attnum\nGROUP BY i.relname, n.nspname, t.relname\n), fk_grouped AS (\n  SELECT fk.constraint_name,\n         fk.schema_name,\n         fk.table_name,\n         array_agg(fk.column_name ORDER BY fk.column_name) AS fk_cols\n    FROM fk_fields fk\nGROUP BY fk.constraint_name, fk.schema_name, fk.table_name\n)\nSELECT\n  fk.schema_name,\n  fk.table_name,\n  fk.constraint_name,\n  fk.fk_cols,\n  format(\n    'CREATE INDEX ix_%I_%I_%s ON %I.%I(%s);',\n    fk.schema_name,\n    fk.table_name,\n    array_to_string(fk.fk_cols, '_'),\n    fk.schema_name,\n    fk.table_name,\n    array_to_string(fk.fk_cols, ', ')\n  ) AS create_index_suggestion\nFROM fk_grouped fk\nLEFT JOIN indexed_columns idx\n  ON fk.schema_name = idx.schema_name\n AND fk.table_name  = idx.table_name\n AND fk.fk_cols      = idx.indexed_cols\nLEFT JOIN dbops.fk_index_policy pol\n  ON fk.schema_name     = pol.schema_name\n AND fk.table_name      = pol.table_name\n AND fk.constraint_name = pol.constraint_name\nWHERE idx.index_name IS NULL\n  AND COALESCE(pol.consentito, true) = true\nORDER BY fk.schema_name, fk.table_name;\n</code></pre> <p>Owner: <code>postgres</code></p> <p>Commento: \"Elenco delle foreign key senza indice esplicito, con suggerimento CREATE INDEX e rispetto policy da dbops.fk_index_policy\"</p>"},{"location":"dbzero/dbops/manual/vw_fk_senza_indice/#colonne-e-descrizione","title":"\ud83d\udd0d Colonne e Descrizione","text":"Colonna Descrizione <code>schema_name</code> Schema in cui si trova la tabella con FK <code>table_name</code> Nome della tabella che contiene la FK <code>constraint_name</code> Nome del vincolo di foreign key <code>fk_cols</code> Elenco delle colonne coinvolte nella FK <code>create_index_suggestion</code> Statement SQL suggerito per creare l\u2019indice su queste colonne"},{"location":"dbzero/dbops/manual/vw_fk_senza_indice/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Verificare FK senza indice:</li> </ol> <pre><code>SELECT *\n  FROM dbops.vw_fk_senza_indice;\n</code></pre> <ol> <li>Creare l\u2019indice suggerito (per la prima riga restituita):</li> </ol> <pre><code>DO $$ DECLARE rec RECORD; BEGIN\n  SELECT create_index_suggestion INTO rec\n    FROM dbops.vw_fk_senza_indice\n   LIMIT 1;\n  EXECUTE rec.create_index_suggestion;\nEND $$;\n</code></pre> <ol> <li>Escludere esplicitamente un vincolo tramite policy:</li> </ol> <pre><code>INSERT INTO dbops.fk_index_policy (schema_name, table_name, constraint_name, consentito)\nVALUES ('public', 'orders', 'orders_customer_id_fkey', false);\n-- Ora la view non mostrer\u00e0 pi\u00f9 questo vincolo\n</code></pre>"},{"location":"dbzero/dbops/manual/vw_fk_senza_indice/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Miglioramento performance: individuazione rapida di join e delete lenti dovuti a FK senza indice.</li> <li>Automazione: suggerimenti pronti all\u2019uso per l\u2019ottimizzazione.</li> <li>Governance: rispetto di policy aziendali per eccezioni a indice automatico.</li> </ul> <p>\ud83e\udde0 \u201cCon una view dedicata alle FK prive di indice e ai suggerimenti di creazione, si ottimizzano le query e si mantiene il controllo sulle eccezioni di policy.\u201d</p>"},{"location":"dbzero/dbops/manual/vw_function_list/","title":"Vw function list","text":""},{"location":"dbzero/dbops/manual/vw_function_list/#documentazione-concettuale-view-dbopsvw_function_list","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_function_list</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <ul> <li>Catalogo funzioni PostgreSQL (<code>pg_proc</code>, <code>pg_namespace</code>, <code>pg_description</code>)  Altre view di catalogazione:  </li> <li>dbops.vw_catalogo_oggetti </li> </ul> <p>La view <code>dbops.vw_function_list</code> fornisce un inventario completo delle funzioni definite negli schemi <code>dbops</code> e <code>script</code>, mostrando firma, tipo di ritorno, numero di parametri e commenti associati.</p>"},{"location":"dbzero/dbops/manual/vw_function_list/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Agevolare il discovery delle funzioni personalizzate per manutenzione e documentazione.</li> <li> <p>Rendere immediatamente disponibili:</p> </li> <li> <p>OID (per gestire overload)</p> </li> <li>Lista degli argomenti</li> <li>Tipo di ritorno</li> <li>Numero di parametri</li> <li>Commenti descrittivi</li> </ul>"},{"location":"dbzero/dbops/manual/vw_function_list/#definizione-ddl","title":"\ud83d\udd0d Definizione (DDL)","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_function_list AS\nSELECT\n  n.nspname                             AS schema,\n  p.oid                                 AS function_oid,\n  p.proname                             AS function_name,\n  pg_get_function_arguments(p.oid)     AS arguments,\n  pg_get_function_result(p.oid)        AS return_type,\n  array_length(\n    string_to_array(\n      pg_get_function_arguments(p.oid), ','\n    ), 1\n  )                                      AS num_args,\n  d.description                        AS comment\nFROM pg_proc p\nJOIN pg_namespace n ON n.oid = p.pronamespace\nLEFT JOIN pg_description d ON p.oid = d.objoid\nWHERE n.nspname = ANY (ARRAY['dbops', 'script']);\n</code></pre> <p>Owner: <code>postgres</code></p> <p>Commento: \"Elenco completo delle funzioni negli schemi dbops e script. Include:</p> <ul> <li>OID per identificare overload</li> <li>Argomenti e tipo di ritorno</li> <li>Numero di argomenti</li> <li>Commenti/documentazione (se presenti)\"</li> </ul>"},{"location":"dbzero/dbops/manual/vw_function_list/#colonne-e-significato","title":"\ud83d\udd0d Colonne e Significato","text":"Colonna Descrizione <code>schema</code> Schema di appartenenza della funzione <code>function_oid</code> OID univoco della funzione (utilizzato internamente da PostgreSQL) <code>function_name</code> Nome della funzione <code>arguments</code> Lista degli argomenti con tipo e nome (ad esempio: <code>arg1 integer, arg2 text</code>) <code>return_type</code> Tipo di ritorno dichiarato dalla funzione (ad esempio: <code>integer</code>, <code>SETOF record</code>) <code>num_args</code> Numero di argomenti (calcolato in base alle virgole nella lista degli argomenti) <code>comment</code> Testo del commento associato tramite <code>COMMENT ON FUNCTION</code> (se presente)"},{"location":"dbzero/dbops/manual/vw_function_list/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Elencare tutte le funzioni senza commento:</li> </ol> <pre><code>SELECT schema, function_name\n  FROM dbops.vw_function_list\n WHERE comment IS NULL;\n</code></pre> <ol> <li>Contare le funzioni per schema:</li> </ol> <pre><code>SELECT schema, COUNT(*) AS total_functions\n  FROM dbops.vw_function_list\n GROUP BY schema;\n</code></pre> <ol> <li>Trovare funzioni con pi\u00f9 di 3 parametri:</li> </ol> <pre><code>SELECT schema, function_name, num_args\n  FROM dbops.vw_function_list\n WHERE num_args &gt; 3;\n</code></pre> <ol> <li>Ricerca per nome e visualizzazione firma completa:</li> </ol> <pre><code>SELECT function_name, arguments, return_type\n  FROM dbops.vw_function_list\n WHERE function_name ILIKE '%iva%';\n</code></pre>"},{"location":"dbzero/dbops/manual/vw_function_list/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Manutenzione semplificata: individua rapidamente funzioni non documentate.</li> <li>Analisi delle API interne: mappa le signature disponibili per integrazioni o refactoring.</li> <li>Supporto al refactoring: OID e overload chiaramente identificati consentono modifiche mirate.</li> </ul> <p>\ud83e\udde0 \u201cUna panoramica centralizzata delle funzioni del database accelera il lavoro di sviluppo, auditing e documentazione del codice SQL.\u201d</p>"},{"location":"dbzero/dbops/manual/vw_trigger_functions/","title":"Vw trigger functions","text":""},{"location":"dbzero/dbops/manual/vw_trigger_functions/#documentazione-concettuale-view-dbopsvw_trigger_functions","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_trigger_functions</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <ul> <li>Catalogo trigger PostgreSQL (<code>pg_trigger</code>, <code>pg_class</code>, <code>pg_proc</code>, <code>pg_namespace</code>) Altre view di catalogazione:  </li> <li>dbops.vw_catalogo_oggetti </li> <li>dbops.vw_function_list </li> </ul> <p>La view <code>dbops.vw_trigger_functions</code> elenca tutti i trigger definiti negli schemi del database, indicando la tabella di appartenenza, il nome del trigger, la funzione associata e la definizione completa della funzione. Filtra i trigger interni di sistema lasciando solo quelli utente.</p>"},{"location":"dbzero/dbops/manual/vw_trigger_functions/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Fornire una panoramica centralizzata dei trigger utente presenti in ogni tabella del database.</li> <li> <p>Rendere immediatamente accessibili:</p> </li> <li> <p>Schema e tabella di appartenenza</p> </li> <li>Nome del trigger</li> <li>Funzione richiamata dal trigger</li> <li>Testo completo della definizione della funzione trigger (utile per review e debugging)</li> </ul>"},{"location":"dbzero/dbops/manual/vw_trigger_functions/#definizione-ddl","title":"\ud83d\udd0d Definizione (DDL)","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_trigger_functions AS\nSELECT\n  n.nspname                     AS schema,\n  cls.relname                   AS tabella,\n  trg.tgname                    AS nome_trigger,\n  p.proname                     AS nome_funzione,\n  pg_get_functiondef(p.oid)     AS definizione_funzione\nFROM pg_trigger trg\nJOIN pg_class cls ON trg.tgrelid = cls.oid\nJOIN pg_proc p   ON trg.tgfoid = p.oid\nJOIN pg_namespace n ON n.oid = cls.relnamespace\nWHERE NOT trg.tgisinternal\nORDER BY n.nspname, cls.relname, trg.tgname;\n</code></pre> <p>Owner: <code>postgres</code></p> <p>Commento: Vista dei trigger utente con dettagli sulla funzione invocata e definizione del codice della funzione.</p>"},{"location":"dbzero/dbops/manual/vw_trigger_functions/#colonne-e-significato","title":"\ud83d\udd0d Colonne e Significato","text":"Colonna Descrizione <code>schema</code> Schema in cui risiede la tabella (owner del trigger) <code>tabella</code> Nome della tabella associata al trigger <code>nome_trigger</code> Nome del trigger cos\u00ec come definito nel catalogo <code>nome_funzione</code> Nome della funzione eseguita dal trigger <code>definizione_funzione</code> Testo completo della definizione PL/pgSQL della funzione (inclusi header e corpo)"},{"location":"dbzero/dbops/manual/vw_trigger_functions/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Elencare tutti i trigger di una specifica tabella:</li> </ol> <pre><code>SELECT nome_trigger, nome_funzione\n  FROM dbops.vw_trigger_functions\n WHERE tabella = 'config.iva';\n</code></pre> <ol> <li>Visualizzare la definizione di un trigger particolare:</li> </ol> <pre><code>SELECT definizione_funzione\n  FROM dbops.vw_trigger_functions\n WHERE nome_trigger = 'trg_upd_iva_audit_data_user';\n</code></pre> <ol> <li>Contare i trigger per schema:</li> </ol> <pre><code>SELECT schema, COUNT(*) AS tot_trigger\n  FROM dbops.vw_trigger_functions\n GROUP BY schema;\n</code></pre>"},{"location":"dbzero/dbops/manual/vw_trigger_functions/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Code review: facilita l\u2019ispezione del codice PL/pgSQL associato ai trigger.</li> <li>Manutenzione: consente di individuare rapidamente trigger obsoleti o duplicati.</li> <li>Documentazione: serve come riferimento unico per tutti i trigger definiti nel database.</li> </ul> <p>\ud83e\udde0 \u201cUna view centralizzata dei trigger migliora la governabilit\u00e0 e semplifica il controllo della logica di business implementata a livello di database.\u201d</p>"},{"location":"dbzero/dbops/tabelle/audit_log/","title":"Audit log","text":""},{"location":"dbzero/dbops/tabelle/audit_log/#documentazione-concettuale-tabella-dbopsaudit_log","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>dbops.audit_log</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - dbops.error_log </p> <p>Approfondimento funzioni:   - dbops.trgfn_tx_id_managed </p> <p>La tabella <code>dbops.audit_log</code> registra le esecuzioni di processi, funzioni e job, consentendo di tracciare chi ha eseguito cosa, quando e con quali parametri, nonch\u00e9 l\u2019esito e la durata. Il campo <code>tx_id</code> non possiede pi\u00f9 un valore di default: viene assegnato automaticamente dal trigger <code>trg_assign_tx_id_audit_log</code> utilizzando la trigger function <code>dbops.trgfn_tx_id_managed()</code>, garantendo coerenza con il modello di <code>error_log</code>.</p>"},{"location":"dbzero/dbops/tabelle/audit_log/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Monitorare e storicizzare ogni chiamata a funzioni, job e API interne.</li> <li>Fornire dettagli su utente, parametri e performance di esecuzione.</li> <li>Collegare gli eventi di audit agli errori e ad altri log tramite <code>tx_id</code> gestito dal trigger.</li> </ul>"},{"location":"dbzero/dbops/tabelle/audit_log/#significato-dei-campi","title":"\ud83d\udd0d Significato dei Campi","text":"Campo Tipo Descrizione <code>id</code> <code>bigint</code> Chiave primaria, sequenza automatica. <code>function_name</code> <code>text</code> Nome della funzione/method/app che \u00e8 stata eseguita. <code>executed_by</code> <code>text</code> Utente o ruolo che ha avviato l\u2019esecuzione (default <code>CURRENT_USER</code>). <code>executed_at</code> <code>timestamp with tz</code> Timestamp di inizio esecuzione (default <code>now()</code>). <code>params</code> <code>jsonb</code> Parametri in ingresso o contesto di esecuzione (JSONB). <code>status</code> <code>text</code> Esito dell\u2019esecuzione (<code>SUCCESS</code>, <code>FAILED</code>, <code>WARNING</code>). <code>message</code> <code>text</code> Messaggio descrittivo dell\u2019esito. <code>duration_ms</code> <code>integer</code> Durata dell\u2019esecuzione in millisecondi. <code>tx_id</code> <code>uuid</code> Identificativo di transazione: valorizzato dal trigger <code>trg_assign_tx_id_audit_log</code> con <code>trgfn_tx_id_managed()</code>."},{"location":"dbzero/dbops/tabelle/audit_log/#vincoli-e-comportamenti-di-default","title":"\ud83d\udd12 Vincoli e Comportamenti di Default","text":"<ul> <li>PK: <code>pk_audit_log</code> su <code>id</code>.</li> <li> <p>Default (solo se non assegnati da applicazione o trigger):</p> </li> <li> <p><code>executed_by</code> \u2192 <code>CURRENT_USER</code></p> </li> <li><code>executed_at</code> \u2192 <code>now()</code></li> <li><code>tx_id</code> non ha default DDL: il valore \u00e8 sempre gestito dal trigger <code>trg_assign_tx_id_audit_log</code>.</li> </ul>"},{"location":"dbzero/dbops/tabelle/audit_log/#trigger","title":"\ud83d\udea8 Trigger","text":"<ul> <li> <p><code>trg_assign_tx_id_audit_log</code> (BEFORE INSERT OR UPDATE):</p> </li> <li> <p>Esegue: <code>dbops.trgfn_tx_id_managed()</code></p> </li> <li>Scopo: genera o recupera il corretto <code>tx_id</code> (sessione o nuovo) secondo la logica centralizzata.</li> </ul>"},{"location":"dbzero/dbops/tabelle/audit_log/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Inserimento manuale (il trigger assegna <code>tx_id</code>):</li> </ol> <pre><code>INSERT INTO dbops.audit_log(\n  function_name, params, status, duration_ms\n) VALUES (\n  'process_invoices', '{\"count\":200}'::jsonb, 'SUCCESS', 1200\n);\n</code></pre> <ol> <li>Recuperare audit di una transazione:</li> </ol> <pre><code>SELECT *\n  FROM dbops.audit_log\n WHERE tx_id = '123e4567-e89b-12d3-a456-426614174000';\n</code></pre> <ol> <li>Performance media per funzione:</li> </ol> <pre><code>SELECT function_name,\n       AVG(duration_ms) AS avg_ms,\n       COUNT(*)       AS executions\n  FROM dbops.audit_log\n WHERE executed_at &gt;= now() - INTERVAL '7 days'\n GROUP BY function_name\n ORDER BY avg_ms DESC;\n</code></pre>"},{"location":"dbzero/dbops/tabelle/audit_log/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Coerenza transazionale: <code>tx_id</code> \u00e8 sempre allineato al registro centrale e a <code>error_log</code>.</li> <li>Centralizzazione: nessuna logica di generazione/assegnazione duplicata in tabelle diverse.</li> <li>Tracciabilit\u00e0 integrata: un unico flusso di audit ed errori tramite <code>tx_id</code>.</li> <li>Analisi semplificata: i campi <code>params</code> e <code>duration_ms</code> permettono metriche e dashboard di performance.</li> </ul> <p>\ud83e\udde0 \u201cCon il trigger <code>trg_assign_tx_id_audit_log</code>, ogni record di audit \u00e8 automaticamente correlato al contesto transazionale, semplificando debug, monitoraggio e analisi dei processi.\u201d</p>"},{"location":"dbzero/dbops/tabelle/audit_log/#tabella-audit_log","title":"\ud83d\udcda Tabella <code>audit_log</code>","text":""},{"location":"dbzero/dbops/tabelle/audit_log/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id bigint NO nextval('dbops.audit_log_id_seq'::regclass) function_name text NO executed_by text NO CURRENT_USER executed_at timestamp with time zone NO now() params jsonb YES status text NO message text YES duration_ms integer YES tx_id uuid NO"},{"location":"dbzero/dbops/tabelle/audit_log/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_audit_log id"},{"location":"dbzero/dbops/tabelle/audit_log/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_audit_log <code>CREATE UNIQUE INDEX pk_audit_log ON dbops.audit_log USING btree (id)</code>"},{"location":"dbzero/dbops/tabelle/audit_log/#trigger_1","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_assign_tx_id_audit_log BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_assign_tx_id_audit_log BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/tabelle/error_log/","title":"Error log","text":""},{"location":"dbzero/dbops/tabelle/error_log/#documentazione-concettuale-tabella-dbopserror_log","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>dbops.error_log</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - config.messaggi_errore  - dbops.audit_log </p> <p>Approfondimento funzioni:   - dbops.trgfn_tx_id_managed  - script.trgfn_prevent_modification_generic </p> <p>La tabella <code>dbops.error_log</code> serve a centralizzare la registrazione degli errori che si verificano nelle diverse aree dell\u2019applicazione (database, backend, frontend, job, ecc.), fornendo un quadro completo del contesto, della fonte e della transazione coinvolta.</p>"},{"location":"dbzero/dbops/tabelle/error_log/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Raccogliere in un unico punto gli errori generati da funzioni, trigger o applicazioni, permettendo analisi e allineamento con il catalogo di messaggi di errore.</li> <li>Consentire il collegamento transazionale tramite <code>tx_id</code>, per ricostruire l\u2019intero flusso di operazioni (ad esempio un job batch) incrociando tabelle come <code>dbops.audit_log</code>.</li> </ul>"},{"location":"dbzero/dbops/tabelle/error_log/#significato-dei-campi-chiave","title":"\ud83d\udd0d Significato dei Campi Chiave","text":"<ul> <li><code>id</code>: identificativo univoco del record di errore.</li> <li><code>occurred_at</code>: timestamp con timezone dell\u2019evento di errore.</li> <li><code>area</code>: ambito di origine (es. <code>database</code>, <code>backend</code>, <code>frontend</code>, <code>job</code>).</li> <li><code>function_name</code>: nome della funzione o metodo che ha generato l\u2019errore (trigger, procedure, job, endpoint).</li> <li><code>messaggio_errore_id</code>: FK verso <code>config.messaggi_errore(id)</code>, collega il record al testo di errore e alle eventuali traduzioni.</li> <li><code>context</code>: campo JSONB in cui si registrano parametri di input, valori di variabili, utente esecutore o altri metadati rilevanti.</li> <li><code>tx_id</code>: UUID di transazione corrente, utile per tracciare errori in contesti transazionali e correlare con altri log.</li> </ul>"},{"location":"dbzero/dbops/tabelle/error_log/#vincoli-e-relazioni","title":"\ud83d\udd12 Vincoli e Relazioni","text":"<ul> <li>PK: vincolo <code>error_log_pkey</code> su <code>id</code>.</li> <li>FK: <code>messaggio_errore_id</code> \u2192 <code>config.messaggi_errore(id)</code> (senza azioni di update o delete).</li> <li> <p>Generazione automatica:</p> </li> <li> <p><code>occurred_at</code> default <code>now()</code></p> </li> <li><code>tx_id</code> </li> <li><code>context</code> default a JSONB vuoto <code>{}</code></li> </ul>"},{"location":"dbzero/dbops/tabelle/error_log/#trigger","title":"\ud83d\udea8 Trigger","text":"<ul> <li><code>trg_assign_tx_id_error_log</code> (BEFORE INSERT OR UPDATE): assegna automaticamente il valore di <code>tx_id</code> tramite la trigger function <code>dbops.trgfn_tx_id_managed()</code>, garantendo che ogni record di errore sia correlato all\u2019identificativo di transazione.</li> <li>Protezione modifiche: implementare, se necessario, trigger di tipo <code>script.trgfn_prevent_modification_generic()</code> per bloccare UPDATE/DELETE e preservare l\u2019integrit\u00e0 storica.</li> </ul>"},{"location":"dbzero/dbops/tabelle/error_log/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Recuperare tutti gli errori di una specifica transazione:</li> </ol> <pre><code>SELECT *\n  FROM dbops.error_log\n WHERE tx_id = '123e4567-e89b-12d3-a456-426614174000';\n</code></pre> <ol> <li>Unire gli errori con il catalogo dei messaggi:</li> </ol> <pre><code>SELECT e.id, e.occurred_at, m.codice, m.messaggio, e.context\n  FROM dbops.error_log e\n  JOIN config.messaggi_errore m ON e.messaggio_errore_id = m.id;\n</code></pre> <ol> <li>Cronologia completa di una transazione:</li> </ol> <pre><code>WITH errs AS (\n  SELECT * FROM dbops.error_log WHERE tx_id = :tx\n), audits AS (\n  SELECT * FROM dbops.audit_log WHERE tx_id = :tx\n)\nSELECT * FROM errs\nUNION ALL\nSELECT * FROM audits\nORDER BY occurred_at;\n</code></pre>"},{"location":"dbzero/dbops/tabelle/error_log/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Tracciabilit\u00e0 a 360\u00b0: unisce errori e transazioni in un unico flusso temporale.</li> <li>Analisi rapida: il campo <code>context</code> permette filtri e aggregazioni sui metadati.</li> <li>Integrit\u00e0 delle informazioni: i trigger automatici garantiscono corretto popolamento di <code>tx_id</code> e audit inalterabile.</li> <li>Coerenza semantica: l\u2019uso di FK verso <code>config.messaggi_errore</code> assicura messaggi uniformi e localizzati.</li> </ul> <p>\ud83e\udde0 \u201cUn error log strutturato con identit\u00e0 transazionale e contesto dettagliato semplifica il debug e il monitoraggio degli incidenti applicativi.\u201d</p>"},{"location":"dbzero/dbops/tabelle/error_log/#tabella-error_log","title":"\ud83d\udcda Tabella <code>error_log</code>","text":""},{"location":"dbzero/dbops/tabelle/error_log/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id bigint NO nextval('dbops.error_log_id_seq'::regclass) occurred_at timestamp with time zone NO now() area text NO function_name text NO messaggio_errore_id bigint NO context jsonb NO '{}'::jsonb tx_id uuid NO"},{"location":"dbzero/dbops/tabelle/error_log/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_error_log_messaggio_errore_id messaggio_errore_id PRIMARY KEY error_log_pkey id"},{"location":"dbzero/dbops/tabelle/error_log/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione error_log_pkey <code>CREATE UNIQUE INDEX error_log_pkey ON dbops.error_log USING btree (id)</code> ix_error_log_messaggio_errore_id <code>CREATE INDEX ix_error_log_messaggio_errore_id ON dbops.error_log USING btree (messaggio_errore_id)</code>"},{"location":"dbzero/dbops/tabelle/error_log/#trigger_1","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_assign_tx_id_error_log BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_assign_tx_id_error_log BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/tabelle/fk_index_policy/","title":"Fk index policy","text":""},{"location":"dbzero/dbops/tabelle/fk_index_policy/#documentazione-concettuale-tabella-dbopsfk_index_policy","title":"\ud83d\udcda Documentazione concettuale - Tabella <code>dbops.fk_index_policy</code>","text":""},{"location":"dbzero/dbops/tabelle/fk_index_policy/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>dbops.fk_index_policy</code> definisce una policy centralizzata per la gestione degli index sulle foreign key, consentendo di abilitare o disabilitare la creazione/uso di indici per specifici vincoli referenziali.</p>"},{"location":"dbzero/dbops/tabelle/fk_index_policy/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne Descrizione PRIMARY KEY <code>fk_index_policy_pkey</code> <code>schema_name, table_name, constraint_name</code> Chiave primaria composita per identificare univocamente la policy."},{"location":"dbzero/dbops/tabelle/fk_index_policy/#uso-e-casi-doro","title":"\ud83d\udca1 Uso e Casi d\u2019Oro","text":"<ul> <li>Controllo centralizzato: gestire in un unico punto l\u2019abilitazione o meno degli indici sui vincoli referenziali, evitando di creare indici non necessari o ridondanti.</li> <li>Ottimizzazione delle performance: disabilitare index su FK poco usati per ridurre overhead in scrittura, o forzare index su FK critici per migliorare le join.</li> <li>Audit e documentazione: con la colonna <code>dll_command</code> si tiene traccia delle motivazioni alla base delle scelte, facilitando review e manutenzione.</li> <li>Integrazione con script di DBOps: gli script di deployment possono leggere questa tabella e generare dinamicamente DDL <code>CREATE INDEX</code> o <code>DROP INDEX</code> per applicare la policy.</li> </ul>"},{"location":"dbzero/dbops/tabelle/fk_index_policy/#esempio-di-utilizzo","title":"\ud83d\udd27 Esempio di Utilizzo","text":"<ol> <li>Disabilitare index su un vincolo</li> </ol> <pre><code>INSERT INTO dbops.fk_index_policy(\n  schema_name,\n  table_name,\n  constraint_name,\n  consentito,\n  dll_command\n) VALUES (\n  'anagrafiche',\n  'soggetti_ruoli',\n  'fk_soggetti_anagrafiche',\n  false,\n  'FK su soggetti_ruoli non usata frequentemente, evita overhead in insert'\n);\n</code></pre> <ol> <li>Abilitare index su un vincolo critico</li> </ol> <pre><code>INSERT INTO dbops.fk_index_policy(\n  schema_name,\n  table_name,\n  constraint_name,\n  consentito\n) VALUES (\n  'dbops',\n  'audit_logs',\n  'fk_logs_user_id',\n  true\n);\n</code></pre> <ol> <li>Script di applicazione policy</li> </ol> <pre><code>-- Pseudocodice PL/pgSQL per applicare la policy:\nDO $$\nDECLARE\n  rec RECORD;\nBEGIN\n  FOR rec IN SELECT * FROM dbops.fk_index_policy LOOP\n    IF rec.consentito THEN\n      EXECUTE format('CREATE INDEX IF NOT EXISTS ix_%I_%I ON %I.%I USING btree ((%I))',\n        rec.table_name, rec.constraint_name, rec.schema_name, rec.table_name, rec.constraint_name);\n    ELSE\n      EXECUTE format('DROP INDEX IF EXISTS ix_%I_%I', rec.table_name, rec.constraint_name);\n    END IF;\n  END LOOP;\nEND$$;\n</code></pre> <p>\ud83e\udde0 \u201cUtilizzare <code>fk_index_policy</code> consente di adattare dinamicamente la presenza di indici su foreign key per ottimizzare scritture e letture, centralizzando le decisioni e mantenendo tracciabilit\u00e0.\u201d</p>"},{"location":"dbzero/dbops/tabelle/fk_index_policy/#tabella-fk_index_policy","title":"\ud83d\udcda Tabella <code>fk_index_policy</code>","text":""},{"location":"dbzero/dbops/tabelle/fk_index_policy/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default schema_name text NO table_name text NO constraint_name text NO consentito boolean NO true dll_command text YES generated_by_script boolean YES false user_insert character varying NO CURRENT_USER data_insert timestamp with time zone NO now() user_update character varying YES data_update timestamp with time zone YES"},{"location":"dbzero/dbops/tabelle/fk_index_policy/#vincoli_1","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY fk_index_policy_pkey schema_name, table_name, constraint_name"},{"location":"dbzero/dbops/tabelle/fk_index_policy/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione fk_index_policy_pkey <code>CREATE UNIQUE INDEX fk_index_policy_pkey ON dbops.fk_index_policy USING btree (schema_name, table_name, constraint_name)</code>"},{"location":"dbzero/dbops/tabelle/fk_index_policy/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_audit_fk_index_policy BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/tabelle/transaction_ids/","title":"Transaction ids","text":""},{"location":"dbzero/dbops/tabelle/transaction_ids/#documentazione-concettuale-tabella-dbopstransaction_ids","title":"\ud83d\udcda Documentazione Concettuale \u2013 Tabella <code>dbops.transaction_ids</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - config.parameter_overrides </p> <p>Approfondimento funzioni :   - script.fn_get_parameter_full  - script.trgfn_prevent_modification_generic </p>"},{"location":"dbzero/dbops/tabelle/transaction_ids/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>La tabella <code>dbops.transaction_ids</code> funge da registro centrale di tutti gli identificativi di transazione (UUID) utilizzati in Zero ERP: ogni volta che viene avviata un\u2019operazione di modifica dati (inserimento, aggiornamento o cancellazione) che coinvolge pi\u00f9 tabelle, si genera un nuovo <code>tx_id</code> in questa tabella e lo si propaga a tutte le righe interessate, garantendo la tracciabilit\u00e0 e il raggruppamento coerente delle modifiche.</p>"},{"location":"dbzero/dbops/tabelle/transaction_ids/#vincoli","title":"\ud83d\udd12 Vincoli","text":"<ul> <li>PRIMARY KEY: <code>transaction_ids_pkey</code> sulla colonna <code>id</code> (UUID).</li> </ul>"},{"location":"dbzero/dbops/tabelle/transaction_ids/#protezione-dati-di-audit","title":"\ud83d\udea8 Protezione Dati di Audit","text":"<ul> <li>Trigger: <code>trg_prevent_mod_parameters_audit</code> (BEFORE UPDATE OR DELETE) su <code>config.parameters_audit</code>.   Esegue la funzione <code>script.trgfn_prevent_modification_generic()</code>, che impedisce qualsiasi modifica o cancellazione dei record di audit, assicurando l\u2019inalterabilit\u00e0 della cronologia.</li> </ul>"},{"location":"dbzero/dbops/tabelle/transaction_ids/#meccanismo-di-utilizzo","title":"\u2699\ufe0f Meccanismo di Utilizzo","text":"<ol> <li>Generazione del <code>tx_id</code></li> </ol> <p><pre><code>INSERT INTO dbops.transaction_ids DEFAULT VALUES\nRETURNING id;\n</code></pre> 2. Propagazione    Il valore restituito (<code>tx_id</code>) viene passato alle colonne omonime (<code>tx_id</code>) nelle altre tabelle coinvolte, assicurando che tutte le operazioni riferiscano la stessa transazione. 3. Auditing</p> <ul> <li><code>user_insert</code> e <code>data_insert</code> registrano chi e quando ha creato il <code>tx_id</code>.</li> <li><code>user_update</code> e <code>data_update</code> vengono aggiornati ad ogni modifica grazie al trigger di audit.</li> <li><code>generating_function</code> pu\u00f2 contenere il nome della funzione o procedura DB che ha generato il <code>tx_id</code>.</li> <li><code>session_info</code> pu\u00f2 immagazzinare JSONB con ulteriori informazioni di contesto (es. utente applicativo, IP, dettagli di sessione).</li> </ul>"},{"location":"dbzero/dbops/tabelle/transaction_ids/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Coerenza transazionale: un singolo <code>tx_id</code> per raggruppare operazioni correlate su pi\u00f9 tabelle.</li> <li>Inalterabilit\u00e0: la cronologia rimane immutata grazie al trigger di prevenzione.</li> <li>Tracciabilit\u00e0: facilit\u00e0 di debug e audit, risalendo a tutte le modifiche di una stessa transazione.</li> <li>Flessibilit\u00e0: il campo <code>session_info</code> consente di allegare dati custom alla transazione.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare gli UUID di transazione in <code>dbops.transaction_ids</code> semplifica la gestione e l\u2019analisi delle operazioni distribuite, garantendo un\u2019unica chiave di correlazione per l\u2019intera applicazione.\u201d</p>"},{"location":"dbzero/dbops/tabelle/transaction_ids/#tabella-transaction_ids","title":"\ud83d\udcda Tabella <code>transaction_ids</code>","text":""},{"location":"dbzero/dbops/tabelle/transaction_ids/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id uuid NO gen_random_uuid() user_insert text NO CURRENT_USER data_insert timestamp with time zone NO now() user_update text YES data_update timestamp with time zone YES generating_function text YES session_info jsonb NO '{}'::jsonb"},{"location":"dbzero/dbops/tabelle/transaction_ids/#vincoli_1","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY transaction_ids_pkey id"},{"location":"dbzero/dbops/tabelle/transaction_ids/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione transaction_ids_pkey <code>CREATE UNIQUE INDEX transaction_ids_pkey ON dbops.transaction_ids USING btree (id)</code>"},{"location":"dbzero/dbops/tabelle/transaction_ids/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_prevent_mod_transaction_ids BEFORE DELETE <code>EXECUTE FUNCTION script.trgfn_prevent_modification_generic()</code> trg_prevent_mod_transaction_ids BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_prevent_modification_generic()</code> trg_upd_overrides_audit_data_user BEFORE UPDATE <code>EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/views/vw_catalogo_oggetti/","title":"Vw catalogo oggetti","text":""},{"location":"dbzero/dbops/views/vw_catalogo_oggetti/#documentazione-concettuale-view-dbopsvw_catalogo_oggetti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_catalogo_oggetti</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <ul> <li>Sistema di catalogazione cataloghi di sistema (<code>pg_class</code>, <code>pg_namespace</code>)</li> <li>Schema <code>dbops</code> e schema <code>script</code></li> </ul> <p>La view <code>dbops.vw_catalogo_oggetti</code> fornisce un elenco centralizzato degli oggetti presenti negli schemi <code>dbops</code> e <code>script</code>, includendo tabelle, viste, indici, sequenze, materialized views e funzioni, con informazioni sul tipo, sul proprietario e sulla descrizione.</p>"},{"location":"dbzero/dbops/views/vw_catalogo_oggetti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Offrire una vista unificata degli oggetti PostgreSQL definiti nei due schemi principali di amministrazione.</li> <li>Agevolare operazioni di discovery e auditing, bypassando query dirette sulle catalog tables.</li> </ul>"},{"location":"dbzero/dbops/views/vw_catalogo_oggetti/#definizione-ddl","title":"\ud83d\udd0d Definizione (DDL)","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_catalogo_oggetti AS\nSELECT\n  n.nspname            AS schema,\n  c.relkind            AS tipo_oggetto,\n  c.relname            AS nome_oggetto,\n  CASE c.relkind\n    WHEN 'r' THEN 't'  -- table\n    WHEN 'v' THEN 'v'  -- view\n    WHEN 'm' THEN 'm'  -- materialized view\n    WHEN 'i' THEN 'i'  -- index\n    WHEN 'S' THEN 's'  -- sequence\n    WHEN 'f' THEN 'f'  -- function\n    ELSE c.relkind\n  END                   AS tipo_descrizione,\n  pg_roles.rolname      AS proprietario,\n  obj_description(c.oid, 'pg_class') AS descrizione\nFROM pg_class c\nJOIN pg_namespace n ON n.oid = c.relnamespace\nLEFT JOIN pg_roles ON pg_roles.oid = c.relowner\nWHERE n.nspname = ANY (ARRAY['dbops', 'script']);\n</code></pre> <p>Owner: <code>postgres</code></p> <p>Commento: \"Vista degli oggetti presenti negli schemi dbops,script (tabelle, viste, sequenze, indici ecc.)\"</p>"},{"location":"dbzero/dbops/views/vw_catalogo_oggetti/#colonne-e-significato","title":"\ud83d\udd0d Colonne e Significato","text":"Colonna Descrizione <code>schema</code> Nome dello schema in cui risiede l\u2019oggetto (<code>dbops</code> o <code>script</code>). <code>tipo_oggetto</code> Codice interno (<code>relkind</code>) che indica il tipo: <code>r</code>, <code>v</code>, <code>m</code>, <code>i</code>, <code>S</code>, <code>f</code>. <code>nome_oggetto</code> Nome dell\u2019oggetto nel catalogo (<code>relname</code>). <code>tipo_descrizione</code> Versione sintetica del tipo (stessa lettera) per filtro pi\u00f9 leggibile. <code>proprietario</code> Utente/role che possiede l\u2019oggetto (<code>rolname</code>). <code>descrizione</code> Commento associato all\u2019oggetto, se presente (da <code>obj_description</code>)."},{"location":"dbzero/dbops/views/vw_catalogo_oggetti/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Elencare tutte le tabelle dei due schemi:</li> </ol> <pre><code>SELECT nome_oggetto, descrizione\n  FROM dbops.vw_catalogo_oggetti\n WHERE tipo_oggetto = 'r';\n</code></pre> <ol> <li>Filtrare le view (oggetti di tipo <code>v</code>) e mostrarne il proprietario:</li> </ol> <pre><code>SELECT schema, nome_oggetto, proprietario\n  FROM dbops.vw_catalogo_oggetti\n WHERE tipo_oggetto = 'v'\n   AND schema = 'dbops';\n</code></pre> <ol> <li>Trovare oggetti senza descrizione (per manutenzione commenti):</li> </ol> <pre><code>SELECT schema, nome_oggetto\n  FROM dbops.vw_catalogo_oggetti\n WHERE descrizione IS NULL;\n</code></pre>"},{"location":"dbzero/dbops/views/vw_catalogo_oggetti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Rapidit\u00e0 di analisi: evita join manuali su <code>pg_class</code>, <code>pg_namespace</code> e <code>pg_roles</code>.</li> <li>Auditing e documentazione: consente di scoprire oggetti orfani o privi di commento.</li> <li>Scripting: facilita la generazione di report ad-hoc sul catalogo di sistema.</li> </ul> <p>\ud83e\udde0 \u201cUna view di catalogo centralizzato semplifica il discovery e il governo degli oggetti di database, favorendo manutenzione e compliance.\u201d</p>"},{"location":"dbzero/dbops/views/vw_catalogo_oggetti/#view-vw_catalogo_oggetti","title":"\ud83d\udd0d View <code>vw_catalogo_oggetti</code>","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_catalogo_oggetti AS\nSELECT n.nspname AS schema,\n    c.relkind AS tipo_oggetto,\n    c.relname AS nome_oggetto,\n        CASE c.relkind\n            WHEN 'r'::\"char\" THEN 't'::\"char\"\n            WHEN 'v'::\"char\" THEN 'v'::\"char\"\n            WHEN 'm'::\"char\" THEN 'm'::\"char\"\n            WHEN 'i'::\"char\" THEN 'i'::\"char\"\n            WHEN 'S'::\"char\" THEN 's'::\"char\"\n            WHEN 'f'::\"char\" THEN 'f'::\"char\"\n            ELSE c.relkind\n        END AS tipo_descrizione,\n    pg_roles.rolname AS proprietario,\n    obj_description(c.oid, 'pg_class'::name) AS descrizione\n   FROM ((pg_class c\n     JOIN pg_namespace n ON ((n.oid = c.relnamespace)))\n     LEFT JOIN pg_roles ON ((pg_roles.oid = c.relowner)))\n  WHERE (n.nspname = ANY (ARRAY['dbops'::name, 'script'::name]));\n</code></pre> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/views/vw_duplicate_indexes/","title":"Vw duplicate indexes","text":""},{"location":"dbzero/dbops/views/vw_duplicate_indexes/#documentazione-concettuale-view-dbopsvw_duplicate_indexes","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_duplicate_indexes</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento funzioni:  - dbops.vw_fk_senza_indice  - dbops.vw_fk_con_indice_missing_policy </p> <p>La view <code>dbops.vw_duplicate_indexes</code> identifica gli indici duplicati all\u2019interno dello stesso schema e tabella, cio\u00e8 quegli indici che coprono esattamente lo stesso insieme di colonne (<code>cols</code>). Per ciascun gruppo di colonne con pi\u00f9 indici, la view restituisce i nomi degli indici coinvolti e il numero totale di occorrenze.</p>"},{"location":"dbzero/dbops/views/vw_duplicate_indexes/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Individuare indici ridondanti   Scoprire indici che hanno lo stesso set di colonne e possono quindi essere unificati o rimossi.</li> <li>Ottimizzazione dello storage e delle performance   Ridurre overhead di manutenzione e migliorare le prestazioni di scrittura eliminando duplicazioni.</li> <li>Governance della struttura   Supportare analisi periodiche per mantenere lo schema pulito e coerente.</li> </ul>"},{"location":"dbzero/dbops/views/vw_duplicate_indexes/#flusso-di-costruzione","title":"\u2699\ufe0f Flusso di Costruzione","text":"<ol> <li> <p>CTE <code>index_cols</code></p> </li> <li> <p>Estrae da <code>pg_index</code> le informazioni sugli indici:</p> <ul> <li><code>index_oid</code>, <code>schema_name</code>, <code>table_name</code>, <code>index_name</code></li> <li>Flag <code>is_unique</code>, <code>is_primary</code></li> <li>Array <code>cols</code> con i nomi delle colonne indicizzate (ordinati).</li> <li>Filtra fuori gli indici primari (<code>indisprimary</code>) e considera solo gli indici di tipo <code>i</code>.</li> <li>Aggregazione e raggruppamento</li> </ul> </li> <li> <p>Raggruppa per <code>schema_name</code>, <code>table_name</code> e <code>cols</code>.</p> </li> <li> <p>Calcola:</p> <ul> <li><code>duplicate_index_names</code>: array dei nomi degli indici che condividono le colonne.</li> <li><code>count_of_indexes</code>: conteggio degli indici nel gruppo.</li> <li>Applica <code>HAVING count(*) &gt; 1</code> per ottenere solo i gruppi con pi\u00f9 di un indice.</li> </ul> </li> </ol>"},{"location":"dbzero/dbops/views/vw_duplicate_indexes/#ddl-della-view","title":"\ud83d\udd16 DDL della View","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_duplicate_indexes AS\nWITH index_cols AS (\n  SELECT\n    i.oid                    AS index_oid,\n    n.nspname                AS schema_name,\n    t.relname                AS table_name,\n    i.relname                AS index_name,\n    ix.indisunique           AS is_unique,\n    ix.indisprimary          AS is_primary,\n    array_agg(a.attname ORDER BY x.ordinality) AS cols\n  FROM pg_index ix\n  JOIN pg_class i    ON i.oid = ix.indexrelid\n  JOIN pg_class t    ON t.oid = ix.indrelid\n  JOIN pg_namespace n ON n.oid = t.relnamespace\n  JOIN LATERAL unnest(ix.indkey) WITH ORDINALITY x(attnum, ordinality) ON true\n  JOIN pg_attribute a ON a.attrelid = t.oid AND a.attnum = x.attnum\n  WHERE NOT ix.indisprimary    -- escludi indici PK\n    AND i.relkind = 'i'         -- solo indici\n  GROUP BY i.oid, n.nspname, t.relname, i.relname, ix.indisunique, ix.indisprimary\n)\nSELECT\n  schema_name,\n  table_name,\n  cols                 AS index_columns,\n  array_agg(index_name) AS duplicate_index_names,\n  count(*)             AS count_of_indexes\nFROM index_cols\nGROUP BY schema_name, table_name, cols\nHAVING count(*) &gt; 1\nORDER BY schema_name, table_name, count_of_indexes DESC;\n\nCOMMENT ON VIEW dbops.vw_duplicate_indexes IS\n  'Elenca gli indici duplicati (stesso insieme di colonne) per schema e tabella, mostrando i nomi degli indici e il conteggio.';\n</code></pre>"},{"location":"dbzero/dbops/views/vw_duplicate_indexes/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Riduzione di ridondanze: facilita la rimozione di indici duplicati per liberare spazio e ridurre costi di manutenzione.</li> <li>Chiarezza: fornisce un elenco immediato dei gruppi di indici da esaminare.</li> <li>Automazione: utile in script di auditing o pulizia periodica.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>vw_duplicate_indexes</code>, tenere sotto controllo gli indici duplicati diventa semplice, supportando azioni di consolidamento per ottimizzare il database.\u201d</p>"},{"location":"dbzero/dbops/views/vw_duplicate_indexes/#view-vw_duplicate_indexes","title":"\ud83d\udd0d View <code>vw_duplicate_indexes</code>","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_duplicate_indexes AS\nWITH index_cols AS (\n         SELECT i.oid AS index_oid,\n            n.nspname AS schema_name,\n            t.relname AS table_name,\n            i.relname AS index_name,\n            ix.indisunique AS is_unique,\n            ix.indisprimary AS is_primary,\n            array_agg(a.attname ORDER BY x.ordinality) AS cols\n           FROM (((((pg_index ix\n             JOIN pg_class i ON ((i.oid = ix.indexrelid)))\n             JOIN pg_class t ON ((t.oid = ix.indrelid)))\n             JOIN pg_namespace n ON ((n.oid = t.relnamespace)))\n             JOIN LATERAL unnest(ix.indkey) WITH ORDINALITY x(attnum, ordinality) ON (true))\n             JOIN pg_attribute a ON (((a.attrelid = t.oid) AND (a.attnum = x.attnum))))\n          WHERE ((NOT ix.indisprimary) AND (i.relkind = 'i'::\"char\"))\n          GROUP BY i.oid, n.nspname, t.relname, i.relname, ix.indisunique, ix.indisprimary\n        )\n SELECT schema_name,\n    table_name,\n    cols AS index_columns,\n    array_agg(index_name) AS duplicate_index_names,\n    count(*) AS count_of_indexes\n   FROM index_cols\n  GROUP BY schema_name, table_name, cols\n HAVING (count(*) &gt; 1)\n  ORDER BY schema_name, table_name, (count(*)) DESC;\n</code></pre> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/views/vw_fk_con_indice_missing_policy/","title":"Vw fk con indice missing policy","text":""},{"location":"dbzero/dbops/views/vw_fk_con_indice_missing_policy/#documentazione-concettuale-view-dbopsvw_fk_con_indice_missing_policy","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_fk_con_indice_missing_policy</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.fk_index_policy </p> <p>Approfondimento funzioni:  - dbops.vw_fk_senza_indice  - dbops.vw_duplicate_indexes </p> <p>La view <code>dbops.vw_fk_con_indice_missing_policy</code> elenca tutte le foreign key che hanno un indice (prefisso <code>ix_</code>) ma non sono ancora gestite dalla tabella di policy <code>dbops.fk_index_policy</code>. Per ciascuna FK, viene suggerito il comando SQL di creazione dell\u2019indice.</p>"},{"location":"dbzero/dbops/views/vw_fk_con_indice_missing_policy/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Identificare gli indici esistenti   Trova le FK gi\u00e0 indicizzate che non dispongono di una policy dedicata.</li> <li>Suggerimento DDL   Genera automaticamente la stringa <code>CREATE INDEX ...</code> per uniformare naming e struttura.</li> <li>Supporto auditing e governance   Permette di scoprire eventuali indici non tracciati, inserendoli poi in <code>fk_index_policy</code>.</li> </ul>"},{"location":"dbzero/dbops/views/vw_fk_con_indice_missing_policy/#flusso-di-costruzione","title":"\u2699\ufe0f Flusso di Costruzione","text":"<ol> <li>CTE <code>fk_columns</code> e <code>fk_fields</code>    Estrae schema, tabella, nome del vincolo FK e lista delle colonne coinvolte.</li> <li>CTE <code>indexed_columns</code>    Elenca gli indici esistenti sulle tabelle, raggruppando le colonne per ciascun indice.</li> <li>CTE <code>fk_grouped</code>    Raggruppa le colonne di ogni FK in array ordinate.</li> <li>Join tra FK e indici    Seleziona le FK le cui colonne coincidono con un indice (array di colonne uguali).</li> <li>Left join su <code>fk_index_policy</code>    Filtra solo quelle FK senza entry in policy (<code>pol.constraint_name IS NULL</code>).</li> <li> <p>Output    Restituisce:</p> </li> <li> <p><code>schema_name</code>, <code>table_name</code>, <code>constraint_name</code></p> </li> <li><code>fk_cols</code> (array delle colonne FK)</li> <li><code>index_name</code> (nome indice esistente)</li> <li> <p><code>create_index_suggestion</code> con formato:</p> <pre><code>CREATE INDEX ix_&lt;schema&gt;_&lt;table&gt;_&lt;columns&gt; ON &lt;schema&gt;.&lt;table&gt;(&lt;columns&gt;);\n</code></pre> </li> </ol>"},{"location":"dbzero/dbops/views/vw_fk_con_indice_missing_policy/#ddl-della-view","title":"\ud83d\udd16 DDL della View","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_fk_con_indice_missing_policy AS\nWITH\n  fk_columns AS (...),\n  fk_fields  AS (...),\n  indexed_columns AS (...),\n  fk_grouped AS (...)\nSELECT\n  fk.schema_name,\n  fk.table_name,\n  fk.constraint_name,\n  fk.fk_cols,\n  idx.index_name,\n  format(\n    'CREATE INDEX ix_%I_%I_%s ON %I.%I(%s);',\n    fk.schema_name,\n    fk.table_name,\n    array_to_string(fk.fk_cols, '_'),\n    fk.schema_name,\n    fk.table_name,\n    array_to_string(fk.fk_cols, ', ')\n  ) AS create_index_suggestion\nFROM fk_grouped fk\n  JOIN indexed_columns idx\n    ON fk.schema_name = idx.schema_name\n   AND fk.table_name  = idx.table_name\n   AND fk.fk_cols     = idx.indexed_cols\n  LEFT JOIN dbops.fk_index_policy pol\n    ON fk.schema_name     = pol.schema_name\n   AND fk.table_name      = pol.table_name\n   AND fk.constraint_name = pol.constraint_name\nWHERE pol.constraint_name IS NULL\nORDER BY fk.schema_name, fk.table_name;\n\nCOMMENT ON VIEW dbops.vw_fk_con_indice_missing_policy IS\n  'Elenco dei vincoli foreign key gi\u00e0 indicizzati (prefisso ix_) che non sono ancora definiti in fk_index_policy';\n</code></pre>"},{"location":"dbzero/dbops/views/vw_fk_con_indice_missing_policy/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Individuazione rapida: mostra subito le FK con indice esistente ma senza policy.</li> <li>Governance: aiuta a mantenere <code>fk_index_policy</code> completa e aggiornata.</li> <li>Coerenza naming: suggerimento DDL uniforme con prefisso <code>ix_</code>.</li> <li>Automazione: integrabile in processi CI/CD o script di auditing.</li> </ul> <p>\ud83e\udde0 \u201cQuesta view facilita la scoperta di indici FK non ancora tracciati, supportando una gestione centralizzata e coerente delle policy di indicizzazione.\u201d</p>"},{"location":"dbzero/dbops/views/vw_fk_con_indice_missing_policy/#view-vw_fk_con_indice_missing_policy","title":"\ud83d\udd0d View <code>vw_fk_con_indice_missing_policy</code>","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_fk_con_indice_missing_policy AS\nWITH fk_columns AS (\n         SELECT con.oid AS constraint_oid,\n            con.conname AS constraint_name,\n            nsp.nspname AS schema_name,\n            rel.relname AS table_name,\n            unnest(con.conkey) AS attnum,\n            con.conrelid\n           FROM ((pg_constraint con\n             JOIN pg_class rel ON ((rel.oid = con.conrelid)))\n             JOIN pg_namespace nsp ON ((nsp.oid = rel.relnamespace)))\n          WHERE (con.contype = 'f'::\"char\")\n        ), fk_fields AS (\n         SELECT fk_1.constraint_name,\n            fk_1.schema_name,\n            fk_1.table_name,\n            a.attname AS column_name,\n            fk_1.conrelid,\n            fk_1.constraint_oid\n           FROM (fk_columns fk_1\n             JOIN pg_attribute a ON (((a.attrelid = fk_1.conrelid) AND (a.attnum = fk_1.attnum))))\n        ), indexed_columns AS (\n         SELECT i.relname AS index_name,\n            n.nspname AS schema_name,\n            t.relname AS table_name,\n            array_agg(a.attname ORDER BY x.ordinality) AS indexed_cols\n           FROM (((((pg_index ix\n             JOIN pg_class i ON ((i.oid = ix.indexrelid)))\n             JOIN pg_class t ON ((t.oid = ix.indrelid)))\n             JOIN pg_namespace n ON ((n.oid = t.relnamespace)))\n             JOIN LATERAL unnest(ix.indkey) WITH ORDINALITY x(attnum, ordinality) ON (true))\n             JOIN pg_attribute a ON (((a.attrelid = t.oid) AND (a.attnum = x.attnum))))\n          GROUP BY i.relname, n.nspname, t.relname\n        ), fk_grouped AS (\n         SELECT fk_1.constraint_name,\n            fk_1.schema_name,\n            fk_1.table_name,\n            array_agg(fk_1.column_name ORDER BY fk_1.column_name) AS fk_cols\n           FROM fk_fields fk_1\n          GROUP BY fk_1.constraint_name, fk_1.schema_name, fk_1.table_name\n        )\n SELECT fk.schema_name,\n    fk.table_name,\n    fk.constraint_name,\n    fk.fk_cols,\n    idx.index_name,\n    format('CREATE INDEX IF NOT EXISTS ix_%I_%I_%s ON %I.%I(%s);'::text, fk.schema_name, fk.table_name, array_to_string(fk.fk_cols, '_'::text), fk.schema_name, fk.table_name, array_to_string(fk.fk_cols, ', '::text)) AS create_index_suggestion\n   FROM ((fk_grouped fk\n     JOIN indexed_columns idx ON (((fk.schema_name = idx.schema_name) AND (fk.table_name = idx.table_name) AND (fk.fk_cols = idx.indexed_cols))))\n     LEFT JOIN dbops.fk_index_policy pol ON (((fk.schema_name = pol.schema_name) AND (fk.table_name = pol.table_name) AND (fk.constraint_name = pol.constraint_name))))\n  WHERE ((pol.constraint_name IS NULL) AND (COALESCE(pol.consentito, true) = true))\n  ORDER BY fk.schema_name, fk.table_name;\n</code></pre> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/views/vw_fk_senza_indice/","title":"Vw fk senza indice","text":""},{"location":"dbzero/dbops/views/vw_fk_senza_indice/#documentazione-concettuale-view-dbopsvw_fk_senza_indice","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_fk_senza_indice</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.fk_index_policy </p> <p>Approfondimento funzioni:  - dbops.fn_populate_fk_index_policy  - dbops.vw_fk_senza_indice  - dbops.vw_duplicate_indexes </p> <ul> <li>Catalogo dei vincoli FK in PostgreSQL (<code>pg_constraint</code>, <code>pg_class</code>, <code>pg_namespace</code>)</li> </ul> <p>La view <code>dbops.vw_fk_senza_indice</code> elenca tutte le foreign key definite negli schemi monitorati che non hanno un indice associato sulle colonne di riferimento, suggerendo lo statement <code>CREATE INDEX</code> corrispondente e rispettando eventuali eccezioni definite in <code>dbops.fk_index_policy</code>.</p>"},{"location":"dbzero/dbops/views/vw_fk_senza_indice/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Individuare automaticamente vincoli di integrit\u00e0 referenziale (FK) privi di indice, potenziali colli di bottiglia nelle operazioni di JOIN e DELETE.</li> <li>Fornire suggerimenti di creazione indice coerenti, facilitando l\u2019ottimizzazione delle performance.</li> <li>Applicare eventuali policy di esclusione gestite in <code>dbops.fk_index_policy</code>.</li> </ul>"},{"location":"dbzero/dbops/views/vw_fk_senza_indice/#definizione-ddl","title":"\ud83d\udd0d Definizione (DDL)","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_fk_senza_indice AS\nWITH fk_columns AS (\n  SELECT con.oid AS constraint_oid,\n         con.conname AS constraint_name,\n         nsp.nspname AS schema_name,\n         rel.relname AS table_name,\n         unnest(con.conkey) AS attnum,\n         con.conrelid\n    FROM pg_constraint con\n    JOIN pg_class rel ON rel.oid = con.conrelid\n    JOIN pg_namespace nsp ON nsp.oid = rel.relnamespace\n   WHERE con.contype = 'f'\n), fk_fields AS (\n  SELECT fk.constraint_name,\n         fk.schema_name,\n         fk.table_name,\n         a.attname AS column_name,\n         fk.conrelid,\n         fk.constraint_oid\n    FROM fk_columns fk\n    JOIN pg_attribute a ON a.attrelid = fk.conrelid AND a.attnum = fk.attnum\n), indexed_columns AS (\n  SELECT i.relname AS index_name,\n         n.nspname AS schema_name,\n         t.relname AS table_name,\n         array_agg(a.attname ORDER BY x.ordinality) AS indexed_cols\n    FROM pg_index ix\n    JOIN pg_class i ON i.oid = ix.indexrelid\n    JOIN pg_class t ON t.oid = ix.indrelid\n    JOIN pg_namespace n ON n.oid = t.relnamespace\n    JOIN LATERAL unnest(ix.indkey) WITH ORDINALITY x(attnum, ordinality) ON true\n    JOIN pg_attribute a ON a.attrelid = t.oid AND a.attnum = x.attnum\nGROUP BY i.relname, n.nspname, t.relname\n), fk_grouped AS (\n  SELECT fk.constraint_name,\n         fk.schema_name,\n         fk.table_name,\n         array_agg(fk.column_name ORDER BY fk.column_name) AS fk_cols\n    FROM fk_fields fk\nGROUP BY fk.constraint_name, fk.schema_name, fk.table_name\n)\nSELECT\n  fk.schema_name,\n  fk.table_name,\n  fk.constraint_name,\n  fk.fk_cols,\n  format(\n    'CREATE INDEX ix_%I_%I_%s ON %I.%I(%s);',\n    fk.schema_name,\n    fk.table_name,\n    array_to_string(fk.fk_cols, '_'),\n    fk.schema_name,\n    fk.table_name,\n    array_to_string(fk.fk_cols, ', ')\n  ) AS create_index_suggestion\nFROM fk_grouped fk\nLEFT JOIN indexed_columns idx\n  ON fk.schema_name = idx.schema_name\n AND fk.table_name  = idx.table_name\n AND fk.fk_cols      = idx.indexed_cols\nLEFT JOIN dbops.fk_index_policy pol\n  ON fk.schema_name     = pol.schema_name\n AND fk.table_name      = pol.table_name\n AND fk.constraint_name = pol.constraint_name\nWHERE idx.index_name IS NULL\n  AND COALESCE(pol.consentito, true) = true\nORDER BY fk.schema_name, fk.table_name;\n</code></pre> <p>Owner: <code>postgres</code></p> <p>Commento: \"Elenco delle foreign key senza indice esplicito, con suggerimento CREATE INDEX e rispetto policy da dbops.fk_index_policy\"</p>"},{"location":"dbzero/dbops/views/vw_fk_senza_indice/#colonne-e-descrizione","title":"\ud83d\udd0d Colonne e Descrizione","text":"Colonna Descrizione <code>schema_name</code> Schema in cui si trova la tabella con FK <code>table_name</code> Nome della tabella che contiene la FK <code>constraint_name</code> Nome del vincolo di foreign key <code>fk_cols</code> Elenco delle colonne coinvolte nella FK <code>create_index_suggestion</code> Statement SQL suggerito per creare l\u2019indice su queste colonne"},{"location":"dbzero/dbops/views/vw_fk_senza_indice/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Verificare FK senza indice:</li> </ol> <pre><code>SELECT *\n  FROM dbops.vw_fk_senza_indice;\n</code></pre> <ol> <li>Creare l\u2019indice suggerito (per la prima riga restituita):</li> </ol> <pre><code>DO $$ DECLARE rec RECORD; BEGIN\n  SELECT create_index_suggestion INTO rec\n    FROM dbops.vw_fk_senza_indice\n   LIMIT 1;\n  EXECUTE rec.create_index_suggestion;\nEND $$;\n</code></pre> <ol> <li>Escludere esplicitamente un vincolo tramite policy:</li> </ol> <pre><code>INSERT INTO dbops.fk_index_policy (schema_name, table_name, constraint_name, consentito)\nVALUES ('public', 'orders', 'orders_customer_id_fkey', false);\n-- Ora la view non mostrer\u00e0 pi\u00f9 questo vincolo\n</code></pre>"},{"location":"dbzero/dbops/views/vw_fk_senza_indice/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Miglioramento performance: individuazione rapida di join e delete lenti dovuti a FK senza indice.</li> <li>Automazione: suggerimenti pronti all\u2019uso per l\u2019ottimizzazione.</li> <li>Governance: rispetto di policy aziendali per eccezioni a indice automatico.</li> </ul> <p>\ud83e\udde0 \u201cCon una view dedicata alle FK prive di indice e ai suggerimenti di creazione, si ottimizzano le query e si mantiene il controllo sulle eccezioni di policy.\u201d</p>"},{"location":"dbzero/dbops/views/vw_fk_senza_indice/#view-vw_fk_senza_indice","title":"\ud83d\udd0d View <code>vw_fk_senza_indice</code>","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_fk_senza_indice AS\nWITH fk_columns AS (\n         SELECT con.oid AS constraint_oid,\n            con.conname AS constraint_name,\n            nsp.nspname AS schema_name,\n            rel.relname AS table_name,\n            unnest(con.conkey) AS attnum,\n            con.conrelid\n           FROM ((pg_constraint con\n             JOIN pg_class rel ON ((rel.oid = con.conrelid)))\n             JOIN pg_namespace nsp ON ((nsp.oid = rel.relnamespace)))\n          WHERE (con.contype = 'f'::\"char\")\n        ), fk_fields AS (\n         SELECT fk_1.constraint_name,\n            fk_1.schema_name,\n            fk_1.table_name,\n            a.attname AS column_name,\n            fk_1.conrelid,\n            fk_1.constraint_oid\n           FROM (fk_columns fk_1\n             JOIN pg_attribute a ON (((a.attrelid = fk_1.conrelid) AND (a.attnum = fk_1.attnum))))\n        ), indexed_columns AS (\n         SELECT i.relname AS index_name,\n            n.nspname AS schema_name,\n            t.relname AS table_name,\n            array_agg(a.attname ORDER BY x.ordinality) AS indexed_cols\n           FROM (((((pg_index ix\n             JOIN pg_class i ON ((i.oid = ix.indexrelid)))\n             JOIN pg_class t ON ((t.oid = ix.indrelid)))\n             JOIN pg_namespace n ON ((n.oid = t.relnamespace)))\n             JOIN LATERAL unnest(ix.indkey) WITH ORDINALITY x(attnum, ordinality) ON (true))\n             JOIN pg_attribute a ON (((a.attrelid = t.oid) AND (a.attnum = x.attnum))))\n          GROUP BY i.relname, n.nspname, t.relname\n        ), fk_grouped AS (\n         SELECT fk_fields.constraint_name,\n            fk_fields.schema_name,\n            fk_fields.table_name,\n            fk_fields.conrelid,\n            fk_fields.constraint_oid,\n            array_agg(fk_fields.column_name ORDER BY fk_fields.column_name) AS fk_cols\n           FROM fk_fields\n          GROUP BY fk_fields.constraint_name, fk_fields.schema_name, fk_fields.table_name, fk_fields.conrelid, fk_fields.constraint_oid\n        )\n SELECT fk.schema_name,\n    fk.table_name,\n    fk.constraint_name,\n    fk.fk_cols,\n    format('CREATE INDEX IF NOT EXISTS ix_%I_%s ON %I.%I(%s);'::text, fk.table_name, array_to_string(fk.fk_cols, '_'::text), fk.schema_name, fk.table_name, array_to_string(fk.fk_cols, ', '::text)) AS create_index_suggestion\n   FROM ((fk_grouped fk\n     LEFT JOIN indexed_columns idx ON (((fk.schema_name = idx.schema_name) AND (fk.table_name = idx.table_name) AND (fk.fk_cols = idx.indexed_cols))))\n     LEFT JOIN dbops.fk_index_policy pol ON (((fk.schema_name = pol.schema_name) AND (fk.table_name = pol.table_name) AND (fk.constraint_name = pol.constraint_name))))\n  WHERE ((idx.index_name IS NULL) AND (COALESCE(pol.consentito, true) = true))\n  ORDER BY fk.schema_name, fk.table_name;\n</code></pre> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/views/vw_function_list/","title":"Vw function list","text":""},{"location":"dbzero/dbops/views/vw_function_list/#documentazione-concettuale-view-dbopsvw_function_list","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_function_list</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <ul> <li>Catalogo funzioni PostgreSQL (<code>pg_proc</code>, <code>pg_namespace</code>, <code>pg_description</code>)  Altre view di catalogazione:  </li> <li>dbops.vw_catalogo_oggetti </li> </ul> <p>La view <code>dbops.vw_function_list</code> fornisce un inventario completo delle funzioni definite negli schemi <code>dbops</code> e <code>script</code>, mostrando firma, tipo di ritorno, numero di parametri e commenti associati.</p>"},{"location":"dbzero/dbops/views/vw_function_list/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Agevolare il discovery delle funzioni personalizzate per manutenzione e documentazione.</li> <li> <p>Rendere immediatamente disponibili:</p> </li> <li> <p>OID (per gestire overload)</p> </li> <li>Lista degli argomenti</li> <li>Tipo di ritorno</li> <li>Numero di parametri</li> <li>Commenti descrittivi</li> </ul>"},{"location":"dbzero/dbops/views/vw_function_list/#definizione-ddl","title":"\ud83d\udd0d Definizione (DDL)","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_function_list AS\nSELECT\n  n.nspname                             AS schema,\n  p.oid                                 AS function_oid,\n  p.proname                             AS function_name,\n  pg_get_function_arguments(p.oid)     AS arguments,\n  pg_get_function_result(p.oid)        AS return_type,\n  array_length(\n    string_to_array(\n      pg_get_function_arguments(p.oid), ','\n    ), 1\n  )                                      AS num_args,\n  d.description                        AS comment\nFROM pg_proc p\nJOIN pg_namespace n ON n.oid = p.pronamespace\nLEFT JOIN pg_description d ON p.oid = d.objoid\nWHERE n.nspname = ANY (ARRAY['dbops', 'script']);\n</code></pre> <p>Owner: <code>postgres</code></p> <p>Commento: \"Elenco completo delle funzioni negli schemi dbops e script. Include:</p> <ul> <li>OID per identificare overload</li> <li>Argomenti e tipo di ritorno</li> <li>Numero di argomenti</li> <li>Commenti/documentazione (se presenti)\"</li> </ul>"},{"location":"dbzero/dbops/views/vw_function_list/#colonne-e-significato","title":"\ud83d\udd0d Colonne e Significato","text":"Colonna Descrizione <code>schema</code> Schema di appartenenza della funzione <code>function_oid</code> OID univoco della funzione (utilizzato internamente da PostgreSQL) <code>function_name</code> Nome della funzione <code>arguments</code> Lista degli argomenti con tipo e nome (ad esempio: <code>arg1 integer, arg2 text</code>) <code>return_type</code> Tipo di ritorno dichiarato dalla funzione (ad esempio: <code>integer</code>, <code>SETOF record</code>) <code>num_args</code> Numero di argomenti (calcolato in base alle virgole nella lista degli argomenti) <code>comment</code> Testo del commento associato tramite <code>COMMENT ON FUNCTION</code> (se presente)"},{"location":"dbzero/dbops/views/vw_function_list/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Elencare tutte le funzioni senza commento:</li> </ol> <pre><code>SELECT schema, function_name\n  FROM dbops.vw_function_list\n WHERE comment IS NULL;\n</code></pre> <ol> <li>Contare le funzioni per schema:</li> </ol> <pre><code>SELECT schema, COUNT(*) AS total_functions\n  FROM dbops.vw_function_list\n GROUP BY schema;\n</code></pre> <ol> <li>Trovare funzioni con pi\u00f9 di 3 parametri:</li> </ol> <pre><code>SELECT schema, function_name, num_args\n  FROM dbops.vw_function_list\n WHERE num_args &gt; 3;\n</code></pre> <ol> <li>Ricerca per nome e visualizzazione firma completa:</li> </ol> <pre><code>SELECT function_name, arguments, return_type\n  FROM dbops.vw_function_list\n WHERE function_name ILIKE '%iva%';\n</code></pre>"},{"location":"dbzero/dbops/views/vw_function_list/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Manutenzione semplificata: individua rapidamente funzioni non documentate.</li> <li>Analisi delle API interne: mappa le signature disponibili per integrazioni o refactoring.</li> <li>Supporto al refactoring: OID e overload chiaramente identificati consentono modifiche mirate.</li> </ul> <p>\ud83e\udde0 \u201cUna panoramica centralizzata delle funzioni del database accelera il lavoro di sviluppo, auditing e documentazione del codice SQL.\u201d</p>"},{"location":"dbzero/dbops/views/vw_function_list/#view-vw_function_list","title":"\ud83d\udd0d View <code>vw_function_list</code>","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_function_list AS\nSELECT n.nspname AS schema,\n    p.oid AS function_oid,\n    p.proname AS function_name,\n    pg_get_function_arguments(p.oid) AS arguments,\n    pg_get_function_result(p.oid) AS return_type,\n    array_length(string_to_array(pg_get_function_arguments(p.oid), ','::text), 1) AS num_args,\n    d.description AS comment\n   FROM ((pg_proc p\n     JOIN pg_namespace n ON ((n.oid = p.pronamespace)))\n     LEFT JOIN pg_description d ON ((p.oid = d.objoid)))\n  WHERE (n.nspname = ANY (ARRAY['dbops'::name, 'script'::name]));\n</code></pre> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/dbops/views/vw_trigger_functions/","title":"Vw trigger functions","text":""},{"location":"dbzero/dbops/views/vw_trigger_functions/#documentazione-concettuale-view-dbopsvw_trigger_functions","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>dbops.vw_trigger_functions</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <ul> <li>Catalogo trigger PostgreSQL (<code>pg_trigger</code>, <code>pg_class</code>, <code>pg_proc</code>, <code>pg_namespace</code>) Altre view di catalogazione:  </li> <li>dbops.vw_catalogo_oggetti </li> <li>dbops.vw_function_list </li> </ul> <p>La view <code>dbops.vw_trigger_functions</code> elenca tutti i trigger definiti negli schemi del database, indicando la tabella di appartenenza, il nome del trigger, la funzione associata e la definizione completa della funzione. Filtra i trigger interni di sistema lasciando solo quelli utente.</p>"},{"location":"dbzero/dbops/views/vw_trigger_functions/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Fornire una panoramica centralizzata dei trigger utente presenti in ogni tabella del database.</li> <li> <p>Rendere immediatamente accessibili:</p> </li> <li> <p>Schema e tabella di appartenenza</p> </li> <li>Nome del trigger</li> <li>Funzione richiamata dal trigger</li> <li>Testo completo della definizione della funzione trigger (utile per review e debugging)</li> </ul>"},{"location":"dbzero/dbops/views/vw_trigger_functions/#definizione-ddl","title":"\ud83d\udd0d Definizione (DDL)","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_trigger_functions AS\nSELECT\n  n.nspname                     AS schema,\n  cls.relname                   AS tabella,\n  trg.tgname                    AS nome_trigger,\n  p.proname                     AS nome_funzione,\n  pg_get_functiondef(p.oid)     AS definizione_funzione\nFROM pg_trigger trg\nJOIN pg_class cls ON trg.tgrelid = cls.oid\nJOIN pg_proc p   ON trg.tgfoid = p.oid\nJOIN pg_namespace n ON n.oid = cls.relnamespace\nWHERE NOT trg.tgisinternal\nORDER BY n.nspname, cls.relname, trg.tgname;\n</code></pre> <p>Owner: <code>postgres</code></p> <p>Commento: Vista dei trigger utente con dettagli sulla funzione invocata e definizione del codice della funzione.</p>"},{"location":"dbzero/dbops/views/vw_trigger_functions/#colonne-e-significato","title":"\ud83d\udd0d Colonne e Significato","text":"Colonna Descrizione <code>schema</code> Schema in cui risiede la tabella (owner del trigger) <code>tabella</code> Nome della tabella associata al trigger <code>nome_trigger</code> Nome del trigger cos\u00ec come definito nel catalogo <code>nome_funzione</code> Nome della funzione eseguita dal trigger <code>definizione_funzione</code> Testo completo della definizione PL/pgSQL della funzione (inclusi header e corpo)"},{"location":"dbzero/dbops/views/vw_trigger_functions/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Elencare tutti i trigger di una specifica tabella:</li> </ol> <pre><code>SELECT nome_trigger, nome_funzione\n  FROM dbops.vw_trigger_functions\n WHERE tabella = 'config.iva';\n</code></pre> <ol> <li>Visualizzare la definizione di un trigger particolare:</li> </ol> <pre><code>SELECT definizione_funzione\n  FROM dbops.vw_trigger_functions\n WHERE nome_trigger = 'trg_upd_iva_audit_data_user';\n</code></pre> <ol> <li>Contare i trigger per schema:</li> </ol> <pre><code>SELECT schema, COUNT(*) AS tot_trigger\n  FROM dbops.vw_trigger_functions\n GROUP BY schema;\n</code></pre>"},{"location":"dbzero/dbops/views/vw_trigger_functions/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Code review: facilita l\u2019ispezione del codice PL/pgSQL associato ai trigger.</li> <li>Manutenzione: consente di individuare rapidamente trigger obsoleti o duplicati.</li> <li>Documentazione: serve come riferimento unico per tutti i trigger definiti nel database.</li> </ul> <p>\ud83e\udde0 \u201cUna view centralizzata dei trigger migliora la governabilit\u00e0 e semplifica il controllo della logica di business implementata a livello di database.\u201d</p>"},{"location":"dbzero/dbops/views/vw_trigger_functions/#view-vw_trigger_functions","title":"\ud83d\udd0d View <code>vw_trigger_functions</code>","text":"<pre><code>CREATE OR REPLACE VIEW dbops.vw_trigger_functions AS\nSELECT n.nspname AS schema,\n    cls.relname AS tabella,\n    trg.tgname AS nome_trigger,\n    p.proname AS nome_funzione,\n    pg_get_functiondef(p.oid) AS definizione_funzione\n   FROM (((pg_trigger trg\n     JOIN pg_class cls ON ((trg.tgrelid = cls.oid)))\n     JOIN pg_proc p ON ((trg.tgfoid = p.oid)))\n     JOIN pg_namespace n ON ((n.oid = cls.relnamespace)))\n  WHERE (NOT trg.tgisinternal)\n  ORDER BY n.nspname, cls.relname, trg.tgname;\n</code></pre> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/public/","title":"Schema <code>public</code>","text":""},{"location":"dbzero/public/#tabelle","title":"\ud83d\udcda Tabelle","text":"<ul> <li>version_info</li> </ul>"},{"location":"dbzero/public/manual/version_info/","title":"Version info","text":"<p>\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>public.version_info</code></p> <p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti funzioni:  - internal.trgfn_audit_version_info </p>"},{"location":"dbzero/public/manual/version_info/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Mantenere un registro delle versioni dell\u2019applicazione ZeroErp, conservando informazioni su:</p> <ul> <li>version: etichetta di release/deploy (es. <code>1.2.0</code>, <code>2025.07.11</code>).</li> <li>created_at: data di inserimento del record.</li> <li>last_updated_at e last_updated_by: ultimo aggiornamento della versione e utente che lo ha effettuato.</li> </ul>"},{"location":"dbzero/public/manual/version_info/#vincoli","title":"\ud83d\udd12 Vincoli","text":"<ul> <li>PRIMARY KEY: <code>version_info_pkey</code> su <code>id</code> (auto-increment).</li> <li>DEFAULT: <code>app_name</code> \u00e8 di default <code>'ZeroErp'</code>.</li> </ul>"},{"location":"dbzero/public/manual/version_info/#trigger","title":"\ud83d\udea8 Trigger","text":"<ul> <li><code>trg_version_info_audit</code> (BEFORE UPDATE): invoca la funzione <code>internal.trgfn_audit_version_info()</code> per aggiornare automaticamente i campi di auditing <code>last_updated_at</code> e <code>last_updated_by</code> ad ogni modifica.</li> </ul>"},{"location":"dbzero/public/manual/version_info/#meccanismo-di-utilizzo","title":"\u2699\ufe0f Meccanismo di Utilizzo","text":"<ol> <li>Inserimento versione    Ogni nuova release inserisce un record con il numero di <code>version</code>.</li> </ol> <p><pre><code>INSERT INTO public.version_info(version) VALUES('2025.07.11');\n</code></pre> 2. Aggiornamento    Per modificare la versione in uso (senza alterare la historicit\u00e0), si esegue:</p> <pre><code>UPDATE public.version_info\n   SET version = '2025.07.12'\n WHERE id = &lt;current_id&gt;;\n</code></pre> <p>Il trigger di auditing provvede ad aggiornare <code>last_updated_at</code> e <code>last_updated_by</code>. 3. Lettura    Per recuperare l\u2019ultima versione:</p> <pre><code>SELECT *\n  FROM public.version_info\n ORDER BY created_at DESC\n LIMIT 1;\n</code></pre>"},{"location":"dbzero/public/manual/version_info/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Tracciabilit\u00e0 delle release: ogni modifica rimane storicizzata con timestamp e utente.</li> <li>Auditing automatico: nessuna necessit\u00e0 di gestire manualmente i campi di update.</li> <li>Centralit\u00e0: punto unico per consultare la versione corrente e passate del sistema.</li> </ul> <p>\ud83e\udde0 \u201cUn registro versioninfo ben gestito \u00e8 fondamentale per deployment sicuri, rollback controllati e per supportare processi di monitoraggio e diagnostica.\u201d</p>"},{"location":"dbzero/script/","title":"Schema <code>script</code>","text":""},{"location":"dbzero/script/#tabelle","title":"\ud83d\udcda Tabelle","text":""},{"location":"dbzero/script/#funzioni","title":"\u2699\ufe0f Funzioni","text":"<ul> <li>fn_check_ins_soggetto_ruolo \u2014 - Verifica esistenza     Controlla se esiste gi\u00e0 un\u2019associazione tra il soggetto e il codice interno del ruolo in <code>anagrafiche.soggetti_ruoli</code>.</li> <li>fn_ensure_logconn \u2014 * Stabilire una connessione persistente a un database remoto o a se stesso attraverso l\u2019estensione <code>dblink</code>, evitando overhead di creazione/removal di connessioni multiple. * Supporto al logging remoto: utilizzata da funzioni come <code>script.fn_log_and_raise_error</code> per eseguire INSERT in un contesto transazionale separato.</li> <li>fn_generate_codice \u2014 * Generazione di codici configurabili   Costruisce un codice concatenando un prefisso, un separatore e una parte numerica formattata, letti da <code>config.sistema_codici</code> in base al <code>codice_tipo</code> passato in input.</li> <li>fn_get_contatti \u2014 * Selezione univoca per tipo   Ottenere il contatto pi\u00f9 rilevante per ciascun <code>tipo_contatto_id</code> rispetto ai parametri forniti. * Gerarchia di contesti   Filtra e ordina i contatti in base alla priorit\u00e0:</li> <li>fn_get_default_by_param \u2014 Recuperare in modo dinamico un valore di PK (o altro identificativo) da qualsiasi tabella, basandosi su un codice parametro. La funzione:</li> <li>fn_get_indirizzi_by_ruolo</li> <li>fn_get_indirizzo</li> <li>fn_get_messaggio \u2014 * Centralizzare i testi   Conservare tutti i messaggi (errori, avvisi, info) in tabella, evitando hard\u2011coding in trigger, procedure o sorgenti SQL. * Internazionalizzazione avanzata   Selezionare dinamicamente la lingua di output in base a:</li> <li>fn_get_parameter_full \u2014 * Ricerca safe del parametro   Verificare l\u2019esistenza del parametro in <code>config.parameters</code> e recuperare il suo <code>default_value</code>. * Override gerarchico   Cercare eventuali override in <code>config.parameter_overrides</code> secondo la priorit\u00e0: function \u2192 session \u2192 user \u2192 tenant. * Centralizzazione della logica   Un\u2019unica funzione per gestire la complessit\u00e0 degli override, evitando duplicazioni nell\u2019applicazione. * Gestione degli errori   Se <code>p_code</code> non \u00e8 presente in <code>config.parameters</code>, viene chiamato <code>script.fn_log_and_raise_error</code> con codice <code>ERRORE_PARAMETRI_TABELLA</code>.</li> <li>fn_get_stradario \u2014 * Ricerca locale per comune   Se viene specificato <code>p_comune_id</code>, esegue una query filtrata sul comune indicato, restituendo tutte le vie e toponomastiche che contengono la stringa <code>p_indirizzo</code> nel loro nome.</li> <li>fn_get_tipo_contatto_id \u2014 Recuperare l\u2019ID del tipo di contatto corrispondente a un codice interno (<code>cod_int_tipo_contatto</code>), garantendo al contempo il logging e la tracciabilit\u00e0 tramite un <code>tx_id</code> di sessione.</li> <li>fn_get_vie_discendenti</li> <li>fn_log_and_raise_error \u2014 * Entrypoint unificato per error handling: evita duplicazioni di log e raise in trigger, procedure e funzioni. * Logging remoto sicuro: usa <code>dblink_exec</code> su connessione permanente fornita da <code>script.fn_ensure_logconn()</code>, per isolare il log dall\u2019eventuale rollback della sessione principale. * Escalation immediata: rialza l\u2019eccezione con <code>DETAIL</code> e <code>HINT</code> recuperati dalla tabella dei messaggi.</li> <li>fn_valida_codice_fiscale \u2014 * Validazione formale del Codice Fiscale (CF) calcolando e confrontando il carattere di controllo. * Supporto omocodici, garantendo validit\u00e0 anche per CF derivati con omolettere. * Delegare al backend i controlli di congruenza con data di nascita, sesso e luogo di nascita per mantenere flessibilit\u00e0 applicativa.</li> <li>fn_valida_partita_iva \u2014 Verificare formalmente la correttezza di una Partita IVA italiana (11 cifre) calcolando il check digit con l\u2019algoritmo di Luhn modificato, restituendo:</li> <li>fn_validate_cf_piva_it \u2014 * Centralizzazione Validazioni: Unico punto per verificare CF e P.IVA in accordo ai formati configurati. * Dinamicit\u00e0: I formati (alfanumerico, numerico, lunghezza) sono letti da <code>config.tipi_soggetto_dettaglio</code> e possono variare per Stato. * Estendibilit\u00e0: Aggiunta futura di funzioni con suffissi di Stato, es. <code>_FR</code>, <code>_DE</code>, <code>_UK</code>.</li> <li>trgfn_generate_account_code_generic \u2014 Fornire una trigger\u2011function generica che popola automaticamente la colonna <code>account_code</code> quando non \u00e8 valorizzata, delegando la logica di generazione a <code>script.fn_generate_codice</code> in base al tipo di codice specificato (parametro o nome tabella).</li> <li>trgfn_lock_columns \u2014 -  Trigger function generica per bloccare modifiche non autorizzate su colonne specificate, integrando:</li> <li>trgfn_prevent_modification_generic \u2014 * Proteggere dati di audit   Garantire l\u2019inalterabilit\u00e0 delle cronologie storiche registrate in tabelle dedicate (es. <code>config.parameters_audit</code>). * Centralizzare la gestione degli errori   Usare un wrapper di logging e exception unificato per fornire messaggi coerenti e tracce in log.</li> <li>trgfn_upd_audit_data_user_generic \u2014 * Audit automatico   Assicurare che ogni modifica a una riga di tabella sia registrata con timestamp (<code>data_update</code>) e utente (<code>user_update</code>) correnti. * Centralizzare la logica di update audit   Evitare di replicare manualmente la medesima assegnazione in ogni trigger <code>BEFORE UPDATE</code> delle varie tabelle.</li> <li>trgfn_upd_dlt_storico_generic \u2014 * Unificazione logica: evitare duplicazioni del codice di storicizzazione in diverse funzioni trigger. * Flessibilit\u00e0: applicabile a qualsiasi tabella storica semplicemente specificando il parametro <code>TG_ARGV[0]</code> con il nome della colonna di riferimento. * Robustezza: gestione completa degli errori con logging, senza interrompere il flusso DML principale.</li> <li>uuid_nil \u2014 * Fornire un valore UUID costante, composto interamente da zeri. * Usato come fallback o default quando non \u00e8 possibile generare o recuperare un UUID valido.</li> </ul>"},{"location":"dbzero/script/#views","title":"\ud83d\udd0d Views","text":"<ul> <li>vw_indirizzo_completo \u2014 * Denormalizzazione per letture rapide: aggregare in un\u2019unica view i dati di stradario, comune, provincia, codice postale e via, semplificando le query di selezione degli indirizzi. * Pulizia e consistenza: fornire campi gi\u00e0 formattati e pronti per essere utilizzati nelle normalizzazioni e nelle funzionalit\u00e0 GIS. * Riutilizzabilit\u00e0: rendere disponibile un\u2019unica sorgente per join di indirizzi completi, evitando duplicazione di codice SQL.</li> <li>vw_ita_province_regioni</li> <li>vw_stati_estesi</li> <li>vw_stradario_esteso \u2014 * Aggregazione logica: unire in un\u2019unica sorgente i dati di via, toponomastica e stato, evitando join ripetuti nei client e nelle applicazioni. * Pulizia dati: fornire alias chiari (<code>id_via</code>, <code>id_toponomastica</code>, <code>tipo_toponimo</code>, <code>sigla_stato</code>, <code>nome_strada</code>) per facilitare l\u2019interpretazione dei risultati. * Performance: ridurre il carico di join runtime raggruppando pi\u00f9 tabelle in un\u2019unica view materializzata (se necessario).</li> </ul>"},{"location":"dbzero/script/funzioni/fn_check_ins_soggetto_ruolo/","title":"Fn check ins soggetto ruolo","text":""},{"location":"dbzero/script/funzioni/fn_check_ins_soggetto_ruolo/#documentazione-concettuale-funzione-scriptfn_check_ins_soggetto_ruolo","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_check_ins_soggetto_ruolo</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:  - anagrafiche.soggetti_ruoli  - config.tipi_ruoli </p> <p>La funzione <code>script.fn_check_ins_soggetto_ruolo(p_soggetto_id, p_soggetto_ruolo_id, p_cd_int_ruolo)</code> centralizza e semplifica la gestione della relazione tra un soggetto e il suo ruolo. Garantisce che, ogni volta che si assegna un ruolo a un soggetto, la tabella <code>anagrafiche.soggetti_ruoli</code> sia mantenuta correttamente e senza duplicati.</p>"},{"location":"dbzero/script/funzioni/fn_check_ins_soggetto_ruolo/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Verifica esistenza   Controlla se esiste gi\u00e0 un\u2019associazione tra il soggetto e il codice interno del ruolo in <code>anagrafiche.soggetti_ruoli</code>.</p> </li> <li> <p>Inserimento automatico   Quando <code>p_soggetto_ruolo_id</code> \u00e8 <code>NULL</code> o <code>0</code>, crea un nuovo record in <code>anagrafiche.soggetti_ruoli</code> con <code>soggetto_id</code>, <code>ruolo_id</code> e <code>user_insert = current_user</code>.</p> </li> <li> <p>Ritorno dell\u2019ID   Restituisce sempre l\u2019ID valido della relazione soggetto\u2013ruolo, sia esso appena creato o gi\u00e0 esistente.</p> </li> <li> <p>Centralizzazione della logica   Evita duplicazioni di codice nei trigger o procedure: ogni assegnazione di ruolo utilizza questa funzione.</p> </li> </ul>"},{"location":"dbzero/script/funzioni/fn_check_ins_soggetto_ruolo/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Descrizione <code>p_soggetto_id</code> <code>UUID</code> ID del soggetto in <code>anagrafiche.oggetti</code>. <code>p_soggetto_ruolo_id</code> <code>INTEGER</code> ID esistente della relazione in <code>anagrafiche.soggetti_ruoli</code>; se <code>NULL</code> o 0`, verr\u00e0      creato un nuovo record. <code>p_cd_int_ruolo</code> <code>VARCHAR</code> Codice interno del ruolo (<code>cd_int_ruolo</code> in <code>config.tipi_ruoli</code>) da associare al soggetto."},{"location":"dbzero/script/funzioni/fn_check_ins_soggetto_ruolo/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li> <p>Recupero ID ruolo    Cerca in <code>config.tipi_ruoli</code> il record con <code>cd_int_ruolo = p_cd_int_ruolo</code>. Se non trovato, solleva eccezione <code>E_COD_INT_RUOLO</code>.</p> </li> <li> <p>Inserimento condizionale    Se <code>p_soggetto_ruolo_id</code> \u00e8 <code>NULL</code> o <code>0</code>:</p> </li> <li>Inserisce in <code>anagrafiche.soggetti_ruoli</code> un nuovo record con:<ul> <li><code>soggetto_id = p_soggetto_id</code></li> <li><code>ruolo_id = &lt;id recuperato&gt;</code></li> <li><code>user_insert = current_user</code></li> </ul> </li> <li> <p>Restituisce l\u2019<code>id</code> del nuovo record.</p> </li> <li> <p>Verifica esistenza    Altrimenti:</p> </li> <li>Controlla che esista un record in <code>anagrafiche.soggetti_ruoli</code> con:<ul> <li><code>id = p_soggetto_ruolo_id</code></li> <li><code>soggetto_id = p_soggetto_id</code></li> <li><code>ruolo_id = &lt;id recuperato&gt;</code></li> </ul> </li> <li>Se non esiste, solleva eccezione <code>E_SOGGETTI_RUOLI</code>.</li> <li>Se esiste, restituisce <code>p_soggetto_ruolo_id</code>.</li> </ol>"},{"location":"dbzero/script/funzioni/fn_check_ins_soggetto_ruolo/#error-handling","title":"\ud83d\udd12 Error Handling","text":"<ul> <li> <p><code>E_COD_INT_RUOLO</code>   Ruolo con codice interno <code>p_cd_int_ruolo</code> non trovato in <code>config.tipi_ruoli</code>.</p> </li> <li> <p><code>E_SOGGETTI_RUOLI</code>   Record in <code>anagrafiche.soggetti_ruoli</code> con ID, soggetto e ruolo specificati non esiste.</p> </li> </ul>"},{"location":"dbzero/script/funzioni/fn_check_ins_soggetto_ruolo/#integrazione-con-trigger","title":"\ud83d\udd17 Integrazione con Trigger","text":"<p>Utilizzare all\u2019interno di trigger <code>BEFORE INSERT</code> o <code>BEFORE UPDATE</code> sulle tabelle di assegnazione ruoli:</p> <pre><code>NEW.soggetto_ruolo_id := script.fn_check_ins_soggetto_ruolo(\n  NEW.soggetto_id,\n  NEW.soggetto_ruolo_id,\n  'CLIENTE'            -- o altro codice interno di ruolo\n);\n</code></pre>"},{"location":"dbzero/script/funzioni/fn_check_ins_soggetto_ruolo/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Unica fonte di verit\u00e0        Tutti i controlli e inserimenti di relazioni soggetto\u2013ruolo passano da un unico punto, migliorando coerenza e manutenzione.</p> </li> <li> <p>Riduzione di duplicazioni        Evita boilerplate di verifica/inserimento in pi\u00f9 trigger o procedure.</p> </li> <li> <p>Audit automatico       Ogni inserimento registra user_insert = current_user, facilitando tracciabilit\u00e0 e debugging.</p> </li> <li> <p>Flessibilit\u00e0 futura       Per aggiungere nuovi ruoli, basta inserire record in config.tipi_ruoli; la funzione li gestir\u00e0 </p> </li> </ul>"},{"location":"dbzero/script/funzioni/fn_check_ins_soggetto_ruolo/#nota-di-sviluppo","title":"\ud83d\udea7 Nota di sviluppo","text":"<pre><code>Questa  la funzione generica costituisce il nucleo metodologico per la gestione dei ruoli in Zero ERP: sar\u00e0 estese e replicate per ogni nuovo tipo di ruolo oggetto di implementazione.\n</code></pre>"},{"location":"dbzero/script/funzioni/fn_check_ins_soggetto_ruolo/#funzione-fn_check_ins_soggetto_ruolo","title":"\u2699\ufe0f Funzione <code>fn_check_ins_soggetto_ruolo</code>","text":"<pre><code>CREATE FUNCTION fn_check_ins_soggetto_ruolo(p_soggetto_id uuid, p_soggetto_ruolo_id integer, p_cd_int_ruolo character varying)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_check_ins_soggetto_ruolo/#create-or-replace-function-scriptfn_check_ins_soggetto_ruolop_soggetto_id-uuid-p_soggetto_ruolo_id-integer-p_cd_int_ruolo-character-varying-returns-integer-language-plpgsql-as-function-declare-v_ruolo_id-integer-v_new_id-integer-v_count-integer-begin-se-p_soggetto_ruolo_id-is-null-o-0-recupera-il-ruolo_id-corrispondente-a-cd_int_ruolo-inserisce-in-anagrafichesoggetti_ruoli-un-nuovo-record-soggetto_id-p_soggetto_id-ruolo_id-quello-trovato-user_insert-current_user-restituisce-lid-del-record-appena-creato-se-p_soggetto_ruolo_id-is-not-null-e-0-controlla-che-esista-un-record-in-anagrafichesoggetti_ruoli-con-id-p_soggetto_ruolo_id-soggetto_id-p_soggetto_id-ruolo_id-id-trovato-da-cd_int_ruolo-se-non-lo-trova-raise-exception-se-lo-trova-restituisce-p_soggetto_ruolo_id-1-trovo-lid-del-ruolo-corrispondente-a-cd_int_ruolo-select-rid-into-v_ruolo_id-from-configtipi_ruoli-r-where-rcd_int_ruolo-p_cd_int_ruolo-limit-1-if-v_ruolo_id-is-null-then-perform-scriptfn_log_and_raise_error-database-fn_check_ins_soggetto_ruolo-e_cod_int_ruolo-jsonb_build_objectcd_int_ruolo-p_cd_int_ruolo-nulluuid-cd_int_ruolo-p_cd_int_ruolotext-wrapper-fara-raise-exception-end-if-2-se-soggetto_ruolo_id-non-e-passato-null-o-0-creiamo-un-nuovo-record-if-p_soggetto_ruolo_id-is-null-or-p_soggetto_ruolo_id-0-then-insert-into-anagrafichesoggetti_ruoli-soggetto_id-ruolo_id-user_insert-values-p_soggetto_id-v_ruolo_id-current_user-returning-id-into-v_new_id-return-v_new_id-end-if-3-altrimenti-verifico-che-il-record-esista-e-corrisponda-select-count-into-v_count-from-anagrafichesoggetti_ruoli-sr-where-srid-p_soggetto_ruolo_id-and-srsoggetto_id-p_soggetto_id-and-srruolo_id-v_ruolo_id-if-v_count-0-then-perform-scriptfn_log_and_raise_error-database-fn_check_ins_soggetto_ruolo-e_soggetti_ruoli-jsonb_build_object-soggetto_ruolo_id-p_soggetto_ruolo_id-soggetto_id-p_soggetto_id-ruolo_id-v_ruolo_id-nulluuid-p_soggetto_ruolo_idtext-p_soggetto_idtext-v_ruolo_idtext-wrapper-fara-raise-exception-end-if-se-siamo-qui-il-record-esiste-restituisco-lo-stesso-id-passato-return-p_soggetto_ruolo_id-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_check_ins_soggetto_ruolo(p_soggetto_id uuid, p_soggetto_ruolo_id integer, p_cd_int_ruolo character varying)\n RETURNS integer\n LANGUAGE plpgsql\nAS $function$\n  DECLARE\n      v_ruolo_id   INTEGER;\n      v_new_id     INTEGER;\n      v_count      INTEGER;\n\n  BEGIN\n\n\n      -- Se p_soggetto_ruolo_id IS NULL o = 0:\n      --   - Recupera il ruolo_id corrispondente a cd_int_ruolo\n      --   - Inserisce in anagrafiche.soggetti_ruoli un nuovo record:\n      --       (soggetto_id = p_soggetto_id, ruolo_id = &lt;quello trovato&gt;, user_insert = current_user)\n      --   - Restituisce l'id del record appena creato.\n      --\n      -- Se p_soggetto_ruolo_id IS NOT NULL e &gt; 0:\n      --   - Controlla che esista un record in anagrafiche.soggetti_ruoli con\n      --       id = p_soggetto_ruolo_id\n      --       soggetto_id = p_soggetto_id\n      --       ruolo_id = &lt;id trovato da cd_int_ruolo&gt;\n      --   - Se non lo trova, RAISE EXCEPTION\n      --   - Se lo trova, restituisce p_soggetto_ruolo_id\n      -- 1) Trovo l'ID del ruolo corrispondente a cd_int_ruolo\n\n      SELECT r.id\n        INTO v_ruolo_id\n      FROM config.tipi_ruoli r\n      WHERE r.cd_int_ruolo = p_cd_int_ruolo\n      LIMIT 1;\n\n      IF v_ruolo_id IS NULL THEN\n          PERFORM script.fn_log_and_raise_error(\n            'database',\n            'fn_check_ins_soggetto_ruolo',\n            'E_COD_INT_RUOLO',\n            jsonb_build_object('cd_int_ruolo', p_cd_int_ruolo),\n            NULL::uuid,   \n            'cd_int_ruolo', p_cd_int_ruolo::text\n          );\n          -- wrapper far\u00e0 RAISE EXCEPTION\n      END IF;\n\n      -- 2) Se soggetto_ruolo_id non \u00e8 passato (NULL o 0), creiamo un nuovo record\n      IF p_soggetto_ruolo_id IS NULL OR p_soggetto_ruolo_id = 0 THEN\n          INSERT INTO anagrafiche.soggetti_ruoli(\n              soggetto_id,\n              ruolo_id,\n              user_insert\n          ) VALUES (\n              p_soggetto_id,\n              v_ruolo_id,\n              current_user\n          )\n          RETURNING id INTO v_new_id;\n\n          RETURN v_new_id;\n      END IF;\n\n      -- 3) Altrimenti verifico che il record esista e corrisponda\n      SELECT COUNT(*) \n        INTO v_count\n      FROM anagrafiche.soggetti_ruoli sr\n      WHERE sr.id         = p_soggetto_ruolo_id\n        AND sr.soggetto_id = p_soggetto_id\n        AND sr.ruolo_id    = v_ruolo_id;\n\n      IF v_count = 0 THEN\n          PERFORM script.fn_log_and_raise_error(\n            'database',\n            'fn_check_ins_soggetto_ruolo',\n            'E_SOGGETTI_RUOLI',\n            jsonb_build_object(\n              'soggetto_ruolo_id', p_soggetto_ruolo_id,\n              'soggetto_id',       p_soggetto_id,\n              'ruolo_id',          v_ruolo_id\n            ),\n            NULL::uuid,  \n            p_soggetto_ruolo_id::text,\n            p_soggetto_id::text,\n            v_ruolo_id::text\n          );\n          -- wrapper far\u00e0 RAISE EXCEPTION\n      END IF;\n\n      -- Se siamo qui, il record esiste: restituisco lo stesso ID passato\n      RETURN p_soggetto_ruolo_id;\n  END;\n\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_ensure_logconn/","title":"Fn ensure logconn","text":""},{"location":"dbzero/script/funzioni/fn_ensure_logconn/#documentazione-concettuale-function-scriptfn_ensure_logconn","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Function <code>script.fn_ensure_logconn()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti funzioni:  - script.fn_log_and_raise_error </p> <p>Altro - GUC <code>dblink.log_connection</code> - Extension PostgreSQL <code>dblink</code></p> <p>La funzione <code>script.fn_ensure_logconn()</code> garantisce l\u2019apertura di una connessione dblink permanente denominata <code>logconn</code>, utilizzando la stringa di connessione definita nella GUC <code>dblink.log_connection</code>. Se la connessione esiste gi\u00e0, l\u2019eccezione <code>duplicate_object</code> viene catturata e ignorata.</p>"},{"location":"dbzero/script/funzioni/fn_ensure_logconn/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Stabilire una connessione persistente a un database remoto o a se stesso attraverso l\u2019estensione <code>dblink</code>, evitando overhead di creazione/removal di connessioni multiple.</li> <li>Supporto al logging remoto: utilizzata da funzioni come <code>script.fn_log_and_raise_error</code> per eseguire INSERT in un contesto transazionale separato.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_ensure_logconn/#dettagli-di-implementazione","title":"\ud83d\udd0d Dettagli di Implementazione","text":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_ensure_logconn()\n  RETURNS void\n  LANGUAGE plpgsql\nAS $$\nBEGIN\n  -- Prova ad aprire la connessione dblink 'logconn' usando la GUC\n  PERFORM dblink_connect_u(\n    'logconn',\n    current_setting('dblink.log_connection', true)\n  );\nEXCEPTION WHEN duplicate_object THEN\n  -- Se la connessione 'logconn' \u00e8 gi\u00e0 definita, ignora l\u2019eccezione\n  NULL;\nEND;\n$$;\n</code></pre> <ul> <li><code>dblink_connect_u(connection_name, conninfo)</code>: apre una connessione con nome <code>connection_name</code> sulla stringa <code>conninfo</code> (in formato URI o DSN).</li> <li>GUC <code>dblink.log_connection</code>: parametro di configurazione (custom) contenente la stringa di connessione.</li> <li>Eccezione <code>duplicate_object</code>: intercettata per evitare errori se <code>logconn</code> \u00e8 gi\u00e0 presente.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_ensure_logconn/#comportamenti-e-side-effects","title":"\ud83d\udd12 Comportamenti e Side Effects","text":"<ul> <li>Persistenza della connessione: rimane attiva fino alla fine della sessione o fino a <code>dblink_disconnect('logconn')</code>.</li> <li>Idempotenza: chiamate multiple non ricreano la connessione e non causano errori.</li> <li>Assenza di rollback: l\u2019operazione di connessione non influisce sulle transazioni correnti.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_ensure_logconn/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Nel flusso di error handling</li> </ol> <pre><code>-- Prima di loggare errori in remoto\nPERFORM script.fn_ensure_logconn();\nPERFORM dblink_exec('logconn', 'INSERT INTO dbops.error_log ...');\n</code></pre> <ol> <li>Chiamata manuale</li> </ol> <pre><code>SELECT script.fn_ensure_logconn();\n</code></pre>"},{"location":"dbzero/script/funzioni/fn_ensure_logconn/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Efficienza: riduce la latenza di apertura connessioni ripetute.</li> <li>Semplicit\u00e0 d\u2019uso: un\u2019unica funzione per garantire la connessione.</li> <li>Affidabilit\u00e0: ignora silenziosamente eccezioni di duplicato, evitando interruzioni.</li> </ul> <p>\ud83e\udde0 \u201cUn\u2019utility leggera per gestire connessioni dblink persistenti, essenziale per pattern di logging remoto e task di integrazione tra database.\u201d</p>"},{"location":"dbzero/script/funzioni/fn_ensure_logconn/#funzione-fn_ensure_logconn","title":"\u2699\ufe0f Funzione <code>fn_ensure_logconn</code>","text":"<pre><code>CREATE FUNCTION fn_ensure_logconn()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_ensure_logconn/#create-or-replace-function-scriptfn_ensure_logconn-returns-void-language-plpgsql-as-function-begin-prova-ad-aprire-la-connessione-dblink-logconn-usando-la-guc-perform-dblink_connect_u-logconn-current_settingmyappdblink_log_connection-true-exception-when-duplicate_object-then-se-logconn-esiste-gia-ignora-null-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_ensure_logconn()\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  -- prova ad aprire la connessione dblink 'logconn' usando la GUC\n  PERFORM dblink_connect_u(\n    'logconn',\n    current_setting('myapp.dblink_log_connection', true)\n  );\nEXCEPTION WHEN duplicate_object THEN\n  -- se logconn esiste gi\u00e0, ignora\n  NULL;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_generate_codice/","title":"Fn generate codice","text":""},{"location":"dbzero/script/funzioni/fn_generate_codice/#documentazione-funzione-scriptfn_generate_codicetipo-text","title":"\ud83d\udcd8 Documentazione Funzione \u2013 <code>script.fn_generate_codice(tipo TEXT)</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - config.sistema_codici </p> <p>Approfondimento funzioni :   - script.fn_get_messaggio </p> <p>La funzione <code>script.fn_generate_codice(tipo TEXT)</code> genera in modo parametrico un nuovo codice alfanumerico per uno specifico \u201ctipo\u201d (es. <code>ORDINE</code>, <code>CLIENTE</code>, <code>FATTURA</code>), basandosi sui parametri definiti nella tabella <code>config.sistema_codici</code>. Se la configurazione per quel tipo non esiste o \u00e8 disattivata, viene sollevata un\u2019eccezione.</p>"},{"location":"dbzero/script/funzioni/fn_generate_codice/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Generazione di codici configurabili   Costruisce un codice concatenando un prefisso, un separatore e una parte numerica formattata, letti da <code>config.sistema_codici</code> in base al <code>codice_tipo</code> passato in input.</p> </li> <li> <p>Unicit\u00e0 tramite sequenza   Invoca la sequenza database indicata in <code>nome_sequenza</code> per ottenere un valore numerico progressivo, garantendo codici unici e ordinati.</p> </li> <li> <p>Verifica configurazione   Se la riga corrispondente a <code>codice_tipo = tipo</code> non esiste o <code>attivo = FALSE</code>, o se <code>nome_sequenza</code> \u00e8 <code>NULL</code>, la funzione solleva un\u2019eccezione con messaggio di errore.</p> </li> </ul>"},{"location":"dbzero/script/funzioni/fn_generate_codice/#parametri-di-input","title":"\ud83d\udce5 Parametri di input","text":"Nome Tipo Descrizione <code>tipo</code> <code>TEXT</code> Identificativo del <code>codice_tipo</code> nella tabella <code>config.sistema_codici</code>. Esempi: <code>\"ORDINE\"</code>, <code>\"CLIENTE\"</code>."},{"location":"dbzero/script/funzioni/fn_generate_codice/#valore-di-ritorno","title":"\ud83d\udce4 Valore di ritorno","text":"Tipo restituito Descrizione <code>TEXT</code> Stringa del codice generato, formata come <code>&lt;prefisso&gt;&lt;separatore&gt;&lt;numero_formattato&gt;</code>. <pre><code>               | Esempi: `ORD-000123`, `CL_000045`.                                                                                 |\n</code></pre>"},{"location":"dbzero/script/funzioni/fn_generate_codice/#logica-interna","title":"\ud83d\udd0d Logica interna","text":"<ol> <li>Lettura dei parametri</li> </ol> <pre><code>SELECT prefisso, separatore, lunghezza_numero, nome_sequenza\n  INTO prefix, sep, len, seq_name\n  FROM config.sistema_codici\n WHERE codice_tipo = tipo\n   AND attivo = TRUE;\n</code></pre> <ul> <li> <p>Recupera da <code>config.sistema_codici</code> i valori di:</p> <ul> <li><code>prefisso</code> (testo da anteporre)</li> <li><code>separatore</code> (stringa di separazione)</li> <li><code>lunghezza_numero</code> (numero di cifre per la parte numerica)</li> <li><code>nome_sequenza</code> (nome della sequenza database)</li> <li>Se non trova alcuna riga attiva per quel tipo, <code>seq_name</code> sar\u00e0 <code>NULL</code>.</li> </ul> </li> <li> <p>Generazione del numero tramite sequenza</p> </li> </ul> <pre><code>IF seq_name IS NOT NULL THEN\n  EXECUTE format('SELECT nextval(%L)', seq_name) INTO seq_val;\n  risultato := prefix || sep || lpad(seq_val::TEXT, len, '0');\n  RETURN risultato;\nELSE\n  RAISE EXCEPTION '%',\n    script.fn_get_messaggio('SEQUENZA_NON_CONFIGURATA', tipo);\nEND IF;\n</code></pre> <ul> <li> <p>Se <code>nome_sequenza</code> \u00e8 valorizzato:</p> <ol> <li>Esegue dinamicamente <code>SELECT nextval('nome_sequenza')</code> per ottenere il prossimo valore numerico (<code>seq_val</code>).</li> <li>Converte <code>seq_val</code> in testo e lo riempie a sinistra con zeri fino a raggiungere la lunghezza <code>len</code>.</li> <li>Concatena <code>prefisso</code>, <code>separatore</code> e <code>numero_formattato</code>, restituendo il risultato.</li> <li> <p>Altrimenti:</p> </li> <li> <p>Solleva un\u2019eccezione con il messaggio da <code>script.fn_get_messaggio('SEQUENZA_NON_CONFIGURATA', tipo)</code>.</p> </li> </ol> </li> </ul>"},{"location":"dbzero/script/funzioni/fn_generate_codice/#possibili-eccezioni","title":"\ud83d\udea8 Possibili eccezioni","text":"<ul> <li> <p>SEQUENZA_NON_CONFIGURATA   Viene sollevata quando:</p> </li> <li> <p>Non esiste un record in <code>config.sistema_codici</code> per <code>codice_tipo = tipo</code> con <code>attivo = TRUE</code>.</p> </li> <li>Il campo <code>nome_sequenza</code> \u00e8 <code>NULL</code> (anche se la riga esiste e <code>attivo = TRUE</code>).</li> </ul> <p>Il messaggio di errore \u00e8 generato da:</p> <pre><code>script.fn_get_messaggio('SEQUENZA_NON_CONFIGURATA', tipo)\n</code></pre>"},{"location":"dbzero/script/funzioni/fn_generate_codice/#dipendenze","title":"\ud83d\udd17 Dipendenze","text":"<ul> <li> <p>Tabella di configurazione</p> </li> <li> <p><code>config.sistema_codici</code> deve contenere una riga per ciascun <code>codice_tipo</code> con almeno:</p> <ul> <li><code>prefisso</code>: stringa testuale (es. <code>\"ORD-\"</code>).</li> <li><code>separatore</code>: carattere o stringa (es. <code>\"-\"</code>).</li> <li><code>lunghezza_numero</code>: numero intero (es. <code>6</code>).</li> <li><code>nome_sequenza</code>: nome di una sequenza SQL esistente (es. <code>\"seq_ordine\"</code>).</li> <li><code>attivo = TRUE</code></li> </ul> </li> <li> <p>Sequenza database</p> </li> <li> <p>La sequenza indicata in <code>nome_sequenza</code> deve esistere, ad esempio:</p> <pre><code>CREATE SEQUENCE seq_ordine;\n</code></pre> </li> <li> <p>Funzione di supporto</p> </li> <li> <p><code>script.fn_get_messaggio(codice_errore TEXT, elemento TEXT)</code>     Restituisce il testo del messaggio di errore associato al codice di errore e all\u2019elemento specificato.</p> </li> </ul>"},{"location":"dbzero/script/funzioni/fn_generate_codice/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi operativi","text":"<ul> <li>Parametricit\u00e0   Consente di modificare prefisso, separatore e lunghezza numerica senza toccare il codice della funzione.</li> <li>Unicit\u00e0 garantita   L\u2019uso della sequenza database (<code>nextval</code>) assicura incrementi atomici e codici unici anche in contesti concorrenti.</li> <li>Controllo di configurazione   Se <code>attivo = FALSE</code> o manca la riga di configurazione, viene immediatamente segnalato un errore, evitando generazioni spurie.</li> <li>Estendibilit\u00e0   Per nuovi tipi di codice, basta inserire in <code>config.sistema_codici</code> una nuova riga; la funzione li gestir\u00e0 automaticamente.</li> </ul> <p>\ud83e\udde0 \u201cQuesta funzione restituisce un codice conforme alle specifiche di <code>config.sistema_codici</code>. Se la configurazione non \u00e8 presente o \u00e8 disattivata, solleva un\u2019eccezione descrittiva.\u201d</p>"},{"location":"dbzero/script/funzioni/fn_generate_codice/#funzione-fn_generate_codice","title":"\u2699\ufe0f Funzione <code>fn_generate_codice</code>","text":"<pre><code>CREATE FUNCTION fn_generate_codice(tipo text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_generate_codice/#create-or-replace-function-scriptfn_generate_codicetipo-text-returns-text-language-plpgsql-as-function-declare-seq_val-bigint-prefix-text-sep-text-len-int-seq_name-text-risultato-text-begin-crea-la-funzione-generica-scriptfn_generate_codicetipo-text-che-legge-da-configsistema_codici-i-parametri-per-quel-tipo-invoca-nextval-sul-nome-di-sequenza-concatena-prefisso-separatore-e-numero-formattato-select-prefisso-separatore-lunghezza_numero-nome_sequenza-into-prefix-sep-len-seq_name-from-configsistema_codici-where-codice_tipo-tipo-and-attivo-true-if-seq_name-is-not-null-then-execute-formatselect-nextvall-seq_name-into-seq_val-risultato-prefix-sep-lpadseq_valtext-len-0-return-risultato-else-raise-exception-scriptfn_get_messaggiosequenza_non_configurata-tipo-end-if-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_generate_codice(tipo text)\n RETURNS text\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n  seq_val    BIGINT;\n  prefix     TEXT;\n  sep        TEXT;\n  len        INT;\n  seq_name   TEXT;\n  risultato  TEXT;\nBEGIN\n  /*    Crea la funzione generica script.fn_generate_codice(tipo TEXT) che:\n        - legge da config.sistema_codici i parametri per quel tipo\n        - invoca nextval sul nome di sequenza\n        - concatena prefisso, separatore e numero formattato\n  */\n  SELECT prefisso, separatore, lunghezza_numero, nome_sequenza\n    INTO prefix, sep, len, seq_name\n    FROM config.sistema_codici\n   WHERE codice_tipo = tipo\n     AND attivo = TRUE;\n\n  IF seq_name IS NOT NULL THEN\n    EXECUTE format('SELECT nextval(%L)', seq_name) INTO seq_val;\n    risultato := prefix || sep || lpad(seq_val::TEXT, len, '0');\n    RETURN risultato;\n  ELSE\n    RAISE EXCEPTION '%',\n      script.fn_get_messaggio('SEQUENZA_NON_CONFIGURATA', tipo);\n  END IF;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_get_contatti/","title":"Fn get contatti","text":""},{"location":"dbzero/script/funzioni/fn_get_contatti/#documentazione-concettuale-funzione-scriptfn_get_contatti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_contatti</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - anagrafiche.soggetti  - anagrafiche.soggetti_ruoli  - anagrafiche.contatti  - config.tipi_contatti  - config.utilities </p> <p>Approfondimento funzioni :   - anagrafiche.trgfn_contatti_ins_upd_set_default_contatto  - script.fn_log_and_raise_error </p> <p>La funzione <code>script.fn_get_contatti(p_soggetto_id UUID, p_soggetto_ruolo_id INTEGER DEFAULT NULL, p_utility_id INTEGER DEFAULT NULL, p_tipo_contatto_id INTEGER DEFAULT NULL)</code> restituisce un singolo contatto per ogni <code>tipo_contatto_id</code>, applicando una logica di priorit\u00e0 basata sul contesto e validando i parametri con logging centralizzato.</p>"},{"location":"dbzero/script/funzioni/fn_get_contatti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Selezione univoca per tipo   Ottenere il contatto pi\u00f9 rilevante per ciascun <code>tipo_contatto_id</code> rispetto ai parametri forniti.</li> <li> <p>Gerarchia di contesti   Filtra e ordina i contatti in base alla priorit\u00e0:</p> </li> <li> <p>soggetto + ruolo + utility</p> </li> <li>soggetto + ruolo</li> <li>soggetto + utility</li> <li>solo soggetto (fallback soggetto garantisce che, se non esistono contatti per propriet\u00e0 o utility, si recuperino comunque i contatti generici del soggetto.)</li> <li>Validazione e logging   Verifica che <code>p_soggetto_id</code> sia valorizzato; in caso contrario utilizza <code>script.fn_log_and_raise_error</code> per loggare e sollevare un\u2019eccezione con codice <code>ERRORE_PARAMETRI</code>.</li> <li>Centralizzazione della logica   La tabella risultante \u00e8 pensata come unico punto di accesso per il reperimento contatti: consente di applicare filtri successivi (es. solo default, ordini personalizzati, ecc.) senza replicare la logica di fallback in ogni query.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_contatti/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Default Descrizione <code>p_soggetto_id</code> <code>UUID</code> \u2014 Obbligatorio: ID del soggetto. Se <code>NULL</code>, genera errore centralizzato. <code>p_soggetto_ruolo_id</code> <code>INT</code> <code>NULL</code> If present, filtra i contatti legati a quel ruolo del soggetto. <code>p_utility_id</code> <code>INT</code> <code>NULL</code> If present, filtra i contatti associati a una specifica utility. <code>p_tipo_contatto_id</code> <code>INT</code> <code>NULL</code> If present, filtra per un particolare tipo di contatto (es. email, telefono)."},{"location":"dbzero/script/funzioni/fn_get_contatti/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Validazione <code>p_soggetto_id</code>    Se <code>p_soggetto_id</code> \u00e8 <code>NULL</code>, attiva il CTE <code>validate</code> che chiama:</li> </ol> <pre><code>script.fn_log_and_raise_error(\n  'database',\n  'fn_get_contatti',\n  'ERRORE_PARAMETRI',\n  jsonb_build_object(\n    'soggetto_id', p_soggetto_id,\n    'soggetto_ruolo_id', p_soggetto_ruolo_id,\n    'utility_id', p_utility_id,\n    'tipo_contatto_id', p_tipo_contatto_id\n  ),\n  COALESCE(p_soggetto_id::text,'NULL')\n)\n</code></pre> <ol> <li>Costruzione del CTE <code>candidates</code>    Seleziona da <code>anagrafiche.contatti</code> i record matching <code>p_soggetto_id</code>, <code>p_soggetto_ruolo_id</code>, <code>p_utility_id</code>, <code>p_tipo_contatto_id</code>, calcolando <code>priority</code>:</li> </ol> <pre><code>CASE\n  WHEN c.soggetto_ruolo_id IS NOT DISTINCT FROM p_soggetto_ruolo_id\n    AND c.utility_id IS NOT DISTINCT FROM p_utility_id THEN 1\n  WHEN c.soggetto_ruolo_id IS NOT DISTINCT FROM p_soggetto_ruolo_id THEN 2\n  WHEN c.utility_id IS NOT DISTINCT FROM p_utility_id THEN 3\n  ELSE 4\nEND AS priority\n</code></pre> <ol> <li>Selezione del contatto per tipo    Applica:</li> </ol> <pre><code>ROW_NUMBER() OVER (\n  PARTITION BY candidates.tipo_contatto_id\n  ORDER BY candidates.priority\n) AS rn\n</code></pre> <p>e filtra <code>WHERE rn = 1</code>.</p> <ol> <li>Restituzione dei risultati    Restituisce le colonne:    <code>id</code>, <code>tipo_contatto_id</code>, <code>soggetto_id</code>, <code>soggetto_ruolo_id</code>, <code>utility_id</code>, <code>nominativo</code>, <code>email</code>, <code>telefono</code>, <code>cellulare</code>, <code>pec</code>, <code>note</code>, <code>is_default</code>, <code>default_context</code>.</li> </ol> <p>\ud83e\udde0 \u201cEncapsulare in SQL nativo logica complessa di fallback e validazione semplifica l\u2019uso e la manutenzione.\u201d</p>"},{"location":"dbzero/script/funzioni/fn_get_contatti/#funzione-fn_get_contatti","title":"\u2699\ufe0f Funzione <code>fn_get_contatti</code>","text":"<pre><code>CREATE FUNCTION fn_get_contatti(p_soggetto_id uuid, p_soggetto_ruolo_id integer, p_utility_id integer, p_tipo_contatto_id integer)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_get_contatti/#create-or-replace-function-scriptfn_get_contattip_soggetto_id-uuid-p_soggetto_ruolo_id-integer-default-nullinteger-p_utility_id-integer-default-nullinteger-p_tipo_contatto_id-integer-default-nullinteger-returns-tableid-integer-tipo_contatto_id-integer-soggetto_id-uuid-soggetto_ruolo_id-integer-utility_id-integer-nominativo-character-varying-email-character-varying-telefono-character-varying-cellulare-character-varying-pec-character-varying-note-text-is_default-boolean-default_context-character-varying-language-sql-as-function-1-validate-mandatory-p_soggetto_id-if-null-raises-via-fn_log_and_raise_error-2-build-candidates-filtered-by-parameters-and-assign-a-priority-1-soggettoruoloutility-2-soggettoruolo-3-soggettoutility-4-soggetto-fallback-3-for-each-tipo_contatto_id-pick-the-row-with-lowest-priority-with-validate-as-select-scriptfn_log_and_raise_error-database-fn_get_contatti-errore_parametri-jsonb_build_object-soggetto_id-p_soggetto_id-soggetto_ruolo_idp_soggetto_ruolo_id-utility_id-p_utility_id-tipo_contatto_id-p_tipo_contatto_id-nulluuid-p_tx_id-null-helper-lo-ricrea-coalescep_soggetto_idtext-null-where-p_soggetto_id-is-null-candidates-as-select-cid-ctipo_contatto_id-csoggetto_id-csoggetto_ruolo_id-cutility_id-cnominativo-cemail-ctelefono-ccellulare-cpec-cnote-cis_default-cdefault_context-case-when-csoggetto_ruolo_id-is-not-distinct-from-p_soggetto_ruolo_id-and-cutility_id-is-not-distinct-from-p_utility_id-then-1-when-csoggetto_ruolo_id-is-not-distinct-from-p_soggetto_ruolo_id-then-2-when-cutility_id-is-not-distinct-from-p_utility_id-then-3-else-4-end-as-priority-from-anagrafichecontatti-as-c-where-csoggetto_id-p_soggetto_id-and-csoggetto_ruolo_id-is-null-or-csoggetto_ruolo_id-is-not-distinct-from-p_soggetto_ruolo_id-and-cutility_id-is-null-or-cutility_id-is-not-distinct-from-p_utility_id-and-p_tipo_contatto_id-is-null-or-ctipo_contatto_id-p_tipo_contatto_id-select-subid-subtipo_contatto_id-subsoggetto_id-subsoggetto_ruolo_id-subutility_id-subnominativo-subemail-subtelefono-subcellulare-subpec-subnote-subis_default-subdefault_context-from-select-candidates-row_number-over-partition-by-candidatestipo_contatto_id-order-by-candidatespriority-as-rn-from-candidates-as-sub-where-subrn-1-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_get_contatti(p_soggetto_id uuid, p_soggetto_ruolo_id integer DEFAULT NULL::integer, p_utility_id integer DEFAULT NULL::integer, p_tipo_contatto_id integer DEFAULT NULL::integer)\n RETURNS TABLE(id integer, tipo_contatto_id integer, soggetto_id uuid, soggetto_ruolo_id integer, utility_id integer, nominativo character varying, email character varying, telefono character varying, cellulare character varying, pec character varying, note text, is_default boolean, default_context character varying)\n LANGUAGE sql\nAS $function$\n\n/*\n  1) Validate mandatory p_soggetto_id: if NULL, raises via fn_log_and_raise_error.\n  2) Build `candidates` filtered by parameters and assign a `priority`:\n    - 1: soggetto+ruolo+utility\n    - 2: soggetto+ruolo\n    - 3: soggetto+utility\n    - 4: soggetto (fallback)\n  3) For each tipo_contatto_id pick the row with lowest priority.\n*/\nWITH validate AS (\n  SELECT script.fn_log_and_raise_error(\n    'database',\n    'fn_get_contatti',\n    'ERRORE_PARAMETRI',\n    jsonb_build_object(\n      'soggetto_id',      p_soggetto_id,\n      'soggetto_ruolo_id',p_soggetto_ruolo_id,\n      'utility_id',       p_utility_id,\n      'tipo_contatto_id', p_tipo_contatto_id\n    ),\n    NULL::uuid,                                  -- p_tx_id (NULL \u2192 helper lo ricrea)\n    COALESCE(p_soggetto_id::text, 'NULL')\n  )\n  WHERE p_soggetto_id IS NULL\n),\ncandidates AS (\n  SELECT\n    c.id,\n    c.tipo_contatto_id,\n    c.soggetto_id,\n    c.soggetto_ruolo_id,\n    c.utility_id,\n    c.nominativo,\n    c.email,\n    c.telefono,\n    c.cellulare,\n    c.pec,\n    c.note,\n    c.is_default,\n    c.default_context,\n\nCASE\n  WHEN c.soggetto_ruolo_id IS NOT DISTINCT FROM p_soggetto_ruolo_id\n  AND c.utility_id        IS NOT DISTINCT FROM p_utility_id THEN 1\n  WHEN c.soggetto_ruolo_id IS NOT DISTINCT FROM p_soggetto_ruolo_id THEN 2\n  WHEN c.utility_id        IS NOT DISTINCT FROM p_utility_id THEN 3\n  ELSE 4\n  END AS priority\n  FROM anagrafiche.contatti AS c\n  WHERE c.soggetto_id = p_soggetto_id\n  AND (c.soggetto_ruolo_id IS NULL OR c.soggetto_ruolo_id IS NOT DISTINCT FROM p_soggetto_ruolo_id)\n  AND (c.utility_id        IS NULL OR c.utility_id        IS NOT DISTINCT FROM p_utility_id)\n  AND (p_tipo_contatto_id IS NULL OR c.tipo_contatto_id = p_tipo_contatto_id)\n  )\n\nSELECT\n  sub.id,\n  sub.tipo_contatto_id,\n  sub.soggetto_id,\n  sub.soggetto_ruolo_id,\n  sub.utility_id,\n  sub.nominativo,\n  sub.email,\n  sub.telefono,\n  sub.cellulare,\n  sub.pec,\n  sub.note,\n  sub.is_default,\n  sub.default_context\nFROM (\n  SELECT\n    candidates.*,\n    ROW_NUMBER() OVER (\n      PARTITION BY candidates.tipo_contatto_id\n      ORDER BY candidates.priority\n    ) AS rn\n  FROM candidates\n) AS sub\nWHERE sub.rn = 1;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_get_default_by_param/","title":"Fn get default by param","text":""},{"location":"dbzero/script/funzioni/fn_get_default_by_param/#documentazione-concettuale-funzione-scriptfn_get_default_by_param","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_default_by_param()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>config.parameters</li> <li>config.parameter_overrides</li> </ul> <p>Approfondimento funzioni:</p> <ul> <li>script.fn_get_parameter_full</li> <li>script.fn_log_and_raise_error</li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_default_by_param/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Recuperare in modo dinamico un valore di PK (o altro identificativo) da qualsiasi tabella, basandosi su un codice parametro. La funzione:</p> <ol> <li>Legge il valore testuale del parametro specificato (<code>p_param_code</code>) tramite <code>fn_get_parameter_full</code>.</li> <li>Esegue una query dinamica su <code>p_table_schema.p_table_name</code>, filtrando <code>p_filter_column = parametro_letto</code>, e restituisce il primo campo della riga (presumibile PK) sempre come TEXT.</li> <li>Se non trova alcun record, registra l\u2019errore e solleva un\u2019eccezione <code>E_DEFAULT_ERRATO</code> con <code>fn_log_and_raise_error</code>.</li> </ol>"},{"location":"dbzero/script/funzioni/fn_get_default_by_param/#collegamenti","title":"\ud83d\udd17 Collegamenti","text":"<ul> <li><code>script.fn_get_parameter_full</code> \u2013 recupera il valore di filtro (stringa) dai parametri tabellari.</li> <li><code>script.fn_log_and_raise_error</code> \u2013 gestisce il logging e il sollevamento dell\u2019errore in caso di mancato riscontro.</li> <li>pg_catalog.pg_attribute, pg_class, pg_namespace \u2013 utilizzati per ricavare dinamicamente il primo attributo (presumibile PK) della tabella target.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_default_by_param/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li> <p>Parametri di input:</p> </li> <li> <p><code>p_table_schema</code>: schema di destinazione (es. <code>config</code>).</p> </li> <li><code>p_table_name</code>: nome della tabella (es. <code>states</code>).</li> <li><code>p_filter_column</code>: colonna su cui filtrare (es. <code>codice_iso3</code>).</li> <li><code>p_param_code</code>: codice parametro da leggere (es. <code>state_code_iso3</code>).</li> <li><code>p_function_name</code>: contesto/funzione chiamante, usato nel log.</li> <li> <p>Output:</p> </li> <li> <p>Ritorna TEXT con il valore letto (ID), da castare dal chiamante se serve (INTEGER, UUID, ecc.).</p> </li> <li> <p>Sicurezza:</p> </li> <li> <p>L\u2019uso di <code>EXECUTE format(...) USING v_param_val</code> previene SQL injection sul filtro.</p> </li> <li>Viene sempre restiuito un singolo risultato (<code>LIMIT 1</code>).</li> <li> <p>Error handling:</p> </li> <li> <p>Se la query non restituisce righe, la funzione chiama <code>fn_log_and_raise_error</code>, registrando contesto e messaggio personalizzato.</p> </li> <li> <p>Uso consigliato:</p> </li> <li> <p>Attribuire valori di default a entit\u00e0 che fanno riferimento a codici esterni (es. <code>state_code_iso2</code> \u2192 <code>stati.id</code>).</p> </li> <li>Inserire all\u2019interno di procedure o trigger prima delle operazioni che richiedono il lookup.</li> </ul> <p>\ud83e\udde0 \u201c<code>fn_get_default_by_param</code> semplifica il recupero dinamico di chiavi primarie basate su parametri di configurazione, garantendo sicurezza, logging e flessibilit\u00e0 schema\u2010agnostica.\u201d</p>"},{"location":"dbzero/script/funzioni/fn_get_default_by_param/#funzione-fn_get_default_by_param","title":"\u2699\ufe0f Funzione <code>fn_get_default_by_param</code>","text":"<pre><code>CREATE FUNCTION fn_get_default_by_param(p_table_schema text, p_table_name text, p_filter_column text, p_param_code text, p_function_name text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_get_default_by_param/#create-or-replace-function-scriptfn_get_default_by_paramp_table_schema-text-p_table_name-text-p_filter_column-text-p_param_code-text-p_function_name-text-returns-text-language-plpgsql-as-function-declare-v_param_val-text-v_lookup_id-text-v_pk_col-text-begin-input-p_table_schema-schema-della-tabella-da-cui-recuperare-il-valore-p_table_name-nome-della-tabella-da-cui-recuperare-il-valore-p_filter_column-colonna-della-tabella-da-usare-come-filtro-presumibilmente-una-pk-o-indice-univoco-esempio-codice_iso3-p_param_code-codice-del-parametro-da-cui-recuperare-il-valore-di-filtro-esempio-state_code_iso3-output-v_lookup_id-valore-trovato-nella-tabella-sempre-come-text-caller-deve-castare-in-seguito-rappresenta-id-del-record-trovato-1-recupera-il-valore-del-parametro-testuale-v_param_val-scriptfn_get_parameter_full-p_param_code-null-tenant_id-null-user_id-session_user-p_function_name-11-calcola-la-pk-della-tabella-dinamica-select-aattname-into-v_pk_col-from-pg_attribute-a-join-pg_class-c-on-aattrelid-coid-join-pg_namespace-n-on-noid-crelnamespace-where-nnspname-p_table_schema-and-crelname-p_table_name-and-aattnum0-order-by-aattnum-limit-1-2-esegue-il-lookup-dinamico-execute-format-select-itext-from-ii-where-i-1-limit-1-v_pk_col-1-i-p_table_schema-2-i-p_table_name-3-i-p_filter_column-4-i-into-v_lookup_id-using-v_param_val-3-se-non-ho-trovato-nulla-loggo-e-sollevo-tramite-fn_log_and_raise_error-if-v_lookup_id-is-null-then-perform-scriptfn_log_and_raise_error-database-p_function_name-e_default_errato-jsonb_build_object-tabella-p_table_schemap_table_name-parametro-p_param_code-valore-v_param_val-nulluuid-format-la-tabella-s-parametro-s-non-ha-valori-per-s-p_table_schemap_table_name-p_param_code-v_param_val-end-if-return-v_lookup_id-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_get_default_by_param(p_table_schema text, p_table_name text, p_filter_column text, p_param_code text, p_function_name text)\n RETURNS text\n LANGUAGE plpgsql\nAS $function$\n   DECLARE\n     v_param_val   TEXT;\n     v_lookup_id   TEXT;\n     v_pk_col    TEXT;\n   BEGIN\n\n     -- -----------------------------------------------------\n     -- Input\n     -- p_table_schema: schema della tabella da cui recuperare il valore\n     -- p_table_name: nome della tabella da cui recuperare il valore\n     -- p_filter_column: colonna della tabella da usare come filtro (presumibilmente una PK o indice univoco esempio: codice_iso3)\n     -- p_param_code: codice del parametro da cui recuperare il valore di filtro (esempio: 'state_code_iso3')\n     -- Output\n     -- v_lookup_id: valore trovato nella tabella, sempre come TEXT (caller deve castare in seguito) rappresenta id del record trovato.\n     -- -----------------------------------------------------\n\n     -- 1) Recupera il valore del parametro (testuale)\n     v_param_val := script.fn_get_parameter_full(\n       p_param_code,\n       NULL,       -- tenant_id\n       NULL,       -- user_id\n       session_user,\n       p_function_name \n     );\n\n     -- 1.1) calcola la PK della tabella dinamica\n       SELECT a.attname\n         INTO v_pk_col\n       FROM pg_attribute a\n       JOIN pg_class   c ON a.attrelid   = c.oid\n       JOIN pg_namespace n ON n.oid      = c.relnamespace\n       WHERE n.nspname   = p_table_schema\n         AND c.relname    = p_table_name\n         AND a.attnum&gt;0\n       ORDER BY a.attnum\n       LIMIT 1;\n\n     -- 2) Esegue il lookup dinamico\n     EXECUTE format(\n       'SELECT %I::text\n         FROM %I.%I\n         WHERE %I = $1\n         LIMIT 1',\n       -- \n        v_pk_col,          -- 1\u00b0 %I\n         p_table_schema,    -- 2\u00b0 %I\n         p_table_name,      -- 3\u00b0 %I\n         p_filter_column    -- 4\u00b0 %I\n     )\n     INTO v_lookup_id\n     USING v_param_val;\n\n     -- 3) Se non ho trovato nulla, loggo e sollevo tramite fn_log_and_raise_error\n       IF v_lookup_id IS NULL THEN\n         PERFORM script.fn_log_and_raise_error(\n           'database',\n           p_function_name ,\n           'E_DEFAULT_ERRATO',\n           jsonb_build_object(\n             'tabella',   p_table_schema||'.'||p_table_name,\n             'parametro', p_param_code,\n             'valore',    v_param_val\n           ),\n           NULL::uuid,\n           format(\n             'La tabella %s parametro %s non ha valori per %s',\n             p_table_schema||'.'||p_table_name,\n             p_param_code,\n             v_param_val\n           )\n         );\n       END IF;\n\n     RETURN v_lookup_id;\n   END;\n $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_get_indirizzi_by_ruolo/","title":"\u2699\ufe0f Funzione <code>fn_get_indirizzi_by_ruolo</code>","text":"<pre><code>CREATE FUNCTION fn_get_indirizzi_by_ruolo(p_soggetto_ruolo_id integer)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_get_indirizzi_by_ruolo/#create-or-replace-function-scriptfn_get_indirizzi_by_ruolop_soggetto_ruolo_id-integer-returns-tabletipo_indirizzo-character-varying-indirizzo_completo-text-geoloc-geometry-language-sql-stable-as-function-select-ticod_int_tipo_indirizzo-as-tipo_indirizzo-1-dettaglio-normalizzato-viacivico-comunecap-da-configstradario-case-when-aiindirizzo_dettaglio_id-is-not-null-then-trim-adindirizzo_normalizzato-codescrizione-coalesce-cpcodice_postale-2-indirizzo-libero-nazionale-when-aiindirizzo_libero-is-not-null-then-trim-aiindirizzo_libero-coalesce-codescrizione-coalesce-cpcodice_postale-3-estero-internazionale-else-trim-aiindirizzo_libero-coalesceailocality-coalesce-aiadministrative_area-coalesce-aipostal_box-end-as-indirizzo_completo-geolocalizzazione-prioritaria-dettaglio-indirizzo-coalesceadcivic_geoloc-aigeoloc-as-geoloc-from-anagraficheindirizzi-ai-join-configtipi_indirizzi-ti-on-tiid-aitipo_indirizzo_id-left-join-anagraficheindirizzi_dettaglio-ad-on-adid-aiindirizzo_dettaglio_id-left-join-configcomuni-co-on-coid-aicomune_id-left-join-configcodici_postali-cp-on-cpid-aicodice_postale_id-where-aisoggetto_ruolo_id-p_soggetto_ruolo_id-order-by-ticod_int_tipo_indirizzo-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_get_indirizzi_by_ruolo(p_soggetto_ruolo_id integer)\n RETURNS TABLE(tipo_indirizzo character varying, indirizzo_completo text, geoloc geometry)\n LANGUAGE sql\n STABLE\nAS $function$\nSELECT\n  ti.cod_int_tipo_indirizzo  AS tipo_indirizzo,\n  -- 1) dettaglio normalizzato: via/civico + Comune/CAP da config.stradario\n  CASE\n    WHEN ai.indirizzo_dettaglio_id IS NOT NULL THEN\n      trim(\n        ad.indirizzo_normalizzato || \n        ', ' || co.descrizione ||\n        COALESCE(' ' || cp.codice_postale, '')\n      )\n       -- 2) indirizzo libero (nazionale)\n    WHEN ai.indirizzo_libero IS NOT NULL THEN\n      trim(\n        ai.indirizzo_libero ||\n        COALESCE(', ' || co.descrizione, '') ||\n        COALESCE(' ' || cp.codice_postale, '')\n      )\n      -- 3) estero / internazionale\n    ELSE\n      trim(\n        ai.indirizzo_libero ||\n        COALESCE(ai.locality, '') ||\n        COALESCE(', ' || ai.administrative_area, '') ||\n        COALESCE(', ' || ai.postal_box, '')\n      )\n  END AS indirizzo_completo,\n  -- Geolocalizzazione prioritaria: dettaglio \u2192 indirizzo\n  COALESCE(ad.civic_geoloc, ai.geoloc) AS geoloc\nFROM anagrafiche.indirizzi ai\nJOIN config.tipi_indirizzi ti ON ti.id = ai.tipo_indirizzo_id\nLEFT JOIN anagrafiche.indirizzi_dettaglio ad ON ad.id = ai.indirizzo_dettaglio_id\nLEFT JOIN config.comuni co ON co.id = ai.comune_id\nLEFT JOIN config.codici_postali cp ON cp.id = ai.codice_postale_id\nWHERE ai.soggetto_ruolo_id = p_soggetto_ruolo_id\nORDER BY ti.cod_int_tipo_indirizzo;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_get_indirizzo/","title":"\u2699\ufe0f Funzione <code>fn_get_indirizzo</code>","text":"<pre><code>CREATE FUNCTION fn_get_indirizzo(p_soggetto_ruolo_id integer, p_tipo_codice character varying)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_get_indirizzo/#create-or-replace-function-scriptfn_get_indirizzop_soggetto_ruolo_id-integer-p_tipo_codice-character-varying-returns-tableindirizzo_completo-text-geoloc-geometry-language-sql-stable-as-function-select-indirizzo_completo-geoloc-from-scriptfn_get_indirizzi_by_ruolop_soggetto_ruolo_id-where-tipo_indirizzo-p_tipo_codice-limit-1-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_get_indirizzo(p_soggetto_ruolo_id integer, p_tipo_codice character varying)\n RETURNS TABLE(indirizzo_completo text, geoloc geometry)\n LANGUAGE sql\n STABLE\nAS $function$\nSELECT indirizzo_completo, geoloc\nFROM script.fn_get_indirizzi_by_ruolo(p_soggetto_ruolo_id)\nWHERE tipo_indirizzo = p_tipo_codice\nLIMIT 1;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_get_messaggio/","title":"Fn get messaggio","text":""},{"location":"dbzero/script/funzioni/fn_get_messaggio/#documentazione-concettuale-funzione-scriptfn_get_messaggio","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_messaggio</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:  - config.messaggi_errore </p> <p>La funzione <code>script.fn_get_messaggio(p_codice text, p_valore text DEFAULT NULL, p_lingua text DEFAULT NULL) RETURNS text</code> recupera e formatta un messaggio dall\u2019archivio centralizzato, con supporto per placeholder e internazionalizzazione.</p>"},{"location":"dbzero/script/funzioni/fn_get_messaggio/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Centralizzare i testi   Conservare tutti i messaggi (errori, avvisi, info) in tabella, evitando hard\u2011coding in trigger, procedure o sorgenti SQL.</li> <li> <p>Internazionalizzazione avanzata   Selezionare dinamicamente la lingua di output in base a:</p> </li> <li> <p>parametro <code>p_lingua</code></p> </li> <li>impostazione configurazione <code>myapp.user_language</code></li> <li>default <code>'it'</code></li> <li>Placeholder dinamici   Utilizzare <code>format()</code> per sostituire i placeholder <code>%s</code> nel template con i valori runtime, abilitando messaggi parametrizzati.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_messaggio/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Default Descrizione <code>p_codice</code> <code>text</code> \u2014 Codice del messaggio (<code>codice</code> in <code>config.messaggi_errore</code>). <code>p_valore</code> <code>text</code> <code>NULL</code> Valore da sostituire al placeholder <code>%s</code>; se <code>NULL</code>, nessuna         sostituzione viene applicata. <code>p_lingua</code> <code>text</code> <code>NULL</code> Lingua desiderata (es. <code>it</code>, <code>en</code>); se <code>NULL</code>, usa <code>myapp.user_language</code> o fallback a <code>it</code>."},{"location":"dbzero/script/funzioni/fn_get_messaggio/#comportamento-interno","title":"\u2699\ufe0f Comportamento Interno","text":"<ol> <li>Determinazione lingua effettiva</li> </ol> <p><pre><code>lingua_eff := coalesce(\n  p_lingua,\n  current_setting('myapp.user_language', true),\n  'it'\n);\n</code></pre> 2. Recupero del template</p> <p><pre><code>SELECT messaggio\n  INTO tmpl\n  FROM config.messaggi_errore\n WHERE codice = p_codice\n   AND lingua = lingua_eff;\n</code></pre> 3. Messaggio non definito</p> <ul> <li> <p>Se <code>tmpl IS NULL</code>, restituisce:</p> <p><pre><code>[MESSAGGIO NON DEFINITO: &lt;p_codice&gt;]\n</code></pre> 4. Sostituzione placeholder</p> </li> <li> <p>Se <code>p_valore IS NOT NULL</code>, restituisce:</p> <p><pre><code>format(tmpl, p_valore)\n</code></pre>    * Altrimenti restituisce <code>tmpl</code> originale.</p> </li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_messaggio/#valore-di-ritorno","title":"\ud83d\udd12 Valore di Ritorno","text":"<ul> <li><code>text</code>   Messaggio finale, con eventuale sostituzione di <code>%s</code> applicata.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_messaggio/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Manutenzione semplificata   Modifiche ai messaggi avvengono unicamente in tabella, senza interventi su sorgenti PL/pgSQL.</li> <li>Coerenza e uniformit\u00e0   Un solo punto di definizione e recupero per tutti i testi applicativi.</li> <li>Internazionalizzazione flessibile   Supporto per lingua utente tramite GUC e fallback gerarchico.</li> <li>Messaggi parametrizzati   Placeholder <code>%s</code> sostituiti dinamicamente, per contesti runtime variabili.</li> <li>Best practice   Separazione tra codici di business e contenuti testuali, migliorando qualit\u00e0 e riusabilit\u00e0.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare e parametrizzare i messaggi in tabella con supporto multilingua e placeholder <code>%s</code> \u00e8 una best practice per mantenere il codice pulito, manutenibile e traducibile.\u201d</p>"},{"location":"dbzero/script/funzioni/fn_get_messaggio/#funzione-fn_get_messaggio","title":"\u2699\ufe0f Funzione <code>fn_get_messaggio</code>","text":"<pre><code>CREATE FUNCTION fn_get_messaggio(p_codice text, p_valore text, p_lingua text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_get_messaggio/#create-or-replace-function-scriptfn_get_messaggiop_codice-text-p_valore-text-default-nulltext-p_lingua-text-default-nulltext-returns-text-language-plpgsql-immutable-as-function-declare-tmpl-text-lingua_eff-text-begin-restituisce-il-testo-messaggio-viene-recupearto-il-messaggio-se-non-esiste-si-rimanda-lerrore-messaggio-non-definito-se-esiste-vengono-sotituiti-tutti-gli-eventuali-placeholder-con-larray-risolvo-la-lingua-1-quella-passata-2-altrimenti-la-guc-myappuser_language-3-altrimenti-it-lingua_eff-coalesce-p_lingua-current_settingmyappuser_language-true-it-select-messaggio-into-tmpl-from-configmessaggi_errore-where-codice-p_codice-and-lingua-lingua_eff-if-tmpl-is-null-then-return-messaggio-non-definito-p_codice-end-if-if-p_valore-is-not-null-then-return-formattmpl-p_valore-else-return-tmpl-end-if-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_get_messaggio(p_codice text, p_valore text DEFAULT NULL::text, p_lingua text DEFAULT NULL::text)\n RETURNS text\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$\n  DECLARE\n    tmpl TEXT;\n    lingua_eff text;\n  BEGIN\n    /* \n     Restituisce il testo messaggio\n\n     Viene recupearto il messaggio se non esiste si rimanda l'errore messaggio non definito  , \n     se esiste vengono sotituiti tutti gli eventuali placeholder con l'array\n  */\n    -- Risolvo la lingua: \n    --   1) quella passata, \n    --   2) altrimenti la GUC myapp.user_language, \n    --   3) altrimenti 'it'\n    lingua_eff := coalesce(\n      p_lingua,\n      current_setting('myapp.user_language', true),\n      'it'\n    );\n\n    SELECT messaggio INTO tmpl\n      FROM config.messaggi_errore\n    WHERE codice  = p_codice\n      AND lingua  = lingua_eff;\n\n    IF tmpl IS NULL THEN\n      RETURN '[MESSAGGIO NON DEFINITO: ' || p_codice || ']';\n    END IF;\n\n    IF p_valore IS NOT NULL THEN\n      RETURN format(tmpl, p_valore);\n    ELSE\n      RETURN tmpl;\n    END IF;\n  END;\n  $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_get_parameter_full/","title":"Fn get parameter full","text":""},{"location":"dbzero/script/funzioni/fn_get_parameter_full/#documentazione-concettuale-funzione-scriptfn_get_parameter_full","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_parameter_full</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - config.parameters  - config.parameter_overrides </p> <p>Approfondimento funzioni :   - script.fn_log_and_raise_error </p> <p>La funzione <code>script.fn_get_parameter_full(p_code TEXT, p_tenant_id INTEGER DEFAULT NULL, p_user_id INTEGER DEFAULT NULL, p_session_key TEXT DEFAULT NULL, p_function_name TEXT DEFAULT NULL) RETURNS TEXT</code> restituisce il valore di un parametro, applicando una catena di override con priorit\u00e0:</p> <ol> <li>Function (<code>p_function_name</code>)</li> <li>Session (<code>p_session_key</code>)</li> <li>User (<code>p_user_id</code>)</li> <li>Tenant (<code>p_tenant_id</code>)</li> <li>Default (<code>config.parameters.default_value</code>)</li> </ol> <p>Se il parametro non esiste, viene loggato un errore e sollevata un\u2019eccezione.</p>"},{"location":"dbzero/script/funzioni/fn_get_parameter_full/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Ricerca safe del parametro   Verificare l\u2019esistenza del parametro in <code>config.parameters</code> e recuperare il suo <code>default_value</code>.</li> <li>Override gerarchico   Cercare eventuali override in <code>config.parameter_overrides</code> secondo la priorit\u00e0: function \u2192 session \u2192 user \u2192 tenant.</li> <li>Centralizzazione della logica   Un\u2019unica funzione per gestire la complessit\u00e0 degli override, evitando duplicazioni nell\u2019applicazione.</li> <li>Gestione degli errori   Se <code>p_code</code> non \u00e8 presente in <code>config.parameters</code>, viene chiamato <code>script.fn_log_and_raise_error</code> con codice <code>ERRORE_PARAMETRI_TABELLA</code>.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_parameter_full/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Default Descrizione <code>p_code</code> <code>TEXT</code> \u2014 Codice del parametro da cercare in <code>config.parameters.code</code>. <code>p_tenant_id</code> <code>INTEGER</code> <code>NULL</code> ID del tenant per override di scope <code>tenant</code>. <code>p_user_id</code> <code>INTEGER</code> <code>NULL</code> ID dell\u2019utente (es. da Django) per override di scope <code>user</code>. <code>p_session_key</code> <code>TEXT</code> <code>NULL</code> Chiave di sessione per override di scope <code>session</code>. <code>p_function_name</code> <code>TEXT</code> <code>NULL</code> Nome della funzione per override di scope <code>function</code>."},{"location":"dbzero/script/funzioni/fn_get_parameter_full/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Recupero parametro base</li> </ol> <p><pre><code>SELECT id, default_value\n  INTO v_param_id, v_default\n  FROM config.parameters\n WHERE code = p_code;\nIF NOT FOUND THEN\n  PERFORM script.fn_log_and_raise_error(\n    'database',\n    'fn_get_parameter_full',\n    'ERRORE_PARAMETRI_TABELLA',\n    jsonb_build_object(\n      'codice_parametro', p_code,\n      'nome_tabella',      'config.parameters'\n    ),\n    COALESCE(p_code, 'NULL')\n  );\nEND IF;\n</code></pre> 2. Ricerca override</p> <p><pre><code>SELECT overridden_value\n  INTO v_override\n  FROM config.parameter_overrides\n WHERE parameter_id = v_param_id\n   AND (\n         (function_name   IS NOT NULL AND function_name   = p_function_name)\n      OR (session_key     IS NOT NULL AND session_key     = p_session_key)\n      OR (user_id         IS NOT NULL AND user_id         = p_user_id)\n      OR (tenant_id       IS NOT NULL AND tenant_id       = p_tenant_id)\n       )\n ORDER BY CASE\n            WHEN function_name   = p_function_name THEN 1\n            WHEN session_key     = p_session_key   THEN 2\n            WHEN user_id         = p_user_id       THEN 3\n            WHEN tenant_id       = p_tenant_id     THEN 4\n            ELSE 5\n          END\n LIMIT 1;\n</code></pre> 3. Restituzione del valore</p> <pre><code>IF FOUND THEN\n  RETURN v_override;\nELSE\n  RETURN v_default;\nEND IF;\n</code></pre>"},{"location":"dbzero/script/funzioni/fn_get_parameter_full/#valore-di-ritorno","title":"\ud83d\udd12 Valore di Ritorno","text":"<ul> <li><code>TEXT</code>   Valore dell\u2019override pi\u00f9 specifico trovato, o in assenza di override il <code>default_value</code> originale.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_parameter_full/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Flessibilit\u00e0 multi-scope   Supporta override a livello di funzione, sessione, utente e tenant.</li> <li>Sicurezza   Log e error handling centralizzato via <code>fn_log_and_raise_error</code> per parametri mancanti.</li> <li>Semplificazione   Un\u2019unica funzione evita di scrivere query multiple in applicazione.</li> <li>Manutenibilit\u00e0   Modifiche alla catena di override possono essere gestite in un solo punto.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_parameter_full/#firma-sql","title":"\ud83d\udd16 Firma SQL","text":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_get_parameter_full(\n  p_code          TEXT,\n  p_tenant_id     INTEGER DEFAULT NULL,\n  p_user_id       INTEGER DEFAULT NULL,\n  p_session_key   TEXT    DEFAULT NULL,\n  p_function_name TEXT    DEFAULT NULL\n)\nRETURNS TEXT\nLANGUAGE plpgsql\nAS $$\n-- implementazione come sopra\n$$;\n</code></pre> <p>\ud83e\udde0 \u201cUtilizzando <code>fn_get_parameter_full</code>, l\u2019applicazione ottiene in modo deterministico il valore corretto di un parametro, rispettando una gerarchia di override chiaramente definita.\u201d</p>"},{"location":"dbzero/script/funzioni/fn_get_parameter_full/#funzione-fn_get_parameter_full","title":"\u2699\ufe0f Funzione <code>fn_get_parameter_full</code>","text":"<pre><code>CREATE FUNCTION fn_get_parameter_full(p_code text, p_tenant_id integer, p_user_id integer, p_session_key text, p_function_name text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_get_parameter_full/#create-or-replace-function-scriptfn_get_parameter_fullp_code-text-p_tenant_id-integer-default-nullinteger-p_user_id-integer-default-nullinteger-p_session_key-text-default-nulltext-p_function_name-text-default-nulltext-returns-text-language-plpgsql-as-function-declare-v_param_id-bigint-v_default-text-v_override-text-begin-1-recupera-id-e-default_value-del-parametro-select-id-default_value-into-v_param_id-v_default-from-configparameters-where-code-p_code-if-not-found-then-se-il-parametro-non-esiste-logga-lerrore-e-solleva-uneccezione-perform-scriptfn_log_and_raise_error-database-fn_get_parameter_full-errore_parametri_tabella-jsonb_build_object-codice_parametro-p_code-nome_tabella-configparameters-nulluuid-configparameters-p_codetext-end-if-2-cerca-loverride-piu-specifico-select-overridden_value-into-v_override-from-configparameter_overrides-where-parameter_id-v_param_id-and-function_name-is-not-null-and-function_name-p_function_name-or-session_key-is-not-null-and-session_key-p_session_key-or-user_id-is-not-null-and-user_id-p_user_id-or-tenant_id-is-not-null-and-tenant_id-p_tenant_id-order-by-case-when-function_name-p_function_name-then-1-when-session_key-p_session_key-then-2-when-user_id-p_user_id-then-3-when-tenant_id-p_tenant_id-then-4-else-5-end-limit-1-3-se-trovato-un-override-restituiscilo-altrimenti-il-default-if-found-then-return-v_override-else-return-v_default-end-if-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_get_parameter_full(p_code text, p_tenant_id integer DEFAULT NULL::integer, p_user_id integer DEFAULT NULL::integer, p_session_key text DEFAULT NULL::text, p_function_name text DEFAULT NULL::text)\n RETURNS text\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    v_param_id    BIGINT;\n    v_default     TEXT;\n    v_override    TEXT;\n\nBEGIN\n\n\n    -- 1. Recupera id e default_value del parametro\n    SELECT id, default_value\n      INTO v_param_id, v_default\n      FROM config.parameters\n    WHERE code = p_code;\n\n    IF NOT FOUND THEN\n        -- Se il parametro non esiste, logga l'errore e solleva un'eccezione  \n        PERFORM script.fn_log_and_raise_error(\n            'database',\n            'fn_get_parameter_full',\n            'ERRORE_PARAMETRI_TABELLA',\n            jsonb_build_object(\n              'codice_parametro', p_code,\n              'nome_tabella',      'config.parameters'\n            ),\n            NULL::uuid,                                        \n            'config.parameters', p_code::text \n          );\n\n    END IF;\n\n    -- 2. Cerca l'override pi\u00f9 specifico\n    SELECT overridden_value\n      INTO v_override\n      FROM config.parameter_overrides\n    WHERE parameter_id = v_param_id\n      AND (\n          (function_name   IS NOT NULL AND function_name   = p_function_name)\n        OR (session_key     IS NOT NULL AND session_key     = p_session_key)\n        OR (user_id         IS NOT NULL AND user_id         = p_user_id)\n        OR (tenant_id       IS NOT NULL AND tenant_id       = p_tenant_id)\n      )\n    ORDER BY\n      CASE\n        WHEN function_name   = p_function_name THEN 1\n        WHEN session_key     = p_session_key   THEN 2\n        WHEN user_id         = p_user_id       THEN 3\n        WHEN tenant_id       = p_tenant_id     THEN 4\n        ELSE 5\n      END\n    LIMIT 1;\n\n    -- 3. Se trovato un override, restituiscilo; altrimenti il default\n    IF FOUND THEN\n        RETURN v_override;\n    ELSE\n        RETURN v_default;\n    END IF;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_get_stradario/","title":"Fn get stradario","text":""},{"location":"dbzero/script/funzioni/fn_get_stradario/#documentazione-concettuale-funzione-scriptfn_get_stradario","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_stradario</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:  - config.stradario   - config.stradario_generale   - config.toponomastica   - config.comuni   - config.province   - config.codici_postali   - config.stati </p> <p>La funzione <code>script.fn_get_stradario(p_comune_id integer DEFAULT NULL, p_indirizzo text DEFAULT '') RETURNS TABLE(...)</code> fornisce un metodo centralizzato per la ricerca e il recupero di voci dello stradario, sia a livello di comune specifico che su tutto lo stradario generale.</p>"},{"location":"dbzero/script/funzioni/fn_get_stradario/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Ricerca locale per comune   Se viene specificato <code>p_comune_id</code>, esegue una query filtrata sul comune indicato, restituendo tutte le vie e toponomastiche che contengono la stringa <code>p_indirizzo</code> nel loro nome.</p> </li> <li> <p>Ricerca globale   Se <code>p_comune_id</code> \u00e8 <code>NULL</code>, effettua una ricerca libera su tutto lo stradario generale, restituendo toponomastica e vie corrispondenti a <code>p_indirizzo</code>, senza vincoli geografici.</p> </li> <li> <p>Unificazione del risultato   In entrambi i casi restituisce un insieme di colonne standard che descrivono in dettaglio la via, il comune, la provincia, lo stato, il codice postale e la descrizione completa.</p> </li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_stradario/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"<ul> <li> <p><code>p_comune_id</code>(integer) ID del comune (<code>config.comuni.id</code>) su cui limitare la ricerca; <code>NULL</code>       per ricerca globale.</p> </li> <li> <p><code>p_indirizzo</code> (text) Stringa di ricerca da confrontare (case-insensitive) con `toponomastica.      descrizione stradario_generale.descrizione`.</p> </li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_stradario/#logica-di-esecuzione","title":"\u2699\ufe0f Logica di Esecuzione","text":"<ol> <li> <p>Ricerca filtrata (se <code>p_comune_id</code> non \u00e8 <code>NULL</code>)</p> </li> <li> <p>Joins tra <code>config.stradario</code>, <code>config.stradario_generale</code>, <code>config.toponomastica</code>, <code>config.comuni</code>, <code>config.province</code>, <code>config.codici_postali</code>, <code>config.stati</code>.</p> </li> <li>Filtro su <code>s.comune_id = p_comune_id</code> e ILIKE su concatenazione di toponomastica e via.</li> <li> <p>Ordinamento per <code>stradario_generale.descrizione</code>.</p> </li> <li> <p>Ricerca libera (se <code>p_comune_id</code> \u00e8 <code>NULL</code>)</p> </li> <li> <p>Query su <code>config.stradario_generale</code> e <code>config.toponomastica</code> (join a <code>config.stati</code>).</p> </li> <li>Nessun riferimento a comuni, province o postali; campi geografici impostati a valori null o vuoti.</li> <li>Ordinamento per <code>stradario_generale.descrizione</code>.</li> </ol>"},{"location":"dbzero/script/funzioni/fn_get_stradario/#colonne-di-output","title":"\ud83d\udd17 Colonne di Output","text":"<p>La funzione restituisce le colonne seguenti in entrambe le modalit\u00e0 di ricerca:</p> <ul> <li><code>stradario_id</code> (integer): ID della riga in <code>config.stradario</code> (o <code>NULL</code> per ricerca globale).</li> <li><code>via_id</code> (integer): ID in <code>config.stradario_generale</code>.</li> <li><code>toponomastica_id</code> (integer): ID in <code>config.toponomastica</code>.</li> <li><code>descrizione_toponomastica</code> (varchar): testo della toponomastica.</li> <li><code>sigla_stato</code> (varchar): sigla dello stato di appartenenza.</li> <li><code>descrizione_via</code> (varchar): nome esteso della via.</li> <li><code>descrizione_breve</code> (varchar): versioni abbreviate o codificate.</li> <li><code>cod_postale</code> (char): codice postale (o stringa vuota in ricerca globale).</li> <li><code>comune</code> (varchar): nome del comune (o vuoto).</li> <li><code>provincia</code> (char): sigla della provincia (o vuoto).</li> <li><code>geoloc</code> (geometry): coordinate spaziali del civico o via (o <code>NULL</code>).</li> <li><code>descrizione_completa</code> (text): concatenazione di toponomastica e via per rapida fruizione.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_get_stradario/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Centralizzazione   Un\u2019unica funzione PL/pgSQL per gestire ricerche su stradario, evitando duplicazione di query in applicazione.</p> </li> <li> <p>Flessibilit\u00e0   Supporta sia ricerche localizzate per comune sia ricerche generali, semplicemente impostando <code>p_comune_id</code>.</p> </li> <li> <p>Consistenza dei dati   Garantisce output uniforme, con stesse colonne e formattazione, a prescindere dal contesto di ricerca.</p> </li> <li> <p>Semplicit\u00e0 di manutenzione   Modifiche alla logica di join o ai campi restituiti possono essere centralmente aggiornate in un solo punto.</p> </li> </ul> <p>\ud83e\udde0 \u201cFornire un\u2019interfaccia unica e parametrizzata per le operazioni di ricerca stradale, migliorando coesione, manutenibilit\u00e0 e uniformit\u00e0 dei risultati.\u201d</p>"},{"location":"dbzero/script/funzioni/fn_get_stradario/#funzione-fn_get_stradario","title":"\u2699\ufe0f Funzione <code>fn_get_stradario</code>","text":"<pre><code>CREATE FUNCTION fn_get_stradario(p_comune_id integer, p_indirizzo text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_get_stradario/#create-or-replace-function-scriptfn_get_stradariop_comune_id-integer-default-nullinteger-p_indirizzo-text-default-text-returns-tablestradario_id-integer-via_id-integer-toponomastica_id-integer-descrizione_toponomastica-character-varying-sigla_stato-character-varying-descrizione_via-character-varying-descrizione_breve-character-varying-cod_postale-character-comune-character-varying-provincia-character-geoloc-geometry-descrizione_completa-text-language-plpgsql-as-function-begin-funzione-per-ottenere-le-informazioni-dello-stradario-la-funzione-se-indicato-unno-specifico-comune-restituisce-le-informazioni-relative-a-tutte-le-vie-di-quel-comune-altrimenti-restituisce-tutte-le-vie-dello-stradario_generale-che-contengono-lindirizzo-indicato-p_comune_id-id-del-comune-opzionale-p_indirizzo-stringa-da-cercare-nellindirizzo-opzionale-if-p_comune_id-is-not-null-then-ricerca-filtrata-per-comune-return-query-select-sid-as-stradario_id-vid-as-via_id-tid-as-toponomastica_id-tdescrizione-as-descrizione_toponomastica-stsigla_stato-as-sigla_stato-vdescrizione-as-descrizione_via-vdescrizione_breve-as-descrizione_breve-cpcodice_postale-as-cod_postale-cdescrizione-as-comune-prsigla-as-provincia-sgeoloc-as-geoloc-concat_ws-tdescrizione-vdescrizione-as-descrizione_completa-from-configstradario-s-join-configstradario_generale-v-on-sstradario_generale_id-vid-join-configtoponomastica-t-on-vtoponomastica_id-tid-join-configcomuni-c-on-scomune_id-cid-join-configprovince-pr-on-cprovincia_id-prid-join-configcodici_postali-cp-on-scodice_postale_id-cpid-left-join-configstati-st-on-tstato_id-stid-where-scomune_id-p_comune_id-and-tdescrizione-vdescrizione-ilike-p_indirizzo-order-by-vdescrizione-else-ricerca-libera-su-tutto-lo-stradario_generale-return-query-select-nullinteger-as-stradario_id-vid-as-via_id-tid-as-toponomastica_id-tdescrizione-as-descrizione_toponomastica-stsigla_stato-as-sigla_stato-vdescrizione-as-descrizione_via-vdescrizione_breve-as-descrizione_breve-character-as-cod_postale-character-varying-as-comune-character-as-provincia-nullgeometry-as-geoloc-concat_ws-tdescrizione-vdescrizione-as-descrizione_completa-from-configstradario_generale-v-join-configtoponomastica-t-on-vtoponomastica_id-tid-left-join-configstati-st-on-tstato_id-stid-where-tdescrizione-vdescrizione-ilike-p_indirizzo-order-by-vdescrizione-end-if-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_get_stradario(p_comune_id integer DEFAULT NULL::integer, p_indirizzo text DEFAULT ''::text)\n RETURNS TABLE(stradario_id integer, via_id integer, toponomastica_id integer, descrizione_toponomastica character varying, sigla_stato character varying, descrizione_via character varying, descrizione_breve character varying, cod_postale character, comune character varying, provincia character, geoloc geometry, descrizione_completa text)\n LANGUAGE plpgsql\nAS $function$\n  BEGIN\n    -- Funzione per ottenere le informazioni dello stradario\n    /* La funzione se indicato unno specifico comune restituisce le informazioni\n        relative a tutte le vie di quel comune, altrimenti restituisce tutte le vie\n        dello stradario_generale che contengono l'indirizzo indicato.\n\n        p_comune_id: ID del comune (opzionale)\n        p_indirizzo: stringa da cercare nell'indirizzo (opzionale)\n       */\n\n    IF p_comune_id IS NOT NULL THEN\n      -- ricerca filtrata per comune\n      RETURN QUERY\n      SELECT\n        s.id                      AS stradario_id,\n        v.id                      AS via_id,\n        t.id                      AS toponomastica_id,\n        t.descrizione             AS descrizione_toponomastica,\n        st.sigla_stato            AS sigla_stato,\n        v.descrizione             AS descrizione_via,\n        v.descrizione_breve       AS descrizione_breve,\n        cp.codice_postale         AS cod_postale,\n        c.descrizione             AS comune,\n        pr.sigla                  AS provincia,\n        s.geoloc                  AS geoloc,\n        CONCAT_WS(' ', t.descrizione, v.descrizione) \n                                AS descrizione_completa\n      FROM config.stradario s\n        JOIN config.stradario_generale v  ON s.stradario_generale_id = v.id\n        JOIN config.toponomastica t       ON v.toponomastica_id = t.id\n        JOIN config.comuni c              ON s.comune_id = c.id\n        JOIN config.province pr           ON c.provincia_id = pr.id\n        JOIN config.codici_postali cp     ON s.codice_postale_id = cp.id\n        LEFT JOIN config.stati st         ON t.stato_id = st.id\n      WHERE s.comune_id = p_comune_id\n        AND (t.descrizione || ' ' || v.descrizione)\n            ILIKE '%' || p_indirizzo || '%'\n      ORDER BY v.descrizione;\n\n    ELSE\n      -- ricerca libera su tutto lo stradario_generale\n      RETURN QUERY\n      SELECT\n        NULL::integer             AS stradario_id,\n        v.id                      AS via_id,\n        t.id                      AS toponomastica_id,\n        t.descrizione             AS descrizione_toponomastica,\n        st.sigla_stato            AS sigla_stato,\n        v.descrizione             AS descrizione_via,\n        v.descrizione_breve       AS descrizione_breve,\n        ''::character             AS cod_postale,\n        ''::character varying     AS comune,\n        ''::character             AS provincia,\n        NULL::geometry            AS geoloc,\n        CONCAT_WS(' ', t.descrizione, v.descrizione)\n                                AS descrizione_completa\n      FROM config.stradario_generale v\n        JOIN config.toponomastica t   ON v.toponomastica_id = t.id\n        LEFT JOIN config.stati st     ON t.stato_id = st.id\n      WHERE (t.descrizione || ' ' || v.descrizione)\n            ILIKE '%' || p_indirizzo || '%'\n      ORDER BY v.descrizione;\n    END IF;\n  END;\n  $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_get_tipo_contatto_id/","title":"Fn get tipo contatto id","text":"<p>\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_tipo_contatto_id()</code> </p> <p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.tipi_contatti </p> <p>Approfondimenti funzioni:   - script.fn_log_and_raise_error   - dbops.fn_get_or_create_session_tx_id </p>"},{"location":"dbzero/script/funzioni/fn_get_tipo_contatto_id/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Recuperare l\u2019ID del tipo di contatto corrispondente a un codice interno (<code>cod_int_tipo_contatto</code>), garantendo al contempo il logging e la tracciabilit\u00e0 tramite un <code>tx_id</code> di sessione.</p>"},{"location":"dbzero/script/funzioni/fn_get_tipo_contatto_id/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Descrizione <code>p_cod_int_tipo_contatto</code> <code>VARCHAR</code> Codice interno univoco del tipo di contatto (es. <code>EMAIL</code>)."},{"location":"dbzero/script/funzioni/fn_get_tipo_contatto_id/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li> <p>Generazione <code>tx_id</code>    Invoca <code>dbops.fn_get_or_create_session_tx_id()</code> per ottenere o creare un identificativo di transazione di sessione, usato per il log centralizzato.</p> </li> <li> <p>Lookup ID    Esegue:</p> </li> </ol> <pre><code>SELECT id\n  INTO v_id\n  FROM config.tipi_contatti\n WHERE cod_int_tipo_contatto = p_cod_int_tipo_contatto;\n</code></pre> <ol> <li>Gestione dell\u2019errore    Se <code>v_id</code> \u00e8 <code>NULL</code>, chiama:</li> </ol> <pre><code>PERFORM script.fn_log_and_raise_error(\n  'database',\n  'script.fn_get_tipo_contatto_id',\n  'E_DEFAULT_CONTATTO_MISSING',\n  jsonb_build_object('cod_int_tipo_contatto', p_cod_int_tipo_contatto),\n  v_tx\n);\n</code></pre> <p>Questo logga l\u2019errore e solleva un\u2019eccezione centralizzata, interrompendo l\u2019esecuzione.</p> <ol> <li>Restituzione    Se l\u2019ID viene trovato, lo restituisce.</li> </ol>"},{"location":"dbzero/script/funzioni/fn_get_tipo_contatto_id/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Centralizzazione: evita duplicazione di query e gestione degli errori in pi\u00f9 punti.</li> <li>Tracciabilit\u00e0: ogni chiamata \u00e8 correlata a un <code>tx_id</code>, facilitando debug e audit.</li> <li>Robustezza: l\u2019uso di <code>fn_log_and_raise_error</code> permette di uniformare il logging e lanciare eccezioni coerenti.</li> </ul> <p>\ud83e\udde0 \u201cUtilizzare una funzione dedicata con logging centralizzato garantisce coerenza nel recupero dei dati di metadato e semplifica la manutenzione del codice.\u201d</p>"},{"location":"dbzero/script/funzioni/fn_get_tipo_contatto_id/#funzione-fn_get_tipo_contatto_id","title":"\u2699\ufe0f Funzione <code>fn_get_tipo_contatto_id</code>","text":"<pre><code>CREATE FUNCTION fn_get_tipo_contatto_id(p_cod_int_tipo_contatto character varying)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_get_tipo_contatto_id/#create-or-replace-function-scriptfn_get_tipo_contatto_idp_cod_int_tipo_contatto-character-varying-returns-integer-language-plpgsql-stable-as-function-declare-v_id-integer-v_tx-uuid-begin-0-recupero-o-genero-il-tx_id-per-il-log-v_tx-dbopsfn_get_or_create_session_tx_id-1-recupera-lid-del-tipo-di-contatto-select-id-into-v_id-from-configtipi_contatti-where-cod_int_tipo_contatto-p_cod_int_tipo_contatto-2-se-non-trovato-loggo-e-sollevo-eccezione-if-v_id-is-null-then-perform-scriptfn_log_and_raise_error-database-p_area-scriptfn_get_tipo_contatto_id-p_function_name-e_default_contatto_missing-p_error_code-jsonb_build_object-p_context-cod_int_tipo_contatto-p_cod_int_tipo_contatto-tabella-configtipi_contatti-campo-cod_int_tipo_contatto-v_tx-p_tx_id-variadic-arraytext-end-if-return-v_id-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_get_tipo_contatto_id(p_cod_int_tipo_contatto character varying)\n RETURNS integer\n LANGUAGE plpgsql\n STABLE\nAS $function$\nDECLARE\n    v_id  INTEGER;\n    v_tx  UUID;\nBEGIN\n    -- 0) Recupero o genero il tx_id per il log\n    v_tx := dbops.fn_get_or_create_session_tx_id();\n\n    -- 1) Recupera l'ID del tipo di contatto\n    SELECT id\n      INTO v_id\n      FROM config.tipi_contatti\n    WHERE cod_int_tipo_contatto = p_cod_int_tipo_contatto;\n\n    -- 2) Se non trovato, loggo e sollevo eccezione\n    IF v_id IS NULL THEN\n\n        PERFORM script.fn_log_and_raise_error(\n            'database',                                 -- p_area\n            'script.fn_get_tipo_contatto_id',           -- p_function_name\n            'E_DEFAULT_CONTATTO_MISSING',                -- p_error_code\n            jsonb_build_object(                         -- p_context\n              'cod_int_tipo_contatto', p_cod_int_tipo_contatto,\n              'tabella', 'config.tipi_contatti',\n              'campo', 'cod_int_tipo_contatto'\n            ),\n            v_tx ,                                        -- p_tx_id       \n            VARIADIC ARRAY[]::text[]\n        );\n\n    END IF;\n\n    RETURN v_id;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_get_vie_discendenti/","title":"\u2699\ufe0f Funzione <code>fn_get_vie_discendenti</code>","text":"<pre><code>CREATE FUNCTION fn_get_vie_discendenti(p_via_id integer)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_get_vie_discendenti/#create-or-replace-function-scriptfn_get_vie_discendentip_via_id-integer-returns-tableid_chain-integer-livello-integer-language-plpgsql-stable-as-function-begin-return-query-with-recursive-catenaid_chain-livello-as-select-via_id_nuovo-1-from-storicostradario_trasformazioni-where-via_id_orig-p_via_id-union-all-select-tvia_id_nuovo-clivello-1-from-storicostradario_trasformazioni-t-join-catena-c-on-tvia_id_orig-cid_chain-select-from-catena-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_get_vie_discendenti(p_via_id integer)\n RETURNS TABLE(id_chain integer, livello integer)\n LANGUAGE plpgsql\n STABLE\nAS $function$\nBEGIN\n  RETURN QUERY\n  WITH RECURSIVE catena(id_chain, livello) AS (\n    SELECT via_id_nuovo, 1\n    FROM storico.stradario_trasformazioni\n    WHERE via_id_orig = p_via_id\n\n    UNION ALL\n\n    SELECT t.via_id_nuovo, c.livello + 1\n    FROM storico.stradario_trasformazioni t\n    JOIN catena c ON t.via_id_orig = c.id_chain\n  )\n  SELECT * FROM catena;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_log_and_raise_error/","title":"Fn log and raise error","text":""},{"location":"dbzero/script/funzioni/fn_log_and_raise_error/#documentazione-concettuale-function-scriptfn_log_and_raise_error","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Function <code>script.fn_log_and_raise_error</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - config.messaggi_errore  - dbops.error_log </p> <p>Approfondimenti funzioni:  - script.fn_get_messaggio  - script.fn_ensure_logconn </p> <p>La funzione <code>script.fn_log_and_raise_error</code> unifica logging ed escalation di errori in PL/pgSQL, utilizzando l\u2019estensione dblink per inserire record di log in una sessione separata e garantire commit immediato, quindi solleva un\u2019eccezione con messaggio, dettaglio e hint.</p> <pre><code>CREATE OR REPLACE FUNCTION script.fn_log_and_raise_error(\n  p_area           TEXT,                       -- 'database' / 'backend' / 'frontend' / 'job'\n  p_function_name  TEXT,                       -- nome di trigger o funzione chiamante\n  p_error_code     TEXT,                       -- codice testuale di messaggio (config.messaggi_errore.codice)\n  p_context        JSONB,                      -- payload di contesto (parametri, variabili, metadata)\n  VARIADIC p_valori TEXT[]                     -- valori da sostituire a '%s' nel template messaggio\n)\nRETURNS VOID\nLANGUAGE plpgsql\nVOLATILE\nAS $$\n...implementazione completa con dblink_exec...\n$$;\n</code></pre>"},{"location":"dbzero/script/funzioni/fn_log_and_raise_error/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Entrypoint unificato per error handling: evita duplicazioni di log e raise in trigger, procedure e funzioni.</li> <li>Logging remoto sicuro: usa <code>dblink_exec</code> su connessione permanente fornita da <code>script.fn_ensure_logconn()</code>, per isolare il log dall\u2019eventuale rollback della sessione principale.</li> <li>Escalation immediata: rialza l\u2019eccezione con <code>DETAIL</code> e <code>HINT</code> recuperati dalla tabella dei messaggi.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_log_and_raise_error/#parametri","title":"\ud83d\udd0d Parametri","text":"Parametro Tipo Descrizione <code>p_area</code> <code>TEXT</code> Ambito di origine (<code>database</code>, <code>backend</code>, <code>frontend</code>, <code>job</code>, etc.) <code>p_function_name</code> <code>TEXT</code> Nome del trigger/funzione o componente chiamante <code>p_error_code</code> <code>TEXT</code> Codice del messaggio da cercare in <code>config.messaggi_errore.codice</code> <code>p_context</code> <code>JSONB</code> Contesto in formato JSONB (es. parametri, utente, stack trace) <code>p_valori</code> <code>TEXT[]</code> Array variadico di valori per sostituire i placeholder <code>%s</code> nel template messaggio"},{"location":"dbzero/script/funzioni/fn_log_and_raise_error/#flusso-di-esecuzione","title":"\u2699\ufe0f Flusso di Esecuzione","text":"<ol> <li>Assicuro connessione dblink</li> </ol> <pre><code>PERFORM script.fn_ensure_logconn();\n</code></pre> <ol> <li>Recupero messaggio e metadati</li> </ol> <pre><code>SELECT id, messaggio, causa, soluzione\n  INTO v_id, v_messaggio, v_causa, v_soluzione\nFROM config.messaggi_errore\nWHERE codice = p_error_code\n  AND lingua = v_lingua;\n</code></pre> <p>Se non trovato, imposta testo, causa e soluzione di default indicativi.</p> <ol> <li>Formattazione del messaggio</li> </ol> <pre><code>IF array_length(p_valori,1) IS NOT NULL THEN\n  v_messaggio := format(v_messaggio, VARIADIC p_valori);\nEND IF;\n</code></pre> <ol> <li>Preparazione dell\u2019INSERT remoto</li> </ol> <pre><code>sql_text :=\n  'INSERT INTO dbops.error_log(occurred_at, area, function_name,' ||\n  ' messaggio_errore_id, context, tx_id) VALUES (' ||\n  'now(), ' || quote_literal(p_area) || ', ' || quote_literal(p_function_name) || ', ' ||\n  coalesce(v_id::text,'NULL') || ', ' || quote_literal(v_context::text) || '::jsonb, ' ||\n  quote_literal(md5(txid_current()::text)) || '::uuid' || ');';\n</code></pre> <ol> <li>Esecuzione tramite dblink</li> </ol> <pre><code>PERFORM dblink_exec('logconn', sql_text);\n</code></pre> <ol> <li>Sollevamento dell\u2019eccezione</li> </ol> <pre><code>RAISE EXCEPTION '%', coalesce(v_messaggio, '[Errore sconosciuto]')\n  USING DETAIL = coalesce(v_causa,''),\n        HINT   = coalesce(v_soluzione,'');\n</code></pre>"},{"location":"dbzero/script/funzioni/fn_log_and_raise_error/#comportamenti-e-side-effects","title":"\ud83d\udd12 Comportamenti e Side Effects","text":"<ul> <li>Volatile: invoca <code>dblink_exec</code>, quindi non idempotente.</li> <li>Connessione permanente: <code>logconn</code> gestita da <code>script.fn_ensure_logconn()</code> per evitare overhead di connessioni multiple.</li> <li>Separazione transazionale: l\u2019INSERT remoto non viene rollbackato insieme alla sessione principale.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_log_and_raise_error/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Trigger PL/pgSQL con placeholder</li> </ol> <pre><code>IF NEW.status = 'ERROR' THEN\n  PERFORM script.fn_log_and_raise_error(\n    'database', TG_NAME, 'ERR_INVALID_STATUS',\n    jsonb_build_object('id', OLD.id),\n    OLD.status, NEW.status\n  );\nEND IF;\n</code></pre> <ol> <li>Procedure backend</li> </ol> <pre><code>BEGIN\n  -- operazioni...\nEXCEPTION WHEN OTHERS THEN\n  PERFORM script.fn_log_and_raise_error(\n    'backend', 'sync_data', 'ERR_TIMEOUT',\n    jsonb_build_object('user', current_user),\n    now()::text\n  );\nEND;\n</code></pre>"},{"location":"dbzero/script/funzioni/fn_log_and_raise_error/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Resilienza dei log: l\u2019uso di dblink isola il logging dall\u2019eventuale rollback.</li> <li>Flessibilit\u00e0: placeholder <code>%s</code> e <code>p_valori</code> rendono i messaggi dinamici e contestuali.</li> <li>Manutenibilit\u00e0: modifiche ai messaggi avvengono solo in <code>config.messaggi_errore</code>.</li> <li>Tracciabilit\u00e0 completa: contesto, transazione e multilingua integrate nel flusso.</li> </ul> <p>\ud83e\udde0 \u201cUna funzione centralizzata che combina dblink per log persistente e raise exception con template dinamici semplifica error handling, migliorando la robustezza del sistema.\u201d</p>"},{"location":"dbzero/script/funzioni/fn_log_and_raise_error/#funzione-fn_log_and_raise_error","title":"\u2699\ufe0f Funzione <code>fn_log_and_raise_error</code>","text":"<pre><code>CREATE FUNCTION fn_log_and_raise_error(p_area text, p_function_name text, p_error_code text, p_context jsonb, p_tx_id uuid, VARIADIC p_valori text[])\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_log_and_raise_error/#create-or-replace-function-scriptfn_log_and_raise_errorp_area-text-p_function_name-text-p_error_code-text-p_context-jsonb-p_tx_id-uuid-variadic-p_valori-text-returns-void-language-plpgsql-as-function-declare-v_id-bigint-v_msg-text-v_detail-text-v_hint-text-v_lang-text-coalescecurrent_settingmyappuser_language-true-it-v_ctx-jsonb-p_context-v_sql-text-begin-0-recupero-o-genero-tx_id-coerente-if-p_tx_id-is-null-then-p_tx_id-dbopsfn_get_or_create_session_tx_id-end-if-1-leggo-messaggio-di-errore-select-id-messaggio-causa-soluzione-into-v_id-v_msg-v_detail-v_hint-from-configmessaggi_errore-where-codice-p_error_code-and-lingua-v_lang-if-not-found-then-select-messaggio-p_error_code-causa-soluzione-into-v_msg-v_detail-v_hint-from-configmessaggi_errore-where-codicemessaggio_non_definito-and-linguav_lang-if-v_msg-is-null-then-v_msg-messaggio-non-definito-p_error_code-v_detail-catalogo-mancantequote_literalp_error_code-v_hint-aggiungere-record-in-configmessaggi_errore-v_id-null-end-if-end-if-2-sostituzioni-placeholder-if-array_lengthp_valori1-is-not-null-then-v_msg-formatv_msg-variadic-p_valori-end-if-3-inserisco-su-log-in-connessione-separata-v_sql-insert-into-dbopserror_logoccurred_atareafunction_namemessaggio_errore_idcontexttx_id-values-now-quote_literalp_area-quote_literalp_function_name-coalescev_idtextnull-quote_literalv_ctxtextjsonb-quote_literalp_tx_idtextuuid-perform-dblink_execlogconn-v_sql-4-rilancio-leccezione-raise-exception-coalescev_msgerrore-sconosciuto-using-detail-coalescev_detail-hint-coalescev_hint-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_log_and_raise_error(p_area text, p_function_name text, p_error_code text, p_context jsonb, p_tx_id uuid, VARIADIC p_valori text[])\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n    v_id        BIGINT;\n    v_msg       TEXT;\n    v_detail    TEXT;\n    v_hint      TEXT;\n    v_lang      TEXT := coalesce(current_setting('myapp.user_language', TRUE), 'it');\n    v_ctx       JSONB := p_context;\n    v_sql       TEXT;\nBEGIN\n    -- 0) Recupero o genero tx_id coerente\n    IF p_tx_id IS NULL  THEN\n        p_tx_id := dbops.fn_get_or_create_session_tx_id();\n    END IF;\n\n    -- 1) Leggo messaggio di errore\n    SELECT id, messaggio, causa, soluzione\n      INTO v_id, v_msg, v_detail, v_hint\n      FROM config.messaggi_errore\n     WHERE codice = p_error_code AND lingua = v_lang;\n\n    IF NOT FOUND THEN\n       SELECT messaggio||' '||p_error_code, causa, soluzione\n         INTO v_msg, v_detail, v_hint\n         FROM config.messaggi_errore\n        WHERE codice='MESSAGGIO_NON_DEFINITO' AND lingua=v_lang;\n       IF v_msg IS NULL THEN\n           v_msg := '[MESSAGGIO NON DEFINITO: '||p_error_code||']';\n           v_detail := 'Catalogo mancante='||quote_literal(p_error_code);\n           v_hint := 'Aggiungere record in config.messaggi_errore';\n           v_id := NULL;\n       END IF;\n    END IF;\n\n    -- 2) Sostituzioni placeholder\n    IF array_length(p_valori,1) IS NOT NULL THEN\n        v_msg := format(v_msg, VARIADIC p_valori);\n    END IF;\n\n    -- 3) Inserisco su log in connessione separata\n    v_sql :=\n      'INSERT INTO dbops.error_log(occurred_at,area,function_name,messaggio_errore_id,context,tx_id) VALUES('||\n        'now(), '||\n        quote_literal(p_area)||', '||\n        quote_literal(p_function_name)||', '||\n        coalesce(v_id::text,'NULL')||', '||\n        quote_literal(v_ctx::text)||'::jsonb, '||\n        quote_literal(p_tx_id::text)||'::uuid'||\n      ');';\n    PERFORM dblink_exec('logconn', v_sql);\n\n    -- 4) Rilancio l\u2019eccezione\n    RAISE EXCEPTION '%', coalesce(v_msg,'[Errore sconosciuto]')\n      USING DETAIL = coalesce(v_detail,''), HINT = coalesce(v_hint,'');\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_valida_codice_fiscale/","title":"Fn valida codice fiscale","text":""},{"location":"dbzero/script/funzioni/fn_valida_codice_fiscale/#documentazione-concettuale-funzione-scriptfn_valida_codice_fiscalecf-text","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_valida_codice_fiscale(cf TEXT)</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - anagrafiche.soggetti </p> <p>Approfondimento funzioni :   - script.fn_valida_partita_iva  - anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch </p>"},{"location":"dbzero/script/funzioni/fn_valida_codice_fiscale/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Validazione formale del Codice Fiscale (CF) calcolando e confrontando il carattere di controllo.</li> <li>Supporto omocodici, garantendo validit\u00e0 anche per CF derivati con omolettere.</li> <li>Delegare al backend i controlli di congruenza con data di nascita, sesso e luogo di nascita per mantenere flessibilit\u00e0 applicativa.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_valida_codice_fiscale/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Descrizione <code>cf</code> <code>TEXT</code> Codice Fiscale da validare (16 caratteri alfanumerici)."},{"location":"dbzero/script/funzioni/fn_valida_codice_fiscale/#flusso-operativo","title":"\u2699\ufe0f Flusso Operativo","text":"<ol> <li> <p>Verifica preliminare</p> </li> <li> <p><code>cf</code> non <code>NULL</code>, lunghezza = 16, e solo caratteri <code>A-Z</code> o <code>0-9</code>.</p> </li> <li>Se fallisce, ritorna <code>FALSE</code>.</li> <li> <p>Calcolo somma parziale</p> </li> <li> <p>Ciclo su posizioni 1..15:</p> <ul> <li>Posizioni dispari: mappatura \u201cstrana\u201d per numeri e lettere.</li> <li>Posizioni pari: numeri trasformati in valore numerico, lettere <code>A\u21920</code>, \u2026, <code>Z\u219225</code>.</li> <li>Accumula i valori in <code>somma</code>.</li> <li>Determinazione carattere di controllo</li> </ul> </li> <li> <p><code>check_char := CHR(65 + (somma % 26))</code>.</p> </li> <li> <p>Confronto finale</p> </li> <li> <p>Ritorna <code>TRUE</code> se <code>check_char</code> = sedicesimo carattere di <code>cf</code>, altrimenti <code>FALSE</code>.</p> </li> </ol>"},{"location":"dbzero/script/funzioni/fn_valida_codice_fiscale/#limiti-e-scelte-di-design","title":"\ud83d\udd12 Limiti e Scelte di Design","text":"<ul> <li>Solo Check Digit: non verifica congruenza con data di nascita, sesso, luogo di nascita.</li> <li>Omocodici: supporta CF omocodici (stessa data, sesso, luogo, nome e cognome).</li> <li>Layer Applicativo: controlli avanzati demandati a backend (es. Django/FastAPI) o servizi esterni per facilitare aggiornamenti e regole di business.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_valida_codice_fiscale/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Efficienza: logica SQL compatta e <code>IMMUTABLE</code>, ottimizzata per database-level validation.</li> <li>Affidabilit\u00e0: garantisce uniformit\u00e0 del controllo formale in tutta l\u2019applicazione.</li> <li>Manutenibilit\u00e0: separazione netta tra validazione formale al DB e logica di business nel backend.</li> </ul> <p>\ud83e\udde0 \u201cUna validazione del CF snella e centralizzata al DB accelera i controlli di input, lasciando al backend la gestione delle regole di contesto e di business.\u201d</p>"},{"location":"dbzero/script/funzioni/fn_valida_codice_fiscale/#funzione-fn_valida_codice_fiscale","title":"\u2699\ufe0f Funzione <code>fn_valida_codice_fiscale</code>","text":"<pre><code>CREATE FUNCTION fn_valida_codice_fiscale(cf text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_valida_codice_fiscale/#create-or-replace-function-scriptfn_valida_codice_fiscalecf-text-returns-boolean-language-plpgsql-immutable-as-functiondeclare-cf_up-text-uppercf-i-int-somma-int-0-c-char-val-int-check_char-char-begin-lo-script-esegue-una-validazione-formale-del-codice-fiscale-calcolando-il-carattere-di-controllo-finale-non-verifica-congruenza-con-data-di-nascita-sesso-o-luogo-di-nascita-importante-e-in-grado-di-validare-codice-fiscale-omocodico-stessa-data-luogo-di-nascita-sesso-nome-e-cognome-1-preliminare-if-cf_up-is-null-or-lengthcf_up-16-or-cf_up-a-z0-9-then-return-false-end-if-2-ciclo-sulle-prime-15-posizioni-sostituzione-caratteri-for-i-in-115-loop-c-substringcf_up-i-1-if-i-2-1-then-posizioni-dispari-valore-da-tabella-strana-inclusi-09-e-az-val-case-c-when-0-then-1-when-1-then-0-when-2-then-5-when-3-then-7-when-4-then-9-when-5-then-13-when-6-then-15-when-7-then-17-when-8-then-19-when-9-then-21-when-a-then-1-when-b-then-0-when-c-then-5-when-d-then-7-when-e-then-9-when-f-then-13-when-g-then-15-when-h-then-17-when-i-then-19-when-j-then-21-when-k-then-2-when-l-then-4-when-m-then-18-when-n-then-20-when-o-then-11-when-p-then-3-when-q-then-6-when-r-then-8-when-s-then-12-when-t-then-14-when-u-then-16-when-v-then-10-when-w-then-22-when-x-then-25-when-y-then-24-when-z-then-23-else-1-end-else-posizioni-pari-numeri-valore-numerico-lettere-a0z25-if-c-between-0-and-9-then-val-castc-as-int-else-val-asciic-asciia-end-if-end-if-if-val-0-then-return-false-carattere-non-riconosciuto-end-if-somma-somma-val-end-loop-3-calcolo-carattere-di-controllo-check_char-chr65-somma-26-4-confronto-con-il-sedicesimo-carattere-return-check_char-substringcf_up-16-1-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_valida_codice_fiscale(cf text)\n RETURNS boolean\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$DECLARE\n      cf_up       TEXT := UPPER(cf);\n      i           INT;\n      somma       INT := 0;\n      c           CHAR;\n      val         INT;\n      check_char  CHAR;\n  BEGIN\n      -- ----------------------------------------------------------------\n      -- Lo script esegue una validazione formale del codice fiscale\n      -- calcolando il carattere di controllo finale.\n      -- Non verifica congruenza con data di nascita, sesso o luogo di nascita.\n      -- Importante \u00e8 in grado di validare codice fiscale omocodico (stessa data, luogo di nascita, sesso, nome e cognome)\n      -- ----------------------------------------------------------------\n\n      -- 1) preliminare\n      IF cf_up IS NULL OR LENGTH(cf_up) &lt;&gt; 16 OR cf_up ~ '[^A-Z0-9]' THEN\n          RETURN FALSE;\n      END IF;\n\n      -- 2) ciclo sulle prime 15 posizioni (sostituzione caratteri)\n      FOR i IN 1..15 LOOP\n          c := SUBSTRING(cf_up, i, 1);\n\n          IF (i % 2) = 1 THEN\n              -- posizioni dispari: valore da tabella \u201cstrana\u201d (inclusi 0\u20139 e A\u2013Z)\n              val := CASE c\n                  WHEN '0' THEN  1 WHEN '1' THEN  0 WHEN '2' THEN  5 WHEN '3' THEN  7\n                  WHEN '4' THEN  9 WHEN '5' THEN 13 WHEN '6' THEN 15 WHEN '7' THEN 17\n                  WHEN '8' THEN 19 WHEN '9' THEN 21\n                  WHEN 'A' THEN  1 WHEN 'B' THEN  0 WHEN 'C' THEN  5 WHEN 'D' THEN  7\n                  WHEN 'E' THEN  9 WHEN 'F' THEN 13 WHEN 'G' THEN 15 WHEN 'H' THEN 17\n                  WHEN 'I' THEN 19 WHEN 'J' THEN 21 WHEN 'K' THEN  2 WHEN 'L' THEN  4\n                  WHEN 'M' THEN 18 WHEN 'N' THEN 20 WHEN 'O' THEN 11 WHEN 'P' THEN  3\n                  WHEN 'Q' THEN  6 WHEN 'R' THEN  8 WHEN 'S' THEN 12 WHEN 'T' THEN 14\n                  WHEN 'U' THEN 16 WHEN 'V' THEN 10 WHEN 'W' THEN 22 WHEN 'X' THEN 25\n                  WHEN 'Y' THEN 24 WHEN 'Z' THEN 23\n                  ELSE -1\n              END;\n          ELSE\n              -- posizioni pari: numeri \u2192 valore numerico, lettere A\u21920\u2026Z\u219225\n              IF c BETWEEN '0' AND '9' THEN\n                  val := CAST(c AS INT);\n              ELSE\n                  val := ASCII(c) - ASCII('A');\n              END IF;\n          END IF;\n\n          IF val &lt; 0 THEN\n              RETURN FALSE;   -- carattere non riconosciuto\n          END IF;\n\n          somma := somma + val;\n      END LOOP;\n\n      -- 3) calcolo carattere di controllo\n      check_char := CHR(65 + (somma % 26));\n\n      -- 4) confronto con il sedicesimo carattere\n      RETURN check_char = SUBSTRING(cf_up, 16, 1);\n  END;\n\n  $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_valida_partita_iva/","title":"Fn valida partita iva","text":""},{"location":"dbzero/script/funzioni/fn_valida_partita_iva/#documentazione-concettuale-funzione-scriptfn_valida_partita_ivapiva-text","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_valida_partita_iva(piva TEXT)</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - anagrafiche.soggetti </p> <p>Approfondimento funzioni :   - script.fn_valida_codice_fiscale  - anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch </p>"},{"location":"dbzero/script/funzioni/fn_valida_partita_iva/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Verificare formalmente la correttezza di una Partita IVA italiana (11 cifre) calcolando il check digit con l\u2019algoritmo di Luhn modificato, restituendo:</p> <ul> <li><code>TRUE</code> se il carattere di controllo (ultima cifra) \u00e8 corretto;</li> <li><code>FALSE</code> altrimenti.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_valida_partita_iva/#parametro-di-input","title":"\ud83d\udd0d Parametro di Input","text":"Nome Tipo Descrizione <code>piva</code> <code>TEXT</code> Stringa di 11 cifre numeriche rappresentante la Partita IVA."},{"location":"dbzero/script/funzioni/fn_valida_partita_iva/#flusso-operativo","title":"\u2699\ufe0f Flusso Operativo","text":"<ol> <li> <p>Controllo preliminare</p> </li> <li> <p><code>piva</code> non <code>NULL</code>, lunghezza = 11, e contiene solo cifre (<code>0-9</code>).</p> </li> <li> <p>Se fallisce, ritorna <code>FALSE</code> immediatamente.</p> </li> <li> <p>Calcolo della somma    Per le prime 10 cifre (posizioni 1\u201310):</p> </li> <li> <p>Posizioni dispari (1,3,5,...,9): somma diretta della cifra.</p> </li> <li> <p>Posizioni pari (2,4,6,...,10):</p> <ul> <li>raddoppia la cifra;</li> <li>se il risultato &gt; 9, sottrae 9;</li> <li>somma il valore ottenuto.</li> </ul> </li> <li> <p>Determinazione del check digit</p> </li> </ol> <pre><code>check_digit := (10 - (somma % 10)) % 10;\n</code></pre> <ol> <li> <p>Confronto finale</p> </li> <li> <p>Legge l\u201911\u00aa cifra di <code>piva</code> e la confronta con <code>check_digit</code>.</p> </li> <li>Ritorna <code>TRUE</code> se coincidono, <code>FALSE</code> altrimenti.</li> </ol>"},{"location":"dbzero/script/funzioni/fn_valida_partita_iva/#scelte-di-design","title":"\ud83d\udd12 Scelte di Design","text":"<ul> <li>Validazione formale: limita il controllo al carattere di controllo per garantire efficienza e semplicit\u00e0.</li> <li>Algoritmo Luhn modificato: conforme alle regole italiane di checksum per la Partita IVA.</li> <li>Layer Applicativo: eventuali controlli aggiuntivi (es. format avanzati, integrazione con servizi esterni) vanno delegati al backend per maggiore flessibilit\u00e0.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_valida_partita_iva/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Performance: <code>IMMUTABLE</code> e semplice logica PL/pgSQL, eseguibile direttamente al DB.</li> <li>Coerenza: un\u2019unica funzione di riferimento per la validazione di P.IVA nelle trigger, stored procedure e script.</li> <li>Manutenibilit\u00e0: separazione tra validazione formale e logica di business nel backend.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare il check digit della Partita IVA al livello database garantisce un unico punto di validazione, riduce ridondanza di codice e migliora l\u2019affidabilit\u00e0 dei dati.\u201d</p>"},{"location":"dbzero/script/funzioni/fn_valida_partita_iva/#funzione-fn_valida_partita_iva","title":"\u2699\ufe0f Funzione <code>fn_valida_partita_iva</code>","text":"<pre><code>CREATE FUNCTION fn_valida_partita_iva(piva text)\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_valida_partita_iva/#create-or-replace-function-scriptfn_valida_partita_ivapiva-text-returns-boolean-language-plpgsql-immutable-as-function-declare-i-int-somma-int-0-cifra-int-doppio-int-check_digit-int-begin-lo-script-esegue-una-validazione-formale-della-partita-iva-calcolando-il-carattere-di-controllo-finale-controlli-iniziali-formali-11-cifre-numeriche-if-piva-is-null-or-lengthpiva-11-or-piva-0-9-then-return-false-end-if-calcola-somma-con-algoritmo-di-luhn-modificato-specifico-italia-for-i-in-110-loop-cifra-castsubstringpiva-from-i-for-1-as-int-if-modi-2-0-then-posizioni-pari-246-raddoppio-posizioni-pari-cifra-raddoppiata-se-9-sottrai-9-doppio-cifra-2-if-doppio-9-then-doppio-doppio-9-end-if-somma-somma-doppio-else-posizioni-dispari-somma-diretta-posizioni-dispari-cifra-invariata-somma-somma-cifra-end-if-end-loop-calcola-il-carattere-di-controllo-finale-check-digit-check_digit-10-somma-10-10-ritorna-true-se-il-carattere-finale-corrisponde-false-altrimenti-return-check_digit-castsubstringpiva-from-11-for-1-as-int-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_valida_partita_iva(piva text)\n RETURNS boolean\n LANGUAGE plpgsql\n IMMUTABLE\nAS $function$\n  DECLARE\n      i INT;\n      somma INT := 0;\n      cifra INT;\n      doppio INT;\n      check_digit INT;\n  BEGIN\n      -- ----------------------------------------------------------------\n      -- Lo script esegue una validazione formale della Partita IVA   \n      -- calcolando il carattere di controllo finale.\n      -- ----------------------------------------------------------------\n\n      -- Controlli iniziali formali (11 cifre numeriche)\n      IF piva IS NULL OR LENGTH(piva) &lt;&gt; 11 OR piva ~ '[^0-9]' THEN\n          RETURN FALSE;\n      END IF;\n     -- Calcola somma con algoritmo di Luhn modificato (specifico Italia)\n      FOR i IN 1..10 LOOP\n          cifra := CAST(SUBSTRING(piva FROM i FOR 1) AS INT);\n\n          IF MOD(i, 2) = 0 THEN\n              -- Posizioni PARI (2,4,6,...) \u2192 raddoppio\n              -- Posizioni pari: cifra raddoppiata, se &gt;9 sottrai 9\n              doppio := cifra * 2;\n              IF doppio &gt; 9 THEN\n                  doppio := doppio - 9;\n              END IF;\n              somma := somma + doppio;\n          ELSE\n              -- Posizioni DISPARI \u2192 somma diretta\n              -- Posizioni dispari: cifra invariata\n              somma := somma + cifra;\n          END IF;\n      END LOOP;\n      -- Calcola il carattere di controllo finale (check digit)\n      check_digit := (10 - (somma % 10)) % 10;\n      -- Ritorna TRUE se il carattere finale corrisponde, FALSE altrimenti\n      RETURN check_digit = CAST(SUBSTRING(piva FROM 11 FOR 1) AS INT);\n  END;\n  $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/fn_validate_cf_piva_it/","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_validate_cf_piva_it</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - config.tipi_soggetto_dettaglio  - anagrafiche.soggetti </p> <p>Approfondimento funzioni:  - script.fn_valida_partita_iva  - script.fn_valida_codice_fiscale </p> <p>La funzione <code>script.fn_validate_cf_piva_it(p_tipo_det_id bigint, p_partita_iva text, p_piva_gruppo text, p_codice_fiscale text)</code> centralizza i controlli di validit\u00e0 di Partita IVA e Codice Fiscale per soggetti italiani, utilizzando i formati definiti in <code>config.tipi_soggetto_dettaglio</code>.</p> <p>Il suffisso <code>_it</code> indica che i controlli sono specifici per l'Italia: in futuro si potranno implementare varianti analoghe con suffissi come <code>_FR</code>, <code>_DE</code>, <code>_UK</code> per altri Stati.</p>"},{"location":"dbzero/script/funzioni/fn_validate_cf_piva_it/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Centralizzazione Validazioni: Unico punto per verificare CF e P.IVA in accordo ai formati configurati.</li> <li>Dinamicit\u00e0: I formati (alfanumerico, numerico, lunghezza) sono letti da <code>config.tipi_soggetto_dettaglio</code> e possono variare per Stato.</li> <li>Estendibilit\u00e0: Aggiunta futura di funzioni con suffissi di Stato, es. <code>_FR</code>, <code>_DE</code>, <code>_UK</code>.</li> </ul>"},{"location":"dbzero/script/funzioni/fn_validate_cf_piva_it/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Descrizione <code>p_tipo_det_id</code> <code>bigint</code> FK su <code>config.tipi_soggetto_dettaglio(id)</code>: definisce i formati CF/PIVA per lo Stato (IT). <code>p_partita_iva</code> <code>text</code> Partita IVA principale del soggetto. <code>p_piva_gruppo</code> <code>text</code> Partita IVA del gruppo di acquisto (se previsto). <code>p_codice_fiscale</code> <code>text</code> Codice Fiscale del soggetto."},{"location":"dbzero/script/funzioni/fn_validate_cf_piva_it/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Recupero formato</li> </ol> <p><pre><code>SELECT formato_cf, formato_piva\n  INTO STRICT l_tipo_det\n  FROM config.tipi_soggetto_dettaglio\n WHERE id = p_tipo_det_id;\n</code></pre> 2. Validazione Partita IVA principale</p> <ul> <li> <p>Se <code>formato_piva</code> non <code>NULL</code> e <code>p_partita_iva</code> valorizzata:</p> <ul> <li>Chiama <code>script.fn_valida_partita_iva(p_partita_iva)</code></li> <li>In caso di <code>FALSE</code>, solleva errore <code>PIVA_NON_VALIDA</code> con contesto dettagliato.</li> <li>Validazione Partita IVA Gruppo di Acquisto</li> </ul> </li> <li> <p>Stesse condizioni e metodo del punto precedente su <code>p_piva_gruppo</code>.</p> </li> <li> <p>Validazione Codice Fiscale</p> </li> <li> <p>Se <code>formato_cf</code> non <code>NULL</code> e <code>p_codice_fiscale</code> valorizzato:</p> <ul> <li>Chiama <code>script.fn_valida_codice_fiscale(p_codice_fiscale)</code></li> <li>In caso di <code>FALSE</code>, solleva errore <code>CF_NON_VALIDO</code> con contesto specifico.</li> </ul> </li> </ul>"},{"location":"dbzero/script/funzioni/fn_validate_cf_piva_it/#error-handling","title":"\ud83d\udca5 Error Handling","text":"<p>La funzione non restituisce un valore, ma utilizza <code>script.fn_log_and_raise_error</code> per loggare e alzare eccezione:</p> <ul> <li> <p>Codici messaggio:</p> </li> <li> <p><code>PIVA_NON_VALIDA</code></p> </li> <li><code>CF_NON_VALIDO</code></li> <li>Contesto JSONB con i parametri in input (es. <code>partita_iva</code>, <code>codice_fiscale</code>).</li> </ul>"},{"location":"dbzero/script/funzioni/fn_validate_cf_piva_it/#estensioni-future","title":"\ud83d\udd27 Estensioni Future","text":"<ul> <li>Implementare funzioni con suffissi per altri Stati: <code>script.fn_validate_cf_piva_fr</code>, <code>script.fn_validate_cf_piva_de</code>, etc.</li> <li>Eventuale aggiunta di controlli avanzati basati su data di nascita o sesso, delegabili al backend.</li> </ul> <p>\u2139\ufe0f Considerazioni Finali</p> <p>Questa funzione rappresenta il punto unico di validazione formale di Partita IVA e Codice Fiscale per soggetti italiani, garantendo coerenza con i formati configurati in tabella e centralizzando la gestione degli errori. Grazie all\u2019uso di script.fn_log_and_raise_error, ogni errore viene registrato e sollevato in modo standard, semplificando il backend e migliorando l\u2019affidabilit\u00e0 complessiva. <pre><code># \u2699\ufe0f Funzione `fn_validate_cf_piva_it`\n\n```sql\nCREATE FUNCTION fn_validate_cf_piva_it(p_tipo_det_id bigint, p_partita_iva text, p_piva_gruppo text, p_codice_fiscale text)\n</code></pre></p> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/fn_validate_cf_piva_it/#create-or-replace-function-scriptfn_validate_cf_piva_itp_tipo_det_id-bigint-p_partita_iva-text-p_piva_gruppo-text-p_codice_fiscale-text-returns-void-language-plpgsql-as-function-declare-l_tipo_det-record-l_error_ctx-jsonb-begin-0-recupero-il-tipo-di-dettaglio-del-soggetto-select-formato_cf-formato_piva-into-strict-l_tipo_det-from-configtipi_soggetto_dettaglio-where-id-p_tipo_det_id-2-validazione-partita-iva-principale-se-formattato-e-valorizzato-if-l_tipo_detformato_piva-is-not-null-and-p_partita_iva-is-not-null-and-not-scriptfn_valida_partita_ivap_partita_iva-then-l_error_ctx-jsonb_build_object-tipo_det-p_tipo_det_id-partita_iva-p_partita_iva-perform-scriptfn_log_and_raise_error-database-categoria-fn_validate_cf_piva_it-nome-della-function-piva_non_valida-codice-messaggio-l_error_ctx-metadata-nulluuid-p_partita_ivatext-end-if-3-validazione-partita-iva-gruppo-acquisto-stesso-pattern-if-l_tipo_detformato_piva-is-not-null-and-p_piva_gruppo-is-not-null-and-not-scriptfn_valida_partita_ivap_piva_gruppo-then-l_error_ctx-jsonb_build_object-tipo_det-p_tipo_det_id-piva_gruppo_acquisto-p_piva_gruppo-perform-scriptfn_log_and_raise_error-database-fn_validate_cf_piva_it-piva_non_valida-l_error_ctx-nulluuid-p_piva_gruppotext-end-if-4-validazione-codice-fiscale-se-formattato-e-valorizzato-if-l_tipo_detformato_cf-is-not-null-and-p_codice_fiscale-is-not-null-and-not-scriptfn_valida_codice_fiscalep_codice_fiscale-then-l_error_ctx-jsonb_build_object-tipo_det-p_tipo_det_id-codice_fiscale-p_codice_fiscale-perform-scriptfn_log_and_raise_error-database-fn_validate_cf_piva_it-cf_non_valido-l_error_ctx-nulluuid-p_codice_fiscaletext-end-if-return-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_validate_cf_piva_it(p_tipo_det_id bigint, p_partita_iva text, p_piva_gruppo text, p_codice_fiscale text)\n RETURNS void\n LANGUAGE plpgsql\nAS $function$\n     DECLARE\n       l_tipo_det RECORD;\n       l_error_ctx JSONB;\n     BEGIN\n\n     -- 0) Recupero il tipo di dettaglio del soggetto\n\n       SELECT formato_cf, formato_piva\n         INTO STRICT l_tipo_det\n         FROM config.tipi_soggetto_dettaglio\n       WHERE id = p_tipo_det_id;\n\n     -- 2) Validazione Partita IVA principale (se formattato e valorizzato)\n     IF l_tipo_det.formato_piva IS NOT NULL\n       AND p_partita_iva IS NOT NULL\n       AND NOT script.fn_valida_partita_iva(p_partita_iva)\n     THEN\n       l_error_ctx := jsonb_build_object(\n         'tipo_det', p_tipo_det_id,\n         'partita_iva', p_partita_iva\n       );\n       PERFORM script.fn_log_and_raise_error(\n         'database',                           -- categoria\n         'fn_validate_cf_piva_it',             -- nome della function\n         'PIVA_NON_VALIDA',                    -- codice messaggio\n         l_error_ctx,                          -- metadata\n         NULL::uuid,\n         p_partita_iva::text\n       );\n     END IF;\n\n     -- 3) Validazione Partita IVA Gruppo Acquisto (stesso pattern)\n     IF l_tipo_det.formato_piva IS NOT NULL\n       AND p_piva_gruppo IS NOT NULL\n       AND NOT script.fn_valida_partita_iva(p_piva_gruppo)\n     THEN\n       l_error_ctx := jsonb_build_object(\n         'tipo_det', p_tipo_det_id,\n         'piva_gruppo_acquisto', p_piva_gruppo\n       );\n       PERFORM script.fn_log_and_raise_error(\n         'database',\n         'fn_validate_cf_piva_it',\n         'PIVA_NON_VALIDA',\n         l_error_ctx, \n         NULL::uuid,\n          p_piva_gruppo::text \n       );\n     END IF;\n\n     -- 4) Validazione Codice Fiscale (se formattato e valorizzato)\n     IF l_tipo_det.formato_cf IS NOT NULL\n       AND p_codice_fiscale IS NOT NULL\n       AND NOT script.fn_valida_codice_fiscale(p_codice_fiscale)\n     THEN\n       l_error_ctx := jsonb_build_object(\n         'tipo_det', p_tipo_det_id,\n         'codice_fiscale', p_codice_fiscale\n       );\n       PERFORM script.fn_log_and_raise_error(\n         'database',\n         'fn_validate_cf_piva_it',\n         'CF_NON_VALIDO',\n         l_error_ctx,\n         NULL::uuid,\n         p_codice_fiscale::text \n       );\n     END IF;\n\n     RETURN;\n   END;\n   $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/trgfn_generate_account_code_generic/","title":"Trgfn generate account code generic","text":"<p>\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>script.trgfn_generate_account_code_generic()</code></p> <p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.account_code   - dbops.error_log </p> <p>Approfondimenti funzioni:   - script.fn_generate_codice </p>"},{"location":"dbzero/script/funzioni/trgfn_generate_account_code_generic/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Fornire una trigger\u2011function generica che popola automaticamente la colonna <code>account_code</code> quando non \u00e8 valorizzata, delegando la logica di generazione a <code>script.fn_generate_codice</code> in base al tipo di codice specificato (parametro o nome tabella).</p>"},{"location":"dbzero/script/funzioni/trgfn_generate_account_code_generic/#meccanismo-di-funzionamento","title":"\ud83d\udd0d Meccanismo di Funzionamento","text":"<ol> <li>Determinazione del tipo di codice</li> </ol> <pre><code>v_code_type := COALESCE(NULLIF(TG_ARGV[0], ''), TG_TABLE_NAME);\n</code></pre> <ul> <li>Se il primo argomento (<code>TG_ARGV[0]</code>) \u00e8 fornito e non vuoto, lo usa come <code>type</code>.</li> <li> <p>Altrimenti, usa il nome della tabella (<code>TG_TABLE_NAME</code>).</p> </li> <li> <p>Verifica e generazione</p> </li> </ul> <pre><code>IF NEW.account_code IS NULL OR trim(NEW.account_code) = '' THEN\n  NEW.account_code := script.fn_generate_codice(v_code_type);\nEND IF;\n</code></pre> <ul> <li>Controlla se <code>account_code</code> \u00e8 <code>NULL</code> o stringa vuota.</li> <li> <p>In caso affermativo, richiama <code>script.fn_generate_codice</code> passando il <code>v_code_type</code> per ottenere il nuovo codice.</p> </li> <li> <p>Ritorno    Restituisce il record <code>NEW</code>, con <code>account_code</code> popolato se necessario.</p> </li> </ul>"},{"location":"dbzero/script/funzioni/trgfn_generate_account_code_generic/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Riutilizzabilit\u00e0: la stessa funzione trigger serve per pi\u00f9 tabelle, basta passare il codice tipo come argomento.</li> <li>Coerenza: ogni <code>account_code</code> viene generato secondo regole centralizzate in <code>fn_generate_codice</code>, assicurando formati uniformi.</li> <li>Semplicit\u00e0: riduce boilerplate nelle definizioni trigger specifici; nessuna logica duplicata su ogni tabella.</li> <li>Flessibilit\u00e0: \u00e8 possibile personalizzare il <code>type</code> passando un parametro nel trigger DDL oppure lasciare che la funzione utilizzi il nome tabella di default.</li> </ul> <p>\ud83e\udde0 \u201cUna trigger\u2011function parametrica come questa semplifica la generazione automatica di codici, migliora la manutenibilit\u00e0 e garantisce format uniformi in tutta la base dati.\u201d</p>"},{"location":"dbzero/script/funzioni/trgfn_generate_account_code_generic/#funzione-trgfn_generate_account_code_generic","title":"\u2699\ufe0f Funzione <code>trgfn_generate_account_code_generic</code>","text":"<pre><code>CREATE FUNCTION trgfn_generate_account_code_generic()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/trgfn_generate_account_code_generic/#create-or-replace-function-scripttrgfn_generate_account_code_generic-returns-trigger-language-plpgsql-as-function-declare-v_code_type-text-coalescenulliftg_argv0-tg_table_name-begin-if-newaccount_code-is-null-or-trimnewaccount_code-then-newaccount_code-scriptfn_generate_codicev_code_type-end-if-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.trgfn_generate_account_code_generic()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n  DECLARE\n    v_code_type TEXT := COALESCE(NULLIF(TG_ARGV[0], ''), TG_TABLE_NAME);\n  BEGIN\n    IF NEW.account_code IS NULL OR trim(NEW.account_code) = '' THEN\n      NEW.account_code := script.fn_generate_codice(v_code_type);\n    END IF;\n    RETURN NEW;\n  END;\n  $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/trgfn_lock_columns/","title":"Trgfn lock columns","text":""},{"location":"dbzero/script/funzioni/trgfn_lock_columns/#documentazione-concettuale-trigger-function-scripttrgfn_lock_columns","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>script.trgfn_lock_columns()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.messaggi_errore   - dbops.error_log </p> <p>Approfondimenti funzioni:   - script.fn_log_and_raise_error </p>"},{"location":"dbzero/script/funzioni/trgfn_lock_columns/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Trigger function generica per bloccare modifiche non autorizzate su colonne specificate, integrando:</p> </li> <li> <p>Controllo dinamico delle colonne PASSATE come argomenti al trigger</p> </li> <li>Logging remoto tramite dblink, per tracciare l\u2019evento prima del rollback</li> <li>Messaggi parametrizzati con placeholder e codici definiti in <code>config.messaggi_errore</code></li> </ul>"},{"location":"dbzero/script/funzioni/trgfn_lock_columns/#comportamento-chiave","title":"\ud83c\udfaf  Comportamento Chiave","text":"<ol> <li> <p>Validazione degli argomenti</p> </li> <li> <p>Accetta un numero pari di parametri (<code>colonna</code>, <code>msgcode</code>)</p> </li> <li> <p>Se dispari, invoca <code>fn_log_and_raise_error('database', TG_NAME, 'E_ARGOMENTI_A_COPPIE', {...})</code></p> </li> <li> <p>Ciclo di verifica</p> </li> <li> <p>Per ogni coppia, estrae OLD.col e NEW.col in modo dinamico</p> </li> <li> <p>Confronta i valori: se distinti, scatta il blocco</p> </li> <li> <p>Gestione dell\u2019errore</p> </li> <li> <p>Chiama <code>script.fn_log_and_raise_error</code> con:</p> <ul> <li>Area: <code>database</code></li> <li>Function_name: nome del trigger (TG_NAME)</li> <li>Error_code: codice testuale passato</li> <li>Context: JSON con <code>column</code>, <code>old_value</code>, <code>new_value</code></li> <li>Placeholder: il nome della colonna per sostituire <code>%s</code></li> <li>La funzione logga su <code>dbops.error_log</code> (via dblink_connect) e rialza un\u2019eccezione con dettaglio e hint</li> </ul> </li> <li> <p>Permette UPDATE solo se nessuna colonna protetta \u00e8 stata modificata</p> </li> </ol>"},{"location":"dbzero/script/funzioni/trgfn_lock_columns/#punti-di-interesse","title":"\ud83d\udd0d Punti di Interesse","text":"<ul> <li>TG_ARGV: array variadico; le posizioni pari/dispai determinano colonna e messaggio</li> <li>EXECUTE dinamico: <code>format('SELECT ($1).%I, ($2).%I', ... )</code> per ottenere valori senza hard\u2011coding</li> <li>Logging isolato: il dblink <code>logconn</code> inserisce il log in una sessione separata, garantendo il commit anche in caso di rollback nella sessione corrente</li> <li>Placeholder variadico: il quinto parametro di <code>fn_log_and_raise_error</code> permette di inserire il nome della colonna in <code>%s</code> dentro il messaggio predefinito</li> </ul>"},{"location":"dbzero/script/funzioni/trgfn_lock_columns/#esempio-di-utilizzo","title":"\ud83d\ude80 Esempio di Utilizzo","text":"<pre><code>CREATE TRIGGER trg_lock_sensitive\n  BEFORE UPDATE ON app.orders\n  FOR EACH ROW\n  EXECUTE FUNCTION script.trgfn_lock_columns(\n    'customer_id',   'ERR_LOCK_CUSTID',\n    'order_status',  'ERR_LOCK_STATUS'\n  );\n</code></pre> <ul> <li>customer_id non pu\u00f2 cambiare: user\u00e0 <code>ERR_LOCK_CUSTID</code> e mostrer\u00e0 in messaggio il campo stesso</li> <li>order_status \u00e8 protetto con <code>ERR_LOCK_STATUS</code></li> </ul>"},{"location":"dbzero/script/funzioni/trgfn_lock_columns/#vantaggi-operativi","title":"\u2728 Vantaggi Operativi","text":"<ul> <li>Zero duplicazioni: una sola function per pi\u00f9 tabelle e colonne</li> <li>Flessibilit\u00e0 totale: basta passare argomenti diversi per replicare il pattern</li> <li>Tracciabilit\u00e0: ogni blocco viene loggato con contesto e transazione (tx_id)</li> <li>Manutenibilit\u00e0: i messaggi di errore si aggiornano in <code>config.messaggi_errore</code> senza toccare il trigger</li> </ul> <p>\ud83e\udde0 \u201cCon <code>trgfn_lock_columns</code> gestisci centralmente i blocchi di sicurezza su colonne critiche, integrando log e messaggi dinamici in un\u2019unica soluzione.\u201d</p>"},{"location":"dbzero/script/funzioni/trgfn_lock_columns/#funzione-trgfn_lock_columns","title":"\u2699\ufe0f Funzione <code>trgfn_lock_columns</code>","text":"<pre><code>CREATE FUNCTION trgfn_lock_columns()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/trgfn_lock_columns/#create-or-replace-function-scripttrgfn_lock_columns-returns-trigger-language-plpgsql-as-function-declare-n_args-int-array_lengthtg_argv-1-i-int-col-text-msgcode-text-oldval-text-newval-text-begin-1-se-il-numero-di-argomenti-non-e-pari-errore-if-n_args-2-0-then-perform-scriptfn_log_and_raise_error-database-tg_name-e_argomenti_a_coppie-jsonb_build_objectexpected_pairs-n_args2-nulluuid-variadic-arraytext-end-if-2-ciclo-sulle-coppie-colonna-codice-messaggio-for-i-in-1n_args-by-2-loop-col-tg_argvi-1-msgcode-tg_argvi-leggo-dinamicamente-oldcol-e-newcol-execute-format-select-1itext-2itext-col-col-using-old-new-into-oldval-newval-if-oldval-is-distinct-from-newval-then-perform-scriptfn_log_and_raise_error-database-tg_name-msgcode-jsonb_build_object-column-col-old_value-oldval-new_value-newval-nulluuid-col-end-if-end-loop-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.trgfn_lock_columns()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nDECLARE\n  n_args  int := array_length(TG_ARGV, 1);\n  i       int;\n  col     text;\n  msgcode text;\n  oldval  text;\n  newval  text;\nBEGIN\n\n\n  -- 1) Se il numero di argomenti non \u00e8 pari, errore\n  IF n_args % 2 &lt;&gt; 0 THEN\n    PERFORM script.fn_log_and_raise_error(\n      'database',\n      TG_NAME,\n      'E_ARGOMENTI_A_COPPIE',\n      jsonb_build_object('expected_pairs', n_args/2),\n      NULL::uuid,\n      VARIADIC ARRAY[]::text[]\n    );\n  END IF;\n\n  -- 2) Ciclo sulle coppie (colonna, codice messaggio)\n  FOR i IN 1..n_args BY 2 LOOP\n    col     := TG_ARGV[i-1];\n    msgcode := TG_ARGV[i];\n\n    -- Leggo dinamicamente OLD.col e NEW.col\n    EXECUTE format(\n      'SELECT ($1).%I::text, ($2).%I::text',\n      col, col\n    ) USING OLD, NEW INTO oldval, newval;\n\n    IF oldval IS DISTINCT FROM newval THEN\n      PERFORM script.fn_log_and_raise_error(\n        'database',\n        TG_NAME,\n        msgcode,\n        jsonb_build_object(\n          'column',    col,\n          'old_value', oldval,\n          'new_value', newval\n        ),\n        NULL::uuid,\n        col\n      );\n    END IF;\n  END LOOP;\n\n  RETURN NEW;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/trgfn_prevent_modification_generic/","title":"Trgfn prevent modification generic","text":""},{"location":"dbzero/script/funzioni/trgfn_prevent_modification_generic/#documentazione-concettuale-funzione-scripttrgfn_prevent_modification_generic","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.trgfn_prevent_modification_generic()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento funzioni :   - script.fn_log_and_raise_error </p> <p>La trigger function <code>script.trgfn_prevent_modification_generic()</code> impedisce modifiche o cancellazioni sui record di tabelle di audit (o altre tabelle protette), sollevando un\u2019eccezione centralizzata tramite <code>fn_log_and_raise_error</code>.</p>"},{"location":"dbzero/script/funzioni/trgfn_prevent_modification_generic/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Proteggere dati di audit   Garantire l\u2019inalterabilit\u00e0 delle cronologie storiche registrate in tabelle dedicate (es. <code>config.parameters_audit</code>).</li> <li>Centralizzare la gestione degli errori   Usare un wrapper di logging e exception unificato per fornire messaggi coerenti e tracce in log.</li> </ul>"},{"location":"dbzero/script/funzioni/trgfn_prevent_modification_generic/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"<p>Questa funzione non riceve parametri espliciti: utilizza le variabili di contesto PL/pgSQL:</p> Variabile Descrizione <code>TG_TABLE_NAME</code> Nome della tabella su cui \u00e8 stato invocato il trigger. <code>TG_OP</code> Tipo di operazione che ha attivato il trigger (<code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>)."},{"location":"dbzero/script/funzioni/trgfn_prevent_modification_generic/#flusso-di-esecuzione","title":"\u2699\ufe0f Flusso di Esecuzione","text":"<ol> <li>Chiamata dal trigger    Eseguita <code>BEFORE UPDATE</code> o <code>BEFORE DELETE</code> sulla tabella protetta.</li> <li>Sollevamento dell\u2019eccezione    Invoca:</li> </ol> <pre><code>PERFORM script.fn_log_and_raise_error(\n  'database',                             -- canale log\n  'trgfn_prevent_parameters_audit_modification', -- nome del trigger/contesto\n  'E_TABELLA_OP_NON_CONSENTITA',          -- codice messaggio (E=Error)\n  jsonb_build_object(\n    'nome_tabella', TG_TABLE_NAME,\n    'trigger_op',    TG_OP\n  ),                                       -- contesto JSON per il messaggio\n  TG_TABLE_NAME::text,\n  TG_OP::text\n);\n</code></pre> <p>La funzione <code>fn_log_and_raise_error</code> logga l\u2019evento e lancia un <code>RAISE EXCEPTION</code> con un messaggio tradotto da tabella <code>config.messaggi_errore</code>. 3. Prevenzione operazione    Poich\u00e9 l\u2019eccezione interrompe l\u2019operazione, nessuna modifica viene applicata.</p>"},{"location":"dbzero/script/funzioni/trgfn_prevent_modification_generic/#definizione-sql","title":"\ud83d\udd16 Definizione SQL","text":"<pre><code>CREATE OR REPLACE FUNCTION script.trgfn_prevent_modification_generic()\n  RETURNS trigger\n  LANGUAGE plpgsql\nAS $function$\nBEGIN\n  PERFORM script.fn_log_and_raise_error(\n    'database',\n    'trgfn_prevent_parameters_audit_modification',\n    'E_TABELLA_OP_NON_CONSENTITA',\n    jsonb_build_object(\n      'nome_tabella', TG_TABLE_NAME,\n      'trigger_op',   TG_OP\n    ),\n    TG_TABLE_NAME::text,\n    TG_OP::text\n  );\nEND;\n$function$;\n\nCOMMENT ON FUNCTION script.trgfn_prevent_modification_generic() IS\n  'Trigger function che blocca UPDATE e DELETE su tabelle protette, sollevando errore tramite fn_log_and_raise_error.';\n</code></pre>"},{"location":"dbzero/script/funzioni/trgfn_prevent_modification_generic/#applicazione-del-trigger","title":"\ud83d\ude80 Applicazione del Trigger","text":"<p>Per proteggere una tabella (es. <code>config.parameters_audit</code>):</p> <pre><code>DROP TRIGGER IF EXISTS trg_prevent_mod_parameters_audit ON config.parameters_audit;\n\nCREATE TRIGGER trg_prevent_mod_parameters_audit\n  BEFORE UPDATE OR DELETE\n  ON config.parameters_audit\n  FOR EACH ROW\n  EXECUTE FUNCTION script.trgfn_prevent_modification_generic();\n</code></pre>"},{"location":"dbzero/script/funzioni/trgfn_prevent_modification_generic/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Sicurezza dei dati: impedisce involontarie cancellazioni o modifiche.</li> <li>Consistenza dei messaggi: utilizza un sistema di logging/exception centralizzato per coerenza.</li> <li>Riutilizzabilit\u00e0: la stessa funzione pu\u00f2 proteggere pi\u00f9 tabelle di audit o log.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare la protezione dei dati critici in una trigger function riutilizzabile assicura sicurezza, trasparenza e facilit\u00e0 di manutenzione.\u201d</p>"},{"location":"dbzero/script/funzioni/trgfn_prevent_modification_generic/#funzione-trgfn_prevent_modification_generic","title":"\u2699\ufe0f Funzione <code>trgfn_prevent_modification_generic</code>","text":"<pre><code>CREATE FUNCTION trgfn_prevent_modification_generic()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/trgfn_prevent_modification_generic/#create-or-replace-function-scripttrgfn_prevent_modification_generic-returns-trigger-language-plpgsql-as-function-begin-perform-scriptfn_log_and_raise_error-database-trgfn_prevent_parameters_audit_modification-e_tabella_op_non_consentita-jsonb_build_object-nome_tabella-tg_table_name-trigger_op-tg_op-nulluuid-tg_table_nametext-tg_optext-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.trgfn_prevent_modification_generic()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n\nBEGIN\n\n  PERFORM script.fn_log_and_raise_error(\n      'database',\n      'trgfn_prevent_parameters_audit_modification',\n      'E_TABELLA_OP_NON_CONSENTITA',\n      jsonb_build_object(\n        'nome_tabella', TG_TABLE_NAME,\n        'trigger_op',        TG_OP\n      ),\n      NULL::uuid,\n      TG_TABLE_NAME::text,\n      TG_OP::text\n    );\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/trgfn_upd_audit_data_user_generic/","title":"Trgfn upd audit data user generic","text":""},{"location":"dbzero/script/funzioni/trgfn_upd_audit_data_user_generic/#documentazione-concettuale-trigger-function-scripttrgfn_upd_audit_data_user_generic","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>script.trgfn_upd_audit_data_user_generic</code>","text":"<p>La trigger function <code>script.trgfn_upd_audit_data_user_generic()</code> si occupa di aggiornare automaticamente i campi di audit <code>data_update</code> e <code>user_update</code> immediatamente prima di ogni operazione di update sul record, garantendo la tracciabilit\u00e0 delle modifiche.</p>"},{"location":"dbzero/script/funzioni/trgfn_upd_audit_data_user_generic/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Audit automatico   Assicurare che ogni modifica a una riga di tabella sia registrata con timestamp (<code>data_update</code>) e utente (<code>user_update</code>) correnti.</li> <li>Centralizzare la logica di update audit   Evitare di replicare manualmente la medesima assegnazione in ogni trigger <code>BEFORE UPDATE</code> delle varie tabelle.</li> </ul>"},{"location":"dbzero/script/funzioni/trgfn_upd_audit_data_user_generic/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>Nessun parametro: la funzione opera su <code>NEW</code>, modificando in-place i campi di audit.</li> <li> <p>Trigger associati: va utilizzata con <code>BEFORE UPDATE</code> su qualsiasi tabella che possieda i campi:</p> </li> <li> <p><code>data_update TIMESTAMP WITH TIME ZONE</code></p> </li> <li><code>user_update TEXT</code> (o VARCHAR)</li> </ul> <p>Esempio di associazione DDL:</p> <pre><code>CREATE TRIGGER trg_upd_&lt;nome_tabella&gt;_audit_data_user\n  BEFORE UPDATE ON &lt;nome_schema&gt;.&lt;nome_tabella&gt;\n  FOR EACH ROW\n  EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic();\n</code></pre>"},{"location":"dbzero/script/funzioni/trgfn_upd_audit_data_user_generic/#comportamento","title":"\u2699\ufe0f Comportamento","text":"<ol> <li>Aggiornamento timestamp</li> </ol> <p><pre><code>NEW.data_update := CURRENT_TIMESTAMP;\n</code></pre> 2. Aggiornamento utente</p> <p><pre><code>NEW.user_update := CURRENT_USER;\n</code></pre> 3. Restituzione del record</p> <pre><code>RETURN NEW;\n</code></pre> <p>Queste assegnazioni avvengono subito prima che l\u2019UPDATE sia eseguito, sovrascrivendo eventuali valori preesistenti.</p>"},{"location":"dbzero/script/funzioni/trgfn_upd_audit_data_user_generic/#valore-di-ritorno","title":"\ud83d\udd12 Valore di Ritorno","text":"<ul> <li><code>trigger</code>   Restituisce il record <code>NEW</code> con i campi di audit aggiornati.</li> </ul>"},{"location":"dbzero/script/funzioni/trgfn_upd_audit_data_user_generic/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Uniformit\u00e0   Un\u2019unica trigger function per tutte le tabelle, garantendo comportamento omogeneo.</li> <li>Riduzione di codice duplicato   Non serve inserire manualmente assegnazioni di audit in ogni trigger.</li> <li>Sicurezza e tracciabilit\u00e0   Ogni modifica alle tabelle viene automaticamente marcata con data e utente, migliorando la compliance e il debugging.</li> <li>Facilit\u00e0 di estensione   Basta aggiungere un trigger <code>BEFORE UPDATE</code> replicando lo stesso pattern su nuove tabelle.</li> </ul> <p>\ud83e\udde0 \u201cAutomatizzare l\u2019audit delle modifiche con una trigger function generica assicura coerenza, riduce il boilerplate e aumenta la tracciabilit\u00e0.\u201d</p>"},{"location":"dbzero/script/funzioni/trgfn_upd_audit_data_user_generic/#funzione-trgfn_upd_audit_data_user_generic","title":"\u2699\ufe0f Funzione <code>trgfn_upd_audit_data_user_generic</code>","text":"<pre><code>CREATE FUNCTION trgfn_upd_audit_data_user_generic()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/trgfn_upd_audit_data_user_generic/#create-or-replace-function-scripttrgfn_upd_audit_data_user_generic-returns-trigger-language-plpgsql-as-function-begin-newdata_update-current_timestamp-newuser_update-current_user-return-new-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.trgfn_upd_audit_data_user_generic()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\nBEGIN\n  NEW.data_update := CURRENT_TIMESTAMP;\n  NEW.user_update := CURRENT_USER;\n  RETURN NEW;\nEND;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/trgfn_upd_dlt_storico_generic/","title":"Trgfn upd dlt storico generic","text":""},{"location":"dbzero/script/funzioni/trgfn_upd_dlt_storico_generic/#documentazione-concettuale-trigger-function-scripttrgfn_upd_dlt_storico_generic","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>script.trgfn_upd_dlt_storico_generic()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento funzioni:   - script.fn_log_and_raise_error </p> <p>Guide:  - Linee Guida SQL per convenzioni di changeSet e commenti SQL  </p> <p>La trigger function <code>script.trgfn_upd_dlt_storico_generic()</code> centralizza la logica di storicizzazione in qualunque tabella del layer <code>storico</code>, gestendo:</p> <ul> <li>Chiusura automatica degli snapshot aperti (<code>valid_to IS NULL</code>).</li> <li>Creazione di uno snapshot iniziale con <code>valid_from</code> fisso (<code>1950-01-01</code>) se non esistevano record storici.</li> <li>Inserimento di snapshot finale con <code>valid_from = CURRENT_DATE</code> e <code>valid_to = NULL</code> per l\u2019operazione corrente.</li> <li>Gestione di errori tramite <code>script.fn_log_and_raise_error</code>, mantenendo commenti interni e usando <code>TG_ARGV[0]</code> per il nome della colonna FK della tabella storica.</li> <li>Importante tutte le tabelle devono avere una colonna <code>storicizza</code> che \u00e8 utilizzatta all'interno della funzion.</li> </ul>"},{"location":"dbzero/script/funzioni/trgfn_upd_dlt_storico_generic/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Unificazione logica: evitare duplicazioni del codice di storicizzazione in diverse funzioni trigger.</li> <li>Flessibilit\u00e0: applicabile a qualsiasi tabella storica semplicemente specificando il parametro <code>TG_ARGV[0]</code> con il nome della colonna di riferimento.</li> <li>Robustezza: gestione completa degli errori con logging, senza interrompere il flusso DML principale.</li> </ul>"},{"location":"dbzero/script/funzioni/trgfn_upd_dlt_storico_generic/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li> <p>Parametri (<code>TG_ARGV</code>):</p> </li> <li> <p><code>TG_ARGV[0]</code>: nome della colonna FK nella tabella storica che punta alla PK della tabella originale (es. <code>'indirizzo_dettaglio_id'</code>).</p> </li> <li>Trigger associato: tipicamente usato con una DDL di tipo</li> </ul> <p><pre><code>CREATE TRIGGER trg_storico\n  AFTER UPDATE OR DELETE ON &lt;schema&gt;.&lt;tabella_origine&gt;\n  FOR EACH ROW\n  EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('&lt;colonna_fk&gt;');\n</code></pre> * Dipendenze:</p> <ul> <li>Schema <code>storico</code> deve contenere la tabella con stesso nome della sorgente.</li> <li>Colonne <code>storicizza</code>, <code>valid_from</code>, <code>valid_to</code>, <code>data_insert</code>, <code>user_insert</code>, <code>snapshot</code>, <code>tipo_operazione</code> con struttura standard.</li> <li>Funzione <code>script.fn_log_and_raise_error</code> per log degli errori.</li> </ul>"},{"location":"dbzero/script/funzioni/trgfn_upd_dlt_storico_generic/#flusso-di-esecuzione-dettagliato","title":"\u2699\ufe0f Flusso di Esecuzione Dettagliato","text":"<ol> <li> <p>Recupero ID record</p> </li> <li> <p>Se <code>TG_OP = 'DELETE'</code>, usa <code>OLD.id</code>, altrimenti <code>NEW.id</code>.</p> </li> <li> <p>In caso di errore, logga con <code>E_SNAPSHOT_ID_NOT_FOUND</code>.</p> </li> <li> <p>Determinazione tipo e snapshot</p> </li> <li> <p>UPDATE \u2192 <code>op_type = 2</code>, <code>snapshot_data = to_jsonb(NEW)</code>.</p> </li> <li> <p>DELETE \u2192 <code>op_type = 3</code>, <code>snapshot_data = to_jsonb(OLD)</code>.</p> </li> <li> <p>Chiusura snapshot aperti</p> </li> <li> <p>Esegue <code>UPDATE storico.&lt;tabella&gt;</code> su <code>valid_to = CURRENT_DATE</code> per i record con FK = ID e <code>valid_to IS NULL</code>.</p> </li> <li>Imposta <code>v_snapshot_open</code> a <code>TRUE</code> se modificati record; altrimenti <code>FALSE</code>.</li> <li> <p>Errori loggati con <code>E_SNAPSHOT_CLOSE_ERROR</code>.</p> </li> <li> <p>Inserimento storico iniziale</p> </li> <li> <p>Se <code>v_snapshot_open = FALSE</code>, inserisce snapshot initiale con <code>valid_from = '1950-01-01'</code> e <code>valid_to = CURRENT_DATE</code>, <code>tipo_operazione = 1</code>.</p> </li> <li> <p>Errori gestiti con <code>E_SNAPSHOT_INIT_INSERT_ERROR</code>.</p> </li> <li> <p>Inserimento snapshot finale</p> </li> <li> <p>Inserisce sempre un record con <code>valid_from = CURRENT_DATE</code>, <code>valid_to = NULL</code>, <code>tipo_operazione = op_type</code>.</p> </li> <li> <p>Errori gestiti con <code>E_SNAPSHOT_FINAL_INSERT_ERROR</code>.</p> </li> <li> <p>Restituzione record</p> </li> <li> <p>Ritorna <code>OLD</code> per <code>DELETE</code>, <code>NEW</code> per <code>UPDATE</code>.</p> </li> </ol>"},{"location":"dbzero/script/funzioni/trgfn_upd_dlt_storico_generic/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Standardizzazione: una sola funzione per tutte le tabelle storiche, semplifica manutenzione e aggiornamenti.</li> <li>Configurabilit\u00e0: basta specificare la colonna di riferimento nel trigger, senza ulteriori modifiche al PL/pgSQL.</li> <li>Resilienza: errori intermedi non bloccano la DML, vengono loggati e notificati in modo consistente.</li> <li>Audit Trail completo: garantisce sempre la chiusura e la creazione di snapshot, mantenendo la storia integrale dei dati.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>trgfn_upd_dlt_storico_generic</code>, Zero ERP ha una soluzione unica e versatile per versionare ogni entit\u00e0 storica, riducendo complessit\u00e0 e aumentando l\u2019affidabilit\u00e0.\u201d</p>"},{"location":"dbzero/script/funzioni/trgfn_upd_dlt_storico_generic/#funzione-trgfn_upd_dlt_storico_generic","title":"\u2699\ufe0f Funzione <code>trgfn_upd_dlt_storico_generic</code>","text":"<pre><code>CREATE FUNCTION trgfn_upd_dlt_storico_generic()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/trgfn_upd_dlt_storico_generic/#create-or-replace-function-scripttrgfn_upd_dlt_storico_generic-returns-trigger-language-plpgsql-as-function-declare-id_col_hist-text-tg_argv0-nome-colonna-fk-nella-tabella-storica-es-indirizzo_dettaglio_id-id_col_orig-text-id-nome-colonna-pk-nella-tabella-originale-default-id-hist_schema-constant-text-storico-schema-destinazione-per-i-dati-storici-orig_schema-text-tg_table_schema-schema-della-tabella-sorgente-orig_table-text-tg_table_name-nome-tabella-sorgente-hist_table-text-orig_table-nome-tabella-storica-stesso-nome-v_current_date-constant-date-current_date-data-corrente-per-chiusura-snapshot-v_fixed_date-constant-date-1950-01-01-data-fissa-per-nuovi-record-storici-v_rowcount-integer-contatore-righe-per-operazioni-update-v_snapshot_open-boolean-false-flag-snapshot-aperti-snapshot_data-jsonb-dati-serializzati-del-record-op_type-smallint-1creazione-2modifica-3eliminazione-v_id_value-text-valore-id-del-record-originale-v_id_col_type-text-tipo-della-colonna-id-nella-tabella-originale-v_skip_reset-boolean-tg_table_name-any-array-parameters-parameter_overrides-definire-le-tabelle-che-non-devono-essere-resettate-v_should_reset-boolean-not-v_skip_reset-valorizzata-in-begin-begin-inizializziamo-il-flag-una-sola-volta-v_should_reset-not-v_skip_reset-01-trova-il-tipo-della-colonna-pk-id-nella-tabella-origine-select-format_typeaatttypid-aatttypmod-into-v_id_col_type-from-pg_attribute-a-join-pg_class-c-on-aattrelid-coid-join-pg_namespace-n-on-noid-crelnamespace-where-nnspname-orig_schema-and-crelname-orig_table-and-aattname-id_col_orig-and-not-aattisdropped-0-se-la-colonna-storicizza-esiste-e-vale-false-non-storicizzo-if-tg_op-update-and-not-newstoricizza-then-return-new-elsif-tg_op-delete-and-not-oldstoricizza-then-return-old-end-if-sezione-1-recupero-id-record-originale-ottiene-lid-del-record-dalla-tabella-sorgente-old-per-delete-new-per-update-gestisce-eventuali-errori-di-colonna-mancante-begin-if-tg_op-delete-then-v_id_value-oldidtext-per-operazioni-delete-usa-old-else-v_id_value-newidtext-per-operazioni-update-usa-new-end-if-exception-when-others-then-gestione-errore-logga-e-solleva-eccezione-tramite-funzione-dedicata-perform-scriptfn_log_and_raise_error-database-tg_name-e_snapshot_id_not_found-jsonb_build_objecterror-sqlerrm-schema-hist_schema-table-hist_table-nulluuid-sqlerrmtext-end-sezione-2-creazione-snapshot-serializza-i-dati-del-record-in-formato-jsonb-assegna-il-tipo-di-operazione-2update-3delete-if-tg_op-update-then-op_type-2-snapshot_data-to_jsonbnew-snapshot-dello-stato-nuovo-elsif-tg_op-delete-then-op_type-3-snapshot_data-to_jsonbold-snapshot-dello-stato-vecchio-else-return-coalescenewold-caso-non-gestito-non-dovrebbe-verificarsi-end-if-sezione-3-chiusura-snapshot-aperti-cerca-e-chiude-eventuali-snapshot-precedenti-ancora-aperti-valid_to-is-null-per-lo-stesso-record-stesso-id-begin-execute-format-update-ii-set-valid_to-1-where-i-2-and-valid_to-is-null-hist_schema-hist_table-id_col_hist-using-v_current_date-v_id_value-execute-format-update-ii-set-valid_to-1-where-i-2s-and-valid_to-is-null-hist_schema-hist_table-id_col_hist-v_id_col_type-using-v_current_date-v_id_value-get-diagnostics-v_rowcount-row_count-controlla-se-ha-chiuso-record-v_snapshot_open-v_rowcount-0-imposta-flag-se-trovati-snapshot-exception-when-others-then-gestione-errore-chiusura-snapshot-perform-scriptfn_log_and_raise_error-database-tg_name-e_snapshot_close_error-jsonb_build_objecterror-sqlerrm-schema-hist_schema-table-hist_table-nulluuid-sqlerrmtext-sqlstatetext-end-sezione-4-inserimento-dati-storici-begin-41-inserimento-storico-iniziale-solo-se-non-cerano-snapshot-aperti-crea-un-record-storico-con-intervallo-di-validita-fisso-1950-01-01-current_date-per-mantenere-traccia-dello-stato-precedente-alloperazione-corrente-if-not-v_snapshot_open-then-begin-execute-format-insert-into-ii-i-valid_from-valid_to-data_insert-user_insert-snapshot-tipo_operazione-values-1s-2-3-now-current_user-4-1-hist_schema-hist_table-id_col_hist-v_id_col_type-using-v_id_value-v_fixed_date-v_current_date-to_jsonbold-exception-when-others-then-gestione-errore-inserimento-storico-iniziale-perform-scriptfn_log_and_raise_error-database-tg_name-e_snapshot_init_insert_error-jsonb_build_objecterror-sqlerrm-schema-hist_schema-table-hist_table-nulluuid-sqlerrmtext-sqlstatetext-end-end-if-42-inserimento-storico-finale-sempre-crea-un-record-storico-con-valid_from-current_date-e-valid_to-null-per-registrare-il-nuovo-stato-del-record-begin-execute-format-insert-into-ii-i-valid_from-data_insert-user_insert-snapshot-tipo_operazione-values-1s-2-now-current_user-3-4-hist_schema-hist_table-id_col_hist-v_id_col_type-using-v_id_value-v_current_date-snapshot_data-op_type-exception-when-others-then-gestione-errore-inserimento-storico-finale-perform-scriptfn_log_and_raise_error-database-tg_name-e_snapshot_final_insert_error-jsonb_build_objecterror-sqlerrm-schema-hist_schema-table-hist_table-nulluuid-sqlerrmtext-sqlstatetext-end-end-sezione-5-gestione-reset-storico-per-tabelle-specifiche-vedi-elenco-in-array-if-tg_op-update-and-v_should_reset-then-newstoricizza-false-end-if-restituisce-il-record-appropriato-old-per-delete-new-per-update-return-case-when-tg_op-delete-then-old-else-new-end-end-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.trgfn_upd_dlt_storico_generic()\n RETURNS trigger\n LANGUAGE plpgsql\nAS $function$\n      DECLARE\n        id_col_hist     TEXT          := TG_ARGV[0];  -- Nome colonna FK nella tabella storica (es: 'indirizzo_dettaglio_id')\n        id_col_orig     TEXT          := 'id';        -- Nome colonna PK nella tabella originale (default 'id')\n        hist_schema     CONSTANT TEXT := 'storico';   -- Schema destinazione per i dati storici\n        orig_schema     TEXT          := TG_TABLE_SCHEMA; -- Schema della tabella sorgente\n        orig_table      TEXT          := TG_TABLE_NAME;   -- Nome tabella sorgente\n        hist_table      TEXT          := orig_table;      -- Nome tabella storica (stesso nome)\n        v_current_date  CONSTANT DATE := CURRENT_DATE; -- Data corrente per chiusura snapshot\n        v_fixed_date    CONSTANT DATE := '1950-01-01'; -- Data fissa per nuovi record storici\n        v_rowcount      INTEGER;      -- Contatore righe per operazioni UPDATE\n        v_snapshot_open BOOLEAN := FALSE; -- Flag snapshot aperti\n        snapshot_data   JSONB;        -- Dati serializzati del record\n        op_type         SMALLINT;     -- 1=creazione, 2=modifica, 3=eliminazione\n        v_id_value      TEXT;       -- Valore ID del record originale\n        v_id_col_type  TEXT; -- Tipo della colonna ID nella tabella originale\n        v_skip_reset    BOOLEAN := TG_TABLE_NAME = ANY (\n                            ARRAY[\n                              'parameters',\n                              'parameter_overrides'\n                            ]\n                          ); -- Definire le tabelle che non devono essere resettate\n        v_should_reset  BOOLEAN;  -- = NOT v_skip_reset, valorizzata in BEGIN\n      BEGIN\n        -- Inizializziamo il flag una sola volta\n         v_should_reset := NOT v_skip_reset;\n\n      -- 0.1) Trova il tipo della colonna PK (id) nella tabella origine\n        SELECT format_type(a.atttypid, a.atttypmod)\n          INTO v_id_col_type\n        FROM pg_attribute a\n        JOIN pg_class   c ON a.attrelid = c.oid\n        JOIN pg_namespace n ON n.oid = c.relnamespace\n        WHERE n.nspname = orig_schema\n          AND c.relname = orig_table\n          AND a.attname = id_col_orig\n          AND NOT a.attisdropped;   \n\n        --0) Se la colonna storicizza esiste e vale FALSE, non storicizzo\n        IF TG_OP = 'UPDATE' AND NOT NEW.storicizza THEN\n          RETURN NEW;\n        ELSIF TG_OP = 'DELETE' AND NOT OLD.storicizza THEN\n          RETURN OLD;\n        END IF;\n\n        -- [Sezione 1] Recupero ID record originale ---------------------------------\n        -- Ottiene l'ID del record dalla tabella sorgente (OLD per DELETE, NEW per UPDATE)\n        -- Gestisce eventuali errori di colonna mancante\n        BEGIN\n          IF TG_OP = 'DELETE' THEN\n            v_id_value := OLD.id::text; -- Per operazioni DELETE usa OLD\n          ELSE\n            v_id_value := NEW.id::text; -- Per operazioni UPDATE usa NEW\n          END IF;\n        EXCEPTION WHEN OTHERS THEN\n          -- Gestione errore: logga e solleva eccezione tramite funzione dedicata\n          PERFORM script.fn_log_and_raise_error(\n            'database', TG_NAME, 'E_SNAPSHOT_ID_NOT_FOUND',\n            jsonb_build_object('error', SQLERRM, 'schema', hist_schema, 'table', hist_table),\n            NULL::uuid, SQLERRM::text\n          );    \n        END;\n\n        -- [Sezione 2] Creazione snapshot -------------------------------------------\n        -- Serializza i dati del record in formato JSONB\n        -- Assegna il tipo di operazione (2=UPDATE, 3=DELETE)\n        IF TG_OP = 'UPDATE' THEN\n          op_type := 2; \n          snapshot_data := to_jsonb(NEW); -- Snapshot dello stato nuovo\n        ELSIF TG_OP = 'DELETE' THEN\n          op_type := 3; \n          snapshot_data := to_jsonb(OLD); -- Snapshot dello stato vecchio\n        ELSE\n          RETURN COALESCE(NEW,OLD); -- Caso non gestito (non dovrebbe verificarsi)\n        END IF;\n\n        -- [Sezione 3] Chiusura snapshot aperti ------------------------------------\n        -- Cerca e chiude eventuali snapshot precedenti ancora aperti (valid_to IS NULL)\n        -- per lo stesso record (stesso ID)\n        BEGIN\n        /* EXECUTE format(\n            'UPDATE %I.%I SET valid_to = $1 WHERE %I = $2 AND valid_to IS NULL',\n            hist_schema, hist_table, id_col_hist\n          ) USING v_current_date, v_id_value;  */\n          EXECUTE format(\n        'UPDATE %I.%I\n            SET valid_to = $1\n          WHERE %I = $2::%s AND valid_to IS NULL',\n        hist_schema, hist_table, id_col_hist, v_id_col_type\n      )\n  USING v_current_date, v_id_value;\n\n  GET DIAGNOSTICS v_rowcount = ROW_COUNT; -- Controlla se ha chiuso record\n          v_snapshot_open := (v_rowcount &gt; 0);    -- Imposta flag se trovati snapshot\n        EXCEPTION WHEN OTHERS THEN\n          -- Gestione errore chiusura snapshot\n          PERFORM script.fn_log_and_raise_error(\n            'database', TG_NAME, 'E_SNAPSHOT_CLOSE_ERROR',\n            jsonb_build_object('error', SQLERRM, 'schema', hist_schema, 'table', hist_table),\n            NULL::uuid, SQLERRM::text, SQLSTATE::text\n          );\n        END;\n\n        -- [Sezione 4] Inserimento dati storici -------------------------------------\n        BEGIN\n          -- [4.1] Inserimento storico INIZIALE (solo se non c'erano snapshot aperti)\n          -- Crea un record storico con intervallo di validit\u00e0 fisso (1950-01-01 -&gt; CURRENT_DATE)\n          -- per mantenere traccia dello stato precedente all'operazione corrente\n          IF NOT v_snapshot_open THEN\n            BEGIN\n\n              EXECUTE format(\n                'INSERT INTO %I.%I (%I, valid_from, valid_to, data_insert, user_insert, snapshot, tipo_operazione)\n                VALUES ($1::%s, $2, $3, now(), current_user, $4, 1)',\n                hist_schema, hist_table, id_col_hist, v_id_col_type\n              )\n              USING v_id_value, v_fixed_date, v_current_date, to_jsonb(OLD);\n\n            EXCEPTION WHEN OTHERS THEN\n              -- Gestione errore inserimento storico iniziale\n              PERFORM script.fn_log_and_raise_error(\n                'database', TG_NAME, 'E_SNAPSHOT_INIT_INSERT_ERROR',\n                jsonb_build_object('error', SQLERRM, 'schema', hist_schema, 'table', hist_table),\n                NULL::uuid, SQLERRM::text, SQLSTATE::text\n              );\n            END;\n          END IF;\n\n          -- [4.2] Inserimento storico FINALE (sempre)\n          -- Crea un record storico con valid_from = CURRENT_DATE e valid_to = NULL\n          -- per registrare il nuovo stato del record\n          BEGIN\n\n          EXECUTE format(\n        'INSERT INTO %I.%I (%I, valid_from, data_insert, user_insert, snapshot, tipo_operazione)\n          VALUES ($1::%s, $2, now(), current_user, $3, $4)',\n        hist_schema, hist_table, id_col_hist, v_id_col_type\n      )\n      USING v_id_value, v_current_date, snapshot_data, op_type;    \n\n          EXCEPTION WHEN OTHERS THEN\n            -- Gestione errore inserimento storico finale\n            PERFORM script.fn_log_and_raise_error(\n              'database', TG_NAME, 'E_SNAPSHOT_FINAL_INSERT_ERROR',\n              jsonb_build_object('error', SQLERRM, 'schema', hist_schema, 'table', hist_table),\n              NULL::uuid, SQLERRM::text, SQLSTATE::text\n            );\n          END;\n        END;\n\n        -- [Sezione 5] Gestione reset storico per tabelle specifiche vedi elenco in Array\n        IF TG_OP = 'UPDATE' AND v_should_reset THEN\n          NEW.storicizza := FALSE;\n        END IF;\n\n        -- Restituisce il record appropriato (OLD per DELETE, NEW per UPDATE)\n        RETURN CASE WHEN TG_OP = 'DELETE' THEN OLD ELSE NEW END;\n      END;\n\n  $function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/funzioni/uuid_nil/","title":"Uuid nil","text":""},{"location":"dbzero/script/funzioni/uuid_nil/#documentazione-concettuale-funzione-scriptuuid_nil","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.uuid_nil()</code>","text":"<p>La funzione <code>script.uuid_nil()</code> restituisce l\u2019UUID nil, ovvero il valore composto da tutti zeri (<code>00000000-0000-0000-0000-000000000000</code>). Viene utilizzata come helper per rappresentare un UUID \u201cvuoto\u201d in trigger e funzioni, facilitando fallback controllati o valori di default in assenza di un identificativo valido.</p>"},{"location":"dbzero/script/funzioni/uuid_nil/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Fornire un valore UUID costante, composto interamente da zeri.</li> <li>Usato come fallback o default quando non \u00e8 possibile generare o recuperare un UUID valido.</li> </ul>"},{"location":"dbzero/script/funzioni/uuid_nil/#esempio-di-utilizzo","title":"\u2699\ufe0f Esempio di Utilizzo","text":"<pre><code>-- Assegna l\u2019UUID nil a una variabile\nSELECT script.uuid_nil() AS nil_uuid;\n\n-- Utilizzo in trigger o funzione come valore di fallback\nNEW.tx_id := COALESCE(current_tx_id, script.uuid_nil());\n</code></pre> <p>\ud83e\udde0 \u201c<code>script.uuid_nil()</code> \u00e8 il modo pi\u00f9 semplice e leggibile per ottenere un UUID \u2018tutti zeri\u2019 nel database.\u201d</p>"},{"location":"dbzero/script/funzioni/uuid_nil/#funzione-uuid_nil","title":"\u2699\ufe0f Funzione <code>uuid_nil</code>","text":"<pre><code>CREATE FUNCTION uuid_nil()\n</code></pre> <p>Definizione completa:</p>"},{"location":"dbzero/script/funzioni/uuid_nil/#create-or-replace-function-scriptuuid_nil-returns-uuid-language-sql-immutable-as-function-select-00000000-0000-0000-0000-000000000000uuid-function","title":"<pre><code>CREATE OR REPLACE FUNCTION script.uuid_nil()\n RETURNS uuid\n LANGUAGE sql\n IMMUTABLE\nAS $function$\n  SELECT '00000000-0000-0000-0000-000000000000'::uuid;\n$function$\n</code></pre>","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/manual/fn_check_ins_soggetto_ruolo/","title":"Fn check ins soggetto ruolo","text":""},{"location":"dbzero/script/manual/fn_check_ins_soggetto_ruolo/#documentazione-concettuale-funzione-scriptfn_check_ins_soggetto_ruolo","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_check_ins_soggetto_ruolo</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:  - anagrafiche.soggetti_ruoli  - config.tipi_ruoli </p> <p>La funzione <code>script.fn_check_ins_soggetto_ruolo(p_soggetto_id, p_soggetto_ruolo_id, p_cd_int_ruolo)</code> centralizza e semplifica la gestione della relazione tra un soggetto e il suo ruolo. Garantisce che, ogni volta che si assegna un ruolo a un soggetto, la tabella <code>anagrafiche.soggetti_ruoli</code> sia mantenuta correttamente e senza duplicati.</p>"},{"location":"dbzero/script/manual/fn_check_ins_soggetto_ruolo/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Verifica esistenza   Controlla se esiste gi\u00e0 un\u2019associazione tra il soggetto e il codice interno del ruolo in <code>anagrafiche.soggetti_ruoli</code>.</p> </li> <li> <p>Inserimento automatico   Quando <code>p_soggetto_ruolo_id</code> \u00e8 <code>NULL</code> o <code>0</code>, crea un nuovo record in <code>anagrafiche.soggetti_ruoli</code> con <code>soggetto_id</code>, <code>ruolo_id</code> e <code>user_insert = current_user</code>.</p> </li> <li> <p>Ritorno dell\u2019ID   Restituisce sempre l\u2019ID valido della relazione soggetto\u2013ruolo, sia esso appena creato o gi\u00e0 esistente.</p> </li> <li> <p>Centralizzazione della logica   Evita duplicazioni di codice nei trigger o procedure: ogni assegnazione di ruolo utilizza questa funzione.</p> </li> </ul>"},{"location":"dbzero/script/manual/fn_check_ins_soggetto_ruolo/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Descrizione <code>p_soggetto_id</code> <code>UUID</code> ID del soggetto in <code>anagrafiche.oggetti</code>. <code>p_soggetto_ruolo_id</code> <code>INTEGER</code> ID esistente della relazione in <code>anagrafiche.soggetti_ruoli</code>; se <code>NULL</code> o 0`, verr\u00e0      creato un nuovo record. <code>p_cd_int_ruolo</code> <code>VARCHAR</code> Codice interno del ruolo (<code>cd_int_ruolo</code> in <code>config.tipi_ruoli</code>) da associare al soggetto."},{"location":"dbzero/script/manual/fn_check_ins_soggetto_ruolo/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li> <p>Recupero ID ruolo    Cerca in <code>config.tipi_ruoli</code> il record con <code>cd_int_ruolo = p_cd_int_ruolo</code>. Se non trovato, solleva eccezione <code>E_COD_INT_RUOLO</code>.</p> </li> <li> <p>Inserimento condizionale    Se <code>p_soggetto_ruolo_id</code> \u00e8 <code>NULL</code> o <code>0</code>:</p> </li> <li>Inserisce in <code>anagrafiche.soggetti_ruoli</code> un nuovo record con:<ul> <li><code>soggetto_id = p_soggetto_id</code></li> <li><code>ruolo_id = &lt;id recuperato&gt;</code></li> <li><code>user_insert = current_user</code></li> </ul> </li> <li> <p>Restituisce l\u2019<code>id</code> del nuovo record.</p> </li> <li> <p>Verifica esistenza    Altrimenti:</p> </li> <li>Controlla che esista un record in <code>anagrafiche.soggetti_ruoli</code> con:<ul> <li><code>id = p_soggetto_ruolo_id</code></li> <li><code>soggetto_id = p_soggetto_id</code></li> <li><code>ruolo_id = &lt;id recuperato&gt;</code></li> </ul> </li> <li>Se non esiste, solleva eccezione <code>E_SOGGETTI_RUOLI</code>.</li> <li>Se esiste, restituisce <code>p_soggetto_ruolo_id</code>.</li> </ol>"},{"location":"dbzero/script/manual/fn_check_ins_soggetto_ruolo/#error-handling","title":"\ud83d\udd12 Error Handling","text":"<ul> <li> <p><code>E_COD_INT_RUOLO</code>   Ruolo con codice interno <code>p_cd_int_ruolo</code> non trovato in <code>config.tipi_ruoli</code>.</p> </li> <li> <p><code>E_SOGGETTI_RUOLI</code>   Record in <code>anagrafiche.soggetti_ruoli</code> con ID, soggetto e ruolo specificati non esiste.</p> </li> </ul>"},{"location":"dbzero/script/manual/fn_check_ins_soggetto_ruolo/#integrazione-con-trigger","title":"\ud83d\udd17 Integrazione con Trigger","text":"<p>Utilizzare all\u2019interno di trigger <code>BEFORE INSERT</code> o <code>BEFORE UPDATE</code> sulle tabelle di assegnazione ruoli:</p> <pre><code>NEW.soggetto_ruolo_id := script.fn_check_ins_soggetto_ruolo(\n  NEW.soggetto_id,\n  NEW.soggetto_ruolo_id,\n  'CLIENTE'            -- o altro codice interno di ruolo\n);\n</code></pre>"},{"location":"dbzero/script/manual/fn_check_ins_soggetto_ruolo/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Unica fonte di verit\u00e0        Tutti i controlli e inserimenti di relazioni soggetto\u2013ruolo passano da un unico punto, migliorando coerenza e manutenzione.</p> </li> <li> <p>Riduzione di duplicazioni        Evita boilerplate di verifica/inserimento in pi\u00f9 trigger o procedure.</p> </li> <li> <p>Audit automatico       Ogni inserimento registra user_insert = current_user, facilitando tracciabilit\u00e0 e debugging.</p> </li> <li> <p>Flessibilit\u00e0 futura       Per aggiungere nuovi ruoli, basta inserire record in config.tipi_ruoli; la funzione li gestir\u00e0 </p> </li> </ul>"},{"location":"dbzero/script/manual/fn_check_ins_soggetto_ruolo/#nota-di-sviluppo","title":"\ud83d\udea7 Nota di sviluppo","text":"<pre><code>Questa  la funzione generica costituisce il nucleo metodologico per la gestione dei ruoli in Zero ERP: sar\u00e0 estese e replicate per ogni nuovo tipo di ruolo oggetto di implementazione.\n</code></pre>"},{"location":"dbzero/script/manual/fn_ensure_logconn/","title":"Fn ensure logconn","text":""},{"location":"dbzero/script/manual/fn_ensure_logconn/#documentazione-concettuale-function-scriptfn_ensure_logconn","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Function <code>script.fn_ensure_logconn()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti funzioni:  - script.fn_log_and_raise_error </p> <p>Altro - GUC <code>dblink.log_connection</code> - Extension PostgreSQL <code>dblink</code></p> <p>La funzione <code>script.fn_ensure_logconn()</code> garantisce l\u2019apertura di una connessione dblink permanente denominata <code>logconn</code>, utilizzando la stringa di connessione definita nella GUC <code>dblink.log_connection</code>. Se la connessione esiste gi\u00e0, l\u2019eccezione <code>duplicate_object</code> viene catturata e ignorata.</p>"},{"location":"dbzero/script/manual/fn_ensure_logconn/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Stabilire una connessione persistente a un database remoto o a se stesso attraverso l\u2019estensione <code>dblink</code>, evitando overhead di creazione/removal di connessioni multiple.</li> <li>Supporto al logging remoto: utilizzata da funzioni come <code>script.fn_log_and_raise_error</code> per eseguire INSERT in un contesto transazionale separato.</li> </ul>"},{"location":"dbzero/script/manual/fn_ensure_logconn/#dettagli-di-implementazione","title":"\ud83d\udd0d Dettagli di Implementazione","text":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_ensure_logconn()\n  RETURNS void\n  LANGUAGE plpgsql\nAS $$\nBEGIN\n  -- Prova ad aprire la connessione dblink 'logconn' usando la GUC\n  PERFORM dblink_connect_u(\n    'logconn',\n    current_setting('dblink.log_connection', true)\n  );\nEXCEPTION WHEN duplicate_object THEN\n  -- Se la connessione 'logconn' \u00e8 gi\u00e0 definita, ignora l\u2019eccezione\n  NULL;\nEND;\n$$;\n</code></pre> <ul> <li><code>dblink_connect_u(connection_name, conninfo)</code>: apre una connessione con nome <code>connection_name</code> sulla stringa <code>conninfo</code> (in formato URI o DSN).</li> <li>GUC <code>dblink.log_connection</code>: parametro di configurazione (custom) contenente la stringa di connessione.</li> <li>Eccezione <code>duplicate_object</code>: intercettata per evitare errori se <code>logconn</code> \u00e8 gi\u00e0 presente.</li> </ul>"},{"location":"dbzero/script/manual/fn_ensure_logconn/#comportamenti-e-side-effects","title":"\ud83d\udd12 Comportamenti e Side Effects","text":"<ul> <li>Persistenza della connessione: rimane attiva fino alla fine della sessione o fino a <code>dblink_disconnect('logconn')</code>.</li> <li>Idempotenza: chiamate multiple non ricreano la connessione e non causano errori.</li> <li>Assenza di rollback: l\u2019operazione di connessione non influisce sulle transazioni correnti.</li> </ul>"},{"location":"dbzero/script/manual/fn_ensure_logconn/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Nel flusso di error handling</li> </ol> <pre><code>-- Prima di loggare errori in remoto\nPERFORM script.fn_ensure_logconn();\nPERFORM dblink_exec('logconn', 'INSERT INTO dbops.error_log ...');\n</code></pre> <ol> <li>Chiamata manuale</li> </ol> <pre><code>SELECT script.fn_ensure_logconn();\n</code></pre>"},{"location":"dbzero/script/manual/fn_ensure_logconn/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Efficienza: riduce la latenza di apertura connessioni ripetute.</li> <li>Semplicit\u00e0 d\u2019uso: un\u2019unica funzione per garantire la connessione.</li> <li>Affidabilit\u00e0: ignora silenziosamente eccezioni di duplicato, evitando interruzioni.</li> </ul> <p>\ud83e\udde0 \u201cUn\u2019utility leggera per gestire connessioni dblink persistenti, essenziale per pattern di logging remoto e task di integrazione tra database.\u201d</p>"},{"location":"dbzero/script/manual/fn_generate_codice/","title":"Fn generate codice","text":""},{"location":"dbzero/script/manual/fn_generate_codice/#documentazione-funzione-scriptfn_generate_codicetipo-text","title":"\ud83d\udcd8 Documentazione Funzione \u2013 <code>script.fn_generate_codice(tipo TEXT)</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - config.sistema_codici </p> <p>Approfondimento funzioni :   - script.fn_get_messaggio </p> <p>La funzione <code>script.fn_generate_codice(tipo TEXT)</code> genera in modo parametrico un nuovo codice alfanumerico per uno specifico \u201ctipo\u201d (es. <code>ORDINE</code>, <code>CLIENTE</code>, <code>FATTURA</code>), basandosi sui parametri definiti nella tabella <code>config.sistema_codici</code>. Se la configurazione per quel tipo non esiste o \u00e8 disattivata, viene sollevata un\u2019eccezione.</p>"},{"location":"dbzero/script/manual/fn_generate_codice/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Generazione di codici configurabili   Costruisce un codice concatenando un prefisso, un separatore e una parte numerica formattata, letti da <code>config.sistema_codici</code> in base al <code>codice_tipo</code> passato in input.</p> </li> <li> <p>Unicit\u00e0 tramite sequenza   Invoca la sequenza database indicata in <code>nome_sequenza</code> per ottenere un valore numerico progressivo, garantendo codici unici e ordinati.</p> </li> <li> <p>Verifica configurazione   Se la riga corrispondente a <code>codice_tipo = tipo</code> non esiste o <code>attivo = FALSE</code>, o se <code>nome_sequenza</code> \u00e8 <code>NULL</code>, la funzione solleva un\u2019eccezione con messaggio di errore.</p> </li> </ul>"},{"location":"dbzero/script/manual/fn_generate_codice/#parametri-di-input","title":"\ud83d\udce5 Parametri di input","text":"Nome Tipo Descrizione <code>tipo</code> <code>TEXT</code> Identificativo del <code>codice_tipo</code> nella tabella <code>config.sistema_codici</code>. Esempi: <code>\"ORDINE\"</code>, <code>\"CLIENTE\"</code>."},{"location":"dbzero/script/manual/fn_generate_codice/#valore-di-ritorno","title":"\ud83d\udce4 Valore di ritorno","text":"Tipo restituito Descrizione <code>TEXT</code> Stringa del codice generato, formata come <code>&lt;prefisso&gt;&lt;separatore&gt;&lt;numero_formattato&gt;</code>. <pre><code>               | Esempi: `ORD-000123`, `CL_000045`.                                                                                 |\n</code></pre>"},{"location":"dbzero/script/manual/fn_generate_codice/#logica-interna","title":"\ud83d\udd0d Logica interna","text":"<ol> <li>Lettura dei parametri</li> </ol> <pre><code>SELECT prefisso, separatore, lunghezza_numero, nome_sequenza\n  INTO prefix, sep, len, seq_name\n  FROM config.sistema_codici\n WHERE codice_tipo = tipo\n   AND attivo = TRUE;\n</code></pre> <ul> <li> <p>Recupera da <code>config.sistema_codici</code> i valori di:</p> <ul> <li><code>prefisso</code> (testo da anteporre)</li> <li><code>separatore</code> (stringa di separazione)</li> <li><code>lunghezza_numero</code> (numero di cifre per la parte numerica)</li> <li><code>nome_sequenza</code> (nome della sequenza database)</li> <li>Se non trova alcuna riga attiva per quel tipo, <code>seq_name</code> sar\u00e0 <code>NULL</code>.</li> </ul> </li> <li> <p>Generazione del numero tramite sequenza</p> </li> </ul> <pre><code>IF seq_name IS NOT NULL THEN\n  EXECUTE format('SELECT nextval(%L)', seq_name) INTO seq_val;\n  risultato := prefix || sep || lpad(seq_val::TEXT, len, '0');\n  RETURN risultato;\nELSE\n  RAISE EXCEPTION '%',\n    script.fn_get_messaggio('SEQUENZA_NON_CONFIGURATA', tipo);\nEND IF;\n</code></pre> <ul> <li> <p>Se <code>nome_sequenza</code> \u00e8 valorizzato:</p> <ol> <li>Esegue dinamicamente <code>SELECT nextval('nome_sequenza')</code> per ottenere il prossimo valore numerico (<code>seq_val</code>).</li> <li>Converte <code>seq_val</code> in testo e lo riempie a sinistra con zeri fino a raggiungere la lunghezza <code>len</code>.</li> <li>Concatena <code>prefisso</code>, <code>separatore</code> e <code>numero_formattato</code>, restituendo il risultato.</li> <li> <p>Altrimenti:</p> </li> <li> <p>Solleva un\u2019eccezione con il messaggio da <code>script.fn_get_messaggio('SEQUENZA_NON_CONFIGURATA', tipo)</code>.</p> </li> </ol> </li> </ul>"},{"location":"dbzero/script/manual/fn_generate_codice/#possibili-eccezioni","title":"\ud83d\udea8 Possibili eccezioni","text":"<ul> <li> <p>SEQUENZA_NON_CONFIGURATA   Viene sollevata quando:</p> </li> <li> <p>Non esiste un record in <code>config.sistema_codici</code> per <code>codice_tipo = tipo</code> con <code>attivo = TRUE</code>.</p> </li> <li>Il campo <code>nome_sequenza</code> \u00e8 <code>NULL</code> (anche se la riga esiste e <code>attivo = TRUE</code>).</li> </ul> <p>Il messaggio di errore \u00e8 generato da:</p> <pre><code>script.fn_get_messaggio('SEQUENZA_NON_CONFIGURATA', tipo)\n</code></pre>"},{"location":"dbzero/script/manual/fn_generate_codice/#dipendenze","title":"\ud83d\udd17 Dipendenze","text":"<ul> <li> <p>Tabella di configurazione</p> </li> <li> <p><code>config.sistema_codici</code> deve contenere una riga per ciascun <code>codice_tipo</code> con almeno:</p> <ul> <li><code>prefisso</code>: stringa testuale (es. <code>\"ORD-\"</code>).</li> <li><code>separatore</code>: carattere o stringa (es. <code>\"-\"</code>).</li> <li><code>lunghezza_numero</code>: numero intero (es. <code>6</code>).</li> <li><code>nome_sequenza</code>: nome di una sequenza SQL esistente (es. <code>\"seq_ordine\"</code>).</li> <li><code>attivo = TRUE</code></li> </ul> </li> <li> <p>Sequenza database</p> </li> <li> <p>La sequenza indicata in <code>nome_sequenza</code> deve esistere, ad esempio:</p> <pre><code>CREATE SEQUENCE seq_ordine;\n</code></pre> </li> <li> <p>Funzione di supporto</p> </li> <li> <p><code>script.fn_get_messaggio(codice_errore TEXT, elemento TEXT)</code>     Restituisce il testo del messaggio di errore associato al codice di errore e all\u2019elemento specificato.</p> </li> </ul>"},{"location":"dbzero/script/manual/fn_generate_codice/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi operativi","text":"<ul> <li>Parametricit\u00e0   Consente di modificare prefisso, separatore e lunghezza numerica senza toccare il codice della funzione.</li> <li>Unicit\u00e0 garantita   L\u2019uso della sequenza database (<code>nextval</code>) assicura incrementi atomici e codici unici anche in contesti concorrenti.</li> <li>Controllo di configurazione   Se <code>attivo = FALSE</code> o manca la riga di configurazione, viene immediatamente segnalato un errore, evitando generazioni spurie.</li> <li>Estendibilit\u00e0   Per nuovi tipi di codice, basta inserire in <code>config.sistema_codici</code> una nuova riga; la funzione li gestir\u00e0 automaticamente.</li> </ul> <p>\ud83e\udde0 \u201cQuesta funzione restituisce un codice conforme alle specifiche di <code>config.sistema_codici</code>. Se la configurazione non \u00e8 presente o \u00e8 disattivata, solleva un\u2019eccezione descrittiva.\u201d</p>"},{"location":"dbzero/script/manual/fn_get_contatti/","title":"Fn get contatti","text":""},{"location":"dbzero/script/manual/fn_get_contatti/#documentazione-concettuale-funzione-scriptfn_get_contatti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_contatti</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - anagrafiche.soggetti  - anagrafiche.soggetti_ruoli  - anagrafiche.contatti  - config.tipi_contatti  - config.utilities </p> <p>Approfondimento funzioni :   - anagrafiche.trgfn_contatti_ins_upd_set_default_contatto  - script.fn_log_and_raise_error </p> <p>La funzione <code>script.fn_get_contatti(p_soggetto_id UUID, p_soggetto_ruolo_id INTEGER DEFAULT NULL, p_utility_id INTEGER DEFAULT NULL, p_tipo_contatto_id INTEGER DEFAULT NULL)</code> restituisce un singolo contatto per ogni <code>tipo_contatto_id</code>, applicando una logica di priorit\u00e0 basata sul contesto e validando i parametri con logging centralizzato.</p>"},{"location":"dbzero/script/manual/fn_get_contatti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Selezione univoca per tipo   Ottenere il contatto pi\u00f9 rilevante per ciascun <code>tipo_contatto_id</code> rispetto ai parametri forniti.</li> <li> <p>Gerarchia di contesti   Filtra e ordina i contatti in base alla priorit\u00e0:</p> </li> <li> <p>soggetto + ruolo + utility</p> </li> <li>soggetto + ruolo</li> <li>soggetto + utility</li> <li>solo soggetto (fallback soggetto garantisce che, se non esistono contatti per propriet\u00e0 o utility, si recuperino comunque i contatti generici del soggetto.)</li> <li>Validazione e logging   Verifica che <code>p_soggetto_id</code> sia valorizzato; in caso contrario utilizza <code>script.fn_log_and_raise_error</code> per loggare e sollevare un\u2019eccezione con codice <code>ERRORE_PARAMETRI</code>.</li> <li>Centralizzazione della logica   La tabella risultante \u00e8 pensata come unico punto di accesso per il reperimento contatti: consente di applicare filtri successivi (es. solo default, ordini personalizzati, ecc.) senza replicare la logica di fallback in ogni query.</li> </ul>"},{"location":"dbzero/script/manual/fn_get_contatti/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Default Descrizione <code>p_soggetto_id</code> <code>UUID</code> \u2014 Obbligatorio: ID del soggetto. Se <code>NULL</code>, genera errore centralizzato. <code>p_soggetto_ruolo_id</code> <code>INT</code> <code>NULL</code> If present, filtra i contatti legati a quel ruolo del soggetto. <code>p_utility_id</code> <code>INT</code> <code>NULL</code> If present, filtra i contatti associati a una specifica utility. <code>p_tipo_contatto_id</code> <code>INT</code> <code>NULL</code> If present, filtra per un particolare tipo di contatto (es. email, telefono)."},{"location":"dbzero/script/manual/fn_get_contatti/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Validazione <code>p_soggetto_id</code>    Se <code>p_soggetto_id</code> \u00e8 <code>NULL</code>, attiva il CTE <code>validate</code> che chiama:</li> </ol> <pre><code>script.fn_log_and_raise_error(\n  'database',\n  'fn_get_contatti',\n  'ERRORE_PARAMETRI',\n  jsonb_build_object(\n    'soggetto_id', p_soggetto_id,\n    'soggetto_ruolo_id', p_soggetto_ruolo_id,\n    'utility_id', p_utility_id,\n    'tipo_contatto_id', p_tipo_contatto_id\n  ),\n  COALESCE(p_soggetto_id::text,'NULL')\n)\n</code></pre> <ol> <li>Costruzione del CTE <code>candidates</code>    Seleziona da <code>anagrafiche.contatti</code> i record matching <code>p_soggetto_id</code>, <code>p_soggetto_ruolo_id</code>, <code>p_utility_id</code>, <code>p_tipo_contatto_id</code>, calcolando <code>priority</code>:</li> </ol> <pre><code>CASE\n  WHEN c.soggetto_ruolo_id IS NOT DISTINCT FROM p_soggetto_ruolo_id\n    AND c.utility_id IS NOT DISTINCT FROM p_utility_id THEN 1\n  WHEN c.soggetto_ruolo_id IS NOT DISTINCT FROM p_soggetto_ruolo_id THEN 2\n  WHEN c.utility_id IS NOT DISTINCT FROM p_utility_id THEN 3\n  ELSE 4\nEND AS priority\n</code></pre> <ol> <li>Selezione del contatto per tipo    Applica:</li> </ol> <pre><code>ROW_NUMBER() OVER (\n  PARTITION BY candidates.tipo_contatto_id\n  ORDER BY candidates.priority\n) AS rn\n</code></pre> <p>e filtra <code>WHERE rn = 1</code>.</p> <ol> <li>Restituzione dei risultati    Restituisce le colonne:    <code>id</code>, <code>tipo_contatto_id</code>, <code>soggetto_id</code>, <code>soggetto_ruolo_id</code>, <code>utility_id</code>, <code>nominativo</code>, <code>email</code>, <code>telefono</code>, <code>cellulare</code>, <code>pec</code>, <code>note</code>, <code>is_default</code>, <code>default_context</code>.</li> </ol> <p>\ud83e\udde0 \u201cEncapsulare in SQL nativo logica complessa di fallback e validazione semplifica l\u2019uso e la manutenzione.\u201d</p>"},{"location":"dbzero/script/manual/fn_get_default_by_param/","title":"Fn get default by param","text":""},{"location":"dbzero/script/manual/fn_get_default_by_param/#documentazione-concettuale-funzione-scriptfn_get_default_by_param","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_default_by_param()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>config.parameters</li> <li>config.parameter_overrides</li> </ul> <p>Approfondimento funzioni:</p> <ul> <li>script.fn_get_parameter_full</li> <li>script.fn_log_and_raise_error</li> </ul>"},{"location":"dbzero/script/manual/fn_get_default_by_param/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Recuperare in modo dinamico un valore di PK (o altro identificativo) da qualsiasi tabella, basandosi su un codice parametro. La funzione:</p> <ol> <li>Legge il valore testuale del parametro specificato (<code>p_param_code</code>) tramite <code>fn_get_parameter_full</code>.</li> <li>Esegue una query dinamica su <code>p_table_schema.p_table_name</code>, filtrando <code>p_filter_column = parametro_letto</code>, e restituisce il primo campo della riga (presumibile PK) sempre come TEXT.</li> <li>Se non trova alcun record, registra l\u2019errore e solleva un\u2019eccezione <code>E_DEFAULT_ERRATO</code> con <code>fn_log_and_raise_error</code>.</li> </ol>"},{"location":"dbzero/script/manual/fn_get_default_by_param/#collegamenti","title":"\ud83d\udd17 Collegamenti","text":"<ul> <li><code>script.fn_get_parameter_full</code> \u2013 recupera il valore di filtro (stringa) dai parametri tabellari.</li> <li><code>script.fn_log_and_raise_error</code> \u2013 gestisce il logging e il sollevamento dell\u2019errore in caso di mancato riscontro.</li> <li>pg_catalog.pg_attribute, pg_class, pg_namespace \u2013 utilizzati per ricavare dinamicamente il primo attributo (presumibile PK) della tabella target.</li> </ul>"},{"location":"dbzero/script/manual/fn_get_default_by_param/#note-operative","title":"\ud83d\udca1 Note Operative","text":"<ul> <li> <p>Parametri di input:</p> </li> <li> <p><code>p_table_schema</code>: schema di destinazione (es. <code>config</code>).</p> </li> <li><code>p_table_name</code>: nome della tabella (es. <code>states</code>).</li> <li><code>p_filter_column</code>: colonna su cui filtrare (es. <code>codice_iso3</code>).</li> <li><code>p_param_code</code>: codice parametro da leggere (es. <code>state_code_iso3</code>).</li> <li><code>p_function_name</code>: contesto/funzione chiamante, usato nel log.</li> <li> <p>Output:</p> </li> <li> <p>Ritorna TEXT con il valore letto (ID), da castare dal chiamante se serve (INTEGER, UUID, ecc.).</p> </li> <li> <p>Sicurezza:</p> </li> <li> <p>L\u2019uso di <code>EXECUTE format(...) USING v_param_val</code> previene SQL injection sul filtro.</p> </li> <li>Viene sempre restiuito un singolo risultato (<code>LIMIT 1</code>).</li> <li> <p>Error handling:</p> </li> <li> <p>Se la query non restituisce righe, la funzione chiama <code>fn_log_and_raise_error</code>, registrando contesto e messaggio personalizzato.</p> </li> <li> <p>Uso consigliato:</p> </li> <li> <p>Attribuire valori di default a entit\u00e0 che fanno riferimento a codici esterni (es. <code>state_code_iso2</code> \u2192 <code>stati.id</code>).</p> </li> <li>Inserire all\u2019interno di procedure o trigger prima delle operazioni che richiedono il lookup.</li> </ul> <p>\ud83e\udde0 \u201c<code>fn_get_default_by_param</code> semplifica il recupero dinamico di chiavi primarie basate su parametri di configurazione, garantendo sicurezza, logging e flessibilit\u00e0 schema\u2010agnostica.\u201d</p>"},{"location":"dbzero/script/manual/fn_get_messaggio/","title":"Fn get messaggio","text":""},{"location":"dbzero/script/manual/fn_get_messaggio/#documentazione-concettuale-funzione-scriptfn_get_messaggio","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_messaggio</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:  - config.messaggi_errore </p> <p>La funzione <code>script.fn_get_messaggio(p_codice text, p_valore text DEFAULT NULL, p_lingua text DEFAULT NULL) RETURNS text</code> recupera e formatta un messaggio dall\u2019archivio centralizzato, con supporto per placeholder e internazionalizzazione.</p>"},{"location":"dbzero/script/manual/fn_get_messaggio/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Centralizzare i testi   Conservare tutti i messaggi (errori, avvisi, info) in tabella, evitando hard\u2011coding in trigger, procedure o sorgenti SQL.</li> <li> <p>Internazionalizzazione avanzata   Selezionare dinamicamente la lingua di output in base a:</p> </li> <li> <p>parametro <code>p_lingua</code></p> </li> <li>impostazione configurazione <code>myapp.user_language</code></li> <li>default <code>'it'</code></li> <li>Placeholder dinamici   Utilizzare <code>format()</code> per sostituire i placeholder <code>%s</code> nel template con i valori runtime, abilitando messaggi parametrizzati.</li> </ul>"},{"location":"dbzero/script/manual/fn_get_messaggio/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Default Descrizione <code>p_codice</code> <code>text</code> \u2014 Codice del messaggio (<code>codice</code> in <code>config.messaggi_errore</code>). <code>p_valore</code> <code>text</code> <code>NULL</code> Valore da sostituire al placeholder <code>%s</code>; se <code>NULL</code>, nessuna         sostituzione viene applicata. <code>p_lingua</code> <code>text</code> <code>NULL</code> Lingua desiderata (es. <code>it</code>, <code>en</code>); se <code>NULL</code>, usa <code>myapp.user_language</code> o fallback a <code>it</code>."},{"location":"dbzero/script/manual/fn_get_messaggio/#comportamento-interno","title":"\u2699\ufe0f Comportamento Interno","text":"<ol> <li>Determinazione lingua effettiva</li> </ol> <p><pre><code>lingua_eff := coalesce(\n  p_lingua,\n  current_setting('myapp.user_language', true),\n  'it'\n);\n</code></pre> 2. Recupero del template</p> <p><pre><code>SELECT messaggio\n  INTO tmpl\n  FROM config.messaggi_errore\n WHERE codice = p_codice\n   AND lingua = lingua_eff;\n</code></pre> 3. Messaggio non definito</p> <ul> <li> <p>Se <code>tmpl IS NULL</code>, restituisce:</p> <p><pre><code>[MESSAGGIO NON DEFINITO: &lt;p_codice&gt;]\n</code></pre> 4. Sostituzione placeholder</p> </li> <li> <p>Se <code>p_valore IS NOT NULL</code>, restituisce:</p> <p><pre><code>format(tmpl, p_valore)\n</code></pre>    * Altrimenti restituisce <code>tmpl</code> originale.</p> </li> </ul>"},{"location":"dbzero/script/manual/fn_get_messaggio/#valore-di-ritorno","title":"\ud83d\udd12 Valore di Ritorno","text":"<ul> <li><code>text</code>   Messaggio finale, con eventuale sostituzione di <code>%s</code> applicata.</li> </ul>"},{"location":"dbzero/script/manual/fn_get_messaggio/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Manutenzione semplificata   Modifiche ai messaggi avvengono unicamente in tabella, senza interventi su sorgenti PL/pgSQL.</li> <li>Coerenza e uniformit\u00e0   Un solo punto di definizione e recupero per tutti i testi applicativi.</li> <li>Internazionalizzazione flessibile   Supporto per lingua utente tramite GUC e fallback gerarchico.</li> <li>Messaggi parametrizzati   Placeholder <code>%s</code> sostituiti dinamicamente, per contesti runtime variabili.</li> <li>Best practice   Separazione tra codici di business e contenuti testuali, migliorando qualit\u00e0 e riusabilit\u00e0.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare e parametrizzare i messaggi in tabella con supporto multilingua e placeholder <code>%s</code> \u00e8 una best practice per mantenere il codice pulito, manutenibile e traducibile.\u201d</p>"},{"location":"dbzero/script/manual/fn_get_parameter_full/","title":"Fn get parameter full","text":""},{"location":"dbzero/script/manual/fn_get_parameter_full/#documentazione-concettuale-funzione-scriptfn_get_parameter_full","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_parameter_full</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - config.parameters  - config.parameter_overrides </p> <p>Approfondimento funzioni :   - script.fn_log_and_raise_error </p> <p>La funzione <code>script.fn_get_parameter_full(p_code TEXT, p_tenant_id INTEGER DEFAULT NULL, p_user_id INTEGER DEFAULT NULL, p_session_key TEXT DEFAULT NULL, p_function_name TEXT DEFAULT NULL) RETURNS TEXT</code> restituisce il valore di un parametro, applicando una catena di override con priorit\u00e0:</p> <ol> <li>Function (<code>p_function_name</code>)</li> <li>Session (<code>p_session_key</code>)</li> <li>User (<code>p_user_id</code>)</li> <li>Tenant (<code>p_tenant_id</code>)</li> <li>Default (<code>config.parameters.default_value</code>)</li> </ol> <p>Se il parametro non esiste, viene loggato un errore e sollevata un\u2019eccezione.</p>"},{"location":"dbzero/script/manual/fn_get_parameter_full/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Ricerca safe del parametro   Verificare l\u2019esistenza del parametro in <code>config.parameters</code> e recuperare il suo <code>default_value</code>.</li> <li>Override gerarchico   Cercare eventuali override in <code>config.parameter_overrides</code> secondo la priorit\u00e0: function \u2192 session \u2192 user \u2192 tenant.</li> <li>Centralizzazione della logica   Un\u2019unica funzione per gestire la complessit\u00e0 degli override, evitando duplicazioni nell\u2019applicazione.</li> <li>Gestione degli errori   Se <code>p_code</code> non \u00e8 presente in <code>config.parameters</code>, viene chiamato <code>script.fn_log_and_raise_error</code> con codice <code>ERRORE_PARAMETRI_TABELLA</code>.</li> </ul>"},{"location":"dbzero/script/manual/fn_get_parameter_full/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Default Descrizione <code>p_code</code> <code>TEXT</code> \u2014 Codice del parametro da cercare in <code>config.parameters.code</code>. <code>p_tenant_id</code> <code>INTEGER</code> <code>NULL</code> ID del tenant per override di scope <code>tenant</code>. <code>p_user_id</code> <code>INTEGER</code> <code>NULL</code> ID dell\u2019utente (es. da Django) per override di scope <code>user</code>. <code>p_session_key</code> <code>TEXT</code> <code>NULL</code> Chiave di sessione per override di scope <code>session</code>. <code>p_function_name</code> <code>TEXT</code> <code>NULL</code> Nome della funzione per override di scope <code>function</code>."},{"location":"dbzero/script/manual/fn_get_parameter_full/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Recupero parametro base</li> </ol> <p><pre><code>SELECT id, default_value\n  INTO v_param_id, v_default\n  FROM config.parameters\n WHERE code = p_code;\nIF NOT FOUND THEN\n  PERFORM script.fn_log_and_raise_error(\n    'database',\n    'fn_get_parameter_full',\n    'ERRORE_PARAMETRI_TABELLA',\n    jsonb_build_object(\n      'codice_parametro', p_code,\n      'nome_tabella',      'config.parameters'\n    ),\n    COALESCE(p_code, 'NULL')\n  );\nEND IF;\n</code></pre> 2. Ricerca override</p> <p><pre><code>SELECT overridden_value\n  INTO v_override\n  FROM config.parameter_overrides\n WHERE parameter_id = v_param_id\n   AND (\n         (function_name   IS NOT NULL AND function_name   = p_function_name)\n      OR (session_key     IS NOT NULL AND session_key     = p_session_key)\n      OR (user_id         IS NOT NULL AND user_id         = p_user_id)\n      OR (tenant_id       IS NOT NULL AND tenant_id       = p_tenant_id)\n       )\n ORDER BY CASE\n            WHEN function_name   = p_function_name THEN 1\n            WHEN session_key     = p_session_key   THEN 2\n            WHEN user_id         = p_user_id       THEN 3\n            WHEN tenant_id       = p_tenant_id     THEN 4\n            ELSE 5\n          END\n LIMIT 1;\n</code></pre> 3. Restituzione del valore</p> <pre><code>IF FOUND THEN\n  RETURN v_override;\nELSE\n  RETURN v_default;\nEND IF;\n</code></pre>"},{"location":"dbzero/script/manual/fn_get_parameter_full/#valore-di-ritorno","title":"\ud83d\udd12 Valore di Ritorno","text":"<ul> <li><code>TEXT</code>   Valore dell\u2019override pi\u00f9 specifico trovato, o in assenza di override il <code>default_value</code> originale.</li> </ul>"},{"location":"dbzero/script/manual/fn_get_parameter_full/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Flessibilit\u00e0 multi-scope   Supporta override a livello di funzione, sessione, utente e tenant.</li> <li>Sicurezza   Log e error handling centralizzato via <code>fn_log_and_raise_error</code> per parametri mancanti.</li> <li>Semplificazione   Un\u2019unica funzione evita di scrivere query multiple in applicazione.</li> <li>Manutenibilit\u00e0   Modifiche alla catena di override possono essere gestite in un solo punto.</li> </ul>"},{"location":"dbzero/script/manual/fn_get_parameter_full/#firma-sql","title":"\ud83d\udd16 Firma SQL","text":"<pre><code>CREATE OR REPLACE FUNCTION script.fn_get_parameter_full(\n  p_code          TEXT,\n  p_tenant_id     INTEGER DEFAULT NULL,\n  p_user_id       INTEGER DEFAULT NULL,\n  p_session_key   TEXT    DEFAULT NULL,\n  p_function_name TEXT    DEFAULT NULL\n)\nRETURNS TEXT\nLANGUAGE plpgsql\nAS $$\n-- implementazione come sopra\n$$;\n</code></pre> <p>\ud83e\udde0 \u201cUtilizzando <code>fn_get_parameter_full</code>, l\u2019applicazione ottiene in modo deterministico il valore corretto di un parametro, rispettando una gerarchia di override chiaramente definita.\u201d</p>"},{"location":"dbzero/script/manual/fn_get_stradario/","title":"Fn get stradario","text":""},{"location":"dbzero/script/manual/fn_get_stradario/#documentazione-concettuale-funzione-scriptfn_get_stradario","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_stradario</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:  - config.stradario   - config.stradario_generale   - config.toponomastica   - config.comuni   - config.province   - config.codici_postali   - config.stati </p> <p>La funzione <code>script.fn_get_stradario(p_comune_id integer DEFAULT NULL, p_indirizzo text DEFAULT '') RETURNS TABLE(...)</code> fornisce un metodo centralizzato per la ricerca e il recupero di voci dello stradario, sia a livello di comune specifico che su tutto lo stradario generale.</p>"},{"location":"dbzero/script/manual/fn_get_stradario/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Ricerca locale per comune   Se viene specificato <code>p_comune_id</code>, esegue una query filtrata sul comune indicato, restituendo tutte le vie e toponomastiche che contengono la stringa <code>p_indirizzo</code> nel loro nome.</p> </li> <li> <p>Ricerca globale   Se <code>p_comune_id</code> \u00e8 <code>NULL</code>, effettua una ricerca libera su tutto lo stradario generale, restituendo toponomastica e vie corrispondenti a <code>p_indirizzo</code>, senza vincoli geografici.</p> </li> <li> <p>Unificazione del risultato   In entrambi i casi restituisce un insieme di colonne standard che descrivono in dettaglio la via, il comune, la provincia, lo stato, il codice postale e la descrizione completa.</p> </li> </ul>"},{"location":"dbzero/script/manual/fn_get_stradario/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"<ul> <li> <p><code>p_comune_id</code>(integer) ID del comune (<code>config.comuni.id</code>) su cui limitare la ricerca; <code>NULL</code>       per ricerca globale.</p> </li> <li> <p><code>p_indirizzo</code> (text) Stringa di ricerca da confrontare (case-insensitive) con `toponomastica.      descrizione stradario_generale.descrizione`.</p> </li> </ul>"},{"location":"dbzero/script/manual/fn_get_stradario/#logica-di-esecuzione","title":"\u2699\ufe0f Logica di Esecuzione","text":"<ol> <li> <p>Ricerca filtrata (se <code>p_comune_id</code> non \u00e8 <code>NULL</code>)</p> </li> <li> <p>Joins tra <code>config.stradario</code>, <code>config.stradario_generale</code>, <code>config.toponomastica</code>, <code>config.comuni</code>, <code>config.province</code>, <code>config.codici_postali</code>, <code>config.stati</code>.</p> </li> <li>Filtro su <code>s.comune_id = p_comune_id</code> e ILIKE su concatenazione di toponomastica e via.</li> <li> <p>Ordinamento per <code>stradario_generale.descrizione</code>.</p> </li> <li> <p>Ricerca libera (se <code>p_comune_id</code> \u00e8 <code>NULL</code>)</p> </li> <li> <p>Query su <code>config.stradario_generale</code> e <code>config.toponomastica</code> (join a <code>config.stati</code>).</p> </li> <li>Nessun riferimento a comuni, province o postali; campi geografici impostati a valori null o vuoti.</li> <li>Ordinamento per <code>stradario_generale.descrizione</code>.</li> </ol>"},{"location":"dbzero/script/manual/fn_get_stradario/#colonne-di-output","title":"\ud83d\udd17 Colonne di Output","text":"<p>La funzione restituisce le colonne seguenti in entrambe le modalit\u00e0 di ricerca:</p> <ul> <li><code>stradario_id</code> (integer): ID della riga in <code>config.stradario</code> (o <code>NULL</code> per ricerca globale).</li> <li><code>via_id</code> (integer): ID in <code>config.stradario_generale</code>.</li> <li><code>toponomastica_id</code> (integer): ID in <code>config.toponomastica</code>.</li> <li><code>descrizione_toponomastica</code> (varchar): testo della toponomastica.</li> <li><code>sigla_stato</code> (varchar): sigla dello stato di appartenenza.</li> <li><code>descrizione_via</code> (varchar): nome esteso della via.</li> <li><code>descrizione_breve</code> (varchar): versioni abbreviate o codificate.</li> <li><code>cod_postale</code> (char): codice postale (o stringa vuota in ricerca globale).</li> <li><code>comune</code> (varchar): nome del comune (o vuoto).</li> <li><code>provincia</code> (char): sigla della provincia (o vuoto).</li> <li><code>geoloc</code> (geometry): coordinate spaziali del civico o via (o <code>NULL</code>).</li> <li><code>descrizione_completa</code> (text): concatenazione di toponomastica e via per rapida fruizione.</li> </ul>"},{"location":"dbzero/script/manual/fn_get_stradario/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Centralizzazione   Un\u2019unica funzione PL/pgSQL per gestire ricerche su stradario, evitando duplicazione di query in applicazione.</p> </li> <li> <p>Flessibilit\u00e0   Supporta sia ricerche localizzate per comune sia ricerche generali, semplicemente impostando <code>p_comune_id</code>.</p> </li> <li> <p>Consistenza dei dati   Garantisce output uniforme, con stesse colonne e formattazione, a prescindere dal contesto di ricerca.</p> </li> <li> <p>Semplicit\u00e0 di manutenzione   Modifiche alla logica di join o ai campi restituiti possono essere centralmente aggiornate in un solo punto.</p> </li> </ul> <p>\ud83e\udde0 \u201cFornire un\u2019interfaccia unica e parametrizzata per le operazioni di ricerca stradale, migliorando coesione, manutenibilit\u00e0 e uniformit\u00e0 dei risultati.\u201d</p>"},{"location":"dbzero/script/manual/fn_get_tipo_contatto_id/","title":"Fn get tipo contatto id","text":"<p>\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_get_tipo_contatto_id()</code> </p> <p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.tipi_contatti </p> <p>Approfondimenti funzioni:   - script.fn_log_and_raise_error   - dbops.fn_get_or_create_session_tx_id </p>"},{"location":"dbzero/script/manual/fn_get_tipo_contatto_id/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Recuperare l\u2019ID del tipo di contatto corrispondente a un codice interno (<code>cod_int_tipo_contatto</code>), garantendo al contempo il logging e la tracciabilit\u00e0 tramite un <code>tx_id</code> di sessione.</p>"},{"location":"dbzero/script/manual/fn_get_tipo_contatto_id/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Descrizione <code>p_cod_int_tipo_contatto</code> <code>VARCHAR</code> Codice interno univoco del tipo di contatto (es. <code>EMAIL</code>)."},{"location":"dbzero/script/manual/fn_get_tipo_contatto_id/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li> <p>Generazione <code>tx_id</code>    Invoca <code>dbops.fn_get_or_create_session_tx_id()</code> per ottenere o creare un identificativo di transazione di sessione, usato per il log centralizzato.</p> </li> <li> <p>Lookup ID    Esegue:</p> </li> </ol> <pre><code>SELECT id\n  INTO v_id\n  FROM config.tipi_contatti\n WHERE cod_int_tipo_contatto = p_cod_int_tipo_contatto;\n</code></pre> <ol> <li>Gestione dell\u2019errore    Se <code>v_id</code> \u00e8 <code>NULL</code>, chiama:</li> </ol> <pre><code>PERFORM script.fn_log_and_raise_error(\n  'database',\n  'script.fn_get_tipo_contatto_id',\n  'E_DEFAULT_CONTATTO_MISSING',\n  jsonb_build_object('cod_int_tipo_contatto', p_cod_int_tipo_contatto),\n  v_tx\n);\n</code></pre> <p>Questo logga l\u2019errore e solleva un\u2019eccezione centralizzata, interrompendo l\u2019esecuzione.</p> <ol> <li>Restituzione    Se l\u2019ID viene trovato, lo restituisce.</li> </ol>"},{"location":"dbzero/script/manual/fn_get_tipo_contatto_id/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Centralizzazione: evita duplicazione di query e gestione degli errori in pi\u00f9 punti.</li> <li>Tracciabilit\u00e0: ogni chiamata \u00e8 correlata a un <code>tx_id</code>, facilitando debug e audit.</li> <li>Robustezza: l\u2019uso di <code>fn_log_and_raise_error</code> permette di uniformare il logging e lanciare eccezioni coerenti.</li> </ul> <p>\ud83e\udde0 \u201cUtilizzare una funzione dedicata con logging centralizzato garantisce coerenza nel recupero dei dati di metadato e semplifica la manutenzione del codice.\u201d</p>"},{"location":"dbzero/script/manual/fn_log_and_raise_error/","title":"Fn log and raise error","text":""},{"location":"dbzero/script/manual/fn_log_and_raise_error/#documentazione-concettuale-function-scriptfn_log_and_raise_error","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Function <code>script.fn_log_and_raise_error</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:   - config.messaggi_errore  - dbops.error_log </p> <p>Approfondimenti funzioni:  - script.fn_get_messaggio  - script.fn_ensure_logconn </p> <p>La funzione <code>script.fn_log_and_raise_error</code> unifica logging ed escalation di errori in PL/pgSQL, utilizzando l\u2019estensione dblink per inserire record di log in una sessione separata e garantire commit immediato, quindi solleva un\u2019eccezione con messaggio, dettaglio e hint.</p> <pre><code>CREATE OR REPLACE FUNCTION script.fn_log_and_raise_error(\n  p_area           TEXT,                       -- 'database' / 'backend' / 'frontend' / 'job'\n  p_function_name  TEXT,                       -- nome di trigger o funzione chiamante\n  p_error_code     TEXT,                       -- codice testuale di messaggio (config.messaggi_errore.codice)\n  p_context        JSONB,                      -- payload di contesto (parametri, variabili, metadata)\n  VARIADIC p_valori TEXT[]                     -- valori da sostituire a '%s' nel template messaggio\n)\nRETURNS VOID\nLANGUAGE plpgsql\nVOLATILE\nAS $$\n...implementazione completa con dblink_exec...\n$$;\n</code></pre>"},{"location":"dbzero/script/manual/fn_log_and_raise_error/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Entrypoint unificato per error handling: evita duplicazioni di log e raise in trigger, procedure e funzioni.</li> <li>Logging remoto sicuro: usa <code>dblink_exec</code> su connessione permanente fornita da <code>script.fn_ensure_logconn()</code>, per isolare il log dall\u2019eventuale rollback della sessione principale.</li> <li>Escalation immediata: rialza l\u2019eccezione con <code>DETAIL</code> e <code>HINT</code> recuperati dalla tabella dei messaggi.</li> </ul>"},{"location":"dbzero/script/manual/fn_log_and_raise_error/#parametri","title":"\ud83d\udd0d Parametri","text":"Parametro Tipo Descrizione <code>p_area</code> <code>TEXT</code> Ambito di origine (<code>database</code>, <code>backend</code>, <code>frontend</code>, <code>job</code>, etc.) <code>p_function_name</code> <code>TEXT</code> Nome del trigger/funzione o componente chiamante <code>p_error_code</code> <code>TEXT</code> Codice del messaggio da cercare in <code>config.messaggi_errore.codice</code> <code>p_context</code> <code>JSONB</code> Contesto in formato JSONB (es. parametri, utente, stack trace) <code>p_valori</code> <code>TEXT[]</code> Array variadico di valori per sostituire i placeholder <code>%s</code> nel template messaggio"},{"location":"dbzero/script/manual/fn_log_and_raise_error/#flusso-di-esecuzione","title":"\u2699\ufe0f Flusso di Esecuzione","text":"<ol> <li>Assicuro connessione dblink</li> </ol> <pre><code>PERFORM script.fn_ensure_logconn();\n</code></pre> <ol> <li>Recupero messaggio e metadati</li> </ol> <pre><code>SELECT id, messaggio, causa, soluzione\n  INTO v_id, v_messaggio, v_causa, v_soluzione\nFROM config.messaggi_errore\nWHERE codice = p_error_code\n  AND lingua = v_lingua;\n</code></pre> <p>Se non trovato, imposta testo, causa e soluzione di default indicativi.</p> <ol> <li>Formattazione del messaggio</li> </ol> <pre><code>IF array_length(p_valori,1) IS NOT NULL THEN\n  v_messaggio := format(v_messaggio, VARIADIC p_valori);\nEND IF;\n</code></pre> <ol> <li>Preparazione dell\u2019INSERT remoto</li> </ol> <pre><code>sql_text :=\n  'INSERT INTO dbops.error_log(occurred_at, area, function_name,' ||\n  ' messaggio_errore_id, context, tx_id) VALUES (' ||\n  'now(), ' || quote_literal(p_area) || ', ' || quote_literal(p_function_name) || ', ' ||\n  coalesce(v_id::text,'NULL') || ', ' || quote_literal(v_context::text) || '::jsonb, ' ||\n  quote_literal(md5(txid_current()::text)) || '::uuid' || ');';\n</code></pre> <ol> <li>Esecuzione tramite dblink</li> </ol> <pre><code>PERFORM dblink_exec('logconn', sql_text);\n</code></pre> <ol> <li>Sollevamento dell\u2019eccezione</li> </ol> <pre><code>RAISE EXCEPTION '%', coalesce(v_messaggio, '[Errore sconosciuto]')\n  USING DETAIL = coalesce(v_causa,''),\n        HINT   = coalesce(v_soluzione,'');\n</code></pre>"},{"location":"dbzero/script/manual/fn_log_and_raise_error/#comportamenti-e-side-effects","title":"\ud83d\udd12 Comportamenti e Side Effects","text":"<ul> <li>Volatile: invoca <code>dblink_exec</code>, quindi non idempotente.</li> <li>Connessione permanente: <code>logconn</code> gestita da <code>script.fn_ensure_logconn()</code> per evitare overhead di connessioni multiple.</li> <li>Separazione transazionale: l\u2019INSERT remoto non viene rollbackato insieme alla sessione principale.</li> </ul>"},{"location":"dbzero/script/manual/fn_log_and_raise_error/#esempi-di-utilizzo","title":"\u2699\ufe0f Esempi di Utilizzo","text":"<ol> <li>Trigger PL/pgSQL con placeholder</li> </ol> <pre><code>IF NEW.status = 'ERROR' THEN\n  PERFORM script.fn_log_and_raise_error(\n    'database', TG_NAME, 'ERR_INVALID_STATUS',\n    jsonb_build_object('id', OLD.id),\n    OLD.status, NEW.status\n  );\nEND IF;\n</code></pre> <ol> <li>Procedure backend</li> </ol> <pre><code>BEGIN\n  -- operazioni...\nEXCEPTION WHEN OTHERS THEN\n  PERFORM script.fn_log_and_raise_error(\n    'backend', 'sync_data', 'ERR_TIMEOUT',\n    jsonb_build_object('user', current_user),\n    now()::text\n  );\nEND;\n</code></pre>"},{"location":"dbzero/script/manual/fn_log_and_raise_error/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Resilienza dei log: l\u2019uso di dblink isola il logging dall\u2019eventuale rollback.</li> <li>Flessibilit\u00e0: placeholder <code>%s</code> e <code>p_valori</code> rendono i messaggi dinamici e contestuali.</li> <li>Manutenibilit\u00e0: modifiche ai messaggi avvengono solo in <code>config.messaggi_errore</code>.</li> <li>Tracciabilit\u00e0 completa: contesto, transazione e multilingua integrate nel flusso.</li> </ul> <p>\ud83e\udde0 \u201cUna funzione centralizzata che combina dblink per log persistente e raise exception con template dinamici semplifica error handling, migliorando la robustezza del sistema.\u201d</p>"},{"location":"dbzero/script/manual/fn_valida_codice_fiscale/","title":"Fn valida codice fiscale","text":""},{"location":"dbzero/script/manual/fn_valida_codice_fiscale/#documentazione-concettuale-funzione-scriptfn_valida_codice_fiscalecf-text","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_valida_codice_fiscale(cf TEXT)</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - anagrafiche.soggetti </p> <p>Approfondimento funzioni :   - script.fn_valida_partita_iva  - anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch </p>"},{"location":"dbzero/script/manual/fn_valida_codice_fiscale/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Validazione formale del Codice Fiscale (CF) calcolando e confrontando il carattere di controllo.</li> <li>Supporto omocodici, garantendo validit\u00e0 anche per CF derivati con omolettere.</li> <li>Delegare al backend i controlli di congruenza con data di nascita, sesso e luogo di nascita per mantenere flessibilit\u00e0 applicativa.</li> </ul>"},{"location":"dbzero/script/manual/fn_valida_codice_fiscale/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Descrizione <code>cf</code> <code>TEXT</code> Codice Fiscale da validare (16 caratteri alfanumerici)."},{"location":"dbzero/script/manual/fn_valida_codice_fiscale/#flusso-operativo","title":"\u2699\ufe0f Flusso Operativo","text":"<ol> <li> <p>Verifica preliminare</p> </li> <li> <p><code>cf</code> non <code>NULL</code>, lunghezza = 16, e solo caratteri <code>A-Z</code> o <code>0-9</code>.</p> </li> <li>Se fallisce, ritorna <code>FALSE</code>.</li> <li> <p>Calcolo somma parziale</p> </li> <li> <p>Ciclo su posizioni 1..15:</p> <ul> <li>Posizioni dispari: mappatura \u201cstrana\u201d per numeri e lettere.</li> <li>Posizioni pari: numeri trasformati in valore numerico, lettere <code>A\u21920</code>, \u2026, <code>Z\u219225</code>.</li> <li>Accumula i valori in <code>somma</code>.</li> <li>Determinazione carattere di controllo</li> </ul> </li> <li> <p><code>check_char := CHR(65 + (somma % 26))</code>.</p> </li> <li> <p>Confronto finale</p> </li> <li> <p>Ritorna <code>TRUE</code> se <code>check_char</code> = sedicesimo carattere di <code>cf</code>, altrimenti <code>FALSE</code>.</p> </li> </ol>"},{"location":"dbzero/script/manual/fn_valida_codice_fiscale/#limiti-e-scelte-di-design","title":"\ud83d\udd12 Limiti e Scelte di Design","text":"<ul> <li>Solo Check Digit: non verifica congruenza con data di nascita, sesso, luogo di nascita.</li> <li>Omocodici: supporta CF omocodici (stessa data, sesso, luogo, nome e cognome).</li> <li>Layer Applicativo: controlli avanzati demandati a backend (es. Django/FastAPI) o servizi esterni per facilitare aggiornamenti e regole di business.</li> </ul>"},{"location":"dbzero/script/manual/fn_valida_codice_fiscale/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Efficienza: logica SQL compatta e <code>IMMUTABLE</code>, ottimizzata per database-level validation.</li> <li>Affidabilit\u00e0: garantisce uniformit\u00e0 del controllo formale in tutta l\u2019applicazione.</li> <li>Manutenibilit\u00e0: separazione netta tra validazione formale al DB e logica di business nel backend.</li> </ul> <p>\ud83e\udde0 \u201cUna validazione del CF snella e centralizzata al DB accelera i controlli di input, lasciando al backend la gestione delle regole di contesto e di business.\u201d</p>"},{"location":"dbzero/script/manual/fn_valida_partita_iva/","title":"Fn valida partita iva","text":""},{"location":"dbzero/script/manual/fn_valida_partita_iva/#documentazione-concettuale-funzione-scriptfn_valida_partita_ivapiva-text","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_valida_partita_iva(piva TEXT)</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - anagrafiche.soggetti </p> <p>Approfondimento funzioni :   - script.fn_valida_codice_fiscale  - anagrafiche.trgfn_soggetti_valida_cf_piva_dispatch </p>"},{"location":"dbzero/script/manual/fn_valida_partita_iva/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Verificare formalmente la correttezza di una Partita IVA italiana (11 cifre) calcolando il check digit con l\u2019algoritmo di Luhn modificato, restituendo:</p> <ul> <li><code>TRUE</code> se il carattere di controllo (ultima cifra) \u00e8 corretto;</li> <li><code>FALSE</code> altrimenti.</li> </ul>"},{"location":"dbzero/script/manual/fn_valida_partita_iva/#parametro-di-input","title":"\ud83d\udd0d Parametro di Input","text":"Nome Tipo Descrizione <code>piva</code> <code>TEXT</code> Stringa di 11 cifre numeriche rappresentante la Partita IVA."},{"location":"dbzero/script/manual/fn_valida_partita_iva/#flusso-operativo","title":"\u2699\ufe0f Flusso Operativo","text":"<ol> <li> <p>Controllo preliminare</p> </li> <li> <p><code>piva</code> non <code>NULL</code>, lunghezza = 11, e contiene solo cifre (<code>0-9</code>).</p> </li> <li> <p>Se fallisce, ritorna <code>FALSE</code> immediatamente.</p> </li> <li> <p>Calcolo della somma    Per le prime 10 cifre (posizioni 1\u201310):</p> </li> <li> <p>Posizioni dispari (1,3,5,...,9): somma diretta della cifra.</p> </li> <li> <p>Posizioni pari (2,4,6,...,10):</p> <ul> <li>raddoppia la cifra;</li> <li>se il risultato &gt; 9, sottrae 9;</li> <li>somma il valore ottenuto.</li> </ul> </li> <li> <p>Determinazione del check digit</p> </li> </ol> <pre><code>check_digit := (10 - (somma % 10)) % 10;\n</code></pre> <ol> <li> <p>Confronto finale</p> </li> <li> <p>Legge l\u201911\u00aa cifra di <code>piva</code> e la confronta con <code>check_digit</code>.</p> </li> <li>Ritorna <code>TRUE</code> se coincidono, <code>FALSE</code> altrimenti.</li> </ol>"},{"location":"dbzero/script/manual/fn_valida_partita_iva/#scelte-di-design","title":"\ud83d\udd12 Scelte di Design","text":"<ul> <li>Validazione formale: limita il controllo al carattere di controllo per garantire efficienza e semplicit\u00e0.</li> <li>Algoritmo Luhn modificato: conforme alle regole italiane di checksum per la Partita IVA.</li> <li>Layer Applicativo: eventuali controlli aggiuntivi (es. format avanzati, integrazione con servizi esterni) vanno delegati al backend per maggiore flessibilit\u00e0.</li> </ul>"},{"location":"dbzero/script/manual/fn_valida_partita_iva/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Performance: <code>IMMUTABLE</code> e semplice logica PL/pgSQL, eseguibile direttamente al DB.</li> <li>Coerenza: un\u2019unica funzione di riferimento per la validazione di P.IVA nelle trigger, stored procedure e script.</li> <li>Manutenibilit\u00e0: separazione tra validazione formale e logica di business nel backend.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare il check digit della Partita IVA al livello database garantisce un unico punto di validazione, riduce ridondanza di codice e migliora l\u2019affidabilit\u00e0 dei dati.\u201d</p>"},{"location":"dbzero/script/manual/fn_validate_cf_piva_it/","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.fn_validate_cf_piva_it</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - config.tipi_soggetto_dettaglio  - anagrafiche.soggetti </p> <p>Approfondimento funzioni:  - script.fn_valida_partita_iva  - script.fn_valida_codice_fiscale </p> <p>La funzione <code>script.fn_validate_cf_piva_it(p_tipo_det_id bigint, p_partita_iva text, p_piva_gruppo text, p_codice_fiscale text)</code> centralizza i controlli di validit\u00e0 di Partita IVA e Codice Fiscale per soggetti italiani, utilizzando i formati definiti in <code>config.tipi_soggetto_dettaglio</code>.</p> <p>Il suffisso <code>_it</code> indica che i controlli sono specifici per l'Italia: in futuro si potranno implementare varianti analoghe con suffissi come <code>_FR</code>, <code>_DE</code>, <code>_UK</code> per altri Stati.</p>"},{"location":"dbzero/script/manual/fn_validate_cf_piva_it/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Centralizzazione Validazioni: Unico punto per verificare CF e P.IVA in accordo ai formati configurati.</li> <li>Dinamicit\u00e0: I formati (alfanumerico, numerico, lunghezza) sono letti da <code>config.tipi_soggetto_dettaglio</code> e possono variare per Stato.</li> <li>Estendibilit\u00e0: Aggiunta futura di funzioni con suffissi di Stato, es. <code>_FR</code>, <code>_DE</code>, <code>_UK</code>.</li> </ul>"},{"location":"dbzero/script/manual/fn_validate_cf_piva_it/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"Nome Tipo Descrizione <code>p_tipo_det_id</code> <code>bigint</code> FK su <code>config.tipi_soggetto_dettaglio(id)</code>: definisce i formati CF/PIVA per lo Stato (IT). <code>p_partita_iva</code> <code>text</code> Partita IVA principale del soggetto. <code>p_piva_gruppo</code> <code>text</code> Partita IVA del gruppo di acquisto (se previsto). <code>p_codice_fiscale</code> <code>text</code> Codice Fiscale del soggetto."},{"location":"dbzero/script/manual/fn_validate_cf_piva_it/#flusso-logico","title":"\u2699\ufe0f Flusso Logico","text":"<ol> <li>Recupero formato</li> </ol> <p><pre><code>SELECT formato_cf, formato_piva\n  INTO STRICT l_tipo_det\n  FROM config.tipi_soggetto_dettaglio\n WHERE id = p_tipo_det_id;\n</code></pre> 2. Validazione Partita IVA principale</p> <ul> <li> <p>Se <code>formato_piva</code> non <code>NULL</code> e <code>p_partita_iva</code> valorizzata:</p> <ul> <li>Chiama <code>script.fn_valida_partita_iva(p_partita_iva)</code></li> <li>In caso di <code>FALSE</code>, solleva errore <code>PIVA_NON_VALIDA</code> con contesto dettagliato.</li> <li>Validazione Partita IVA Gruppo di Acquisto</li> </ul> </li> <li> <p>Stesse condizioni e metodo del punto precedente su <code>p_piva_gruppo</code>.</p> </li> <li> <p>Validazione Codice Fiscale</p> </li> <li> <p>Se <code>formato_cf</code> non <code>NULL</code> e <code>p_codice_fiscale</code> valorizzato:</p> <ul> <li>Chiama <code>script.fn_valida_codice_fiscale(p_codice_fiscale)</code></li> <li>In caso di <code>FALSE</code>, solleva errore <code>CF_NON_VALIDO</code> con contesto specifico.</li> </ul> </li> </ul>"},{"location":"dbzero/script/manual/fn_validate_cf_piva_it/#error-handling","title":"\ud83d\udca5 Error Handling","text":"<p>La funzione non restituisce un valore, ma utilizza <code>script.fn_log_and_raise_error</code> per loggare e alzare eccezione:</p> <ul> <li> <p>Codici messaggio:</p> </li> <li> <p><code>PIVA_NON_VALIDA</code></p> </li> <li><code>CF_NON_VALIDO</code></li> <li>Contesto JSONB con i parametri in input (es. <code>partita_iva</code>, <code>codice_fiscale</code>).</li> </ul>"},{"location":"dbzero/script/manual/fn_validate_cf_piva_it/#estensioni-future","title":"\ud83d\udd27 Estensioni Future","text":"<ul> <li>Implementare funzioni con suffissi per altri Stati: <code>script.fn_validate_cf_piva_fr</code>, <code>script.fn_validate_cf_piva_de</code>, etc.</li> <li>Eventuale aggiunta di controlli avanzati basati su data di nascita o sesso, delegabili al backend.</li> </ul> <p>\u2139\ufe0f Considerazioni Finali</p> <p>Questa funzione rappresenta il punto unico di validazione formale di Partita IVA e Codice Fiscale per soggetti italiani, garantendo coerenza con i formati configurati in tabella e centralizzando la gestione degli errori. Grazie all\u2019uso di script.fn_log_and_raise_error, ogni errore viene registrato e sollevato in modo standard, semplificando il backend e migliorando l\u2019affidabilit\u00e0 complessiva. ```</p>"},{"location":"dbzero/script/manual/trgfn_generate_account_code_generic/","title":"Trgfn generate account code generic","text":"<p>\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>script.trgfn_generate_account_code_generic()</code></p> <p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.account_code   - dbops.error_log </p> <p>Approfondimenti funzioni:   - script.fn_generate_codice </p>"},{"location":"dbzero/script/manual/trgfn_generate_account_code_generic/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<p>Fornire una trigger\u2011function generica che popola automaticamente la colonna <code>account_code</code> quando non \u00e8 valorizzata, delegando la logica di generazione a <code>script.fn_generate_codice</code> in base al tipo di codice specificato (parametro o nome tabella).</p>"},{"location":"dbzero/script/manual/trgfn_generate_account_code_generic/#meccanismo-di-funzionamento","title":"\ud83d\udd0d Meccanismo di Funzionamento","text":"<ol> <li>Determinazione del tipo di codice</li> </ol> <pre><code>v_code_type := COALESCE(NULLIF(TG_ARGV[0], ''), TG_TABLE_NAME);\n</code></pre> <ul> <li>Se il primo argomento (<code>TG_ARGV[0]</code>) \u00e8 fornito e non vuoto, lo usa come <code>type</code>.</li> <li> <p>Altrimenti, usa il nome della tabella (<code>TG_TABLE_NAME</code>).</p> </li> <li> <p>Verifica e generazione</p> </li> </ul> <pre><code>IF NEW.account_code IS NULL OR trim(NEW.account_code) = '' THEN\n  NEW.account_code := script.fn_generate_codice(v_code_type);\nEND IF;\n</code></pre> <ul> <li>Controlla se <code>account_code</code> \u00e8 <code>NULL</code> o stringa vuota.</li> <li> <p>In caso affermativo, richiama <code>script.fn_generate_codice</code> passando il <code>v_code_type</code> per ottenere il nuovo codice.</p> </li> <li> <p>Ritorno    Restituisce il record <code>NEW</code>, con <code>account_code</code> popolato se necessario.</p> </li> </ul>"},{"location":"dbzero/script/manual/trgfn_generate_account_code_generic/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Riutilizzabilit\u00e0: la stessa funzione trigger serve per pi\u00f9 tabelle, basta passare il codice tipo come argomento.</li> <li>Coerenza: ogni <code>account_code</code> viene generato secondo regole centralizzate in <code>fn_generate_codice</code>, assicurando formati uniformi.</li> <li>Semplicit\u00e0: riduce boilerplate nelle definizioni trigger specifici; nessuna logica duplicata su ogni tabella.</li> <li>Flessibilit\u00e0: \u00e8 possibile personalizzare il <code>type</code> passando un parametro nel trigger DDL oppure lasciare che la funzione utilizzi il nome tabella di default.</li> </ul> <p>\ud83e\udde0 \u201cUna trigger\u2011function parametrica come questa semplifica la generazione automatica di codici, migliora la manutenibilit\u00e0 e garantisce format uniformi in tutta la base dati.\u201d</p>"},{"location":"dbzero/script/manual/trgfn_lock_columns/","title":"Trgfn lock columns","text":""},{"location":"dbzero/script/manual/trgfn_lock_columns/#documentazione-concettuale-trigger-function-scripttrgfn_lock_columns","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>script.trgfn_lock_columns()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimenti tabelle:   - config.messaggi_errore   - dbops.error_log </p> <p>Approfondimenti funzioni:   - script.fn_log_and_raise_error </p>"},{"location":"dbzero/script/manual/trgfn_lock_columns/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Trigger function generica per bloccare modifiche non autorizzate su colonne specificate, integrando:</p> </li> <li> <p>Controllo dinamico delle colonne PASSATE come argomenti al trigger</p> </li> <li>Logging remoto tramite dblink, per tracciare l\u2019evento prima del rollback</li> <li>Messaggi parametrizzati con placeholder e codici definiti in <code>config.messaggi_errore</code></li> </ul>"},{"location":"dbzero/script/manual/trgfn_lock_columns/#comportamento-chiave","title":"\ud83c\udfaf  Comportamento Chiave","text":"<ol> <li> <p>Validazione degli argomenti</p> </li> <li> <p>Accetta un numero pari di parametri (<code>colonna</code>, <code>msgcode</code>)</p> </li> <li> <p>Se dispari, invoca <code>fn_log_and_raise_error('database', TG_NAME, 'E_ARGOMENTI_A_COPPIE', {...})</code></p> </li> <li> <p>Ciclo di verifica</p> </li> <li> <p>Per ogni coppia, estrae OLD.col e NEW.col in modo dinamico</p> </li> <li> <p>Confronta i valori: se distinti, scatta il blocco</p> </li> <li> <p>Gestione dell\u2019errore</p> </li> <li> <p>Chiama <code>script.fn_log_and_raise_error</code> con:</p> <ul> <li>Area: <code>database</code></li> <li>Function_name: nome del trigger (TG_NAME)</li> <li>Error_code: codice testuale passato</li> <li>Context: JSON con <code>column</code>, <code>old_value</code>, <code>new_value</code></li> <li>Placeholder: il nome della colonna per sostituire <code>%s</code></li> <li>La funzione logga su <code>dbops.error_log</code> (via dblink_connect) e rialza un\u2019eccezione con dettaglio e hint</li> </ul> </li> <li> <p>Permette UPDATE solo se nessuna colonna protetta \u00e8 stata modificata</p> </li> </ol>"},{"location":"dbzero/script/manual/trgfn_lock_columns/#punti-di-interesse","title":"\ud83d\udd0d Punti di Interesse","text":"<ul> <li>TG_ARGV: array variadico; le posizioni pari/dispai determinano colonna e messaggio</li> <li>EXECUTE dinamico: <code>format('SELECT ($1).%I, ($2).%I', ... )</code> per ottenere valori senza hard\u2011coding</li> <li>Logging isolato: il dblink <code>logconn</code> inserisce il log in una sessione separata, garantendo il commit anche in caso di rollback nella sessione corrente</li> <li>Placeholder variadico: il quinto parametro di <code>fn_log_and_raise_error</code> permette di inserire il nome della colonna in <code>%s</code> dentro il messaggio predefinito</li> </ul>"},{"location":"dbzero/script/manual/trgfn_lock_columns/#esempio-di-utilizzo","title":"\ud83d\ude80 Esempio di Utilizzo","text":"<pre><code>CREATE TRIGGER trg_lock_sensitive\n  BEFORE UPDATE ON app.orders\n  FOR EACH ROW\n  EXECUTE FUNCTION script.trgfn_lock_columns(\n    'customer_id',   'ERR_LOCK_CUSTID',\n    'order_status',  'ERR_LOCK_STATUS'\n  );\n</code></pre> <ul> <li>customer_id non pu\u00f2 cambiare: user\u00e0 <code>ERR_LOCK_CUSTID</code> e mostrer\u00e0 in messaggio il campo stesso</li> <li>order_status \u00e8 protetto con <code>ERR_LOCK_STATUS</code></li> </ul>"},{"location":"dbzero/script/manual/trgfn_lock_columns/#vantaggi-operativi","title":"\u2728 Vantaggi Operativi","text":"<ul> <li>Zero duplicazioni: una sola function per pi\u00f9 tabelle e colonne</li> <li>Flessibilit\u00e0 totale: basta passare argomenti diversi per replicare il pattern</li> <li>Tracciabilit\u00e0: ogni blocco viene loggato con contesto e transazione (tx_id)</li> <li>Manutenibilit\u00e0: i messaggi di errore si aggiornano in <code>config.messaggi_errore</code> senza toccare il trigger</li> </ul> <p>\ud83e\udde0 \u201cCon <code>trgfn_lock_columns</code> gestisci centralmente i blocchi di sicurezza su colonne critiche, integrando log e messaggi dinamici in un\u2019unica soluzione.\u201d</p>"},{"location":"dbzero/script/manual/trgfn_prevent_modification_generic/","title":"Trgfn prevent modification generic","text":""},{"location":"dbzero/script/manual/trgfn_prevent_modification_generic/#documentazione-concettuale-funzione-scripttrgfn_prevent_modification_generic","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.trgfn_prevent_modification_generic()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento funzioni :   - script.fn_log_and_raise_error </p> <p>La trigger function <code>script.trgfn_prevent_modification_generic()</code> impedisce modifiche o cancellazioni sui record di tabelle di audit (o altre tabelle protette), sollevando un\u2019eccezione centralizzata tramite <code>fn_log_and_raise_error</code>.</p>"},{"location":"dbzero/script/manual/trgfn_prevent_modification_generic/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Proteggere dati di audit   Garantire l\u2019inalterabilit\u00e0 delle cronologie storiche registrate in tabelle dedicate (es. <code>config.parameters_audit</code>).</li> <li>Centralizzare la gestione degli errori   Usare un wrapper di logging e exception unificato per fornire messaggi coerenti e tracce in log.</li> </ul>"},{"location":"dbzero/script/manual/trgfn_prevent_modification_generic/#parametri-di-input","title":"\ud83d\udd0d Parametri di Input","text":"<p>Questa funzione non riceve parametri espliciti: utilizza le variabili di contesto PL/pgSQL:</p> Variabile Descrizione <code>TG_TABLE_NAME</code> Nome della tabella su cui \u00e8 stato invocato il trigger. <code>TG_OP</code> Tipo di operazione che ha attivato il trigger (<code>INSERT</code>, <code>UPDATE</code>, <code>DELETE</code>)."},{"location":"dbzero/script/manual/trgfn_prevent_modification_generic/#flusso-di-esecuzione","title":"\u2699\ufe0f Flusso di Esecuzione","text":"<ol> <li>Chiamata dal trigger    Eseguita <code>BEFORE UPDATE</code> o <code>BEFORE DELETE</code> sulla tabella protetta.</li> <li>Sollevamento dell\u2019eccezione    Invoca:</li> </ol> <pre><code>PERFORM script.fn_log_and_raise_error(\n  'database',                             -- canale log\n  'trgfn_prevent_parameters_audit_modification', -- nome del trigger/contesto\n  'E_TABELLA_OP_NON_CONSENTITA',          -- codice messaggio (E=Error)\n  jsonb_build_object(\n    'nome_tabella', TG_TABLE_NAME,\n    'trigger_op',    TG_OP\n  ),                                       -- contesto JSON per il messaggio\n  TG_TABLE_NAME::text,\n  TG_OP::text\n);\n</code></pre> <p>La funzione <code>fn_log_and_raise_error</code> logga l\u2019evento e lancia un <code>RAISE EXCEPTION</code> con un messaggio tradotto da tabella <code>config.messaggi_errore</code>. 3. Prevenzione operazione    Poich\u00e9 l\u2019eccezione interrompe l\u2019operazione, nessuna modifica viene applicata.</p>"},{"location":"dbzero/script/manual/trgfn_prevent_modification_generic/#definizione-sql","title":"\ud83d\udd16 Definizione SQL","text":"<pre><code>CREATE OR REPLACE FUNCTION script.trgfn_prevent_modification_generic()\n  RETURNS trigger\n  LANGUAGE plpgsql\nAS $function$\nBEGIN\n  PERFORM script.fn_log_and_raise_error(\n    'database',\n    'trgfn_prevent_parameters_audit_modification',\n    'E_TABELLA_OP_NON_CONSENTITA',\n    jsonb_build_object(\n      'nome_tabella', TG_TABLE_NAME,\n      'trigger_op',   TG_OP\n    ),\n    TG_TABLE_NAME::text,\n    TG_OP::text\n  );\nEND;\n$function$;\n\nCOMMENT ON FUNCTION script.trgfn_prevent_modification_generic() IS\n  'Trigger function che blocca UPDATE e DELETE su tabelle protette, sollevando errore tramite fn_log_and_raise_error.';\n</code></pre>"},{"location":"dbzero/script/manual/trgfn_prevent_modification_generic/#applicazione-del-trigger","title":"\ud83d\ude80 Applicazione del Trigger","text":"<p>Per proteggere una tabella (es. <code>config.parameters_audit</code>):</p> <pre><code>DROP TRIGGER IF EXISTS trg_prevent_mod_parameters_audit ON config.parameters_audit;\n\nCREATE TRIGGER trg_prevent_mod_parameters_audit\n  BEFORE UPDATE OR DELETE\n  ON config.parameters_audit\n  FOR EACH ROW\n  EXECUTE FUNCTION script.trgfn_prevent_modification_generic();\n</code></pre>"},{"location":"dbzero/script/manual/trgfn_prevent_modification_generic/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Sicurezza dei dati: impedisce involontarie cancellazioni o modifiche.</li> <li>Consistenza dei messaggi: utilizza un sistema di logging/exception centralizzato per coerenza.</li> <li>Riutilizzabilit\u00e0: la stessa funzione pu\u00f2 proteggere pi\u00f9 tabelle di audit o log.</li> </ul> <p>\ud83e\udde0 \u201cCentralizzare la protezione dei dati critici in una trigger function riutilizzabile assicura sicurezza, trasparenza e facilit\u00e0 di manutenzione.\u201d</p>"},{"location":"dbzero/script/manual/trgfn_upd_audit_data_user_generic/","title":"Trgfn upd audit data user generic","text":""},{"location":"dbzero/script/manual/trgfn_upd_audit_data_user_generic/#documentazione-concettuale-trigger-function-scripttrgfn_upd_audit_data_user_generic","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>script.trgfn_upd_audit_data_user_generic</code>","text":"<p>La trigger function <code>script.trgfn_upd_audit_data_user_generic()</code> si occupa di aggiornare automaticamente i campi di audit <code>data_update</code> e <code>user_update</code> immediatamente prima di ogni operazione di update sul record, garantendo la tracciabilit\u00e0 delle modifiche.</p>"},{"location":"dbzero/script/manual/trgfn_upd_audit_data_user_generic/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Audit automatico   Assicurare che ogni modifica a una riga di tabella sia registrata con timestamp (<code>data_update</code>) e utente (<code>user_update</code>) correnti.</li> <li>Centralizzare la logica di update audit   Evitare di replicare manualmente la medesima assegnazione in ogni trigger <code>BEFORE UPDATE</code> delle varie tabelle.</li> </ul>"},{"location":"dbzero/script/manual/trgfn_upd_audit_data_user_generic/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li>Nessun parametro: la funzione opera su <code>NEW</code>, modificando in-place i campi di audit.</li> <li> <p>Trigger associati: va utilizzata con <code>BEFORE UPDATE</code> su qualsiasi tabella che possieda i campi:</p> </li> <li> <p><code>data_update TIMESTAMP WITH TIME ZONE</code></p> </li> <li><code>user_update TEXT</code> (o VARCHAR)</li> </ul> <p>Esempio di associazione DDL:</p> <pre><code>CREATE TRIGGER trg_upd_&lt;nome_tabella&gt;_audit_data_user\n  BEFORE UPDATE ON &lt;nome_schema&gt;.&lt;nome_tabella&gt;\n  FOR EACH ROW\n  EXECUTE FUNCTION script.trgfn_upd_audit_data_user_generic();\n</code></pre>"},{"location":"dbzero/script/manual/trgfn_upd_audit_data_user_generic/#comportamento","title":"\u2699\ufe0f Comportamento","text":"<ol> <li>Aggiornamento timestamp</li> </ol> <p><pre><code>NEW.data_update := CURRENT_TIMESTAMP;\n</code></pre> 2. Aggiornamento utente</p> <p><pre><code>NEW.user_update := CURRENT_USER;\n</code></pre> 3. Restituzione del record</p> <pre><code>RETURN NEW;\n</code></pre> <p>Queste assegnazioni avvengono subito prima che l\u2019UPDATE sia eseguito, sovrascrivendo eventuali valori preesistenti.</p>"},{"location":"dbzero/script/manual/trgfn_upd_audit_data_user_generic/#valore-di-ritorno","title":"\ud83d\udd12 Valore di Ritorno","text":"<ul> <li><code>trigger</code>   Restituisce il record <code>NEW</code> con i campi di audit aggiornati.</li> </ul>"},{"location":"dbzero/script/manual/trgfn_upd_audit_data_user_generic/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Uniformit\u00e0   Un\u2019unica trigger function per tutte le tabelle, garantendo comportamento omogeneo.</li> <li>Riduzione di codice duplicato   Non serve inserire manualmente assegnazioni di audit in ogni trigger.</li> <li>Sicurezza e tracciabilit\u00e0   Ogni modifica alle tabelle viene automaticamente marcata con data e utente, migliorando la compliance e il debugging.</li> <li>Facilit\u00e0 di estensione   Basta aggiungere un trigger <code>BEFORE UPDATE</code> replicando lo stesso pattern su nuove tabelle.</li> </ul> <p>\ud83e\udde0 \u201cAutomatizzare l\u2019audit delle modifiche con una trigger function generica assicura coerenza, riduce il boilerplate e aumenta la tracciabilit\u00e0.\u201d</p>"},{"location":"dbzero/script/manual/trgfn_upd_dlt_storico_generic/","title":"Trgfn upd dlt storico generic","text":""},{"location":"dbzero/script/manual/trgfn_upd_dlt_storico_generic/#documentazione-concettuale-trigger-function-scripttrgfn_upd_dlt_storico_generic","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Trigger Function <code>script.trgfn_upd_dlt_storico_generic()</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento funzioni:   - script.fn_log_and_raise_error </p> <p>Guide:  - Linee Guida SQL per convenzioni di changeSet e commenti SQL  </p> <p>La trigger function <code>script.trgfn_upd_dlt_storico_generic()</code> centralizza la logica di storicizzazione in qualunque tabella del layer <code>storico</code>, gestendo:</p> <ul> <li>Chiusura automatica degli snapshot aperti (<code>valid_to IS NULL</code>).</li> <li>Creazione di uno snapshot iniziale con <code>valid_from</code> fisso (<code>1950-01-01</code>) se non esistevano record storici.</li> <li>Inserimento di snapshot finale con <code>valid_from = CURRENT_DATE</code> e <code>valid_to = NULL</code> per l\u2019operazione corrente.</li> <li>Gestione di errori tramite <code>script.fn_log_and_raise_error</code>, mantenendo commenti interni e usando <code>TG_ARGV[0]</code> per il nome della colonna FK della tabella storica.</li> <li>Importante tutte le tabelle devono avere una colonna <code>storicizza</code> che \u00e8 utilizzatta all'interno della funzion.</li> </ul>"},{"location":"dbzero/script/manual/trgfn_upd_dlt_storico_generic/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Unificazione logica: evitare duplicazioni del codice di storicizzazione in diverse funzioni trigger.</li> <li>Flessibilit\u00e0: applicabile a qualsiasi tabella storica semplicemente specificando il parametro <code>TG_ARGV[0]</code> con il nome della colonna di riferimento.</li> <li>Robustezza: gestione completa degli errori con logging, senza interrompere il flusso DML principale.</li> </ul>"},{"location":"dbzero/script/manual/trgfn_upd_dlt_storico_generic/#parametri-e-contesto","title":"\ud83d\udd0d Parametri e Contesto","text":"<ul> <li> <p>Parametri (<code>TG_ARGV</code>):</p> </li> <li> <p><code>TG_ARGV[0]</code>: nome della colonna FK nella tabella storica che punta alla PK della tabella originale (es. <code>'indirizzo_dettaglio_id'</code>).</p> </li> <li>Trigger associato: tipicamente usato con una DDL di tipo</li> </ul> <p><pre><code>CREATE TRIGGER trg_storico\n  AFTER UPDATE OR DELETE ON &lt;schema&gt;.&lt;tabella_origine&gt;\n  FOR EACH ROW\n  EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('&lt;colonna_fk&gt;');\n</code></pre> * Dipendenze:</p> <ul> <li>Schema <code>storico</code> deve contenere la tabella con stesso nome della sorgente.</li> <li>Colonne <code>storicizza</code>, <code>valid_from</code>, <code>valid_to</code>, <code>data_insert</code>, <code>user_insert</code>, <code>snapshot</code>, <code>tipo_operazione</code> con struttura standard.</li> <li>Funzione <code>script.fn_log_and_raise_error</code> per log degli errori.</li> </ul>"},{"location":"dbzero/script/manual/trgfn_upd_dlt_storico_generic/#flusso-di-esecuzione-dettagliato","title":"\u2699\ufe0f Flusso di Esecuzione Dettagliato","text":"<ol> <li> <p>Recupero ID record</p> </li> <li> <p>Se <code>TG_OP = 'DELETE'</code>, usa <code>OLD.id</code>, altrimenti <code>NEW.id</code>.</p> </li> <li> <p>In caso di errore, logga con <code>E_SNAPSHOT_ID_NOT_FOUND</code>.</p> </li> <li> <p>Determinazione tipo e snapshot</p> </li> <li> <p>UPDATE \u2192 <code>op_type = 2</code>, <code>snapshot_data = to_jsonb(NEW)</code>.</p> </li> <li> <p>DELETE \u2192 <code>op_type = 3</code>, <code>snapshot_data = to_jsonb(OLD)</code>.</p> </li> <li> <p>Chiusura snapshot aperti</p> </li> <li> <p>Esegue <code>UPDATE storico.&lt;tabella&gt;</code> su <code>valid_to = CURRENT_DATE</code> per i record con FK = ID e <code>valid_to IS NULL</code>.</p> </li> <li>Imposta <code>v_snapshot_open</code> a <code>TRUE</code> se modificati record; altrimenti <code>FALSE</code>.</li> <li> <p>Errori loggati con <code>E_SNAPSHOT_CLOSE_ERROR</code>.</p> </li> <li> <p>Inserimento storico iniziale</p> </li> <li> <p>Se <code>v_snapshot_open = FALSE</code>, inserisce snapshot initiale con <code>valid_from = '1950-01-01'</code> e <code>valid_to = CURRENT_DATE</code>, <code>tipo_operazione = 1</code>.</p> </li> <li> <p>Errori gestiti con <code>E_SNAPSHOT_INIT_INSERT_ERROR</code>.</p> </li> <li> <p>Inserimento snapshot finale</p> </li> <li> <p>Inserisce sempre un record con <code>valid_from = CURRENT_DATE</code>, <code>valid_to = NULL</code>, <code>tipo_operazione = op_type</code>.</p> </li> <li> <p>Errori gestiti con <code>E_SNAPSHOT_FINAL_INSERT_ERROR</code>.</p> </li> <li> <p>Restituzione record</p> </li> <li> <p>Ritorna <code>OLD</code> per <code>DELETE</code>, <code>NEW</code> per <code>UPDATE</code>.</p> </li> </ol>"},{"location":"dbzero/script/manual/trgfn_upd_dlt_storico_generic/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Standardizzazione: una sola funzione per tutte le tabelle storiche, semplifica manutenzione e aggiornamenti.</li> <li>Configurabilit\u00e0: basta specificare la colonna di riferimento nel trigger, senza ulteriori modifiche al PL/pgSQL.</li> <li>Resilienza: errori intermedi non bloccano la DML, vengono loggati e notificati in modo consistente.</li> <li>Audit Trail completo: garantisce sempre la chiusura e la creazione di snapshot, mantenendo la storia integrale dei dati.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>trgfn_upd_dlt_storico_generic</code>, Zero ERP ha una soluzione unica e versatile per versionare ogni entit\u00e0 storica, riducendo complessit\u00e0 e aumentando l\u2019affidabilit\u00e0.\u201d</p>"},{"location":"dbzero/script/manual/uuid_nil/","title":"Uuid nil","text":""},{"location":"dbzero/script/manual/uuid_nil/#documentazione-concettuale-funzione-scriptuuid_nil","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Funzione <code>script.uuid_nil()</code>","text":"<p>La funzione <code>script.uuid_nil()</code> restituisce l\u2019UUID nil, ovvero il valore composto da tutti zeri (<code>00000000-0000-0000-0000-000000000000</code>). Viene utilizzata come helper per rappresentare un UUID \u201cvuoto\u201d in trigger e funzioni, facilitando fallback controllati o valori di default in assenza di un identificativo valido.</p>"},{"location":"dbzero/script/manual/uuid_nil/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Fornire un valore UUID costante, composto interamente da zeri.</li> <li>Usato come fallback o default quando non \u00e8 possibile generare o recuperare un UUID valido.</li> </ul>"},{"location":"dbzero/script/manual/uuid_nil/#esempio-di-utilizzo","title":"\u2699\ufe0f Esempio di Utilizzo","text":"<pre><code>-- Assegna l\u2019UUID nil a una variabile\nSELECT script.uuid_nil() AS nil_uuid;\n\n-- Utilizzo in trigger o funzione come valore di fallback\nNEW.tx_id := COALESCE(current_tx_id, script.uuid_nil());\n</code></pre> <p>\ud83e\udde0 \u201c<code>script.uuid_nil()</code> \u00e8 il modo pi\u00f9 semplice e leggibile per ottenere un UUID \u2018tutti zeri\u2019 nel database.\u201d</p>"},{"location":"dbzero/script/manual/vw_indirizzo_completo/","title":"Vw indirizzo completo","text":""},{"location":"dbzero/script/manual/vw_indirizzo_completo/#documentazione-concettuale-view-scriptvw_indirizzo_completo","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>script.vw_indirizzo_completo</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento tabelle:    - config.stradario  - config.comuni </p> <p>Approfondimento view:    - script.vw_stradario_esteso </p> <p>La view <code>script.vw_indirizzo_completo</code> estende la tabella <code>config.stradario</code> con dati anagrafici del comune, provincia, codice postale e dettaglio della via, fornendo un record unico per ogni via con tutte le informazioni utili.</p>"},{"location":"dbzero/script/manual/vw_indirizzo_completo/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Denormalizzazione per letture rapide: aggregare in un\u2019unica view i dati di stradario, comune, provincia, codice postale e via, semplificando le query di selezione degli indirizzi.</li> <li>Pulizia e consistenza: fornire campi gi\u00e0 formattati e pronti per essere utilizzati nelle normalizzazioni e nelle funzionalit\u00e0 GIS.</li> <li>Riutilizzabilit\u00e0: rendere disponibile un\u2019unica sorgente per join di indirizzi completi, evitando duplicazione di codice SQL.</li> </ul>"},{"location":"dbzero/script/manual/vw_indirizzo_completo/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Performance: riduce il numero di join necessari nelle query di indirizzo, migliorando i tempi di risposta.</li> <li>Manutenibilit\u00e0: ogni modifica strutturale (es. nuovi campi) pu\u00f2 essere gestita centralmente nella view.</li> <li>Coesione: fornisce un modello concettuale \u201cindirizzo completo\u201d facilmente comprensibile e utilizzabile.</li> </ul>"},{"location":"dbzero/script/manual/vw_indirizzo_completo/#commento-sulla-view","title":"\ud83d\udd16 Commento sulla View","text":"<pre><code>COMMENT ON VIEW script.vw_indirizzo_completo\n  IS 'View che estende config.stradario con dati di comune, provincia,\n     codice postale e dettaglio via dalla view script.vw_stradario_esteso';\n</code></pre> <p>\ud83e\udde0 \u201c<code>vw_indirizzo_completo</code> \u00e8 il punto di riferimento per tutte le operazioni che richiedono i dati anagrafici e di localizzazione di una via, con un singolo accesso SQL.\u201d</p>"},{"location":"dbzero/script/manual/vw_stradario_esteso/","title":"Vw stradario esteso","text":""},{"location":"dbzero/script/manual/vw_stradario_esteso/#documentazione-concettuale-view-scriptvw_stradario_esteso","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>script.vw_stradario_esteso</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:  - config.stradario_generale  - config.toponomastica  - config.stati </p> <p>Approfondimento view:  - script.vw_indirizzo_completo </p> <p>La view <code>script.vw_stradario_esteso</code> offre una rappresentazione denormalizzata delle vie, combinando i dati base di <code>stradario_generale</code> con le relative informazioni di tipologia toponomastica e stato, per semplificare le query di indirizzo.</p>"},{"location":"dbzero/script/manual/vw_stradario_esteso/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Aggregazione logica: unire in un\u2019unica sorgente i dati di via, toponomastica e stato, evitando join ripetuti nei client e nelle applicazioni.</li> <li>Pulizia dati: fornire alias chiari (<code>id_via</code>, <code>id_toponomastica</code>, <code>tipo_toponimo</code>, <code>sigla_stato</code>, <code>nome_strada</code>) per facilitare l\u2019interpretazione dei risultati.</li> <li>Performance: ridurre il carico di join runtime raggruppando pi\u00f9 tabelle in un\u2019unica view materializzata (se necessario).</li> </ul>"},{"location":"dbzero/script/manual/vw_stradario_esteso/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Sviluppo semplificato: i client possono accedere a tutti i dettagli di via con una singola query.</li> <li>Flessibilit\u00e0: la view pu\u00f2 essere indicizzata o materializzata per scenari ad alto carico di lettura.</li> <li>Coerenza terminologica: garantisce che la costruzione di <code>indirizzo_generale</code> sia uniforme in tutte le parti dell\u2019applicazione.</li> </ul>"},{"location":"dbzero/script/manual/vw_stradario_esteso/#commento-sulla-view","title":"\ud83d\udd16 Commento sulla View","text":"<pre><code>COMMENT ON VIEW script.vw_stradario_esteso\n  IS 'View che estende stradario_generale con dati di toponomastica e stato, \"indirizzo_generale\" = tipo_toponimo || nome_strada';\n</code></pre> <p>\ud83e\udde0 \u201c<code>vw_stradario_esteso</code> \u00e8 lo strumento ideale per ottenere in un colpo solo tutte le informazioni essenziali di una via, facilitando integrazioni e reportistica.\u201d</p>"},{"location":"dbzero/script/views/vw_indirizzo_completo/","title":"Vw indirizzo completo","text":""},{"location":"dbzero/script/views/vw_indirizzo_completo/#documentazione-concettuale-view-scriptvw_indirizzo_completo","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>script.vw_indirizzo_completo</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento tabelle:    - config.stradario  - config.comuni </p> <p>Approfondimento view:    - script.vw_stradario_esteso </p> <p>La view <code>script.vw_indirizzo_completo</code> estende la tabella <code>config.stradario</code> con dati anagrafici del comune, provincia, codice postale e dettaglio della via, fornendo un record unico per ogni via con tutte le informazioni utili.</p>"},{"location":"dbzero/script/views/vw_indirizzo_completo/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Denormalizzazione per letture rapide: aggregare in un\u2019unica view i dati di stradario, comune, provincia, codice postale e via, semplificando le query di selezione degli indirizzi.</li> <li>Pulizia e consistenza: fornire campi gi\u00e0 formattati e pronti per essere utilizzati nelle normalizzazioni e nelle funzionalit\u00e0 GIS.</li> <li>Riutilizzabilit\u00e0: rendere disponibile un\u2019unica sorgente per join di indirizzi completi, evitando duplicazione di codice SQL.</li> </ul>"},{"location":"dbzero/script/views/vw_indirizzo_completo/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Performance: riduce il numero di join necessari nelle query di indirizzo, migliorando i tempi di risposta.</li> <li>Manutenibilit\u00e0: ogni modifica strutturale (es. nuovi campi) pu\u00f2 essere gestita centralmente nella view.</li> <li>Coesione: fornisce un modello concettuale \u201cindirizzo completo\u201d facilmente comprensibile e utilizzabile.</li> </ul>"},{"location":"dbzero/script/views/vw_indirizzo_completo/#commento-sulla-view","title":"\ud83d\udd16 Commento sulla View","text":"<pre><code>COMMENT ON VIEW script.vw_indirizzo_completo\n  IS 'View che estende config.stradario con dati di comune, provincia,\n     codice postale e dettaglio via dalla view script.vw_stradario_esteso';\n</code></pre> <p>\ud83e\udde0 \u201c<code>vw_indirizzo_completo</code> \u00e8 il punto di riferimento per tutte le operazioni che richiedono i dati anagrafici e di localizzazione di una via, con un singolo accesso SQL.\u201d</p>"},{"location":"dbzero/script/views/vw_indirizzo_completo/#view-vw_indirizzo_completo","title":"\ud83d\udd0d View <code>vw_indirizzo_completo</code>","text":"<pre><code>CREATE OR REPLACE VIEW script.vw_indirizzo_completo AS\nSELECT s.id AS id_stradario,\n    c.id AS id_comune,\n    c.descrizione AS comune,\n    p.sigla AS provincia,\n    cp.codice_postale,\n    ve.indirizzo_generale,\n    s.geoloc,\n    s.extra_info,\n    ve.id_via,\n    ve.tipo_toponimo,\n    ve.nome_strada\n   FROM ((((config.stradario s\n     JOIN config.comuni c ON ((s.comune_id = c.id)))\n     JOIN config.province p ON ((c.provincia_id = p.id)))\n     JOIN config.codici_postali cp ON ((s.codice_postale_id = cp.id)))\n     JOIN script.vw_stradario_esteso ve ON ((s.stradario_generale_id = ve.id_via)));\n</code></pre> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/views/vw_ita_province_regioni/","title":"\ud83d\udd0d View <code>vw_ita_province_regioni</code>","text":"<pre><code>CREATE OR REPLACE VIEW script.vw_ita_province_regioni AS\nSELECT p.id AS id_provincia,\n    lpad((p.extra_country -&gt;&gt; 'codice_istat'::text), 3, '0'::text) AS ita_codice_istat_provincia,\n    p.descrizione AS ita_nome_provincia,\n    p.sigla AS ita_sigla_provincia,\n    acc.id AS id_provincia_accisa,\n    acc.descrizione AS ita_provincia_accisa,\n    acc.sigla AS ita_sigla_accisa,\n    r.id AS id_regione,\n    lpad((r.extra_country -&gt;&gt; 'codice_istat'::text), 2, '0'::text) AS ita_codice_istat_regione,\n    r.descrizione AS ita_nome_regione,\n    ((r.extra_country -&gt;&gt; 'mezzogiorno'::text))::character(1) AS ita_mezzogiorno,\n    s.id AS id_stato,\n    s.sigla_stato AS ita_sigla_stato,\n    s.descrizione AS ita_nome_stato,\n    (s.extra_country -&gt;&gt; 'codice_istat'::text) AS ita_codice_istat_stato,\n    (s.extra_country -&gt;&gt; 'codice_catastale'::text) AS ita_codice_catastale_stato\n   FROM (((config.province p\n     LEFT JOIN config.province acc ON ((acc.id = ((p.extra_country -&gt;&gt; 'provincia_accisa_id'::text))::integer)))\n     JOIN config.regioni r ON ((p.regione_id = r.id)))\n     JOIN config.stati s ON ((r.stato_id = s.id)));\n</code></pre> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/views/vw_stati_estesi/","title":"\ud83d\udd0d View <code>vw_stati_estesi</code>","text":"<pre><code>CREATE OR REPLACE VIEW script.vw_stati_estesi AS\nSELECT id,\n    descrizione,\n    sigla_stato,\n    codice_iso2,\n    codice_iso3,\n    codice_telefonico,\n    continente,\n    (extra_country -&gt;&gt; 'codice_istat'::text) AS codice_istat,\n    (extra_country -&gt;&gt; 'codice_catastale'::text) AS codice_catastale,\n    (extra_country -&gt;&gt; 'stato_utilizzo'::text) AS stato_utilizzo\n   FROM config.stati s;\n</code></pre> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/script/views/vw_stradario_esteso/","title":"Vw stradario esteso","text":""},{"location":"dbzero/script/views/vw_stradario_esteso/#documentazione-concettuale-view-scriptvw_stradario_esteso","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 View <code>script.vw_stradario_esteso</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:  - config.stradario_generale  - config.toponomastica  - config.stati </p> <p>Approfondimento view:  - script.vw_indirizzo_completo </p> <p>La view <code>script.vw_stradario_esteso</code> offre una rappresentazione denormalizzata delle vie, combinando i dati base di <code>stradario_generale</code> con le relative informazioni di tipologia toponomastica e stato, per semplificare le query di indirizzo.</p>"},{"location":"dbzero/script/views/vw_stradario_esteso/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Aggregazione logica: unire in un\u2019unica sorgente i dati di via, toponomastica e stato, evitando join ripetuti nei client e nelle applicazioni.</li> <li>Pulizia dati: fornire alias chiari (<code>id_via</code>, <code>id_toponomastica</code>, <code>tipo_toponimo</code>, <code>sigla_stato</code>, <code>nome_strada</code>) per facilitare l\u2019interpretazione dei risultati.</li> <li>Performance: ridurre il carico di join runtime raggruppando pi\u00f9 tabelle in un\u2019unica view materializzata (se necessario).</li> </ul>"},{"location":"dbzero/script/views/vw_stradario_esteso/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Sviluppo semplificato: i client possono accedere a tutti i dettagli di via con una singola query.</li> <li>Flessibilit\u00e0: la view pu\u00f2 essere indicizzata o materializzata per scenari ad alto carico di lettura.</li> <li>Coerenza terminologica: garantisce che la costruzione di <code>indirizzo_generale</code> sia uniforme in tutte le parti dell\u2019applicazione.</li> </ul>"},{"location":"dbzero/script/views/vw_stradario_esteso/#commento-sulla-view","title":"\ud83d\udd16 Commento sulla View","text":"<pre><code>COMMENT ON VIEW script.vw_stradario_esteso\n  IS 'View che estende stradario_generale con dati di toponomastica e stato, \"indirizzo_generale\" = tipo_toponimo || nome_strada';\n</code></pre> <p>\ud83e\udde0 \u201c<code>vw_stradario_esteso</code> \u00e8 lo strumento ideale per ottenere in un colpo solo tutte le informazioni essenziali di una via, facilitando integrazioni e reportistica.\u201d</p>"},{"location":"dbzero/script/views/vw_stradario_esteso/#view-vw_stradario_esteso","title":"\ud83d\udd0d View <code>vw_stradario_esteso</code>","text":"<pre><code>CREATE OR REPLACE VIEW script.vw_stradario_esteso AS\nSELECT v.id AS id_via,\n    t.id AS id_toponomastica,\n    t.descrizione AS tipo_toponimo,\n    s.sigla_stato,\n    v.descrizione AS nome_strada,\n    v.descrizione_breve,\n    concat(t.descrizione, ' ', v.descrizione) AS indirizzo_generale\n   FROM ((config.stradario_generale v\n     JOIN config.toponomastica t ON ((v.toponomastica_id = t.id)))\n     LEFT JOIN config.stati s ON ((t.stato_id = s.id)));\n</code></pre> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/storico/","title":"Schema <code>storico</code>","text":""},{"location":"dbzero/storico/#tabelle","title":"\ud83d\udcda Tabelle","text":"<ul> <li>comune_trasformazioni</li> <li>comuni \u2014 * Audit Trail: Conservare una traccia immutabile di ogni modifica e cancellazione applicata a <code>config.comuni</code>. * Versioning dei record: Permettere la ricostruzione dello stato storico di ogni comune in un dato momento. * Query storiche: Supportare interrogazioni basate su intervalli temporali grazie ai campi <code>valid_from</code> e <code>valid_to</code>. * Classificazione operazioni: Utilizzare <code>tipo_operazione_id</code> e <code>change_type</code> per distinguere INSERT iniziale, UPDATE e DELETE. ---</li> <li>dati_societari \u2014 * Versionamento completo   Acquisire snapshot di ogni record di <code>anagrafiche.dati_societari</code> per garantire la tracciabilit\u00e0 delle evoluzioni nel tempo. * Audit e compliance   Conservare informazioni su chi (<code>user_insert</code>) e quando (<code>data_insert</code>) \u00e8 stata eseguita l\u2019operazione, nonch\u00e9 su quale transazione di business (<code>tx_id</code>). * Intervalli di validit\u00e0   Definire periodi di efficacia di ciascuno snapshot con <code>valid_from</code> (inclusivo) e <code>valid_to</code> (esclusivo), facilitando interrogazioni temporali.</li> <li>indirizzi \u2014 * Versionamento degli indirizzi     Ogni operazione su <code>anagrafiche.indirizzi</code> (INSERT, UPDATE, DELETE) genera un record nello storico che ne conserva lo stato precedente o iniziale.</li> <li>indirizzi_dettaglio \u2014 * Audit Trail: tracciare ogni modifica ai dettagli degli indirizzi consentendo la ricostruzione dello stato storico. * Versioning temporale: supportare query basate su periodi di validit\u00e0 tramite <code>valid_from</code> e <code>valid_to</code>. * Schema futuro\u2011proof: salvare l\u2019intero stato del record in JSONB senza richiedere aggiornamenti di schema a ogni nuova colonna.</li> <li>parameter_overrides \u2014 * Versionamento degli override   Catturare ogni modifica ai record di <code>config.parameter_overrides</code>, consentendo di risalire allo stato precedente o iniziale di un override. * Audit e compliance   Archivio immutabile di tutte le operazioni, con metadati di utente e timestamp, per garantire tracciabilit\u00e0 e analisi storiche.</li> <li>parameters \u2014 * Versionamento dei parametri   Registrare ogni modifica (INSERT, UPDATE, DELETE) sui parametri definiti in <code>config.parameters</code>, abilitando rollback e analisi storica. * Audit e compliance   Documentare chi (<code>user_insert</code>) e quando (<code>data_insert</code>) hanno effettuato le modifiche, mantenendo un registro immutabile.</li> <li>soggetti \u2014 * Versionamento dei soggetti   Ogni modifica (INSERT, UPDATE, DELETE) su <code>anagrafiche.soggetti</code> genera un record in storico con lo stato precedente, il tipo di operazione e i metadati di audit.</li> <li>stradario \u2014 * Audit Trail: Conservare una traccia completa di ogni modifica o cancellazione effettuata su <code>config.stradario</code>. * Versioning dei record: Permettere la ricostruzione dello stato di una via in un dato momento, grazie ai campi <code>valid_from</code> e <code>valid_to</code>. * Riproduzione dello schema: Utilizzare il campo <code>snapshot</code> (JSONB) per salvare tutti i dettagli di <code>config.stradario</code> al momento dell\u2019operazione, anche a fronte di evoluzioni dello schema. * Classificazione delle operazioni: Impiegare <code>tipo_operazione_id</code> (1=insert iniziale, 2=update, 3=delete) e <code>change_type</code> (A=Active, S=Suppressed, F=Fused, D=Divided) per distinguere rapidamente la natura del cambiamento.</li> <li>stradario_trasformazioni</li> </ul>"},{"location":"dbzero/storico/#funzioni","title":"\u2699\ufe0f Funzioni","text":""},{"location":"dbzero/storico/#views","title":"\ud83d\udd0d Views","text":""},{"location":"dbzero/storico/manual/comuni/","title":"Comuni","text":""},{"location":"dbzero/storico/manual/comuni/#documentazione-concettuale-tabella-storicocomuni","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.comuni</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:     - config.comuni </p> <p>Approfondimento funzioni:   - script.fn_log_and_raise_error  - config.trgfn_comuni_upd_dlt_storico_comuni </p> <p>La tabella <code>storico.comuni</code> mantiene la cronologia completa dei record di <code>config.comuni</code>, archiviando snapshot JSON dei dati ad ogni operazione di modifica o cancellazione (quando il flag <code>storicizza</code> \u00e8 impostato a <code>TRUE</code>).</p>"},{"location":"dbzero/storico/manual/comuni/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Audit Trail: Conservare una traccia immutabile di ogni modifica e cancellazione applicata a <code>config.comuni</code>.</li> <li>Versioning dei record: Permettere la ricostruzione dello stato storico di ogni comune in un dato momento.</li> <li>Query storiche: Supportare interrogazioni basate su intervalli temporali grazie ai campi <code>valid_from</code> e <code>valid_to</code>.</li> <li>Classificazione operazioni: Utilizzare <code>tipo_operazione_id</code> e <code>change_type</code> per distinguere INSERT iniziale, UPDATE e DELETE.</li> </ul>"},{"location":"dbzero/storico/manual/comuni/#descrizione-del-meccanismo-di-storico","title":"\ud83d\udcdd Descrizione del Meccanismo di Storico","text":"<ol> <li> <p>Trigger di storicizzazione    La trigger function <code>config.trgfn_comuni_upd_dlt_storico_comuni()</code> si attiva BEFORE UPDATE OR DELETE su <code>config.comuni</code> quando <code>storicizza = TRUE</code>.</p> </li> <li> <p>Ricostruzione INSERT iniziale    Anche se non esiste un record di <code>storico.comuni</code> per un dato <code>comune_id</code>, al primo UPDATE o DELETE viene creato automaticamente uno snapshot iniziale (tipo_operazione_id = 1) con i dati originali.</p> </li> <li> <p>Gestione valid_from/valid_to</p> </li> <li> <p>Ogni UPDATE chiude il record precedente impostando <code>valid_to = CURRENT_DATE</code>.</p> </li> <li>Successivamente crea un nuovo snapshot (tipo_operazione_id = 2) con <code>valid_from = CURRENT_DATE</code> e <code>valid_to = NULL</code>, fino al prossimo cambiamento.</li> <li> <p>DELETE chiude e aggiunge uno snapshot di cancellazione (tipo_operazione_id = 3) con <code>valid_to = CURRENT_DATE</code>.</p> </li> <li> <p>Uso del JSONB</p> </li> <li> <p>Il campo <code>snapshot</code> replica tutti i campi di <code>config.comuni</code> in formato JSONB, garantendo flessibilit\u00e0 di evoluzione dello schema.</p> </li> <li>Vantaggio: facile query e estrazione dell\u2019intero stato storico del record.</li> <li> <p>Costo: overhead di spazio e possibili impatti sulle performance in lettura/scrittura.</p> </li> <li> <p>Change_type    Il campo <code>change_type</code> aiuta a classificare rapidamente la natura del record storico:</p> </li> <li> <p><code>A</code> = Active (predefinito per nuovi snapshot)</p> </li> <li><code>S</code> = Suppressed</li> <li><code>F</code> = Fused</li> <li><code>D</code> = Divided</li> </ol>"},{"location":"dbzero/storico/manual/comuni/#vantaggi-operativi","title":"\ud83d\udd27 Vantaggi Operativi","text":"<ul> <li> <p>Storico dettagliato: grazie a <code>snapshot</code> JSONB, ogni modifica pu\u00f2 essere ricostruita integralmente, indipendentemente dall\u2019aggiunta di nuovi campi in <code>config.comuni</code>.</p> </li> <li> <p>Tracciabilit\u00e0 degli eventi: i campi <code>tipo_operazione_id</code> e <code>change_type</code> forniscono metadati chiari su quando e come \u00e8 avvenuto il cambiamento.</p> </li> <li> <p>Allineamento dello schema: il meccanismo non richiede aggiornamenti manuali del modello storico a ogni modifica di <code>config.comuni</code>, perch\u00e9 il JSONB \u00e8 autonomo.</p> </li> <li> <p>Resilienza a errori: il trigger di storicizzazione utilizza blocchi <code>EXCEPTION</code> per loggare errori senza bloccare l\u2019operazione DML principale.</p> </li> </ul> <p>\ud83e\udde0 \u201cCon <code>storico.comuni</code>, Zero ERP unisce flessibilit\u00e0 e completezza: un audit trail granulare dei comuni, a costo di uno storage aggiuntivo, ma con performance e semplicit\u00e0 di gestione future-proof.\u201d</p>"},{"location":"dbzero/storico/manual/dati_societari/","title":"Dati societari","text":""},{"location":"dbzero/storico/manual/dati_societari/#documentazione-concettuale-tabella-storicodati_societari","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.dati_societari</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>anagrafiche.dati_societari</li> </ul> <p>Approfondimento funzioni e trigger:</p> <ul> <li>anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto</li> <li>script.trgfn_upd_dlt_storico_generic</li> <li>dbops.trgfn_tx_id_managed</li> </ul> <p>La tabella <code>storico.dati_societari</code> mantiene lo storico delle modifiche ai record di <code>anagrafiche.dati_societari</code>. Ogni riga rappresenta uno snapshot JSONB dello stato dei dati societari al momento di un\u2019operazione (inserimento, aggiornamento o cancellazione), arricchito con metadati di validit\u00e0 e audit.</p>"},{"location":"dbzero/storico/manual/dati_societari/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Versionamento completo   Acquisire snapshot di ogni record di <code>anagrafiche.dati_societari</code> per garantire la tracciabilit\u00e0 delle evoluzioni nel tempo.</li> <li>Audit e compliance   Conservare informazioni su chi (<code>user_insert</code>) e quando (<code>data_insert</code>) \u00e8 stata eseguita l\u2019operazione, nonch\u00e9 su quale transazione di business (<code>tx_id</code>).</li> <li>Intervalli di validit\u00e0   Definire periodi di efficacia di ciascuno snapshot con <code>valid_from</code> (inclusivo) e <code>valid_to</code> (esclusivo), facilitando interrogazioni temporali.</li> </ul>"},{"location":"dbzero/storico/manual/dati_societari/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>anagrafiche.dati_societari</code></p> </li> <li> <p>Il campo <code>dati_societari_id</code> \u00e8 una FK verso la tabella operativa.</p> </li> <li>ON UPDATE CASCADE: propaga eventuali modifiche alla PK.</li> <li>ON DELETE SET NULL: preserva lo snapshot in caso di cancellazione del record sorgente.</li> <li> <p>Triggers</p> </li> <li> <p><code>trg_Z90_storico_dati_societari_upd_dlt</code> deve seguire la convenzione di naming per essere eseguito per ultimo.</p> </li> <li>Il trigger richiama <code>script.trgfn_upd_dlt_storico_generic('dati_societari_id')</code>.</li> </ul>"},{"location":"dbzero/storico/manual/dati_societari/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Recupero storico   Possibilit\u00e0 di ripristinare lo stato di un record societario a qualsiasi data antecedente.</li> <li>Query temporali   Grazie a <code>valid_from</code>/<code>valid_to</code> \u00e8 semplice creare viste di tipo Slowly Changing Dimension per BI e reporting.</li> <li>Riduzione complessit\u00e0   L\u2019uso di JSONB elimina la necessit\u00e0 di colonne aggiuntive in tabella di storico quando cambia la struttura di <code>anagrafiche.dati_societari</code>.</li> <li>Audit dettaglio   Tracciamento preciso dei dati e delle operazioni per finalit\u00e0 di compliance e debug.</li> </ul> <p>\ud83e\udde0 \u201c<code>storico.dati_societari</code> \u00e8 il registro cronologico delle variazioni dei dati societari: snapshot JSON, audit completo e interrogazioni temporali in un\u2019unica tabella.\u201d</p>"},{"location":"dbzero/storico/manual/indirizzi/","title":"Indirizzi","text":""},{"location":"dbzero/storico/manual/indirizzi/#documentazione-concettuale-tabella-storicoindirizzi","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.indirizzi</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - anagrafiche.indirizzi </p> <p>Approfondimento funzioni e trigger:  - script.trgfn_upd_dlt_storico_generic - dbops.trgfn_tx_id_managed </p> <p>La tabella <code>storico.indirizzi</code> conserva lo storico delle variazioni della tabella <code>anagrafiche.indirizzi</code>. Ogni record \u00e8 uno snapshot (copia completa in formato JSONB) dello stato dell'indirizzo al momento di una determinata operazione (inserimento, aggiornamento, eliminazione).</p> <p>Il suo utilizzo \u00e8 cruciale per: - tracciare le modifiche agli indirizzi nel tempo, - supportare analisi retrospettive, - garantire la tracciabilit\u00e0 ai fini di audit e ricostruzione storica.</p>"},{"location":"dbzero/storico/manual/indirizzi/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Versionamento degli indirizzi   Ogni operazione su <code>anagrafiche.indirizzi</code> (INSERT, UPDATE, DELETE) genera un record nello storico che ne conserva lo stato precedente o iniziale.</p> </li> <li> <p>Audit e trasparenza   Mantiene informazioni su chi ha effettuato la modifica (<code>user_insert</code>) e quando (<code>data_insert</code>).</p> </li> <li> <p>Snapshot in formato JSONB   L\u2019intero record viene memorizzato nel campo <code>snapshot</code> per una ricostruzione fedele dello stato originale.</p> </li> </ul>"},{"location":"dbzero/storico/manual/indirizzi/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>anagrafiche.indirizzi</code> </li> <li>Il campo <code>indirizzo_id</code> riferisce direttamente alla chiave primaria di <code>anagrafiche.indirizzi</code>.  </li> <li>Vincolo referenziale:  <ul> <li>ON UPDATE CASCADE (propaga eventuali modifiche alla PK di <code>anagrafiche.indirizzi</code>)  </li> <li>ON DELETE NO ACTION (non permette la cancellazione se esistono record storici collegati).  </li> </ul> </li> </ul>"},{"location":"dbzero/storico/manual/indirizzi/#campi-rilevanti","title":"\ud83c\udff7\ufe0f Campi Rilevanti","text":"<ul> <li><code>valid_from</code> \u2013 Data e ora di inizio validit\u00e0 (inclusiva).  </li> <li><code>valid_to</code> \u2013 Data e ora di fine validit\u00e0 (esclusiva), pu\u00f2 essere <code>NULL</code> se il record \u00e8 attualmente valido.  </li> <li><code>snapshot</code> \u2013 Contiene lo stato completo dell\u2019indirizzo (in formato JSONB).  </li> <li><code>tipo_operazione</code> \u2013 Indica la tipologia di evento:  </li> <li><code>1 = inserimento</code> </li> <li><code>2 = aggiornamento</code> </li> <li><code>3 = eliminazione</code> </li> <li><code>change_type</code> \u2013 Classifica il tipo di cambiamento:  </li> <li><code>A = Active</code> </li> <li><code>S = Suppressed</code> </li> <li><code>F = Fused</code> </li> <li><code>D = Divided</code> </li> <li><code>tx_id</code> \u2013 Identificativo di transazione, generato dal trigger <code>dbops.trgfn_tx_id_managed</code>.</li> </ul>"},{"location":"dbzero/storico/manual/indirizzi/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Ricostruzione temporale   Permette di risalire allo stato di un indirizzo in una qualsiasi data passata, utile per audit, fatturazioni retroattive o analisi storiche.</p> </li> <li> <p>Riduzione della ridondanza   Lo snapshot JSONB contiene tutte le informazioni necessarie, senza dover duplicare intere tabelle storiche parallele.</p> </li> <li> <p>Supporto a data analytics   La combinazione di <code>valid_from</code> e <code>valid_to</code> permette di creare viste temporali e ricostruzioni a intervalli specifici.</p> </li> <li> <p>Integrazione con processi di sincronizzazione   Il campo <code>change_type</code> consente di distinguere il tipo di modifica, utile per sistemi di replica o data warehouse.</p> </li> </ul> <p>\ud83e\udde0 \u201c<code>storico.indirizzi</code> \u00e8 la scatola nera degli indirizzi: cattura ogni cambiamento per garantire memoria storica, auditabilit\u00e0 e coerenza temporale nel tempo.\u201d</p>"},{"location":"dbzero/storico/manual/indirizzi_dettaglio/","title":"Indirizzi dettaglio","text":""},{"location":"dbzero/storico/manual/indirizzi_dettaglio/#documentazione-concettuale-tabella-storicoindirizzi_dettaglio","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.indirizzi_dettaglio</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento tabelle:  - anagrafiche.indirizzi_dettaglio </p> <p>Approfondimento funzioni:  - script.trgfn_upd_dlt_storico_generic </p>"},{"location":"dbzero/storico/manual/indirizzi_dettaglio/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Audit Trail: tracciare ogni modifica ai dettagli degli indirizzi consentendo la ricostruzione dello stato storico.</li> <li>Versioning temporale: supportare query basate su periodi di validit\u00e0 tramite <code>valid_from</code> e <code>valid_to</code>.</li> <li>Schema futuro\u2011proof: salvare l\u2019intero stato del record in JSONB senza richiedere aggiornamenti di schema a ogni nuova colonna.</li> </ul>"},{"location":"dbzero/storico/manual/indirizzi_dettaglio/#struttura-standard-delle-tabelle-di-storico","title":"\ud83d\udee0\ufe0f Struttura Standard delle Tabelle di Storico","text":"<p>Tutte le tabelle di storico in Zero ERP, incluso <code>storico.indirizzi_dettaglio</code>, adottano uno schema di colonne standard:</p> <ul> <li><code>id</code></li> <li><code>valid_from</code> / <code>valid_to</code></li> <li><code>change_type</code></li> <li><code>data_insert</code></li> <li><code>user_insert</code></li> <li><code>&lt;entit\u00e0&gt;_id</code> (foreign key verso la tabella originale)</li> <li><code>snapshot</code> (JSONB dello stato del record)</li> <li><code>tipo_operazione</code></li> <li><code>tx_id</code></li> </ul>"},{"location":"dbzero/storico/manual/indirizzi_dettaglio/#meccanismo-di-popolamento","title":"\ud83d\udd04 Meccanismo di Popolamento","text":"<p>La popolazione degli snapshot avviene tramite la trigger function generica <code>script.trgfn_upd_dlt_storico_generic()</code> applicata sulla tabella sorgente, che:</p> <ol> <li>Chiude eventuali snapshot precedenti (<code>valid_to = CURRENT_DATE</code>).</li> <li>Inserisce uno snapshot iniziale (se non esiste) con <code>valid_from</code> impostato a una data fissa (1950-01-01).</li> <li>Crea sempre uno snapshot finale con <code>valid_from = CURRENT_DATE</code> e <code>valid_to = NULL</code>, serializzando lo stato tramite <code>to_jsonb(NEW/OLD)</code>.</li> <li>Popola <code>tx_id</code> tramite <code>dbops.trgfn_tx_id_managed()</code> per contestualizzare le transazioni.</li> </ol>"},{"location":"dbzero/storico/manual/indirizzi_dettaglio/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Storicizzazione automatica: nessuna logica custom su ogni tabella; il pattern JSONB consente evoluzioni senza migrazione di schema.</li> <li>Coerenza transazionale: associando <code>tx_id</code>, si raggruppano snapshot multipli nella stessa operazione di business.</li> <li>Query efficienti: reporting storico semplificato tramite campi temporali e codici operazione.</li> </ul> <p>\ud83e\udde0 \u201c<code>storico.indirizzi_dettaglio</code> segue lo standard storico di Zero ERP: semplici regole per uno storico completo e affidabile, con flessibilit\u00e0 JSONB e robustezza transazionale.\u201d</p>"},{"location":"dbzero/storico/manual/parameter_overrides/","title":"Parameter overrides","text":""},{"location":"dbzero/storico/manual/parameter_overrides/#documentazione-concettuale-tabella-storicoparameter_overrides","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.parameter_overrides</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>config.parameter_overrides</li> <li>storico.parameters</li> </ul> <p>Approfondimento funzioni e trigger:</p> <ul> <li>script.trgfn_upd_dlt_storico_generic</li> <li>dbops.trgfn_tx_id_managed</li> </ul> <p>La tabella <code>storico.parameter_overrides</code> memorizza gli snapshot delle modifiche operazioni (INSERT, UPDATE, DELETE) sulla tabella operativa <code>config.parameter_overrides</code>. Ogni riga rappresenta lo stato completo di un record di override in un preciso istante, sfruttando il campo JSONB per catturare dinamicamente l\u2019intero contenuto.</p>"},{"location":"dbzero/storico/manual/parameter_overrides/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Versionamento degli override   Catturare ogni modifica ai record di <code>config.parameter_overrides</code>, consentendo di risalire allo stato precedente o iniziale di un override.</li> <li>Audit e compliance   Archivio immutabile di tutte le operazioni, con metadati di utente e timestamp, per garantire tracciabilit\u00e0 e analisi storiche.</li> </ul>"},{"location":"dbzero/storico/manual/parameter_overrides/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>config.parameter_overrides</code></p> </li> <li> <p><code>parameter_override_id</code> \u00e8 FK verso <code>config.parameter_overrides(id)</code>.</p> </li> <li>ON UPDATE CASCADE / ON DELETE SET NULL: mantiene la coerenza se la tabella operativa cambia o viene eliminata.</li> <li> <p>Triggers</p> </li> <li> <p><code>trg_parameter_overrides_ins_upd_gen_tx_id</code>: assegna <code>tx_id</code> automatico su INSERT/UPDATE tramite <code>dbops.trgfn_tx_id_managed()</code>.</p> </li> </ul>"},{"location":"dbzero/storico/manual/parameter_overrides/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Cattura automatica delle modifiche   Lo snapshot JSONB elimina la necessit\u00e0 di mantenere colonne di audit per ciascun campo modificato.</li> <li>Evoluzione dello schema trasparente   Aggiunta o rimozione di colonne in <code>config.parameter_overrides</code> non richiede modifiche a <code>storico.parameter_overrides</code>.</li> <li>Consistenza e performance   FK e indici BTree su <code>parameter_override_id</code> assicurano integrit\u00e0 referenziale e query efficienti.</li> <li>Integrazione unificata   Utilizzo della stessa funzione generic per storicizzazione (<code>script.trgfn_upd_dlt_storico_generic</code>) riduce la complessit\u00e0 e mantiene lo stesso pattern per tutte le entit\u00e0.</li> </ul> <p>\ud83e\udde0 \u201c<code>storico.parameter_overrides</code> \u00e8 l\u2019unico punto di verit\u00e0 per tutte le variazioni sugli override di configurazione: snapshot JSONB, auditing completo e flessibilit\u00e0 di schema in un unico modello.\u201d</p>"},{"location":"dbzero/storico/manual/parameters/","title":"Parameters","text":""},{"location":"dbzero/storico/manual/parameters/#documentazione-concettuale-tabella-storicoparameters","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.parameters</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>config.parameters</li> <li>storico.parameter_overrides</li> </ul> <p>Approfondimento funzioni e trigger:</p> <ul> <li>script.trgfn_upd_dlt_storico_generic</li> <li>dbops.trgfn_tx_id_managed</li> </ul> <p>La tabella <code>storico.parameters</code> conserva gli snapshot delle modifiche sulla tabella operativa <code>config.parameters</code>. Ogni record storico \u00e8 un JSONB che cattura lo stato completo del parametro, con informazioni di validit\u00e0 e metadati di audit.</p>"},{"location":"dbzero/storico/manual/parameters/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Versionamento dei parametri   Registrare ogni modifica (INSERT, UPDATE, DELETE) sui parametri definiti in <code>config.parameters</code>, abilitando rollback e analisi storica.</li> <li>Audit e compliance   Documentare chi (<code>user_insert</code>) e quando (<code>data_insert</code>) hanno effettuato le modifiche, mantenendo un registro immutabile.</li> </ul>"},{"location":"dbzero/storico/manual/parameters/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>config.parameters</code></p> </li> <li> <p><code>parameter_id</code> \u00e8 FK verso <code>config.parameters(id)</code>.</p> </li> <li>ON UPDATE CASCADE, ON DELETE SET NULL: mantiene integrit\u00e0 referenziale e non perde lo snapshot in caso di cancellazione.</li> <li> <p>Triggers</p> </li> <li> <p><code>trg_parameters_ins_upd_gen_tx_id</code>: assegna <code>tx_id</code> tramite <code>dbops.trgfn_tx_id_managed</code> su INSERT/UPDATE.</p> </li> </ul>"},{"location":"dbzero/storico/manual/parameters/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Snapshot automatici   Non serve gestire manualmente ogni colonna di audit: il JSONB cattura l\u2019intero record.</li> <li>Schema evolutivo   Nuove colonne in <code>config.parameters</code> non richiedono modifiche in <code>storico.parameters</code>.</li> <li>Consistenza e performance   FK e indici su <code>parameter_id</code> garantiscono operazioni sicure e veloci.</li> <li>Uniformit\u00e0 di processo   Usa la funzione <code>script.trgfn_upd_dlt_storico_generic</code> come per tutte le altre entit\u00e0 del progetto, semplificando la manutenzione.</li> </ul> <p>\ud83e\udde0 \u201c<code>storico.parameters</code> \u00e8 la fonte unica per tracciare l\u2019evoluzione dei parametri di sistema: snapshot JSON, auditing completo e integrazione con il modello di storicizzazione unificato di Zero\u00a0ERP.\u201d</p>"},{"location":"dbzero/storico/manual/soggetti/","title":"Soggetti","text":""},{"location":"dbzero/storico/manual/soggetti/#documentazione-concettuale-tabella-storicosoggetti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.soggetti</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>anagrafiche.soggetti</li> </ul> <p>Approfondimento funzioni e trigger:</p> <ul> <li>dbops.trgfn_tx_id_managed</li> <li>script.trgfn_upd_dlt_storico_generic</li> </ul> <p>La tabella <code>storico.soggetti</code> conserva lo storico delle operazioni applicate ai record di <code>anagrafiche.soggetti</code>. Ciascun record \u00e8 uno snapshot JSONB dello stato del soggetto in corrispondenza di un evento di addizione, aggiornamento o cancellazione.</p> <p>Questo permette di:</p> <ul> <li>tracciare l\u2019evoluzione dei dati nel tempo</li> <li>garantire auditability e compliance</li> <li>ripristinare o analizzare lo storico di un soggetto in qualsiasi momento</li> </ul>"},{"location":"dbzero/storico/manual/soggetti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Versionamento dei soggetti   Ogni modifica (INSERT, UPDATE, DELETE) su <code>anagrafiche.soggetti</code> genera un record in storico con lo stato precedente, il tipo di operazione e i metadati di audit.</p> </li> <li> <p>Tracciabilit\u00e0 e audit   I campi <code>data_insert</code>, <code>user_insert</code> e <code>tx_id</code> permettono di sapere quando e da chi \u00e8 stata effettuata l\u2019operazione, e di correlare pi\u00f9 cambiamenti in un\u2019unica transazione.</p> </li> </ul>"},{"location":"dbzero/storico/manual/soggetti/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>anagrafiche.soggetti</code></p> </li> <li> <p><code>soggetto_id</code> fa riferimento alla chiave primaria di <code>anagrafiche.soggetti</code>.</p> </li> <li> <p>ON UPDATE CASCADE, ON DELETE SET NULL per mantenere consistenza e non perdere record storico in caso di cancellazione di <code>anagrafiche.soggetti</code>.</p> </li> <li> <p>Triggers</p> </li> <li> <p><code>trg_soggetti_ins_upd_gen_tx_id</code>: assegna <code>tx_id</code> su insert/update tramite <code>dbops.trgfn_tx_id_managed()</code>.</p> </li> </ul>"},{"location":"dbzero/storico/manual/soggetti/#campi-rilevanti","title":"\ud83c\udff7\ufe0f Campi Rilevanti","text":"Campo Descrizione <code>id</code> PK BIGINT, sequence-based (<code>storico.soggetti_id_seq</code>) <code>valid_from</code> Data/ora inizio validit\u00e0 (inclusiva) <code>valid_to</code> Data/ora fine validit\u00e0 (esclusiva), <code>NULL</code> se ancora valido <code>change_type</code> <code>A</code>=Add, <code>U</code>=Update, <code>D</code>=Delete <code>snapshot</code> Stato completo del soggetto (JSONB) <code>tipo_operazione</code> Codice dell\u2019operazione (INSERT=1, UPDATE=2, DELETE=3) <code>tx_id</code> UUID di transazione generato dal trigger <code>data_insert</code> Timestamp di inserimento del record storico <code>user_insert</code> Utente che ha creato il record storico"},{"location":"dbzero/storico/manual/soggetti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Analisi storica   Possibilit\u00e0 di ricostruire flussi di modifica, comparare versioni e rispondere a esigenze di auditing e compliance.</p> </li> <li> <p>Semplificazione del disaster recovery   Grazie agli snapshot JSONB, non servono tabelle storiche separate per ogni colonna, riducendo complessit\u00e0 di backup e restore.</p> </li> <li> <p>Integrazione con data warehousing <code>valid_from</code> e <code>valid_to</code> permettono di esporre facilmente i dati temporali in viste dimensionali o in processi ETL.</p> </li> </ul> <p>\ud83e\udde0 \u201c<code>storico.soggetti</code> \u00e8 il registro cronologico di ogni cambiamento ai soggetti: auditing nativo, versioning JSON ed eliminazione di silos storici.\u201d</p>"},{"location":"dbzero/storico/manual/stradario/","title":"Stradario","text":""},{"location":"dbzero/storico/manual/stradario/#documentazione-concettuale-tabella-storicostradario","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.stradario</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimeto Tabelle:  - config.stradario </p> <p>Approfondimeto Funzioni:  - config.trgfn_stradario_upd_dlt_storico_stradario  - script.fn_log_and_raise_error </p> <p>La tabella <code>storico.stradario</code> archivia la cronologia delle modifiche alle vie registrate in <code>config.stradario</code>, garantendo la tracciabilit\u00e0 di tutte le operazioni di update e delete.</p>"},{"location":"dbzero/storico/manual/stradario/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Audit Trail: Conservare una traccia completa di ogni modifica o cancellazione effettuata su <code>config.stradario</code>.</li> <li>Versioning dei record: Permettere la ricostruzione dello stato di una via in un dato momento, grazie ai campi <code>valid_from</code> e <code>valid_to</code>.</li> <li>Riproduzione dello schema: Utilizzare il campo <code>snapshot</code> (JSONB) per salvare tutti i dettagli di <code>config.stradario</code> al momento dell\u2019operazione, anche a fronte di evoluzioni dello schema.</li> <li>Classificazione delle operazioni: Impiegare <code>tipo_operazione_id</code> (1=insert iniziale, 2=update, 3=delete) e <code>change_type</code> (A=Active, S=Suppressed, F=Fused, D=Divided) per distinguere rapidamente la natura del cambiamento.</li> </ul>"},{"location":"dbzero/storico/manual/stradario/#meccanismo-di-popolamento","title":"\ud83d\udd04 Meccanismo di Popolamento","text":"<ol> <li>Trigger di storicizzazione    La trigger function <code>config.trgfn_stradario_upd_dlt_storico_stradario()</code> si attiva BEFORE UPDATE OR DELETE su <code>config.stradario</code> quando il flag <code>storicizza = TRUE</code>.</li> <li>Replica dello stato iniziale    Al primo update o delete, viene creato automaticamente uno snapshot iniziale (tipo_operazione_id = 1) se non esisteva un record storico precedente.</li> <li> <p>Chiusura e creazione nuovi snapshot</p> </li> <li> <p>UPDATE: chiude il record storico aperto impostando <code>valid_to = CURRENT_DATE</code>, poi inserisce un snapshot aggiornato (tipo_operazione_id = 2) con <code>valid_from = CURRENT_DATE</code> e <code>valid_to = NULL</code>.</p> </li> <li>DELETE: chiude eventuale snapshot aperto e inserisce un snapshot finale (tipo_operazione_id = 3) con <code>valid_from = valid_to = CURRENT_DATE</code>.</li> <li> <p>Campo <code>snapshot</code></p> </li> <li> <p>Memorizza in JSONB tutti i campi di <code>config.stradario</code> al momento dell\u2019operazione, inclusi <code>descrizione_via</code>, riferimenti a <code>comune_id</code>, <code>codice_postale_id</code> e altri attributi.</p> </li> <li>Vantaggio: garantisce flessibilit\u00e0 e future-proof rispetto a modifiche di schema.</li> <li>Costo: maggiore occupazione di spazio e impatto sulle performance di I/O.</li> </ol>"},{"location":"dbzero/storico/manual/stradario/#esempio-di-trigger-ddl","title":"\ud83d\udd16 Esempio di Trigger DDL","text":"<pre><code>DROP TRIGGER IF EXISTS trg_stradario_upd_dlt_storico_stradario\n  ON config.stradario;\n\nCREATE TRIGGER trg_stradario_upd_dlt_storico_stradario\n  BEFORE UPDATE OR DELETE\n  ON config.stradario\n  FOR EACH ROW\n  WHEN (NEW.storicizza = TRUE OR OLD.storicizza = TRUE)\n  EXECUTE FUNCTION config.trgfn_stradario_upd_dlt_storico_stradario();\n</code></pre>"},{"location":"dbzero/storico/manual/stradario/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Storico granulare: ogni modifica \u00e8 catturata integralmente grazie al JSONB <code>snapshot</code>, senza richiedere sincronizzazione manuale dello schema.</li> <li>Filtro temporale: i campi <code>valid_from</code>/<code>valid_to</code> consentono interrogazioni su periodi e versioni specifiche.</li> <li>Analisi semplificata: <code>tipo_operazione_id</code> e <code>change_type</code> agevolano reportistica e individuazione rapida degli eventi.</li> <li>Resilienza: in caso di errori di storicizzazione, il trigger logga l\u2019eccezione senza bloccare l\u2019operazione principale.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>storico.stradario</code>, Zero ERP offre un audit trail completo per le vie comunali, con flessibilit\u00e0 JSONB e controllo granulare tramite flag di storicizzazione.\u201d</p>"},{"location":"dbzero/storico/tabelle/comune_trasformazioni/","title":"\ud83d\udcda Tabella <code>comune_trasformazioni</code>","text":""},{"location":"dbzero/storico/tabelle/comune_trasformazioni/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('storico.comune_trasformazioni_id_seq'::regclass) id_comune_orig integer NO id_comune_nuovo integer NO tipo_evento character NO data_evento date NO note text YES data_insert timestamp without time zone YES CURRENT_TIMESTAMP user_insert character varying YES CURRENT_USER"},{"location":"dbzero/storico/tabelle/comune_trasformazioni/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne PRIMARY KEY pk_comune_trasformazioni id"},{"location":"dbzero/storico/tabelle/comune_trasformazioni/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_comune_trasformazioni_nuovo <code>CREATE INDEX ix_comune_trasformazioni_nuovo ON storico.comune_trasformazioni USING btree (id_comune_nuovo)</code> ix_comune_trasformazioni_orig <code>CREATE INDEX ix_comune_trasformazioni_orig ON storico.comune_trasformazioni USING btree (id_comune_orig)</code> pk_comune_trasformazioni <code>CREATE UNIQUE INDEX pk_comune_trasformazioni ON storico.comune_trasformazioni USING btree (id)</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/storico/tabelle/comuni/","title":"Comuni","text":""},{"location":"dbzero/storico/tabelle/comuni/#documentazione-concettuale-tabella-storicocomuni","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.comuni</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento tabelle:     - config.comuni </p> <p>Approfondimento funzioni:   - script.fn_log_and_raise_error  - config.trgfn_comuni_upd_dlt_storico_comuni </p> <p>La tabella <code>storico.comuni</code> mantiene la cronologia completa dei record di <code>config.comuni</code>, archiviando snapshot JSON dei dati ad ogni operazione di modifica o cancellazione (quando il flag <code>storicizza</code> \u00e8 impostato a <code>TRUE</code>).</p>"},{"location":"dbzero/storico/tabelle/comuni/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Audit Trail: Conservare una traccia immutabile di ogni modifica e cancellazione applicata a <code>config.comuni</code>.</li> <li>Versioning dei record: Permettere la ricostruzione dello stato storico di ogni comune in un dato momento.</li> <li>Query storiche: Supportare interrogazioni basate su intervalli temporali grazie ai campi <code>valid_from</code> e <code>valid_to</code>.</li> <li>Classificazione operazioni: Utilizzare <code>tipo_operazione_id</code> e <code>change_type</code> per distinguere INSERT iniziale, UPDATE e DELETE.</li> </ul>"},{"location":"dbzero/storico/tabelle/comuni/#descrizione-del-meccanismo-di-storico","title":"\ud83d\udcdd Descrizione del Meccanismo di Storico","text":"<ol> <li> <p>Trigger di storicizzazione    La trigger function <code>config.trgfn_comuni_upd_dlt_storico_comuni()</code> si attiva BEFORE UPDATE OR DELETE su <code>config.comuni</code> quando <code>storicizza = TRUE</code>.</p> </li> <li> <p>Ricostruzione INSERT iniziale    Anche se non esiste un record di <code>storico.comuni</code> per un dato <code>comune_id</code>, al primo UPDATE o DELETE viene creato automaticamente uno snapshot iniziale (tipo_operazione_id = 1) con i dati originali.</p> </li> <li> <p>Gestione valid_from/valid_to</p> </li> <li> <p>Ogni UPDATE chiude il record precedente impostando <code>valid_to = CURRENT_DATE</code>.</p> </li> <li>Successivamente crea un nuovo snapshot (tipo_operazione_id = 2) con <code>valid_from = CURRENT_DATE</code> e <code>valid_to = NULL</code>, fino al prossimo cambiamento.</li> <li> <p>DELETE chiude e aggiunge uno snapshot di cancellazione (tipo_operazione_id = 3) con <code>valid_to = CURRENT_DATE</code>.</p> </li> <li> <p>Uso del JSONB</p> </li> <li> <p>Il campo <code>snapshot</code> replica tutti i campi di <code>config.comuni</code> in formato JSONB, garantendo flessibilit\u00e0 di evoluzione dello schema.</p> </li> <li>Vantaggio: facile query e estrazione dell\u2019intero stato storico del record.</li> <li> <p>Costo: overhead di spazio e possibili impatti sulle performance in lettura/scrittura.</p> </li> <li> <p>Change_type    Il campo <code>change_type</code> aiuta a classificare rapidamente la natura del record storico:</p> </li> <li> <p><code>A</code> = Active (predefinito per nuovi snapshot)</p> </li> <li><code>S</code> = Suppressed</li> <li><code>F</code> = Fused</li> <li><code>D</code> = Divided</li> </ol>"},{"location":"dbzero/storico/tabelle/comuni/#vantaggi-operativi","title":"\ud83d\udd27 Vantaggi Operativi","text":"<ul> <li> <p>Storico dettagliato: grazie a <code>snapshot</code> JSONB, ogni modifica pu\u00f2 essere ricostruita integralmente, indipendentemente dall\u2019aggiunta di nuovi campi in <code>config.comuni</code>.</p> </li> <li> <p>Tracciabilit\u00e0 degli eventi: i campi <code>tipo_operazione_id</code> e <code>change_type</code> forniscono metadati chiari su quando e come \u00e8 avvenuto il cambiamento.</p> </li> <li> <p>Allineamento dello schema: il meccanismo non richiede aggiornamenti manuali del modello storico a ogni modifica di <code>config.comuni</code>, perch\u00e9 il JSONB \u00e8 autonomo.</p> </li> <li> <p>Resilienza a errori: il trigger di storicizzazione utilizza blocchi <code>EXCEPTION</code> per loggare errori senza bloccare l\u2019operazione DML principale.</p> </li> </ul> <p>\ud83e\udde0 \u201cCon <code>storico.comuni</code>, Zero ERP unisce flessibilit\u00e0 e completezza: un audit trail granulare dei comuni, a costo di uno storage aggiuntivo, ma con performance e semplicit\u00e0 di gestione future-proof.\u201d</p>"},{"location":"dbzero/storico/tabelle/comuni/#tabella-comuni","title":"\ud83d\udcda Tabella <code>comuni</code>","text":""},{"location":"dbzero/storico/tabelle/comuni/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('storico.comuni_id_seq'::regclass) valid_from date NO CURRENT_DATE valid_to date YES data_insert timestamp without time zone YES CURRENT_TIMESTAMP user_insert character varying YES CURRENT_USER comune_id integer YES tx_id uuid YES snapshot jsonb YES tipo_operazione smallint YES change_type character NO 'A'::bpchar"},{"location":"dbzero/storico/tabelle/comuni/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_comuni_config comune_id"},{"location":"dbzero/storico/tabelle/comuni/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_comuni_comune_id <code>CREATE INDEX ix_comuni_comune_id ON storico.comuni USING btree (comune_id)</code> ix_storico_comuni_valid <code>CREATE INDEX ix_storico_comuni_valid ON storico.comuni USING btree (valid_from, valid_to)</code>"},{"location":"dbzero/storico/tabelle/comuni/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_comuni_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_comuni_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/storico/tabelle/dati_societari/","title":"Dati societari","text":""},{"location":"dbzero/storico/tabelle/dati_societari/#documentazione-concettuale-tabella-storicodati_societari","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.dati_societari</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>anagrafiche.dati_societari</li> </ul> <p>Approfondimento funzioni e trigger:</p> <ul> <li>anagrafiche.trgfn_dati_societari_ins_upd_check_tipo_soggetto</li> <li>script.trgfn_upd_dlt_storico_generic</li> <li>dbops.trgfn_tx_id_managed</li> </ul> <p>La tabella <code>storico.dati_societari</code> mantiene lo storico delle modifiche ai record di <code>anagrafiche.dati_societari</code>. Ogni riga rappresenta uno snapshot JSONB dello stato dei dati societari al momento di un\u2019operazione (inserimento, aggiornamento o cancellazione), arricchito con metadati di validit\u00e0 e audit.</p>"},{"location":"dbzero/storico/tabelle/dati_societari/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Versionamento completo   Acquisire snapshot di ogni record di <code>anagrafiche.dati_societari</code> per garantire la tracciabilit\u00e0 delle evoluzioni nel tempo.</li> <li>Audit e compliance   Conservare informazioni su chi (<code>user_insert</code>) e quando (<code>data_insert</code>) \u00e8 stata eseguita l\u2019operazione, nonch\u00e9 su quale transazione di business (<code>tx_id</code>).</li> <li>Intervalli di validit\u00e0   Definire periodi di efficacia di ciascuno snapshot con <code>valid_from</code> (inclusivo) e <code>valid_to</code> (esclusivo), facilitando interrogazioni temporali.</li> </ul>"},{"location":"dbzero/storico/tabelle/dati_societari/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>anagrafiche.dati_societari</code></p> </li> <li> <p>Il campo <code>dati_societari_id</code> \u00e8 una FK verso la tabella operativa.</p> </li> <li>ON UPDATE CASCADE: propaga eventuali modifiche alla PK.</li> <li>ON DELETE SET NULL: preserva lo snapshot in caso di cancellazione del record sorgente.</li> <li> <p>Triggers</p> </li> <li> <p><code>trg_Z90_storico_dati_societari_upd_dlt</code> deve seguire la convenzione di naming per essere eseguito per ultimo.</p> </li> <li>Il trigger richiama <code>script.trgfn_upd_dlt_storico_generic('dati_societari_id')</code>.</li> </ul>"},{"location":"dbzero/storico/tabelle/dati_societari/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Recupero storico   Possibilit\u00e0 di ripristinare lo stato di un record societario a qualsiasi data antecedente.</li> <li>Query temporali   Grazie a <code>valid_from</code>/<code>valid_to</code> \u00e8 semplice creare viste di tipo Slowly Changing Dimension per BI e reporting.</li> <li>Riduzione complessit\u00e0   L\u2019uso di JSONB elimina la necessit\u00e0 di colonne aggiuntive in tabella di storico quando cambia la struttura di <code>anagrafiche.dati_societari</code>.</li> <li>Audit dettaglio   Tracciamento preciso dei dati e delle operazioni per finalit\u00e0 di compliance e debug.</li> </ul> <p>\ud83e\udde0 \u201c<code>storico.dati_societari</code> \u00e8 il registro cronologico delle variazioni dei dati societari: snapshot JSON, audit completo e interrogazioni temporali in un\u2019unica tabella.\u201d</p>"},{"location":"dbzero/storico/tabelle/dati_societari/#tabella-dati_societari","title":"\ud83d\udcda Tabella <code>dati_societari</code>","text":""},{"location":"dbzero/storico/tabelle/dati_societari/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id bigint NO nextval('storico.dati_societari_id_seq'::regclass) valid_from timestamp with time zone NO now() valid_to timestamp with time zone YES change_type character YES 'A'::bpchar data_insert timestamp without time zone NO now() user_insert character varying NO CURRENT_USER dati_societari_id bigint NO snapshot jsonb NO tipo_operazione smallint YES tx_id uuid YES"},{"location":"dbzero/storico/tabelle/dati_societari/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_storico_dati_societari_anagrafiche_dati_societari dati_societari_id PRIMARY KEY pk_storico_dati_societari id"},{"location":"dbzero/storico/tabelle/dati_societari/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione pk_storico_dati_societari <code>CREATE UNIQUE INDEX pk_storico_dati_societari ON storico.dati_societari USING btree (id)</code>"},{"location":"dbzero/storico/tabelle/dati_societari/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_dati_societari_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_dati_societari_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/storico/tabelle/indirizzi/","title":"Indirizzi","text":""},{"location":"dbzero/storico/tabelle/indirizzi/#documentazione-concettuale-tabella-storicoindirizzi","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.indirizzi</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento Tabelle:  - anagrafiche.indirizzi </p> <p>Approfondimento funzioni e trigger:  - script.trgfn_upd_dlt_storico_generic - dbops.trgfn_tx_id_managed </p> <p>La tabella <code>storico.indirizzi</code> conserva lo storico delle variazioni della tabella <code>anagrafiche.indirizzi</code>. Ogni record \u00e8 uno snapshot (copia completa in formato JSONB) dello stato dell'indirizzo al momento di una determinata operazione (inserimento, aggiornamento, eliminazione).</p> <p>Il suo utilizzo \u00e8 cruciale per: - tracciare le modifiche agli indirizzi nel tempo, - supportare analisi retrospettive, - garantire la tracciabilit\u00e0 ai fini di audit e ricostruzione storica.</p>"},{"location":"dbzero/storico/tabelle/indirizzi/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Versionamento degli indirizzi   Ogni operazione su <code>anagrafiche.indirizzi</code> (INSERT, UPDATE, DELETE) genera un record nello storico che ne conserva lo stato precedente o iniziale.</p> </li> <li> <p>Audit e trasparenza   Mantiene informazioni su chi ha effettuato la modifica (<code>user_insert</code>) e quando (<code>data_insert</code>).</p> </li> <li> <p>Snapshot in formato JSONB   L\u2019intero record viene memorizzato nel campo <code>snapshot</code> per una ricostruzione fedele dello stato originale.</p> </li> </ul>"},{"location":"dbzero/storico/tabelle/indirizzi/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li><code>anagrafiche.indirizzi</code> </li> <li>Il campo <code>indirizzo_id</code> riferisce direttamente alla chiave primaria di <code>anagrafiche.indirizzi</code>.  </li> <li>Vincolo referenziale:  <ul> <li>ON UPDATE CASCADE (propaga eventuali modifiche alla PK di <code>anagrafiche.indirizzi</code>)  </li> <li>ON DELETE NO ACTION (non permette la cancellazione se esistono record storici collegati).  </li> </ul> </li> </ul>"},{"location":"dbzero/storico/tabelle/indirizzi/#campi-rilevanti","title":"\ud83c\udff7\ufe0f Campi Rilevanti","text":"<ul> <li><code>valid_from</code> \u2013 Data e ora di inizio validit\u00e0 (inclusiva).  </li> <li><code>valid_to</code> \u2013 Data e ora di fine validit\u00e0 (esclusiva), pu\u00f2 essere <code>NULL</code> se il record \u00e8 attualmente valido.  </li> <li><code>snapshot</code> \u2013 Contiene lo stato completo dell\u2019indirizzo (in formato JSONB).  </li> <li><code>tipo_operazione</code> \u2013 Indica la tipologia di evento:  </li> <li><code>1 = inserimento</code> </li> <li><code>2 = aggiornamento</code> </li> <li><code>3 = eliminazione</code> </li> <li><code>change_type</code> \u2013 Classifica il tipo di cambiamento:  </li> <li><code>A = Active</code> </li> <li><code>S = Suppressed</code> </li> <li><code>F = Fused</code> </li> <li><code>D = Divided</code> </li> <li><code>tx_id</code> \u2013 Identificativo di transazione, generato dal trigger <code>dbops.trgfn_tx_id_managed</code>.</li> </ul>"},{"location":"dbzero/storico/tabelle/indirizzi/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Ricostruzione temporale   Permette di risalire allo stato di un indirizzo in una qualsiasi data passata, utile per audit, fatturazioni retroattive o analisi storiche.</p> </li> <li> <p>Riduzione della ridondanza   Lo snapshot JSONB contiene tutte le informazioni necessarie, senza dover duplicare intere tabelle storiche parallele.</p> </li> <li> <p>Supporto a data analytics   La combinazione di <code>valid_from</code> e <code>valid_to</code> permette di creare viste temporali e ricostruzioni a intervalli specifici.</p> </li> <li> <p>Integrazione con processi di sincronizzazione   Il campo <code>change_type</code> consente di distinguere il tipo di modifica, utile per sistemi di replica o data warehouse.</p> </li> </ul> <p>\ud83e\udde0 \u201c<code>storico.indirizzi</code> \u00e8 la scatola nera degli indirizzi: cattura ogni cambiamento per garantire memoria storica, auditabilit\u00e0 e coerenza temporale nel tempo.\u201d</p>"},{"location":"dbzero/storico/tabelle/indirizzi/#tabella-indirizzi","title":"\ud83d\udcda Tabella <code>indirizzi</code>","text":""},{"location":"dbzero/storico/tabelle/indirizzi/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('storico.indirizzi_id_seq'::regclass) valid_from timestamp with time zone NO CURRENT_DATE valid_to timestamp with time zone YES data_insert timestamp with time zone YES CURRENT_TIMESTAMP user_insert character varying YES CURRENT_USER indirizzo_id integer YES snapshot jsonb NO tipo_operazione smallint NO tx_id uuid YES change_type character NO"},{"location":"dbzero/storico/tabelle/indirizzi/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_storico_indirizzi_anagrafiche_indirizzi indirizzo_id PRIMARY KEY pk_indirizzi id"},{"location":"dbzero/storico/tabelle/indirizzi/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_indirizzi_indirizzo_id <code>CREATE INDEX ix_indirizzi_indirizzo_id ON storico.indirizzi USING btree (indirizzo_id)</code> pk_indirizzi <code>CREATE UNIQUE INDEX pk_indirizzi ON storico.indirizzi USING btree (id)</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/storico/tabelle/indirizzi_dettaglio/","title":"Indirizzi dettaglio","text":""},{"location":"dbzero/storico/tabelle/indirizzi_dettaglio/#documentazione-concettuale-tabella-storicoindirizzi_dettaglio","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.indirizzi_dettaglio</code>","text":"<p>\ud83d\udc40 Vedi anche </p> <p>Approfondimento tabelle:  - anagrafiche.indirizzi_dettaglio </p> <p>Approfondimento funzioni:  - script.trgfn_upd_dlt_storico_generic </p>"},{"location":"dbzero/storico/tabelle/indirizzi_dettaglio/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Audit Trail: tracciare ogni modifica ai dettagli degli indirizzi consentendo la ricostruzione dello stato storico.</li> <li>Versioning temporale: supportare query basate su periodi di validit\u00e0 tramite <code>valid_from</code> e <code>valid_to</code>.</li> <li>Schema futuro\u2011proof: salvare l\u2019intero stato del record in JSONB senza richiedere aggiornamenti di schema a ogni nuova colonna.</li> </ul>"},{"location":"dbzero/storico/tabelle/indirizzi_dettaglio/#struttura-standard-delle-tabelle-di-storico","title":"\ud83d\udee0\ufe0f Struttura Standard delle Tabelle di Storico","text":"<p>Tutte le tabelle di storico in Zero ERP, incluso <code>storico.indirizzi_dettaglio</code>, adottano uno schema di colonne standard:</p> <ul> <li><code>id</code></li> <li><code>valid_from</code> / <code>valid_to</code></li> <li><code>change_type</code></li> <li><code>data_insert</code></li> <li><code>user_insert</code></li> <li><code>&lt;entit\u00e0&gt;_id</code> (foreign key verso la tabella originale)</li> <li><code>snapshot</code> (JSONB dello stato del record)</li> <li><code>tipo_operazione</code></li> <li><code>tx_id</code></li> </ul>"},{"location":"dbzero/storico/tabelle/indirizzi_dettaglio/#meccanismo-di-popolamento","title":"\ud83d\udd04 Meccanismo di Popolamento","text":"<p>La popolazione degli snapshot avviene tramite la trigger function generica <code>script.trgfn_upd_dlt_storico_generic()</code> applicata sulla tabella sorgente, che:</p> <ol> <li>Chiude eventuali snapshot precedenti (<code>valid_to = CURRENT_DATE</code>).</li> <li>Inserisce uno snapshot iniziale (se non esiste) con <code>valid_from</code> impostato a una data fissa (1950-01-01).</li> <li>Crea sempre uno snapshot finale con <code>valid_from = CURRENT_DATE</code> e <code>valid_to = NULL</code>, serializzando lo stato tramite <code>to_jsonb(NEW/OLD)</code>.</li> <li>Popola <code>tx_id</code> tramite <code>dbops.trgfn_tx_id_managed()</code> per contestualizzare le transazioni.</li> </ol>"},{"location":"dbzero/storico/tabelle/indirizzi_dettaglio/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Storicizzazione automatica: nessuna logica custom su ogni tabella; il pattern JSONB consente evoluzioni senza migrazione di schema.</li> <li>Coerenza transazionale: associando <code>tx_id</code>, si raggruppano snapshot multipli nella stessa operazione di business.</li> <li>Query efficienti: reporting storico semplificato tramite campi temporali e codici operazione.</li> </ul> <p>\ud83e\udde0 \u201c<code>storico.indirizzi_dettaglio</code> segue lo standard storico di Zero ERP: semplici regole per uno storico completo e affidabile, con flessibilit\u00e0 JSONB e robustezza transazionale.\u201d</p>"},{"location":"dbzero/storico/tabelle/indirizzi_dettaglio/#tabella-indirizzi_dettaglio","title":"\ud83d\udcda Tabella <code>indirizzi_dettaglio</code>","text":""},{"location":"dbzero/storico/tabelle/indirizzi_dettaglio/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id bigint NO nextval('storico.indirizzi_dettaglio_id_seq'::regclass) valid_from date NO CURRENT_DATE valid_to date YES change_type character YES 'A'::bpchar data_insert timestamp without time zone NO now() user_insert character varying NO CURRENT_USER indirizzo_dettaglio_id integer NO snapshot jsonb NO tipo_operazione smallint YES tx_id uuid YES"},{"location":"dbzero/storico/tabelle/indirizzi_dettaglio/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_storico_indirizzi_dettaglio_anagrafiche_indirizzi_dettaglio indirizzo_dettaglio_id PRIMARY KEY pk_indirizzi_dettaglio id"},{"location":"dbzero/storico/tabelle/indirizzi_dettaglio/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_indirizzi_dettaglio_indirizzo_dettaglio_id <code>CREATE INDEX ix_indirizzi_dettaglio_indirizzo_dettaglio_id ON storico.indirizzi_dettaglio USING btree (indirizzo_dettaglio_id)</code> pk_indirizzi_dettaglio <code>CREATE UNIQUE INDEX pk_indirizzi_dettaglio ON storico.indirizzi_dettaglio USING btree (id)</code>"},{"location":"dbzero/storico/tabelle/indirizzi_dettaglio/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_indirizzi_dettaglio_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_indirizzi_dettaglio_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/storico/tabelle/parameter_overrides/","title":"Parameter overrides","text":""},{"location":"dbzero/storico/tabelle/parameter_overrides/#documentazione-concettuale-tabella-storicoparameter_overrides","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.parameter_overrides</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>config.parameter_overrides</li> <li>storico.parameters</li> </ul> <p>Approfondimento funzioni e trigger:</p> <ul> <li>script.trgfn_upd_dlt_storico_generic</li> <li>dbops.trgfn_tx_id_managed</li> </ul> <p>La tabella <code>storico.parameter_overrides</code> memorizza gli snapshot delle modifiche operazioni (INSERT, UPDATE, DELETE) sulla tabella operativa <code>config.parameter_overrides</code>. Ogni riga rappresenta lo stato completo di un record di override in un preciso istante, sfruttando il campo JSONB per catturare dinamicamente l\u2019intero contenuto.</p>"},{"location":"dbzero/storico/tabelle/parameter_overrides/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Versionamento degli override   Catturare ogni modifica ai record di <code>config.parameter_overrides</code>, consentendo di risalire allo stato precedente o iniziale di un override.</li> <li>Audit e compliance   Archivio immutabile di tutte le operazioni, con metadati di utente e timestamp, per garantire tracciabilit\u00e0 e analisi storiche.</li> </ul>"},{"location":"dbzero/storico/tabelle/parameter_overrides/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>config.parameter_overrides</code></p> </li> <li> <p><code>parameter_override_id</code> \u00e8 FK verso <code>config.parameter_overrides(id)</code>.</p> </li> <li>ON UPDATE CASCADE / ON DELETE SET NULL: mantiene la coerenza se la tabella operativa cambia o viene eliminata.</li> <li> <p>Triggers</p> </li> <li> <p><code>trg_parameter_overrides_ins_upd_gen_tx_id</code>: assegna <code>tx_id</code> automatico su INSERT/UPDATE tramite <code>dbops.trgfn_tx_id_managed()</code>.</p> </li> </ul>"},{"location":"dbzero/storico/tabelle/parameter_overrides/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Cattura automatica delle modifiche   Lo snapshot JSONB elimina la necessit\u00e0 di mantenere colonne di audit per ciascun campo modificato.</li> <li>Evoluzione dello schema trasparente   Aggiunta o rimozione di colonne in <code>config.parameter_overrides</code> non richiede modifiche a <code>storico.parameter_overrides</code>.</li> <li>Consistenza e performance   FK e indici BTree su <code>parameter_override_id</code> assicurano integrit\u00e0 referenziale e query efficienti.</li> <li>Integrazione unificata   Utilizzo della stessa funzione generic per storicizzazione (<code>script.trgfn_upd_dlt_storico_generic</code>) riduce la complessit\u00e0 e mantiene lo stesso pattern per tutte le entit\u00e0.</li> </ul> <p>\ud83e\udde0 \u201c<code>storico.parameter_overrides</code> \u00e8 l\u2019unico punto di verit\u00e0 per tutte le variazioni sugli override di configurazione: snapshot JSONB, auditing completo e flessibilit\u00e0 di schema in un unico modello.\u201d</p>"},{"location":"dbzero/storico/tabelle/parameter_overrides/#tabella-parameter_overrides","title":"\ud83d\udcda Tabella <code>parameter_overrides</code>","text":""},{"location":"dbzero/storico/tabelle/parameter_overrides/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id bigint NO nextval('storico.parameter_overrides_id_seq'::regclass) valid_from timestamp with time zone NO now() valid_to timestamp with time zone YES change_type character YES 'A'::bpchar data_insert timestamp without time zone NO now() user_insert character varying NO CURRENT_USER parameter_override_id bigint NO snapshot jsonb NO tipo_operazione smallint YES tx_id uuid YES"},{"location":"dbzero/storico/tabelle/parameter_overrides/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_storico_parameter_overrides_config_parameter_overrides parameter_override_id PRIMARY KEY pk_storico_parameter_overrides id"},{"location":"dbzero/storico/tabelle/parameter_overrides/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_storico_parameter_overrides_parameter_override_id <code>CREATE INDEX ix_storico_parameter_overrides_parameter_override_id ON storico.parameter_overrides USING btree (parameter_override_id)</code> pk_storico_parameter_overrides <code>CREATE UNIQUE INDEX pk_storico_parameter_overrides ON storico.parameter_overrides USING btree (id)</code>"},{"location":"dbzero/storico/tabelle/parameter_overrides/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_parameter_overrides_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_parameter_overrides_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/storico/tabelle/parameters/","title":"Parameters","text":""},{"location":"dbzero/storico/tabelle/parameters/#documentazione-concettuale-tabella-storicoparameters","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.parameters</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>config.parameters</li> <li>storico.parameter_overrides</li> </ul> <p>Approfondimento funzioni e trigger:</p> <ul> <li>script.trgfn_upd_dlt_storico_generic</li> <li>dbops.trgfn_tx_id_managed</li> </ul> <p>La tabella <code>storico.parameters</code> conserva gli snapshot delle modifiche sulla tabella operativa <code>config.parameters</code>. Ogni record storico \u00e8 un JSONB che cattura lo stato completo del parametro, con informazioni di validit\u00e0 e metadati di audit.</p>"},{"location":"dbzero/storico/tabelle/parameters/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Versionamento dei parametri   Registrare ogni modifica (INSERT, UPDATE, DELETE) sui parametri definiti in <code>config.parameters</code>, abilitando rollback e analisi storica.</li> <li>Audit e compliance   Documentare chi (<code>user_insert</code>) e quando (<code>data_insert</code>) hanno effettuato le modifiche, mantenendo un registro immutabile.</li> </ul>"},{"location":"dbzero/storico/tabelle/parameters/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>config.parameters</code></p> </li> <li> <p><code>parameter_id</code> \u00e8 FK verso <code>config.parameters(id)</code>.</p> </li> <li>ON UPDATE CASCADE, ON DELETE SET NULL: mantiene integrit\u00e0 referenziale e non perde lo snapshot in caso di cancellazione.</li> <li> <p>Triggers</p> </li> <li> <p><code>trg_parameters_ins_upd_gen_tx_id</code>: assegna <code>tx_id</code> tramite <code>dbops.trgfn_tx_id_managed</code> su INSERT/UPDATE.</p> </li> </ul>"},{"location":"dbzero/storico/tabelle/parameters/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Snapshot automatici   Non serve gestire manualmente ogni colonna di audit: il JSONB cattura l\u2019intero record.</li> <li>Schema evolutivo   Nuove colonne in <code>config.parameters</code> non richiedono modifiche in <code>storico.parameters</code>.</li> <li>Consistenza e performance   FK e indici su <code>parameter_id</code> garantiscono operazioni sicure e veloci.</li> <li>Uniformit\u00e0 di processo   Usa la funzione <code>script.trgfn_upd_dlt_storico_generic</code> come per tutte le altre entit\u00e0 del progetto, semplificando la manutenzione.</li> </ul> <p>\ud83e\udde0 \u201c<code>storico.parameters</code> \u00e8 la fonte unica per tracciare l\u2019evoluzione dei parametri di sistema: snapshot JSON, auditing completo e integrazione con il modello di storicizzazione unificato di Zero\u00a0ERP.\u201d</p>"},{"location":"dbzero/storico/tabelle/parameters/#tabella-parameters","title":"\ud83d\udcda Tabella <code>parameters</code>","text":""},{"location":"dbzero/storico/tabelle/parameters/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id bigint NO nextval('storico.parameters_id_seq'::regclass) valid_from timestamp with time zone NO now() valid_to timestamp with time zone YES change_type character YES 'A'::bpchar data_insert timestamp without time zone NO now() user_insert character varying NO CURRENT_USER parameter_id bigint NO snapshot jsonb NO tipo_operazione smallint YES tx_id uuid YES"},{"location":"dbzero/storico/tabelle/parameters/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_storico_parameters_config_parameters parameter_id PRIMARY KEY pk_storico_parameters id"},{"location":"dbzero/storico/tabelle/parameters/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_storico_parameters_param_id <code>CREATE INDEX ix_storico_parameters_param_id ON storico.parameters USING btree (parameter_id)</code> pk_storico_parameters <code>CREATE UNIQUE INDEX pk_storico_parameters ON storico.parameters USING btree (id)</code>"},{"location":"dbzero/storico/tabelle/parameters/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_parameters_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_parameters_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/storico/tabelle/soggetti/","title":"Soggetti","text":""},{"location":"dbzero/storico/tabelle/soggetti/#documentazione-concettuale-tabella-storicosoggetti","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.soggetti</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:</p> <ul> <li>anagrafiche.soggetti</li> </ul> <p>Approfondimento funzioni e trigger:</p> <ul> <li>dbops.trgfn_tx_id_managed</li> <li>script.trgfn_upd_dlt_storico_generic</li> </ul> <p>La tabella <code>storico.soggetti</code> conserva lo storico delle operazioni applicate ai record di <code>anagrafiche.soggetti</code>. Ciascun record \u00e8 uno snapshot JSONB dello stato del soggetto in corrispondenza di un evento di addizione, aggiornamento o cancellazione.</p> <p>Questo permette di:</p> <ul> <li>tracciare l\u2019evoluzione dei dati nel tempo</li> <li>garantire auditability e compliance</li> <li>ripristinare o analizzare lo storico di un soggetto in qualsiasi momento</li> </ul>"},{"location":"dbzero/storico/tabelle/soggetti/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li> <p>Versionamento dei soggetti   Ogni modifica (INSERT, UPDATE, DELETE) su <code>anagrafiche.soggetti</code> genera un record in storico con lo stato precedente, il tipo di operazione e i metadati di audit.</p> </li> <li> <p>Tracciabilit\u00e0 e audit   I campi <code>data_insert</code>, <code>user_insert</code> e <code>tx_id</code> permettono di sapere quando e da chi \u00e8 stata effettuata l\u2019operazione, e di correlare pi\u00f9 cambiamenti in un\u2019unica transazione.</p> </li> </ul>"},{"location":"dbzero/storico/tabelle/soggetti/#collegamenti-con-altre-tabelle","title":"\ud83d\udd17 Collegamenti con Altre Tabelle","text":"<ul> <li> <p><code>anagrafiche.soggetti</code></p> </li> <li> <p><code>soggetto_id</code> fa riferimento alla chiave primaria di <code>anagrafiche.soggetti</code>.</p> </li> <li> <p>ON UPDATE CASCADE, ON DELETE SET NULL per mantenere consistenza e non perdere record storico in caso di cancellazione di <code>anagrafiche.soggetti</code>.</p> </li> <li> <p>Triggers</p> </li> <li> <p><code>trg_soggetti_ins_upd_gen_tx_id</code>: assegna <code>tx_id</code> su insert/update tramite <code>dbops.trgfn_tx_id_managed()</code>.</p> </li> </ul>"},{"location":"dbzero/storico/tabelle/soggetti/#campi-rilevanti","title":"\ud83c\udff7\ufe0f Campi Rilevanti","text":"Campo Descrizione <code>id</code> PK BIGINT, sequence-based (<code>storico.soggetti_id_seq</code>) <code>valid_from</code> Data/ora inizio validit\u00e0 (inclusiva) <code>valid_to</code> Data/ora fine validit\u00e0 (esclusiva), <code>NULL</code> se ancora valido <code>change_type</code> <code>A</code>=Add, <code>U</code>=Update, <code>D</code>=Delete <code>snapshot</code> Stato completo del soggetto (JSONB) <code>tipo_operazione</code> Codice dell\u2019operazione (INSERT=1, UPDATE=2, DELETE=3) <code>tx_id</code> UUID di transazione generato dal trigger <code>data_insert</code> Timestamp di inserimento del record storico <code>user_insert</code> Utente che ha creato il record storico"},{"location":"dbzero/storico/tabelle/soggetti/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li> <p>Analisi storica   Possibilit\u00e0 di ricostruire flussi di modifica, comparare versioni e rispondere a esigenze di auditing e compliance.</p> </li> <li> <p>Semplificazione del disaster recovery   Grazie agli snapshot JSONB, non servono tabelle storiche separate per ogni colonna, riducendo complessit\u00e0 di backup e restore.</p> </li> <li> <p>Integrazione con data warehousing <code>valid_from</code> e <code>valid_to</code> permettono di esporre facilmente i dati temporali in viste dimensionali o in processi ETL.</p> </li> </ul> <p>\ud83e\udde0 \u201c<code>storico.soggetti</code> \u00e8 il registro cronologico di ogni cambiamento ai soggetti: auditing nativo, versioning JSON ed eliminazione di silos storici.\u201d</p>"},{"location":"dbzero/storico/tabelle/soggetti/#tabella-soggetti","title":"\ud83d\udcda Tabella <code>soggetti</code>","text":""},{"location":"dbzero/storico/tabelle/soggetti/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id bigint NO nextval('storico.soggetti_id_seq'::regclass) valid_from timestamp with time zone NO now() valid_to timestamp with time zone YES change_type character YES 'A'::bpchar data_insert timestamp without time zone NO now() user_insert character varying NO CURRENT_USER soggetto_id uuid NO snapshot jsonb NO tipo_operazione smallint YES tx_id uuid YES"},{"location":"dbzero/storico/tabelle/soggetti/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_storico_soggetti_anagrafiche_soggetti soggetto_id PRIMARY KEY pk_storico_soggetti id"},{"location":"dbzero/storico/tabelle/soggetti/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_soggetti_soggetto_id <code>CREATE INDEX ix_soggetti_soggetto_id ON storico.soggetti USING btree (soggetto_id)</code> pk_storico_soggetti <code>CREATE UNIQUE INDEX pk_storico_soggetti ON storico.soggetti USING btree (id)</code>"},{"location":"dbzero/storico/tabelle/soggetti/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_soggetti_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_soggetti_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/storico/tabelle/stradario/","title":"Stradario","text":""},{"location":"dbzero/storico/tabelle/stradario/#documentazione-concettuale-tabella-storicostradario","title":"\ud83d\udcd8 Documentazione Concettuale \u2013 Tabella <code>storico.stradario</code>","text":"<p>\ud83d\udc40 Vedi anche</p> <p>Approfondimeto Tabelle:  - config.stradario </p> <p>Approfondimeto Funzioni:  - config.trgfn_stradario_upd_dlt_storico_stradario  - script.fn_log_and_raise_error </p> <p>La tabella <code>storico.stradario</code> archivia la cronologia delle modifiche alle vie registrate in <code>config.stradario</code>, garantendo la tracciabilit\u00e0 di tutte le operazioni di update e delete.</p>"},{"location":"dbzero/storico/tabelle/stradario/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Audit Trail: Conservare una traccia completa di ogni modifica o cancellazione effettuata su <code>config.stradario</code>.</li> <li>Versioning dei record: Permettere la ricostruzione dello stato di una via in un dato momento, grazie ai campi <code>valid_from</code> e <code>valid_to</code>.</li> <li>Riproduzione dello schema: Utilizzare il campo <code>snapshot</code> (JSONB) per salvare tutti i dettagli di <code>config.stradario</code> al momento dell\u2019operazione, anche a fronte di evoluzioni dello schema.</li> <li>Classificazione delle operazioni: Impiegare <code>tipo_operazione_id</code> (1=insert iniziale, 2=update, 3=delete) e <code>change_type</code> (A=Active, S=Suppressed, F=Fused, D=Divided) per distinguere rapidamente la natura del cambiamento.</li> </ul>"},{"location":"dbzero/storico/tabelle/stradario/#meccanismo-di-popolamento","title":"\ud83d\udd04 Meccanismo di Popolamento","text":"<ol> <li>Trigger di storicizzazione    La trigger function <code>config.trgfn_stradario_upd_dlt_storico_stradario()</code> si attiva BEFORE UPDATE OR DELETE su <code>config.stradario</code> quando il flag <code>storicizza = TRUE</code>.</li> <li>Replica dello stato iniziale    Al primo update o delete, viene creato automaticamente uno snapshot iniziale (tipo_operazione_id = 1) se non esisteva un record storico precedente.</li> <li> <p>Chiusura e creazione nuovi snapshot</p> </li> <li> <p>UPDATE: chiude il record storico aperto impostando <code>valid_to = CURRENT_DATE</code>, poi inserisce un snapshot aggiornato (tipo_operazione_id = 2) con <code>valid_from = CURRENT_DATE</code> e <code>valid_to = NULL</code>.</p> </li> <li>DELETE: chiude eventuale snapshot aperto e inserisce un snapshot finale (tipo_operazione_id = 3) con <code>valid_from = valid_to = CURRENT_DATE</code>.</li> <li> <p>Campo <code>snapshot</code></p> </li> <li> <p>Memorizza in JSONB tutti i campi di <code>config.stradario</code> al momento dell\u2019operazione, inclusi <code>descrizione_via</code>, riferimenti a <code>comune_id</code>, <code>codice_postale_id</code> e altri attributi.</p> </li> <li>Vantaggio: garantisce flessibilit\u00e0 e future-proof rispetto a modifiche di schema.</li> <li>Costo: maggiore occupazione di spazio e impatto sulle performance di I/O.</li> </ol>"},{"location":"dbzero/storico/tabelle/stradario/#esempio-di-trigger-ddl","title":"\ud83d\udd16 Esempio di Trigger DDL","text":"<pre><code>DROP TRIGGER IF EXISTS trg_stradario_upd_dlt_storico_stradario\n  ON config.stradario;\n\nCREATE TRIGGER trg_stradario_upd_dlt_storico_stradario\n  BEFORE UPDATE OR DELETE\n  ON config.stradario\n  FOR EACH ROW\n  WHEN (NEW.storicizza = TRUE OR OLD.storicizza = TRUE)\n  EXECUTE FUNCTION config.trgfn_stradario_upd_dlt_storico_stradario();\n</code></pre>"},{"location":"dbzero/storico/tabelle/stradario/#vantaggi-operativi","title":"\ud83d\udca1 Vantaggi Operativi","text":"<ul> <li>Storico granulare: ogni modifica \u00e8 catturata integralmente grazie al JSONB <code>snapshot</code>, senza richiedere sincronizzazione manuale dello schema.</li> <li>Filtro temporale: i campi <code>valid_from</code>/<code>valid_to</code> consentono interrogazioni su periodi e versioni specifiche.</li> <li>Analisi semplificata: <code>tipo_operazione_id</code> e <code>change_type</code> agevolano reportistica e individuazione rapida degli eventi.</li> <li>Resilienza: in caso di errori di storicizzazione, il trigger logga l\u2019eccezione senza bloccare l\u2019operazione principale.</li> </ul> <p>\ud83e\udde0 \u201cCon <code>storico.stradario</code>, Zero ERP offre un audit trail completo per le vie comunali, con flessibilit\u00e0 JSONB e controllo granulare tramite flag di storicizzazione.\u201d</p>"},{"location":"dbzero/storico/tabelle/stradario/#tabella-stradario","title":"\ud83d\udcda Tabella <code>stradario</code>","text":""},{"location":"dbzero/storico/tabelle/stradario/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('storico.stradario_id_seq'::regclass) valid_from date NO CURRENT_DATE valid_to date YES change_type character YES 'A'::bpchar data_insert timestamp without time zone YES CURRENT_TIMESTAMP user_insert character varying YES CURRENT_USER stradario_id integer YES snapshot jsonb YES tipo_operazione smallint YES tx_id uuid YES"},{"location":"dbzero/storico/tabelle/stradario/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_stradario_config stradario_id, via_id_nuovo PRIMARY KEY pk_stradario id"},{"location":"dbzero/storico/tabelle/stradario/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_storico_stradario_stradario_id <code>CREATE INDEX ix_storico_stradario_stradario_id ON storico.stradario USING btree (stradario_id)</code> ix_storico_stradario_valid_periodo <code>CREATE INDEX ix_storico_stradario_valid_periodo ON storico.stradario USING btree (valid_from, valid_to)</code> pk_stradario <code>CREATE UNIQUE INDEX pk_stradario ON storico.stradario USING btree (id)</code>"},{"location":"dbzero/storico/tabelle/stradario/#trigger","title":"\ud83d\udea8 Trigger","text":"Nome Timing Evento Azione trg_stradario_ins_upd_gen_tx_id BEFORE INSERT <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> trg_stradario_ins_upd_gen_tx_id BEFORE UPDATE <code>EXECUTE FUNCTION dbops.trgfn_tx_id_managed()</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/storico/tabelle/stradario_trasformazioni/","title":"\ud83d\udcda Tabella <code>stradario_trasformazioni</code>","text":""},{"location":"dbzero/storico/tabelle/stradario_trasformazioni/#campi-principali","title":"\ud83d\uddc2\ufe0f Campi principali","text":"Colonna Tipo Nullable Default id integer NO nextval('storico.stradario_trasformazioni_id_seq'::regclass) via_id_orig integer NO via_id_nuovo integer NO tipo_evento character NO data_evento date NO note text YES data_insert timestamp without time zone YES CURRENT_TIMESTAMP user_insert character varying YES CURRENT_USER"},{"location":"dbzero/storico/tabelle/stradario_trasformazioni/#vincoli","title":"\ud83d\udd12 Vincoli","text":"Tipo Nome Colonne FOREIGN KEY fk_stradario_config stradario_id, via_id_nuovo FOREIGN KEY fk_stradario_via_orig_config via_id_orig PRIMARY KEY pk_stradario_trasformazioni id"},{"location":"dbzero/storico/tabelle/stradario_trasformazioni/#indici","title":"\ud83d\udcd1 Indici","text":"Nome Definizione ix_stradario_trasformazioni_via_id_nuovo <code>CREATE INDEX ix_stradario_trasformazioni_via_id_nuovo ON storico.stradario_trasformazioni USING btree (via_id_nuovo)</code> ix_stradario_trasformazioni_via_id_orig <code>CREATE INDEX ix_stradario_trasformazioni_via_id_orig ON storico.stradario_trasformazioni USING btree (via_id_orig)</code> pk_stradario_trasformazioni <code>CREATE UNIQUE INDEX pk_stradario_trasformazioni ON storico.stradario_trasformazioni USING btree (id)</code> --- <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dbzero/tools/gen_db_docs/","title":"Generatore Documentazione","text":""},{"location":"dbzero/tools/gen_db_docs/#documentazione-script-gen_db_docspy","title":"\ud83d\udcd8 Documentazione \u2013 Script <code>gen_db_docs.py</code>","text":"<p>\ud83d\udd17 Posizione consigliata</p> <ul> <li><code>docs/it/dbzero/tools/gen_db_docs.md</code></li> </ul> <p>Lo script <code>gen_db_docs.py</code> automatizza la creazione di documentazione Markdown per il vostro database PostgreSQL, generando file per tabelle e funzioni all\u2019interno delle cartelle <code>docs/it/dbzero/&lt;schema&gt;/tabelle</code> e <code>docs/it/dbzero/&lt;schema&gt;/funzioni</code>. Permette inoltre di includere documentazione manuale preesistente, mantenendo un punto di dettaglio customizzabile in <code>.../manual</code>.</p>"},{"location":"dbzero/tools/gen_db_docs/#obiettivo","title":"\ud83c\udfaf Obiettivo","text":"<ol> <li> <p>Esportare struttura e metadati</p> </li> <li> <p>Colonne, tipi, default, nullable</p> </li> <li>Vincoli (PK, FK, UNIQUE, CHECK)</li> <li>Indici (btree, gist, ecc.)</li> <li>Trigger associati alle tabelle</li> <li> <p>Generare file di documentazione per le funzioni</p> </li> <li> <p>Firma SQL e definizione completa</p> </li> <li> <p>Mantenere integrazione manuale</p> </li> <li> <p>Se esistono file in <code>docs/it/dbzero/&lt;schema&gt;/manual</code>, li include all\u2019inizio del documento</p> </li> <li> <p>Produrre un indice</p> </li> <li> <p>Crea <code>index.md</code> per ogni schema elencando tabelle, funzioni e documentazione manuale</p> </li> </ol>"},{"location":"dbzero/tools/gen_db_docs/#prerequisiti","title":"\ud83d\udd0d Prerequisiti","text":"<ul> <li>Ambiente Python 3 con i pacchetti:</li> </ul> <p><pre><code>pip install python-dotenv psycopg2-binary\n</code></pre> * File <code>.env</code>:</p> <ul> <li><code>internal.env</code> (override) e <code>git.env</code> (fallback) contenenti le variabili di connessione</li> <li> <p>Variabili d\u2019ambiente:</p> </li> <li> <p><code>DATABASE_DSN</code> oppure <code>DB_HOST</code>, <code>DB_PORT</code>, <code>DB_NAME</code>, <code>POSTGRESQL_USER</code>, <code>POSTGRESQL_PWD</code></p> </li> <li> <p><code>DB_DOC_SCHEMAS</code>: elenco separato da virgole degli schemi da documentare, es.:</p> <pre><code>DB_DOC_SCHEMAS=public,anagrafiche,config,script\n</code></pre> </li> </ul>"},{"location":"dbzero/tools/gen_db_docs/#modalita-di-utilizzo","title":"\u2699\ufe0f Modalit\u00e0 di Utilizzo","text":"<ol> <li>Posizionarsi nella root del progetto (il parent diretto di <code>gen_db_docs.py</code>).</li> <li>Eseguire lo script:</li> </ol> <p><pre><code>python3 tools/gen_db_docs.py\n</code></pre> 3. Verificare l\u2019output in:</p> <p><pre><code>docs/it/dbzero/&lt;schema&gt;/tabelle/*.md\ndocs/it/dbzero/&lt;schema&gt;/funzioni/*.md\n</code></pre> 4. Integrare documentazione manuale aggiungendo file Markdown nella cartella:</p> <pre><code>docs/it/dbzero/&lt;schema&gt;/manual/\n</code></pre> <p>che verranno automaticamente inclusi con <code>include-markdown</code>.</p>"},{"location":"dbzero/tools/gen_db_docs/#struttura-dello-script","title":"\ud83d\udd17 Struttura dello Script","text":"<ul> <li> <p>Caricamento configurazione</p> </li> <li> <p>Utilizza <code>dotenv</code> per leggere <code>internal.env</code> e <code>git.env</code>.</p> </li> <li>Costruisce <code>DB_DSN</code> a partire da <code>DATABASE_DSN</code> o da variabili host/port/utente.</li> <li> <p>Directory di output</p> </li> <li> <p><code>docs/it/dbzero</code> + <code>&lt;schema&gt;</code> + sottocartelle <code>tabelle</code>, <code>funzioni</code>, <code>manual</code>.</p> </li> <li> <p>Generazione Markdown</p> </li> <li> <p><code>gen_table_md()</code>: legge <code>information_schema</code> e <code>pg_*</code> per tabelle.</p> </li> <li><code>gen_function_md()</code>: legge <code>pg_proc</code> per definizioni funzione.</li> <li> <p>Aggiunge icone:</p> <ul> <li>\ud83d\uddc2\ufe0f Campi principali</li> <li>\ud83d\udd12 Vincoli</li> <li>\ud83d\udcd1 Indici</li> <li>\ud83d\udea8 Trigger</li> <li>\u2699\ufe0f Funzione</li> <li>Creazione indice</li> </ul> </li> <li> <p><code>index.md</code> elenca file <code>.md</code> suddivisi in Tabelle, Funzioni e Documentazione Manuale.</p> </li> </ul>"},{"location":"dbzero/tools/gen_db_docs/#vantaggi","title":"\ud83d\udca1 Vantaggi","text":"<ul> <li>Automazione: riduce drasticamente il lavoro manuale di documentazione.</li> <li>Consistenza: garantisce stesse sezioni e formato uniforme.</li> <li>Estendibilit\u00e0: aggiungi manualmente dettagli nei file <code>manual/</code> senza toccare lo script.</li> <li>Manutenzione: aggiorna la documentazione semplicemente rieseguendo lo script dopo modifiche DB.</li> </ul>"},{"location":"dbzero/tools/gen_db_docs/#un-unico-script-per-trasformare-il-vostro-schema-postgresql-in-una-completa-documentazione-markdown-integrabile-con-note-manuali-e-sempre-aggiornabile","title":"&gt; \ud83e\udde0 \u201cUn unico script per trasformare il vostro schema PostgreSQL in una completa documentazione Markdown, integrabile con note manuali e sempre aggiornabile.\u201d","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"dev/api/","title":"API","text":""},{"location":"dev/api/#api","title":"API","text":""},{"location":"dev/api/#da-fare","title":"Da fare","text":"<p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"documentazione/Idee_base/Modello_dati_eseguito/","title":"Documentazione Modello Dati Zero ERP","text":"<p>Questa guida descrive in dettaglio le entit\u00e0 e le logiche implementate per:</p> <ol> <li>Anagrafica Soggetti (<code>soggetti</code> e <code>soggetti_ruoli</code>)</li> <li>Gestori (<code>gestori</code> e <code>gestori_utilities_ruoli</code>)</li> <li>Contatti (<code>contatti</code> e <code>tipi_contatti</code>)</li> </ol> <p>Ogni sezione include: - Struttura tabelle (DDL) - Chiavi primarie e relazioni (FK) - Constraint e indici di unicit\u00e0 - Trigger e funzioni di supporto - Scenari d\u2019uso e regole di business</p>"},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#1-anagrafica-soggetti","title":"1. Anagrafica Soggetti","text":""},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#11-tabella-anagrafichesoggetti","title":"1.1 Tabella <code>anagrafiche.soggetti</code>","text":"<p><pre><code>CREATE TABLE anagrafiche.soggetti (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  codice TEXT,\n  ragione_sociale TEXT,\n  cognome TEXT,\n  nome TEXT,\n  tipo_soggetto CHAR(1) NOT NULL DEFAULT 'F',\n  sesso CHAR(1) DEFAULT 'M',\n  stato_id INTEGER NOT NULL REFERENCES config.stati(id) ON DELETE RESTRICT,\n  partita_iva TEXT,\n  codice_fiscale TEXT,\n  comune_id INTEGER REFERENCES config.comuni(id) ON DELETE RESTRICT,\n  -- campi generati\n  id_fiscale_univoco_cf_piva TEXT GENERATED ALWAYS AS\n    (COALESCE(codice_fiscale, partita_iva)) STORED,\n  ragione_sociale_completa TEXT GENERATED ALWAYS AS\n    (COALESCE(ragione_sociale, cognome || ' ' || nome)) STORED,\n  -- audit\n  data_insert TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_insert TEXT NOT NULL DEFAULT CURRENT_USER,\n  data_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_update TEXT NOT NULL DEFAULT CURRENT_USER\n);\n</code></pre> - Audit: <code>data_insert/user_insert</code>, <code>data_update/user_update</code>. - Constraint: validazioni <code>CHECK</code> su <code>tipo_soggetto</code>, unicit\u00e0 su <code>(stato_id, id_fiscale_univoco_cf_piva)</code>, ecc.</p>"},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#12-tabella-anagrafichesoggetti_ruoli","title":"1.2 Tabella <code>anagrafiche.soggetti_ruoli</code>","text":"<p><pre><code>CREATE TABLE anagrafiche.soggetti_ruoli (\n  id_soggetto_ruolo SERIAL PRIMARY KEY,\n  soggetto_id       UUID    NOT NULL\n    REFERENCES anagrafiche.soggetti(id) ON DELETE CASCADE,\n  ruolo_id          INTEGER NOT NULL\n    REFERENCES config.tipi_ruoli(id) ON DELETE RESTRICT,\n  extra             JSONB   DEFAULT '{}'::jsonb,\n  -- audit\n  date_insert       TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_insert       TEXT      NOT NULL DEFAULT CURRENT_USER,\n  date_update       TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_update       TEXT      NOT NULL DEFAULT CURRENT_USER,\n  -- unicit\u00e0\n  CONSTRAINT uq_soggetto_ruolo UNIQUE (soggetto_id, ruolo_id)\n);\n</code></pre> - FK: assicura che ogni relazione soggetto \u2192 ruolo esista in <code>config.tipi_ruoli</code>. - Campo <code>extra</code>: per dati specifici di ruolo. - Unicit\u00e0: un ruolo assegnato una sola volta.</p>"},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#2-gestori","title":"2. Gestori","text":""},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#21-tabella-anagrafichegestori","title":"2.1 Tabella <code>anagrafiche.gestori</code>","text":"<p><pre><code>CREATE TABLE anagrafiche.gestori (\n  id SERIAL PRIMARY KEY,\n  soggetto_id       UUID NOT NULL\n    REFERENCES anagrafiche.soggetti(id) ON DELETE RESTRICT,\n  soggetto_ruolo_id INTEGER NOT NULL\n    REFERENCES anagrafiche.soggetti_ruoli(id_soggetto_ruolo) ON DELETE RESTRICT,\n  descrizione       CHAR(50) NOT NULL,\n  cd_prod_software  CHAR(20) NOT NULL,\n  valuta_id         INTEGER NOT NULL\n    REFERENCES config.pa_valute(id_valuta) ON DELETE RESTRICT,\n  iban              CHAR(35) NOT NULL,\n  -- audit\n  date_insert       TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_insert       TEXT      NOT NULL DEFAULT CURRENT_USER,\n  date_update       TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_update       TEXT      NOT NULL DEFAULT CURRENT_USER\n);\n</code></pre> - Relazione stretta: <code>soggetto_ruolo_id</code> deve essere associato al ruolo <code>GE</code> (gestore). Controllato tramite trigger <code>check_ruolo_gestore</code>.</p>"},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#22-tabella-anagrafichegestori_utilities_ruoli","title":"2.2 Tabella <code>anagrafiche.gestori_utilities_ruoli</code>","text":"<p><pre><code>CREATE TABLE anagrafiche.gestori_utilities_ruoli (\n  id_gest_util_ruolo SERIAL PRIMARY KEY,\n  gestore_id         INTEGER NOT NULL\n    REFERENCES anagrafiche.gestori(id) ON DELETE CASCADE,\n  utility_id         INTEGER NOT NULL\n    REFERENCES config.utilities(id_utility) ON DELETE RESTRICT,\n  ruolo_id           INTEGER NOT NULL\n    REFERENCES config.tipi_ruoli(id) ON DELETE RESTRICT,\n  extra               JSONB DEFAULT '{}'::jsonb,\n  -- audit\n  date_insert        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_insert        TEXT      NOT NULL DEFAULT CURRENT_USER,\n  date_update        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_update        TEXT      NOT NULL DEFAULT CURRENT_USER,\n  -- unicit\u00e0\n  CONSTRAINT uq_gest_util_ruolo UNIQUE (gestore_id, utility_id, ruolo_id)\n);\n</code></pre> - Permette a un gestore di assumere pi\u00f9 ruoli funzionali per ciascuna utility. - Campo <code>extra</code> per parametri contrattuali. - Unicit\u00e0: evita duplicazioni.</p>"},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#3-contatti","title":"3. Contatti","text":""},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#31-tabella-configtipi_contatti","title":"3.1 Tabella <code>config.tipi_contatti</code>","text":"<p><pre><code>CREATE TABLE config.tipi_contatti (\n  id                    SERIAL PRIMARY KEY,\n  descrizione           TEXT    NOT NULL,\n  cod_int_tipo_contatto VARCHAR(10) NOT NULL UNIQUE,\n  data_insert           TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_insert           TEXT    NOT NULL DEFAULT CURRENT_USER,\n  data_update           TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_update           TEXT    NOT NULL DEFAULT CURRENT_USER\n);\n</code></pre> - Catalogo dei tipi di contatto (Admin, Tecnico, Default, ecc.).</p>"},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#32-tabella-anagrafichecontatti","title":"3.2 Tabella <code>anagrafiche.contatti</code>","text":"<p><pre><code>CREATE TABLE anagrafiche.contatti (\n  id_contatto        SERIAL PRIMARY KEY,\n  tipo_contatto_id   INTEGER NOT NULL\n    REFERENCES config.tipi_contatti(id) ON DELETE RESTRICT,\n  soggetto_id        UUID    NOT NULL\n    REFERENCES anagrafiche.soggetti(id) ON DELETE CASCADE,\n  soggetto_ruolo_id  INTEGER NULL\n    REFERENCES anagrafiche.soggetti_ruoli(id_soggetto_ruolo) ON DELETE CASCADE,\n  utility_id         INTEGER NULL\n    REFERENCES config.utilities(id_utility) ON DELETE CASCADE,\n  nominativo         VARCHAR(100) NOT NULL,\n  email              VARCHAR(100),\n  telefono           VARCHAR(20),\n  cellulare          VARCHAR(20),\n  pec                VARCHAR(100),\n  note               TEXT,\n  is_default         BOOLEAN NOT NULL DEFAULT FALSE,\n  -- audit\n  date_insert        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_insert        TEXT      NOT NULL DEFAULT CURRENT_USER,\n  date_update        TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n  user_update        TEXT      NOT NULL DEFAULT CURRENT_USER,\n  -- default unico\n  CONSTRAINT uq_contatti_default UNIQUE (soggetto_id) WHERE is_default\n);\n\nCREATE INDEX idx_contatti_soggetto ON anagrafiche.contatti(soggetto_id);\nCREATE INDEX idx_contatti_tipo    ON anagrafiche.contatti(tipo_contatto_id);\nCREATE INDEX idx_contatti_utility ON anagrafiche.contatti(utility_id);\n</code></pre> - Flag <code>is_default</code>: il primo contatto inserito per ciascun soggetto \u00e8 automaticamente marcato default dal trigger <code>set_default_contatto</code>. - Unique partial index: garantisce un solo default per soggetto.</p>"},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#33-logiche-di-default-e-fallback","title":"3.3 Logiche di default e fallback","text":""},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#trigger-set_default_contatto","title":"Trigger <code>set_default_contatto</code>","text":"<ul> <li>BEFORE INSERT OR UPDATE su <code>anagrafiche.contatti</code></li> <li>Imposta <code>is_default = TRUE</code> per il primo contatto di un soggetto.</li> <li>Se un'altra riga \u00e8 gi\u00e0 default, la disattiva.</li> </ul>"},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#funzione-scriptfn_get_contatto_fallback","title":"Funzione <code>script.fn_get_contatto_fallback(...)</code>","text":"<ul> <li>Riceve i parametri: <code>p_soggetto_id</code>, <code>p_tipo_contatto_id</code>, opzionali <code>p_soggetto_ruolo_id</code>, <code>p_utility_id</code>.</li> <li>Restituisce il contatto con priorit\u00e0:</li> <li><code>utility_id</code> matching</li> <li><code>soggetto_ruolo_id</code> matching</li> <li><code>is_default = TRUE</code></li> <li>Query in PL/pgSQL che ordina per <code>priority, date_insert DESC</code>.</li> </ul>"},{"location":"documentazione/Idee_base/Modello_dati_eseguito/#constraint-trigger-check_soggetto_contatti_complete","title":"Constraint Trigger <code>check_soggetto_contatti_complete</code>","text":"<ul> <li>AFTER INSERT OR UPDATE DEFERRABLE su <code>anagrafiche.soggetti</code></li> <li>Verifica al commit che esista almeno un contatto con <code>is_default = TRUE</code> oppure uno con un canale valorizzato.</li> <li>Solleva l\u2019eccezione <code>E_SOGGETTO_NO_CONTATTI</code> in caso contrario.</li> </ul> <p>Con questa architettura: - Soggetti e ruoli sono separati e vincolati da FK e JSONB per estensioni. - Gestori sono soggetti con ruolo <code>GE</code>, arricchiti con software, valuta e IBAN, e collegati a ruoli functional per ciascuna utility. - Contatti sono centralizzati, con un unico punto di verit\u00e0 per email/telefono/PEC e un contatto principale esplicito. - Tutta la logica di integrit\u00e0, default e fallback \u00e8 gestita in database tramite trigger e funzioni.</p> <p>Questo modello garantisce robustezza, estendibilit\u00e0 e chiarezza nei flussi di business di Zero ERP.  </p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/","title":"Relazione Gestione indirizzi","text":"<p>Relazione sulla Gestione degli Indirizzi e dello Stradario</p> <p>Questa relazione riassume le scelte di design, le tabelle e le funzioni implementate per la gestione degli indirizzi  , il catalogo stradario normalizzato, il legame con i tipi_indirizzi e soggetti_ruoli, e la storicizzazione dei dati. Sono inclusi esempi di utilizzo.</p>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#1-stradario-normalizzato-config","title":"1. Stradario Normalizzato (config)","text":""},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#11-tabelle-principali","title":"1.1. Tabelle principali","text":"<ul> <li>config.stradario_generale: catalogo delle vie (es. <code>id=1, toponomastica_id=VIA, descrizione='ROMA', descrizione_breve='RM'</code>).</li> <li>config.stradario: associa ogni <code>via_id</code> a un <code>comune_id</code>, <code>codice_postale_id</code>, e una <code>geoloc</code> di via.</li> </ul>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#12-funzione-di-lookup","title":"1.2. Funzione di lookup","text":"<ul> <li>script.fn_get_stradario(comune_id, partial_text): restituisce elenco di vie filtrate per comune e testo, con campi utili (via_id, codice_postale, geoloc, descrizione_completa).</li> </ul>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#2-dettaglio-civico-anagraficheindirizzi_dettaglio","title":"2. Dettaglio Civico (anagrafiche.indirizzi_dettaglio)","text":""},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#21-schema","title":"2.1. Schema","text":"<pre><code>CREATE TABLE anagrafiche.indirizzi_dettaglio (\n  id SERIAL PRIMARY KEY,\n  via_id INTEGER NOT NULL REFERENCES config.stradario(id),\n  civico INTEGER,\n  estensione_civico VARCHAR(10),\n  palazzina VARCHAR(50),\n  interno VARCHAR(10),\n  piano VARCHAR(10),\n  civic_geoloc geometry(Point,4326),\n  altro TEXT,\n  via_norm TEXT NOT NULL,\n  civico_norm TEXT NOT NULL,\n  CONSTRAINT uq_indirizzi_dettaglio_norm UNIQUE(via_norm, civico_norm, interno, piano, palazzina)\n);\n</code></pre>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#22-normalizzazione","title":"2.2. Normalizzazione","text":"<ul> <li>Trigger/function (<code>dbops.fn_normalize_indirizzo</code> o trigger) che sfrutta <code>script.fn_get_stradario</code> per popolare <code>via_norm</code>, <code>civico_norm</code>, <code>civic_geoloc</code>, e identificare via_id.</li> </ul>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#23-flusso-di-inserimento","title":"2.3. Flusso di inserimento","text":"<ol> <li>Ricerca: utente digita \"Via Roma 10\" \u2192 chiamata a <code>script.fn_get_stradario</code>.</li> <li>Corrispondenza: se esiste, si ottiene <code>via_id</code>, <code>geoloc</code>, <code>codice_postale</code>; altrimenti fallback.</li> <li>Insert in <code>indirizzi_dettaglio</code>, scatenando la normalizzazione.</li> </ol>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#3-indirizzi-contestualizzati-anagraficheindirizzi","title":"3. Indirizzi Contestualizzati (anagrafiche.indirizzi)","text":""},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#31-schema","title":"3.1. Schema","text":"<pre><code>CREATE TABLE anagrafiche.indirizzi (\n  id SERIAL PRIMARY KEY,\n  soggetto_ruolo_id INTEGER NOT NULL REFERENCES anagrafiche.soggetti_ruoli,\n  tipo_indirizzo_id INTEGER NOT NULL REFERENCES config.tipi_indirizzi,\n  indirizzi_dettaglio_id INTEGER REFERENCES anagrafiche.indirizzi_dettaglio ON DELETE SET NULL,\n  indirizzo_libero TEXT,\n  comune_id INTEGER REFERENCES config.comuni ON DELETE SET NULL,\n  codice_postale_id INTEGER REFERENCES config.codici_postali ON DELETE SET NULL,\n  stato_id INTEGER REFERENCES config.stati ON DELETE SET NULL,\n  administrative_area VARCHAR(100),\n  locality VARCHAR(100),\n  sublocality VARCHAR(100),\n  postal_box VARCHAR(20),\n  geoloc geometry(Point,4326),\n  data_insert TIMESTAMP NOT NULL,\n  user_insert VARCHAR(80) NOT NULL,\n  data_update TIMESTAMP NOT NULL,\n  user_update VARCHAR(80) NOT NULL,\n  CONSTRAINT uq_indirizzi_dettaglio UNIQUE(soggetto_ruolo_id,tipo_indirizzo_id,indirizzi_dettaglio_id),\n  CONSTRAINT uq_indirizzi_libero UNIQUE(soggetto_ruolo_id,tipo_indirizzo_id,indirizzo_libero)\n);\n</code></pre>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#32-logica-di-gestione","title":"3.2. Logica di gestione","text":"<ul> <li>Tipo di indirizzo (<code>config.tipi_indirizzi</code>) definisce schede: residenza, domicilio fiscale, fornitura, corrispondenza, ecc.</li> <li>Unicit\u00e0: per ogni <code>soggetto_ruolo_id</code> e <code>tipo_indirizzo_id</code>, non possono esistere due record con lo stesso dettaglio n\u00e9 lo stesso testo libero.</li> <li>Fallback: se <code>indirizzi_dettaglio_id</code> \u00e8 NULL, si usa <code>indirizzo_libero</code> e campi di internazionalizzazione.</li> </ul>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#33-esempi","title":"3.3. Esempi","text":"<ol> <li>Residenza catalogata: <pre><code>INSERT INTO anagrafiche.indirizzi (soggetto_ruolo_id, tipo_indirizzo_id, indirizzi_dettaglio_id, stato_id, data_insert, user_insert)\nVALUES (10, 1 /*residenza*/, 123 /*dettaglio*/, 1 /*IT*/, now(), 'user');\n</code></pre></li> <li>Domicilio fiscale libero: <pre><code>INSERT INTO anagrafiche.indirizzi (soggetto_ruolo_id, tipo_indirizzo_id, indirizzo_libero, comune_id, codice_postale_id, stato_id)\nVALUES (10, 2 /*fiscale*/, 'Via Nuova 5', 101, 50121, 1);\n</code></pre></li> <li>Copia da residenza a fornitura:    <pre><code>INSERT INTO anagrafiche.indirizzi (soggetto_ruolo_id, tipo_indirizzo_id, indirizzi_dettaglio_id)\nSELECT soggetto_ruolo_id, 3 /*fornitura*/, indirizzi_dettaglio_id\nFROM anagrafiche.indirizzi\nWHERE soggetto_ruolo_id=10 AND tipo_indirizzo_id=1;\n</code></pre></li> </ol>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#4-lettura-indirizzi","title":"4. Lettura Indirizzi","text":""},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#41-funzioni-in-script-schema","title":"4.1. Funzioni in <code>script</code> schema","text":"<ul> <li><code>script.fn_get_indirizzi_by_ruolo(p_soggetto_ruolo_id)</code> \u2192 elenco di (tipo_indirizzo, indirizzo_completo, geoloc)</li> <li><code>script.fn_get_indirizzo(p_soggetto_ruolo_id, p_tipo_codice)</code> \u2192 singolo indirizzo</li> </ul>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#42-output-esempio","title":"4.2. Output Esempio","text":"<pre><code>residenza | \"VIA ROMA 10 INT 2, Milano 20121\" | POINT(...)\nfisca...   | \"Via Nuova 5, Bologna 40121\"      | null\n</code></pre>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#5-storicizzazione","title":"5. Storicizzazione","text":""},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#51-comune-e-stradario","title":"5.1. Comune e Stradario","text":"<ul> <li><code>storico.comuni</code> e <code>storico.comune_trasformazioni</code> per fusioni/scissioni comuni.</li> <li><code>storico.stradario</code> e <code>storico.stradario_trasformazioni</code> per variazioni vie.</li> </ul>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#52-indirizzi","title":"5.2. Indirizzi","text":"<p><pre><code>CREATE TABLE storico.indirizzi (\n  id SERIAL PRIMARY KEY,\n  soggetto_ruolo_id INTEGER REFERENCES anagrafiche.soggetti_ruoli,\n  tipo_indirizzo_id INTEGER REFERENCES config.tipi_indirizzi,\n  indirizzi_dettaglio_id INTEGER,\n  indirizzo_libero TEXT,\n  comune_id INTEGER,\n  codice_postale_id INTEGER,\n  stato_id INTEGER,\n  valid_from DATE NOT NULL,\n  valid_to DATE,\n  data_insert TIMESTAMP,\n  user_insert VARCHAR(80)\n);\n</code></pre> Consente di ricostruire l\u2019indirizzo valido su uno determinato periodo.</p> <p>Conclusione: il modello consente di gestire in modo flessibile e performante la normalizzazione, il fallback e la storicizzazione degli indirizzi, tenendo separate le responsabilit\u00e0 (stradario, dettaglio civico, contesto di utilizzo, storicizzazione).</p>"},{"location":"documentazione/Idee_base/Relazione_Gestione_indirizzi/#6-aggiornamenti-del-25-aprile-2025","title":"6. Aggiornamenti del 25 aprile 2025","text":"<p>A seguito delle attivit\u00e0 svolte oggi, il modello ha ricevuto i seguenti arricchimenti e migliorie:</p> <ol> <li>Snapshot completo in <code>indirizzi_dettaglio</code></li> <li>Inserite le colonne di snapshot: ora <code>indirizzo_normalizzato</code> \u00e8 un generated column che concatena automaticamente via, civico, palazzina, scala, piano, interno, comune e CAP senza join runtime.</li> <li> <p>Trigger <code>anagrafiche.fn_normalize_indirizzi_dettaglio()</code> rinnovato per popolare automaticamente <code>civico_norm</code>, <code>via_norm</code> e il reset del flag <code>modifica_storica</code> su ogni INSERT/UPDATE.</p> </li> <li> <p>Storicizzazione flag-driven sui lookup</p> </li> <li>Introdotto il flag <code>storicizza</code> in <code>config.comuni</code> e <code>config.stradario</code>, impostato a <code>true</code> per innescare la storicizzazione solo quando richiesto.</li> <li> <p>Funzioni trigger <code>config.fn_storico_comuni()</code> e <code>config.fn_storico_stradario()</code> convertiti in <code>BEFORE UPDATE OR DELETE</code>, verificano l'esistenza di un snapshot aperto e creano, se necessario, il record iniziale con i valori <code>OLD</code>, chiudono il periodo e inseriscono il nuovo snapshot con <code>NEW</code>.</p> </li> <li> <p>Constraint foreign key immediato</p> </li> <li> <p>Modificata la FK <code>fk_stradario_comune_id</code> in <code>config.stradario</code> da <code>DEFERRABLE INITIALLY DEFERRED</code> a <code>NOT DEFERRABLE INITIALLY IMMEDIATE</code>, per far scattare l'errore di vincolo al momento di <code>INSERT/UPDATE</code> e non al <code>COMMIT</code>.</p> </li> <li> <p>Admin Toolkit in <code>dbops</code> con audit</p> </li> <li> <p>Implementate le funzioni <code>dbops.admin_merge_comune()</code> e <code>dbops.admin_merge_stradario()</code> per automatizzare fusione/spostamento di comuni e vie:</p> <ul> <li>Validazioni input (esistenza ID, differenza origine/destino).</li> <li>Inserimento in <code>storico.comune_trasformazioni</code> e <code>storico.stradario_trasformazioni</code>.</li> <li>Propagazione automatica dell'<code>UPDATE</code> sulle tabelle dipendenti (<code>config.stradario</code>, <code>anagrafiche.indirizzi_dettaglio</code>).</li> <li>Logging in <code>dbops.audit_log</code> con <code>function_name</code>, parametri in JSONB, stato (<code>STARTED</code>/<code>OK</code>/<code>ERROR</code>), messaggio di errore e durata in ms.</li> </ul> </li> <li> <p>Tabella di audit</p> </li> <li>Definita la struttura di <code>dbops.audit_log</code> (id, function_name, executed_by, executed_at, params JSONB, status, message, duration_ms, tx_id), per tracciare ogni invocazione delle routine admin.</li> </ol> <p>Relazione aggiornata il 25/04/2025</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"documentazione/Idee_base/page-1%20Zero-project-promemoria-sviluppo-idee/","title":"Zero project promemoria sviluppo idee","text":""},{"location":"documentazione/Idee_base/page-1%20Zero-project-promemoria-sviluppo-idee/#promemoria-completo-delle-considerazioni-sul-progetto-zero-erp","title":"\ud83d\udcdd Promemoria Completo delle Considerazioni sul Progetto Zero ERP","text":""},{"location":"documentazione/Idee_base/page-1%20Zero-project-promemoria-sviluppo-idee/#concetti-generali-e-motivazioni","title":"\ud83d\udca1 Concetti Generali e Motivazioni","text":"<ul> <li>Nome del Progetto: \"Zero\" rappresenta una ripartenza personale e professionale.</li> <li>Finalit\u00e0: ERP multiservizi modulare e flessibile.</li> </ul>"},{"location":"documentazione/Idee_base/page-1%20Zero-project-promemoria-sviluppo-idee/#aspetti-chiave-e-decisioni-prese","title":"\ud83d\uddc3\ufe0f Aspetti Chiave e Decisioni Prese","text":"<ul> <li>Anagrafica Generale: Centralizzata e obbligatoria per tutti i soggetti con almeno un ruolo definito.</li> <li>Ruoli Specifici: Tabelle dedicate per informazioni specifiche (cliente, fornitore, distributore, gestore software unico obbligatorio).</li> <li>Centralizzazione Indirizzi: Gestione obbligatoria di indirizzi con tipologie specifiche (residenza, fornitura, spedizione, domicilio fiscale).</li> <li>Storicizzazione Dati: Tutte le informazioni critiche (es. dati societari come capitale sociale, forma giuridica, PEC) storicizzate in tabelle dedicate.</li> <li>Codice Fiscale Forzato: Gestione specifica per casi particolari in cui il CF \u00e8 assegnato manualmente.</li> <li>Contatti Aziendali: Gestione dedicata dei contatti con informazioni su ruoli aziendali e titoli per intestazione documenti.</li> </ul>"},{"location":"documentazione/Idee_base/page-1%20Zero-project-promemoria-sviluppo-idee/#specifiche-tecniche-principali","title":"\ud83d\udd0d Specifiche Tecniche Principali","text":"<ul> <li>Forniture: Obbligatorie per ogni servizio (anche standard), indipendenti dai clienti.</li> <li>Servizi: Multisettoriali, con definizione di un servizio \"default\".</li> <li>Clienti e Contratti: Associazione chiara e storicizzata di servizi, forniture e clienti, con definizione contrattuale completa (offerte, listini, condizioni speciali).</li> <li>Cabine REMI e POD/PDR: Tabelle specifiche per la gestione del settore utility (gas, energia), con indirizzi ufficiali e verifiche automatiche di congruenza.</li> <li>Distributori: Collegati direttamente all'anagrafica generale con dati aggiuntivi (es. pronto intervento).</li> </ul>"},{"location":"documentazione/Idee_base/page-1%20Zero-project-promemoria-sviluppo-idee/#benefici-concreti","title":"\ud83c\udfaf Benefici Concreti","text":"<ul> <li>Centralizzazione dati e facilit\u00e0 gestionale.</li> <li>Chiarezza e precisione operativa.</li> <li>Compliance normativa e regolatoria (es. ARERA).</li> <li>Flessibilit\u00e0 e scalabilit\u00e0 future del sistema.</li> </ul>"},{"location":"documentazione/Idee_base/page-1%20Zero-project-promemoria-sviluppo-idee/#conclusioni-importanti","title":"\u2705 Conclusioni Importanti","text":"<p>Questo promemoria raccoglie tutte le decisioni e i ragionamenti effettuati per il progetto Zero ERP e costituisce una sintesi utile per eventuali revisioni o ampliamenti futuri.</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"documentazione/Idee_base/page-4%20Configurazioni%20Multi-livello%20user/","title":"page 4 Configurazioni Multi livello user","text":"<p>\ud83d\udcc4 Sistema di Configurazione Multi-livello - Progetto Zero ERP Obiettivo Definire una struttura completa e robusta per la gestione delle configurazioni applicative, dei permessi, dei moduli, degli utenti e dei menu dinamici per l'ERP Zero.</p> <p>\u2705 Livello 1 - Configurazione Sistema (Environment Variables) Variabile   Descrizione DJANGO_SECRET_KEY   Chiave segreta applicazione DB_NAME Nome database DB_USER Utente database DB_PASSWORD Password database DB_HOST Host database DB_PORT Porta database     \u2022 Accessibile solo da amministratore di sistema.     \u2022 Non modificabile dagli utenti.</p> <p>\u2705 Livello 2 - Parametrizzazione Applicativa Tabella: parametri_globali id  parametro   valore  tipo    extra   descrizione 1   usa_contratti_avanzati  true    boolean NULL    Abilita modulo contratti avanzati 2   modulo_fatturazione_rapida  false   boolean NULL    Abilita funzione fatturazione rapida 3   calcolo_iva_personalizzato  true    boolean NULL    Abilita gestione IVA personalizzata 4   parametrizzazione_varia NULL    jsonb   {\"data_inizio\": \"2024-01-01\", \"data_fine\": \"2024-12-31\", \"note\": \"Parametri temporanei\"}    Parametri opzionali complessi</p> <p>\u2705 Livello 3 - Gestione Moduli Applicativi Tabella: moduli id  codice_modulo   descrizione attivo  configurazione 1   FAT Modulo Fatturazione true    {\"versione\": \"base\", \"abilitazioni\": [\"pdf\", \"email\"]} 2   CONT    Modulo Contratti    true    {\"gestione_avanzata\": true} 3   MAG Modulo Magazzino    false   NULL 4   ANAG    Gestione Anagrafiche    true    NULL 5   CFG Configurazione e Parametri  true    NULL 6   GEST    Gestione Forniture  true    NULL 7   REMI    Gestione Cabine REMI    true    NULL 8   PDR Gestione POD/PDR    true    NULL 9   USR Gestione Utenti e Permessi  true    NULL</p> <p>\u2705 Livello 4 - Profilazione Utenti e Gruppi Django fornisce i seguenti modelli integrati:     \u2022 User     \u2022 Group     \u2022 Permission Questi modelli saranno utilizzati per:     \u2022 Autenticazione.     \u2022 Organizzazione in gruppi.     \u2022 Gestione dei permessi base. Estensione personalizzata: Tabella: permessi_gruppi id  gruppo (FK su Group)    modulo (FK su moduli)   funzione    tipo_accesso 1   Operatori   FAT Inserimento lettura-scrittura 2   Amministratori  ANAG    Gestione completa   lettura-scrittura 3   Operatori   CONT    Visualizzazione sola-lettura 4   Commerciali GEST    Consultazione   sola-lettura 5   Tecnici REMI    Gestione Cabine lettura-scrittura</p> <p>\u2705 Livello 5 - Permessi Utente Specifici (Override) Tabella: permessi_utenti id  utente (FK su User) funzione (FK su funzioni_modulo)    tipo_accesso 1   user_001    crea_fattura    sola-lettura 2   user_002    stampa_fattura  lettura-scrittura     \u2022 Gli utenti possono ricevere permessi personalizzati che sovrascrivono quelli assegnati tramite il gruppo.     \u2022 Priorit\u00e0: permessi_utenti &gt; permessi_gruppi</p> <p>\u2705 Livello 6 - Gestione Funzioni e Azioni Tabella: funzioni_modulo id  modulo (FK su moduli)   codice_funzione descrizione 1   FAT crea_fattura    Creazione nuova fattura 2   FAT stampa_fattura  Stampa fattura 3   CONT    visualizza_contratto    Visualizzazione Contratto 4   CONT    crea_contratto  Inserimento Contratto 5   ANAG    modifica_cliente    Modifica dati cliente</p> <p>\u2705 Livello 7 - Configurazione Cliente Tabella: parametri_clienti id  id_cliente  parametro   valore  data_inizio data_fine   extra 1   10  intestazione_documenti  \"Societ\u00e0 Alfa\"  2024-01-01  NULL    NULL 2   10  listino_prezzi  \"Listino_2024\"  2024-01-01  NULL    NULL 3   11  configurazione_avanzata NULL    2024-01-01  2024-12-31  {\"lingua_default\": \"it\", \"template\": \"personalizzato\"}</p> <p>\u2705 Livello 8 - Gestione Menu Dinamici Tabella: menu id  modulo (FK) nome_voce   url ordine  funzione_richiamata 1   FAT Fatturazione    /fatturazione/  1   crea_fattura 2   CONT    Contratti   /contratti/ 2   visualizza_contratto 3   ANAG    Anagrafiche /anagrafiche/   3   modifica_cliente 4   GEST    Forniture   /forniture/ 4   NULL 5   REMI    Cabine REMI /remi/  5   NULL     \u2022 Se l'utente ha un permesso esplicito (permessi_utenti) o di gruppo (permessi_gruppi), la voce del menu \u00e8 visibile.</p> <p>\u2705 Livello 9 - Override gerarchico dei parametri Comportamento     1. Permessi utente specifici.     2. Permessi gruppo.     3. Parametro specifico cliente.     4. Parametro globale.     5. Parametro di default.</p> <p>\ud83d\udd04 Flusso completo     1. Creazione utente (User)     2. Assegnazione a uno o pi\u00f9 gruppi (Group)     3. Definizione permessi gruppo (permessi_gruppi)     4. Definizione opzionale permessi utente (permessi_utenti)     5. Menu dinamico costruito in base ai permessi effettivi (utente &gt; gruppo)     6. Controllo runtime sui singoli componenti applicativi (viste, form, azioni)</p> <p>\u2705 Benefici     \u2022 Controllo granulare fino al singolo utente e funzione.     \u2022 Menu e funzionalit\u00e0 totalmente dinamiche.     \u2022 Priorit\u00e0 chiara tra permessi utente e di gruppo.     \u2022 Facilmente espandibile a livello di azioni o campi specifici.     \u2022 Coerenza completa tra frontend, backend e sicurezza applicativa. Struttura pronta per estensioni come:     \u2022 Multi-tenant.     \u2022 Gestione multi-lingua.     \u2022 Permessi per campo o processo.</p> <p>User ----&lt; permessi_utenti &gt;---- Funzione &gt;---- Modulo &gt;---- Menu    |                                 ^    +----&lt; Group &gt;----&lt; permessi_gruppi &gt;---- Funzione</p> <p>Funzione ----&lt; permessi_funzioni &gt;---- Group</p> <p>parametri_clienti ----&lt; User parametri_globali ----&lt; Modulo</p> <p>\u2728 Relazioni     \u2022 Ogni User pu\u00f2:         \u25e6 Appartenere a pi\u00f9 Group         \u25e6 Avere permessi diretti su specifiche Funzioni         \u25e6 Essere legato ai parametri_clienti     \u2022 Ogni Group ha:         \u25e6 Permessi su Funzioni tramite permessi_gruppi     \u2022 Ogni Funzione appartiene ad un Modulo:         \u25e6 Un modulo ha le sue Funzioni e Menu     \u2022 I Menu:         \u25e6 Sono collegati ai moduli e filtrati dinamicamente in base ai permessi     \u2022 I parametri:         \u25e6 Possono essere globali o legati al singolo cliente (parametri_clienti)</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"documentazione/Idee_base/page-5%20Modulo%20Gestione%20Pratiche/","title":"page 5 Modulo Gestione Pratiche","text":"<p>Zero ERP - Modulo Gestione Pratiche</p> <p>\u2705 Obiettivo Gestire flussi di lavoro e attivit\u00e0 (pratiche) interne ed esterne, in modo configurabile, tracciabile e integrabile con sistemi esterni. \ud83d\udccc Caratteristiche chiave     \u2022 Pratiche configurabili dal gestore.     \u2022 Supporto per pratiche di sistema (autogenerate) e pratiche business.     \u2022 Attivit\u00e0  attivabili da eventi interni o esterni.     \u2022 Ricezione richieste esterne tramite API che creano pratiche.     \u2022 Invio callback o eventi a sistemi esterni.     \u2022 Gestione storica e audit completa.     \u2022 Collegamento diretto delle attivit\u00e0 alle entit\u00e0 anagrafiche, forniture e servizi.     \u2022 Tracciamento utente e timestamp sia per inserimento che aggiornamento.     \u2022 Supporto workflow sequenziali e condizionali tramite ordine ed esito.     \u2022 Notifiche automatiche parametrizzabili per gruppi e utenti.     \u2022 Regole per dipendenze obbligatorie e unicit\u00e0 attivit\u00e0.     \u2022 Gestione notifiche e collegamenti espliciti tra attivit\u00e0.     \u2022 Conteggio e analisi statistica dei tempi di svolgimento delle attivit\u00e0.     \u2022 Pianificazione e assegnazione attivit\u00e0 a utenti/gruppi con gestione delle competenze.</p> <p>\ud83d\udccc Vantaggi     \u2022 Flessibilit\u00e0 e adattabilit\u00e0 a diversi settori.     \u2022 Sistema modulare e configurabile.     \u2022 Integrazione nativa con sistemi esterni.     \u2022 Utilizzabile come \"journal\" di sistema.     \u2022 Facilmente estendibile per processi futuri.     \u2022 Tracciabilit\u00e0 completa tramite audit.     \u2022 Gestione avanzata workflow, condizioni e regole.     \u2022 Automatizzazione notifiche e alert utenti.     \u2022 Analisi statistica tempi e performance.     \u2022 Pianificazione strutturata delle attivit\u00e0 con assegnazione e monitoraggio.     \u2022 Note e documenti con versionamento, classificazione e privacy.</p> <p>\ud83d\udccc Entit\u00e0 principali Tabella: pratiche id  tipo_pratica    descrizione stato   data_creazione  data_chiusura   id_riferimento_esterno  user_ins    data_ins    user_upd    data_upd    extra PK  FK  Testo libero    Aperta/In corso/Chiusa  Timestamp   Timestamp   Opzionale   FK Utente   Timestamp   FK Utente   Timestamp   JSONB Tabella: tipi_pratica id  codice  descrizione configurabile   extra PK  Unico   Descrizione boolean JSONB</p> <p>Tabella: attivita_pratiche id  pratica tipo_attivita   descrizione stato   esito   anagrafica_generale servizio    fornitura   competenza_area user_ins    data_ins    user_upd    data_upd    data_creazione  data_conclusione    extra PK  FK  FK  Testo   Aperta/In corso/Chiusa  Successo/Fallita    FK  FK  FK  Testo   FK Utente   Timestamp   FK Utente   Timestamp   Timestamp   Timestamp   JSONB Tabella: pianificazione_attivita id  attivita_pratica    data_fine_massima   data_prevista   data_presa_in_carico    user_assegnato  gruppo_assegnato    user_ins    data_ins    user_upd    data_upd    extra PK  FK  Timestamp   Timestamp   Timestamp   FK Utente (opzionale)   FK Gruppo (opzionale)   FK Utente   Timestamp   FK Utente   Timestamp   JSONB</p> <p>Tabella: tipi_attivita id  codice  descrizione trigger_esterno trigger_interno ordine_sequenza esito_richiesto notifica_utente extra PK  Unico   Testo   boolean boolean integer boolean boolean JSONB</p> <p>Tabella: attivita_notifiche id  tipo_attivita_origine   tipo_attivita_destinazione  gruppo_destinatario utente_destinatario condizione_esito    extra PK  FK  FK  FK Gruppo   FK Utente (opzionale)   Successo/Fallita    JSONB</p> <p>Tabella: regole_attivita id  tipo_attivita   tipo_attivita_precedente    obbligatoria    unica_nella_pratica extra PK  FK  FK  boolean boolean JSONB</p> <p>Tabella: regole_conteggio_tempi id  tipo_pratica    tipo_attivita_iniziale  tipo_attivita_finale    extra PK  FK  FK  FK  JSONB</p> <p>Tabella: attivita_sospensione_tempi id  tipo_attivita   sospende_conteggio  riattiva_conteggio  extra PK  FK  boolean boolean JSONB</p> <p>Tabella: note_attivita id  attivita_pratica_id nota    classificazione pubblica    versione    user_ins    data_ins    extra 1   1   \"Controllati documenti, tutto ok\"   \"Informativa\"   true    1   1   \"2024-04-15\"    {}</p> <p>Tabella: documenti_attivita id  attivita_pratica_id nome_file   percorso_file   documento_blob  classificazione versione    pubblica    user_ins    data_ins    extra 1   1   \"contratto_firmato.pdf\" \"/files/contratti/\" NULL    \"Contratto\" 1   true    1   \"2024-04-15\"    {}</p> <p>Nota Questa struttura permette di estendere Zero ERP verso un Business Process Engine senza perdere la semplicit\u00e0 nella gestione dei processi standard.</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"documentazione/Idee_base/page-6%20Pre%20analisi%20contatori%20letture/","title":"page 6 Pre analisi contatori letture","text":"<p>prodotti    Catalogo generale (modello del contatore, tipo, caratteristiche generali) contatori   Asset installato, con seriale, posizione, stato, cliente associato, vita utile, dati specifici letture Storico letture (periodiche o su richiesta) manutenzioni    Eventuali eventi legati al contatore</p> <p>\ud83d\udca1 Esempio concettuale: CREATE TABLE prodotti (     id SERIAL PRIMARY KEY,     codice VARCHAR(50) UNIQUE,     nome VARCHAR(100),     tipo VARCHAR(20) DEFAULT 'contatore', -- potrebbe essere 'contatore', 'valvola', ecc.     meta JSONB DEFAULT '{}'::JSONB );</p> <p>CREATE TABLE contatori (     id SERIAL PRIMARY KEY,     matricola VARCHAR(50) UNIQUE NOT NULL, -- il seriale fisico     prodotto_id INTEGER REFERENCES prodotti(id),     cliente_id INTEGER REFERENCES clienti(id),     installato_il DATE,     posizione VARCHAR(255), -- eventualmente anche coordinata GPS o georeferenziazione     stato VARCHAR(20) DEFAULT 'attivo',     caratteristiche JSONB DEFAULT '{}'::JSONB );</p> <p>CREATE TABLE letture (     id SERIAL PRIMARY KEY,     contatore_id INTEGER REFERENCES contatori(id),     data_lettura TIMESTAMP NOT NULL,     valore NUMERIC(10,3) NOT NULL, -- valore del contatore     tipo VARCHAR(20) DEFAULT 'lettura_ufficiale' -- ufficiale, stimata, su richiesta );</p> <p>CREATE TABLE manutenzioni (     id SERIAL PRIMARY KEY,     contatore_id INTEGER REFERENCES contatori(id),     data_evento DATE,     tipo_evento VARCHAR(100),     note TEXT );</p> <p>\u2728 Nota:     \u2022 Il prodotto(articolo) \u00e8 generico, e pu\u00f2 rappresentare qualsiasi oggetto di magazzino (es. \"Contatore G4\", \"Valvola a farfalla\", \"Modulo LTE\").     \u2022 Il contatore \u00e8 l'istanza fisica legata al cliente.     \u2022 meta e caratteristiche con JSONB permettono di estendere senza compromettere la struttura (es. firmware, portata massima, classe metrologica, pressione nominale).</p> <p>Questa tecnica \u00e8: \u2714\ufe0f 100% compatibile con ERP reali \u2714\ufe0f Estensibile senza migrazioni frequenti \u2714\ufe0f Combina relazioni + attributi dinamici</p> <p>-- Modello base per settore Gas/Energia - ERP Ready</p> <p>-- \u2705 Prodotti (Catalogo Generale) CREATE TABLE prodotti (     id SERIAL PRIMARY KEY,     codice VARCHAR(50) UNIQUE NOT NULL,     nome VARCHAR(100) NOT NULL,     tipo VARCHAR(30) DEFAULT 'contatore', -- contatore, valvola, concentratore     fornitore VARCHAR(100),     meta JSONB DEFAULT '{}'::JSONB -- info tecniche variabili );</p> <p>-- \u2705 Asset fisici installati (Contatori, Valvole ecc.) CREATE TABLE asset (     id SERIAL PRIMARY KEY,     matricola VARCHAR(50) UNIQUE NOT NULL, -- seriale fisico     prodotto_id INTEGER NOT NULL REFERENCES prodotti(id),     cliente_id INTEGER REFERENCES clienti(id),     installato_il DATE,     posizione VARCHAR(255), -- indirizzo o coordinate     stato VARCHAR(20) DEFAULT 'attivo',     caratteristiche JSONB DEFAULT '{}'::JSONB -- firmware, classe metrologica, ecc. );</p> <p>-- \u2705 Letture (consumi) CREATE TABLE letture (     id SERIAL PRIMARY KEY,     asset_id INTEGER NOT NULL REFERENCES asset(id),     data_lettura TIMESTAMP NOT NULL,     valore NUMERIC(10,3) NOT NULL, -- valore misurato     tipo VARCHAR(30) DEFAULT 'lettura_ufficiale' -- ufficiale, stimata, su richiesta );</p> <p>-- \u2705 Eventi e Manutenzioni CREATE TABLE manutenzioni (     id SERIAL PRIMARY KEY,     asset_id INTEGER NOT NULL REFERENCES asset(id),     data_evento DATE NOT NULL,     tipo_evento VARCHAR(50) NOT NULL, -- installazione, sostituzione, rimozione     note TEXT );</p> <p>-- \u2705 Storico cambi cliente (trasloco contatori) CREATE TABLE asset_storico_clienti (     id SERIAL PRIMARY KEY,     asset_id INTEGER NOT NULL REFERENCES asset(id),     cliente_id INTEGER NOT NULL REFERENCES clienti(id),     da_data DATE NOT NULL,     a_data DATE );</p> <p>-- \u2705 Opzionale: Letture Importate (batch da concentratori) CREATE TABLE letture_batch (     id SERIAL PRIMARY KEY,     file_nome VARCHAR(255),     importato_il TIMESTAMP DEFAULT now(),     meta JSONB DEFAULT '{}'::JSONB );</p> <pre><code>\u2022 Prodotti (contatori, valvole, concentratori)\n\u2022 Asset fisici con caratteristiche variabili\n\u2022 Letture dei consumi\n\u2022 Eventi e manutenzioni\n\u2022 Storico clienti legato agli asset\n\u2022 Letture batch (da concentratori o dispositivi remoti)\n</code></pre> <p>Considerazioni:     \u2022 Cos\u00ec il contatore \u00e8 trattato come prodotto e come asset fisico.     \u2022 Pu\u00f2 essere gestito in magazzino (nella tabella prodotti) e successivamente installato come asset (nella tabella asset).     \u2022 Caratteristiche variabili (es. firmware, classe metrologica) sono archiviate in JSONB.     \u2022 \u00c8 flessibile e pu\u00f2 gestire anche futuri device IoT. Se vuoi nel prossimo step possiamo: \u2714\ufe0f Aggiungere gestione contratti \u2714\ufe0f Modello completo clienti/forniture \u2714\ufe0f Integrazione pianificazione letture e bollettazione</p> <p>processo separazione letture rilevate da letture da fatturare acconti e effettive</p> <pre><code>1. Letture grezze\n    \u25e6 Tabella letture_raw o letture_contatore\n    \u25e6 Con timestamp completo (data e ora)\n    \u25e6 Originate da qualsiasi fonte: telegestione, operatore, cliente\n    \u25e6 Possono esserci pi\u00f9 letture nello stesso giorno\n    \u25e6 Contengono anche informazioni accessorie (es. metodo, operatore, fonte)\n2. Letture consolidate (fatturazione)\n    \u25e6 Tabella letture_validated o letture_fatturazione\n    \u25e6 Campo data_lettura solo date (senza ora)\n    \u25e6 Unique su (id_contatore, data_lettura)\n    \u25e6 Si popolano solo dopo validazione manuale o automatica\n    \u25e6 Possono essere completate da metadati essenziali per la bolletta (es. tipo lettura, validit\u00e0, provenienza)\n</code></pre> <p>CREATE TABLE letture_contatore (     id SERIAL PRIMARY KEY,     contatore_id INTEGER NOT NULL REFERENCES contatori(id),     data_lettura TIMESTAMP NOT NULL,     valore NUMERIC(12,3) NOT NULL,     tipo VARCHAR(20),     fonte VARCHAR(50),     validata BOOLEAN DEFAULT FALSE );</p> <p>CREATE TABLE letture_fatturazione (     id SERIAL PRIMARY KEY,     contatore_id INTEGER NOT NULL REFERENCES contatori(id),     data_lettura DATE NOT NULL,     valore NUMERIC(12,3) NOT NULL,     tipo VARCHAR(20),     CONSTRAINT unq_lettura UNIQUE (contatore_id, data_lettura) ); Questa struttura \u00e8 molto robusta perch\u00e9:     \u2022 Mantieni storico e tracciabilit\u00e0.     \u2022 Puoi validare letture provenienti da fonti diverse.     \u2022 Se serve puoi anche ricostruire la cronologia o verificare eventuali contestazioni.     \u2022 La tabella di fatturazione \u00e8 snella e ottimizzata solo per dati consolidati. 1\ufe0f\u20e3 letture_raw (letture grezze o di acquisizione) id  id_contatore    timestamp_lettura   valore  tipo_acquisizione   validata (bool) 1   1001    2025-03-28 08:15    12345   TELELETTURA false</p> <p>2\ufe0f\u20e3 letture_acconti id  id_contatore    data (Y-m-d)    valore  note    stato_conguaglio 1   1001    2025-02-01  12000   stima   da_conguagliare</p> <p>3\ufe0f\u20e3 letture_definitive (per la fatturazione) id  id_contatore    data (Y-m-d)    valore  tipo_lettura (es: manuale, automatica, conguaglio) 1   1001    2025-02-01  12500   conguaglio</p> <p>Perch\u00e9 \u00e8 una buona scelta?     \u2022 Acconti separati: Ti permette di distinguere le letture provvisorie da quelle definitive.     \u2022 Flessibilit\u00e0: Le letture raw possono contenere anche dati scartati o fuori controllo.     \u2022 Storico: Puoi mantenere una cronologia precisa di tutte le letture.     \u2022 Conguaglio: Semplice da calcolare perch\u00e9 acconti e definitive sono gi\u00e0 separati.</p> <pre><code>\u2022 Mini workflow di validazione e conguaglio\n\u2022 Mini ERD (Entity Relationship Diagram)\n\u2022 Mini esempio query (conguaglio, saldo, progressivi)\n</code></pre> <p>[1] Lettura Grezza (letture_raw)        \u2193 [2] Validazione Tecnica (scarti, controlli)        \u2193 [3] Classificazione:      \u251c\u2500 Se \u00e8 acconto \u2192 [letture_acconti]      \u2514\u2500 Se \u00e8 definitiva \u2192 [letture_definitive]        \u2193 [4] Se \u00e8 un acconto \u2192 in attesa di conguaglio        \u2193 [5] Quando arriva la definitiva:        - Ricalcolo        - Scrittura definitiva (letture_definitive)        - Segna acconto come \"conguagliato\" \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502      contatori       \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518           \u2502 1:N           \u25bc \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502    letture_raw       \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518           \u2502 Validazione           \u25bc  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502 letture_acconti  \u2502     \u2502 letture_definitive   \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518           \u2502      Conguaglio           \u25bc  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502    fatture       \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 sELECT      l_def.id_contatore,     l_def.data AS data_definitiva,     l_def.valore AS valore_definitiva,     l_acc.valore AS valore_acconto,     (l_def.valore - l_acc.valore) AS delta_conguaglio FROM letture_definitive l_def LEFT JOIN letture_acconti l_acc     ON l_def.id_contatore = l_acc.id_contatore     AND l_def.data = l_acc.data WHERE l_acc.stato_conguaglio = 'da_conguagliare';</p> <p>Le letture_acconti possono contenere:         \u25e6 letture stimate         \u25e6 letture da clienti         \u25e6 letture rilevate in periodo non allineato     \u2022 Le letture_definitive devono essere:         \u25e6 con data anno-mese-giorno univoca         \u25e6 valide e pronte per la fatturazione     \u2022 Il conguaglio viene calcolato solo se esiste una lettura definitiva per la stessa data</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"guide/Messaggi-di-Errore-e-Generazione-Log/","title":"\ud83d\udcd7 Guida Tecnica \u2013 Gestione dei Messaggi di Errore e Generazione Log in Zero\u00a0ERP","text":"<p>\ud83d\udccb Destinatari: sviluppatori database, backend e devops</p>"},{"location":"guide/Messaggi-di-Errore-e-Generazione-Log/#introduzione","title":"\ud83d\udccc Introduzione","text":"<p>Zero ERP adotta un modello unificato per la centralizzazione, il logging e la gestione dei messaggi di errore, basato su:</p> <ul> <li>Tabella messaggi: <code>config.messaggi_errore</code> \u2013 definisce template, cause e suggerimenti per ogni codice di errore.</li> <li>Tabella log: <code>dbops.error_log</code> \u2013 archivia ogni occorrenza di errore con contesto e transazione.</li> <li> <p>Funzioni PL/pgSQL:</p> </li> <li> <p><code>script.fn_get_messaggio</code> per recuperare e formattare il testo del messaggio con internazionalizzazione e placeholder.</p> </li> <li><code>script.fn_log_and_raise_error</code> per eseguire il logging remoto e sollevare l\u2019eccezione.</li> </ul> <p>Questa guida illustra come utilizzare e estendere la struttura di errore, garantendo consistenza, audit e facilit\u00e0 di manutenzione.</p>"},{"location":"guide/Messaggi-di-Errore-e-Generazione-Log/#definizione-dei-messaggi-di-errore","title":"\ud83d\uddc2\ufe0f Definizione dei Messaggi di Errore","text":""},{"location":"guide/Messaggi-di-Errore-e-Generazione-Log/#tabella-configmessaggi_errore","title":"\ud83d\udcda Tabella <code>config.messaggi_errore</code>","text":"<p>Dati di origine dei template di messaggio.</p> <ul> <li>Path: <code>config/messaggi_errore.md</code></li> <li>Scopo Principale: mantenere un catalogo multilingua di messaggi, cause e suggerimenti.</li> <li> <p>Campi chiave:</p> </li> <li> <p><code>codice</code> (TEXT, PK): identificativo del messaggio.</p> </li> <li><code>lingua</code> (TEXT): lingua del template (<code>it</code>, <code>en</code>, \u2026).</li> <li><code>messaggio</code> (TEXT): testo con placeholder <code>%s</code>.</li> <li><code>causa</code> / <code>soluzione</code> (TEXT): dettagli per <code>DETAIL</code> e <code>HINT</code> dell\u2019eccezione.</li> </ul> <p>Consulta la documentazione dettagliata: config.messaggi_errore</p>"},{"location":"guide/Messaggi-di-Errore-e-Generazione-Log/#archiviazione-degli-errori","title":"\ud83d\udcd1 Archiviazione degli Errori","text":""},{"location":"guide/Messaggi-di-Errore-e-Generazione-Log/#tabella-dbopserror_log","title":"\ud83d\udcda Tabella <code>dbops.error_log</code>","text":"<p>Registro immutabile di tutte le occorrenze di errore.</p> <ul> <li>Path: <code>dbops/error_log.md</code></li> <li>Scopo Principale: tracciare (timestamp, area, funzione, contesto JSONB) ogni errore prima dell\u2019eccezione.</li> <li> <p>Campi chiave:</p> </li> <li> <p><code>occurred_at</code> (TIMESTAMPTZ): istante di logging.</p> </li> <li><code>area</code> / <code>function_name</code>: ambito e origine.</li> <li><code>messaggio_errore_id</code>: FK a <code>config.messaggi_errore.id</code>.</li> <li><code>context</code> (JSONB): payload di variabili/circostanze.</li> <li><code>tx_id</code> (UUID): transazione correlata.</li> </ul> <p>Consulta la documentazione dettagliata: dbops.error_log</p>"},{"location":"guide/Messaggi-di-Errore-e-Generazione-Log/#funzioni-di-supporto","title":"\u2699\ufe0f Funzioni di Supporto","text":""},{"location":"guide/Messaggi-di-Errore-e-Generazione-Log/#scriptfn_get_messaggio","title":"\ud83d\udcd8 <code>script.fn_get_messaggio</code>","text":"<p>Recupera e formatta un messaggio dal catalogo</p> <ul> <li>Path: <code>script/fn_get_messaggio.md</code></li> <li>Scopo: internazionalizzare e sostituire placeholder <code>%s</code> nel testo.</li> <li>Link: script.fn_get_messaggio</li> </ul>"},{"location":"guide/Messaggi-di-Errore-e-Generazione-Log/#scriptfn_log_and_raise_error","title":"\ud83d\udcd8 <code>script.fn_log_and_raise_error</code>","text":"<p>Esegue il logging remoto e solleva l\u2019eccezione</p> <ul> <li>Path: <code>script/fn_log_and_raise_error.md</code></li> <li>Scopo: unificare logging via <code>dblink_exec</code> e <code>RAISE EXCEPTION</code> con <code>DETAIL</code> e <code>HINT</code>.</li> <li>Link: script.fn_log_and_raise_error</li> </ul>"},{"location":"guide/Messaggi-di-Errore-e-Generazione-Log/#flusso-di-gestione-degli-errori","title":"\ud83d\udd04 Flusso di Gestione degli Errori","text":"<ol> <li>Validazione/Check in trigger o procedure PL/pgSQL.</li> <li> <p>Invocazione di <code>script.fn_log_and_raise_error(</code></p> </li> <li> <p>parametri: <code>p_area</code>, <code>p_function_name</code>, <code>p_error_code</code>, <code>p_context</code>, (varargs)</p> </li> <li>il logging avviene su <code>dbops.error_log</code> in una connessione dedicata.</li> <li>Recupero del testo con <code>script.fn_get_messaggio</code> (interno a <code>fn_log_and_raise_error</code>).</li> <li>Raise dell\u2019eccezione con <code>RAISE EXCEPTION</code>, includendo <code>DETAIL</code> e <code>HINT</code>.</li> </ol> <p>L\u2019applicazione ricever\u00e0 l\u2019errore formattato, mentre il database manterr\u00e0 un audit completo.</p>"},{"location":"guide/Messaggi-di-Errore-e-Generazione-Log/#best-practices","title":"\ud83d\udca1 Best Practices","text":"<ul> <li>Centralizzare tutti i messaggi in <code>config.messaggi_errore</code>, senza hard\u2011coding di testi.</li> <li>Usare codici coerenti e documentati (es. <code>ERR_TIMEOUT</code>, <code>E_DATI_SOCIETARI_TIPO_SOGGETTO_NON_AMMESSO</code>).</li> <li>Popolare il <code>context</code> con dati rilevanti (ID, payload, parametri) per facilitare il debug.</li> <li>Sfruttare la multilingua definendo template in pi\u00f9 lingue e usando il GUC <code>myapp.user_language</code>.</li> <li>Monitoraggio: creare viste o dashboard su <code>dbops.error_log</code> per alert e metriche di errore.</li> <li>Evoluzione dello schema: il JSONB <code>context</code> e il modello di log separato preservano la flessibilit\u00e0 nelle colonne future.</li> </ul> <p>\ud83e\udde0 \u201cUn approccio unificato al logging e all\u2019exception handling in Zero ERP garantisce qualit\u00e0, tracciabilit\u00e0 e facilit\u00e0 di manutenzione: dai template in tabella alle connessioni dblink, fino alle eccezioni multilingua.\u201d</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"guide/configurazione-e-gestione-parametri/","title":"\ud83d\udcd7 Guida Tecnica \u2013 Configurazione e Gestione Parametri in Zero ERP","text":"<p>\ud83d\udccb Destinatari: sviluppatori database, sviluppatori backend</p>"},{"location":"guide/configurazione-e-gestione-parametri/#introduzione","title":"\ud83d\udccc Introduzione","text":"<p>Questa guida fornisce indicazioni dettagliate e best practices sulla gestione e configurazione dei parametri all\u2019interno di Zero ERP, utilizzando due principali metodi:</p> <ul> <li>Parametri Tabellari (<code>config.parameters</code> e <code>config.parameter_overrides</code>)</li> <li>Parametri Personalizzati (GUC) (Parametri Personalizzati (GUC))</li> </ul>"},{"location":"guide/configurazione-e-gestione-parametri/#quando-usare-parametri-tabellari-o-guc","title":"\ud83d\udea6 Quando Usare Parametri Tabellari o GUC?","text":"<ul> <li>Parametri Tabellari: quando si vuole supportare override multipli (utente, sessione, funzione, tenant).</li> <li>Parametri GUC: quando si preferisce una configurazione pi\u00f9 semplice e centralizzata a livello di database.</li> </ul>"},{"location":"guide/configurazione-e-gestione-parametri/#guida-ai-parametri-tabellari","title":"\ud83d\uddc3\ufe0f Guida ai Parametri Tabellari","text":""},{"location":"guide/configurazione-e-gestione-parametri/#tabella-configparameters","title":"\u2705 Tabella <code>config.parameters</code>","text":"<ul> <li>Definisce parametri globali con valori di default.</li> <li>Esempio di definizione:</li> </ul> id code default_value description 1 lingua IT Lingua predefinita 2 stato_def IT Stato predefinito"},{"location":"guide/configurazione-e-gestione-parametri/#tabella-configparameter_overrides","title":"\u2705 Tabella <code>config.parameter_overrides</code>","text":"<ul> <li>Permette override su pi\u00f9 livelli (funzione, sessione, utente, tenant).</li> <li> <p>Priorit\u00e0 override:</p> </li> <li> <p>Funzione</p> </li> <li>Sessione</li> <li>Utente</li> <li>Tenant</li> <li>Default</li> </ul>"},{"location":"guide/configurazione-e-gestione-parametri/#funzione-scriptfn_get_parameter_full","title":"\u2705 Funzione <code>script.fn_get_parameter_full</code>","text":"<ul> <li>Centralizza la logica di recupero dei parametri e degli override.</li> <li>Dettagli Funzione</li> </ul>"},{"location":"guide/configurazione-e-gestione-parametri/#gestione-parametri-personalizzati-guc","title":"\ud83d\udd27 Gestione Parametri Personalizzati (GUC)","text":"<ul> <li>Permettono una configurazione rapida tramite <code>SET</code> e <code>ALTER DATABASE</code>.</li> <li>Utili per configurazioni ambientali e impostazioni rapide di debug.</li> <li>Dettagli su GUC</li> </ul>"},{"location":"guide/configurazione-e-gestione-parametri/#esempio-configurazione-guc","title":"\ud83d\udccd Esempio configurazione GUC:","text":"<pre><code>ALTER DATABASE mydb SET myapp.default_language = 'it';\n</code></pre>"},{"location":"guide/configurazione-e-gestione-parametri/#esempi-di-utilizzo-reale","title":"\ud83d\udcda Esempi di Utilizzo Reale","text":""},{"location":"guide/configurazione-e-gestione-parametri/#recupero-parametro-tabellare","title":"\ud83e\udde9 Recupero Parametro Tabellare","text":"<pre><code>SELECT script.fn_get_parameter_full('stato_def');\n</code></pre>"},{"location":"guide/configurazione-e-gestione-parametri/#recupero-parametro-guc","title":"\ud83e\udde9 Recupero Parametro GUC","text":"<pre><code>SHOW myapp.default_language;\n</code></pre>"},{"location":"guide/configurazione-e-gestione-parametri/#gestione-dei-parametri-con-riferimento-a-foreign-key-es-stato_id","title":"\ud83d\udca1 Gestione dei parametri con riferimento a Foreign Key (es. <code>stato_id</code>)","text":""},{"location":"guide/configurazione-e-gestione-parametri/#problematica","title":"Problematica","text":"<p>I parametri che riferiscono a foreign key (es. <code>stato_id</code>) non devono usare direttamente gli ID numerici, che variano da ambiente a ambiente.</p>"},{"location":"guide/configurazione-e-gestione-parametri/#soluzione-consigliata","title":"Soluzione consigliata","text":"<p>Utilizzare sempre identificativi simbolici (come codici ISO) nei parametri tabellari, e risolverli dinamicamente:</p>"},{"location":"guide/configurazione-e-gestione-parametri/#esempio-di-configurazione-parametro","title":"\u2705 Esempio di configurazione parametro:","text":"parametro valore default stato_def IT"},{"location":"guide/configurazione-e-gestione-parametri/#query-dinamica-per-recuperare-id-effettivo","title":"\u2705 Query dinamica per recuperare ID effettivo:","text":"<pre><code>DECLARE\n  v_stato_id INTEGER;\nBEGIN\n  SELECT id INTO v_stato_id\n  FROM config.stati\n  WHERE codice_iso2 = script.fn_get_parameter_full('stato_def');\n\n  IF v_stato_id IS NULL THEN\n    PERFORM script.fn_log_and_raise_error(\n      'business',\n      'my_function',\n      'STATO_ID_NOT_FOUND',\n      jsonb_build_object('param_code', 'stato_def'),\n      NULL::uuid,\n      'stato_def'\n    );\n  END IF;\n\n  INSERT INTO anagrafiche.soggetti (nome, stato_id)\n  VALUES ('Nuovo Soggetto', v_stato_id);\nEND;\n</code></pre>"},{"location":"guide/configurazione-e-gestione-parametri/#vantaggi","title":"\ud83d\udee1\ufe0f Vantaggi","text":"<ul> <li>Portabilit\u00e0: non dipendente da ID numerici fissi.</li> <li>Chiarezza e semplicit\u00e0: codici ISO leggibili e comprensibili.</li> <li>Manutenibilit\u00e0: nessun aggiornamento massiccio necessario in caso di modifiche agli ID.</li> </ul>"},{"location":"guide/configurazione-e-gestione-parametri/#conclusioni-e-best-practices-finali","title":"\ud83d\udd16 Conclusioni e Best Practices Finali","text":"<ul> <li>Usare sempre simboli stabili (codici ISO, codici identificativi leggibili) nei parametri.</li> <li>Utilizzare sempre funzioni centralizzate (<code>script.fn_get_parameter_full</code>) per recuperare valori.</li> <li>Verificare documentazione e validare i parametri frequentemente per assicurare integrit\u00e0 e coerenza.</li> </ul> <p>\ud83e\udde0 \u201cConfigurare i parametri con simboli stabili e risolvere dinamicamente in runtime garantisce massima portabilit\u00e0 e flessibilit\u00e0, semplificando la manutenzione e migliorando l\u2019affidabilit\u00e0 del sistema.\u201d</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"guide/storicizzazione-tabelle/","title":"\ud83d\udcd7 Guida Tecnica \u2013 Storicizzazione delle Tabelle in Zero ERP","text":"<p>\ud83d\udccb Destinatari: sviluppatori database, sviluppatori backend</p> <p>\ud83d\udc40 Vedi anche:</p> <p>Per come applicare queste best practice nelle migrazioni, consulta il documento:</p> <ul> <li>Linee Guida SQL</li> </ul> <p>Approfondimento funzioni:</p> <ul> <li>script.trgfn_upd_dlt_storico_generic</li> </ul> <p>Ogni entit\u00e0 che richiede versioning e audit trail in Zero ERP utilizza un modello di storico unificato. Questo approccio facilita la gestione delle modifiche e garantisce consistenza tra le tabelle operative e quelle di storico.</p>"},{"location":"guide/storicizzazione-tabelle/#scopo-principale","title":"\ud83c\udfaf Scopo Principale","text":"<ul> <li>Tracciabilit\u00e0 completa delle operazioni di INSERT, UPDATE e DELETE su tabelle chiave.</li> <li>Flessibilit\u00e0 di schema: supportare evoluzioni future senza dover modificare la struttura dello storico.</li> <li>Centralizzazione della logica di storicizzazione in una funzione generic (<code>trgfn_upd_dlt_storico_generic</code>).</li> </ul>"},{"location":"guide/storicizzazione-tabelle/#colonne-standard-per-le-tabelle-di-storico","title":"\ud83d\udee0\ufe0f Colonne Standard per le Tabelle di Storico","text":"<p>Tutte le tabelle di storico in Zero ERP devono avere:</p> <ul> <li><code>id</code>: chiave primaria autonumerica (BIGINT).</li> <li><code>valid_from</code> / <code>valid_to</code>: date che definiscono l\u2019intervallo di validit\u00e0 dello snapshot.</li> <li><code>snapshot</code> (JSONB): contiene una copia di tutti i campi del record originale al momento dell\u2019evento.</li> <li><code>tipo_operazione</code> (SMALLINT): 1=Snapshot iniziale, 2=UPDATE, 3=DELETE.</li> <li><code>change_type</code> (CHAR): classificazione rapida <code>A/U/D</code>.</li> <li><code>data_insert</code> / <code>user_insert</code>: timestamp e utente che hanno creato lo snapshot.</li> <li><code>tx_id</code> (UUID): identifica la transazione di business che ha generato lo snapshot.</li> <li><code>&lt;entita&gt;_id</code>: FK verso la tabella originale.</li> </ul>"},{"location":"guide/storicizzazione-tabelle/#perche-jsonb-per-il-campo-snapshot","title":"\ud83d\udd0d Perch\u00e9 JSONB per il campo <code>snapshot</code>","text":"<ol> <li>Evoluzione dello schema: aggiunta o rimozione di colonne nella tabella sorgente non richiede modifiche alle colonne di storico.</li> <li>Integrit\u00e0 dei dati: garantisce che ogni snapshot rifletta esattamente lo stato dell\u2019intero record, senza omissioni.</li> <li>Query ad hoc: permette estrazioni puntuali di attributi storici con funzioni JSON SQL (es. <code>snapshot-&gt;&gt;'campo'</code>).</li> </ol> <p>Trade\u2011off:</p> <ul> <li>Maggiore occupazione di spazio.</li> <li>Possibili impatti di performance per query su JSONB (ottimizzabili con GIN index).</li> </ul>"},{"location":"guide/storicizzazione-tabelle/#trigger-generic-di-storico","title":"\ud83d\udd04 Trigger Generic di Storico","text":"<p>La funzione <code>script.trgfn_upd_dlt_storico_generic(fk_column)</code> gestisce:</p> <ol> <li>Chiusura di eventuali snapshot aperti (<code>valid_to = CURRENT_DATE</code>).</li> <li>Inserimento snapshot iniziale (solo se non esisteva) con <code>valid_from = '1950-01-01'</code>.</li> <li>Inserimento snapshot finale con <code>valid_from = CURRENT_DATE</code> e <code>tipo_operazione</code> appropriato.</li> <li>Logging degli errori con <code>script.fn_log_and_raise_error</code>, senza bloccare la DML.</li> </ol> <p>Esempio DDL:</p> <pre><code>CREATE TRIGGER trg_storico_&lt;entita&gt;\n  AFTER UPDATE OR DELETE ON &lt;schema&gt;.&lt;entita&gt;\n  FOR EACH ROW\n  EXECUTE FUNCTION script.trgfn_upd_dlt_storico_generic('&lt;entita&gt;_id');\n</code></pre> <p>Importante Naming Convention: il trigger di storico deve chiamarsi con prefisso <code>trg_Z90&lt;schema&gt;_upd_dlt_storico</code> (es. <code>trg_Z90_stradario_upd_dlt_storico</code>). Questo garantisce:</p> <ul> <li>Esecuzione per ultima, grazie all\u2019ordinamento alfabetico.</li> <li>Compatibilit\u00e0 con gli altri trigger precedenti nell\u2019ordine di firing.</li> </ul>"},{"location":"guide/storicizzazione-tabelle/#vantaggi-per-lo-sviluppatore","title":"\ud83d\udca1 Vantaggi per lo Sviluppatore","text":"<ul> <li>Rapidit\u00e0 di adozione: per attivare lo storico su una nuova tabella basta definire la tabella di storico con lo schema standard e creare il trigger generic rispettando la convenzione di naming.</li> <li>Manutenibilit\u00e0: la logica di storicizzazione evolve in un solo punto (la funzione generic), senza dover modificare ogni trigger function.</li> <li>Controllo degli errori: la funzione generic cattura e logga le eccezioni, rendendo pi\u00f9 semplice il debug.</li> <li>Reporting: il campo <code>snapshot</code> e i date range consentono costruire report storici avanzati senza join complessi.</li> </ul> <p>\ud83e\udde0 \u201cAdottando il modello di storico unificato, Zero ERP semplifica la gestione della storia dei dati, riduce la duplicazione di logica e garantisce uno sviluppo rapido e sicuro.\u201d</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"guide/tx_id_implementation_guide/","title":"\ud83d\udcd7 Guida Tecnica \u2013 Implementazione di un Unico Transaction ID in Zero ERP","text":"<p>\ud83d\udccb Destinatari: sviluppatori database, sviluppatori backend</p> <p>\ud83d\udc40 Vedi anche</p> <p>Approfondimento Tabelle:  - dbops.transaction_ids  - config.parameters </p> <p>Approfondimento funzioni :   - dbops.fn_get_or_create_session_tx_id  - dbops.fn_generate_tx_id  - dbops.trgfn_tx_id_managed Esempio di utilizzo :  - script.fn_log_and_raise_error </p>"},{"location":"guide/tx_id_implementation_guide/#1-introduzione","title":"1. Introduzione","text":"<p>In Zero ERP \u00e8 essenziale poter correlare tutte le operazioni legate a una singola transazione (inserimenti, aggiornamenti, cancellazioni) attraverso diverse tabelle e componenti. Questa guida spiega:</p> <ul> <li>Il perch\u00e9 della scelta di un identificativo di transazione centralizzato (<code>tx_id</code>).</li> <li>L\u2019architettura e i componenti coinvolti.</li> <li>Le modalit\u00e0 di integrazione sia lato database (trigger, function) sia lato backend.</li> <li>Le linee guida per implementazione, test e manutenzione.</li> </ul>"},{"location":"guide/tx_id_implementation_guide/#2-motivazioni-e-obiettivi","title":"2. Motivazioni e Obiettivi","text":"<ol> <li>Tracciabilit\u00e0 completa: poter ricostruire il flusso di una transazione in un\u2019unica vista cronologica.</li> <li>Coerenza cross-tabella: garantire che ogni riga coinvolta in un\u2019operazione condivida lo stesso <code>tx_id</code>.</li> <li>Supporto audit e debugging: semplificare ricerca di errori e analisi delle performance.</li> <li>Flessibilit\u00e0: permettere bypass o personalizzazione in fase di test, migrazione o debug.</li> </ol>"},{"location":"guide/tx_id_implementation_guide/#3-architettura-e-componenti","title":"3. Architettura e Componenti","text":""},{"location":"guide/tx_id_implementation_guide/#31-tabella-centrale","title":"3.1 Tabella Centrale","text":"<ul> <li><code>dbops.transaction_ids</code>: registro master di tutti i <code>tx_id</code>. Ogni record memorizza UUID, timestamp, contesto di generazione.</li> </ul>"},{"location":"guide/tx_id_implementation_guide/#32-funzioni-plpgsql","title":"3.2 Funzioni PL/pgSQL","text":"<ul> <li><code>fn_generate_tx_id(...)</code>: genera e inserisce un nuovo <code>tx_id</code>, restituendolo.</li> <li><code>fn_get_or_create_session_tx_id()</code>: recupera o crea, se mancante, il <code>tx_id</code> di sessione tramite GUC e dblink.</li> <li><code>fn_get_or_create_session_tx_id</code> \u00e8 consigliata per uso lato backend.</li> </ul>"},{"location":"guide/tx_id_implementation_guide/#33-trigger-e-trigger-functions","title":"3.3 Trigger e Trigger Functions","text":"<ul> <li><code>trgfn_tx_id_managed()</code>: centralizza logica di controllo, bypass, validazione e assegnazione <code>NEW.tx_id</code>. \u00c8 attaccata via trigger <code>BEFORE INSERT OR UPDATE</code> su tabelle che contengono il campo <code>tx_id</code>.</li> <li>Pro: garantisce coerenza automatica senza dipendere dal client.</li> <li>Contro: pu\u00f2 limitare rapidit\u00e0 di sviluppo e complicare rollback di test.</li> </ul>"},{"location":"guide/tx_id_implementation_guide/#4-modalita-di-integrazione","title":"4. Modalit\u00e0 di Integrazione","text":""},{"location":"guide/tx_id_implementation_guide/#41-lato-database-con-trigger","title":"4.1 Lato Database con Trigger","text":"<ol> <li>DDL: aggiungere colonna <code>tx_id UUID NOT NULL</code> in ogni tabella.</li> <li>Trigger:</li> </ol> <p><pre><code>CREATE TRIGGER trg_assign_tx_id ON schema.my_table\n  BEFORE INSERT OR UPDATE\n  FOR EACH ROW\n  EXECUTE FUNCTION dbops.trgfn_tx_id_managed();\n</code></pre> 3. Vantaggi: operazioni garantite lato DB, nessun intervento lato client. 4. Svantaggi: potenziali errori mascherati, dipendenze DB forti.</p>"},{"location":"guide/tx_id_implementation_guide/#42-lato-backend-con-function","title":"4.2 Lato Backend con Function","text":"<ol> <li>Colonna DDL: <code>tx_id UUID NOT NULL</code> su tabelle.</li> <li>Chiamata esplicita: prima di operazioni SQL, backend esegue:</li> </ol> <p><pre><code>SELECT dbops.fn_get_or_create_session_tx_id() AS tx_id;\n</code></pre> 3. Iniezione: popola il campo <code>tx_id</code> nelle istruzioni <code>INSERT/UPDATE</code>. 4. Vantaggi: completa visibilit\u00e0 e controllo lato applicazione; facile debugging. 5. Svantaggi: responsabilit\u00e0 di implementazione distribuita tra team.</p> <p>Scelta consigliata: per ambienti di sviluppo/test o architetture microservizi, preferire la gestione da backend; in contesti monolitici DB-centrici, adottare trigger.</p>"},{"location":"guide/tx_id_implementation_guide/#5-linee-guida-per-limplementazione","title":"5. Linee Guida per l\u2019Implementazione","text":"<ol> <li>Estensione DDL: aggiungere colonna <code>tx_id</code> e trigger o documentare chiamata function.</li> <li>Configurazione Bypass: utilizzare parametro <code>tx_id_bypass_enabled</code> e GUC <code>app.bypass_tx_id_check</code> per disabilitare logica in contesti speciali.</li> <li> <p>Test &amp; QA:</p> </li> <li> <p>Verificare che ogni operazione in una sessione condivida lo stesso <code>tx_id</code>.</p> </li> <li>Simulare errori <code>dblink</code> e controllare fallback a <code>uuid_nil()</code>.</li> <li>Documentazione: includere esempi di codice lato backend (es. repository, servizi) e script SQL di verifica.</li> </ol>"},{"location":"guide/tx_id_implementation_guide/#6-esempi-di-codice-backend-pseudo","title":"6. Esempi di Codice Backend (Pseudo)","text":"<pre><code>// Node.js + pg\nasync function withTxId(client, callback) {\n  // Recupera o crea tx_id\n  const res = await client.query(`SELECT dbops.fn_get_or_create_session_tx_id() AS tx_id`);\n  const txId = res.rows[0].tx_id;\n\n  // Esegui operazioni con tx_id\n  await callback(txId);\n}\n\nawait withTxId(dbClient, async (txId) =&gt; {\n  await dbClient.query(\n    `INSERT INTO orders (customer_id, total, tx_id) VALUES ($1,$2,$3)`,\n    [custId, total, txId]\n  );\n  // Altre query...\n});\n</code></pre>"},{"location":"guide/tx_id_implementation_guide/#7-conclusioni-e-raccomandazioni","title":"7. Conclusioni e Raccomandazioni","text":"<ul> <li>Coerenza: definire uno standard di implementazione (trigger vs function) e applicarlo su tutte le tabelle.</li> <li>Collaborazione: condividere la guida con team backend e DB per evitare disallineamenti.</li> <li>Manutenzione: tenere aggiornate le trigger functions e le funzioni helper in caso di nuovi requisiti.</li> </ul> <p>\ud83e\udde0 \u201cScegliere il giusto compromesso tra automazione DB e controllo applicativo \u00e8 fondamentale: questa guida aiuta a definire policy chiare e processi replicabili in Zero ERP.\u201d</p> <p>\u00a9 2025 Zero\u202fERP \u2022 powered by Tid \u2022</p>"},{"location":"en/","title":"Zero ERP","text":"<p>Welcome to the documentation for the Zero ERP project!</p> <p>This guide covers:</p> <ul> <li>How to install and configure the development environment  </li> <li>An overview of the architecture and data model  </li> <li>Details on the available APIs  </li> <li>Usage examples and best practices  </li> </ul>"}]}